import { r as registerInstance, c as createEvent, h } from './index-3e825a40.js';

const modusTabsCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.modus-tabs{border:solid var(--modus-tab-bottom-line-color, #cbcdd6);border-width:0 0 0.0625rem 0;display:inline-flex;flex-direction:row;font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";justify-content:flex-start;width:100%}.modus-tabs.medium{height:48px}.modus-tabs.small{height:32px}.modus-tabs .tab{align-items:center;border:solid transparent 0.1875rem;border-radius:0.125rem 0.125rem 0 0;color:var(--modus-tab-color, #252a2e);display:flex;font-weight:600;justify-content:center;overflow:hidden;text-transform:uppercase;text-wrap:none;user-select:none}.modus-tabs .tab.resizable{width:100%}.modus-tabs .tab.medium{font-size:0.875rem;padding:0 32px}.modus-tabs .tab.small{font-size:0.75rem;padding:0 1rem}.modus-tabs .tab.active{border-color:transparent transparent var(--modus-tab-active-color, #217cbb) transparent;color:var(--modus-tab-active-color, #217cbb)}.modus-tabs .tab:hover{background-color:var(--modus-tab-hover-bg, #dcedf9);color:var(--modus-tab-hover-color, #217cbb);cursor:pointer}";

const ModusTabs = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.tabChange = createEvent(this, "tabChange", 7);
    this.classBySize = new Map([
      ['medium', 'medium'],
      ['small', 'small'],
    ]);
    this.fullWidth = false;
    this.ariaLabel = undefined;
    this.size = 'medium';
    this.tabs = [];
  }
  handleKeyDown(event, id) {
    if (event.code !== 'Enter') {
      return;
    }
    this.handleTabChange(id);
  }
  handleTabChange(id) {
    if (id === this.tabs.find((tab) => tab.active).id) {
      return;
    }
    this.tabs = this.tabs.map((tab) => {
      return Object.assign(Object.assign({}, tab), { active: tab.id === id });
    });
    this.tabChange.emit(id);
  }
  render() {
    const tabs = this.tabs.map((tab) => {
      return (h("div", { class: `tab ${tab.active ? 'active' : ''} ${this.classBySize.get(this.size)} ${this.fullWidth ? 'resizable' : ''} `, onClick: () => this.handleTabChange(tab.id), onKeyDown: (event) => this.handleKeyDown(event, tab.id), tabIndex: 0 }, tab.label));
    });
    return (h("div", { "aria-label": this.ariaLabel, class: `modus-tabs ${this.classBySize.get(this.size)}` }, tabs));
  }
};
ModusTabs.style = modusTabsCss;

export { ModusTabs as modus_tabs };
