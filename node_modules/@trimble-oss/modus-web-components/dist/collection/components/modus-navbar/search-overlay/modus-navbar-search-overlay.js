import { Host, h, // eslint-disable-line @typescript-eslint/no-unused-vars
 } from '@stencil/core';
import { IconClose } from '../../icons/icon-close';
export class ModusNavbarSearchOverlay {
  componentDidRender() {
    var _a;
    (_a = this.modusTextInput) === null || _a === void 0 ? void 0 : _a.focusInput();
  }
  render() {
    return (h(Host, null, h("div", { class: "overlay-wrapper" }, h("div", { class: "search-box" }, h("modus-text-input", { placeholder: "Search", size: "large", onValueChange: (event) => this.search.emit(event.detail), "include-search-icon": true, ref: (el) => (this.modusTextInput = el) })), h("div", { class: "navbar-button", "data-test-id": "close-button" }, h("span", { class: "navbar-button-icon", tabIndex: 0, onKeyDown: (event) => event.code === 'Enter' && this.close.emit(), onClick: () => this.close.emit() }, h(IconClose, { size: "24" }))))));
  }
  static get is() { return "modus-navbar-search-overlay"; }
  static get originalStyleUrls() {
    return {
      "$": ["modus-navbar-search-overlay.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["modus-navbar-search-overlay.css"]
    };
  }
  static get events() {
    return [{
        "method": "close",
        "name": "close",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "An event that fires on clicking on close button of search overlay"
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }, {
        "method": "search",
        "name": "search",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "An event that fires on search value change."
        },
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "element"; }
}
