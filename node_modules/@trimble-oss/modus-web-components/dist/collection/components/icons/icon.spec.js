// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { h } from '@stencil/core';
import { IconTriangleDown } from './icon-triangle-down';
import { newSpecPage } from '@stencil/core/testing';
describe('icon-triangle-down', () => {
  it('should render', async () => {
    const page = await renderFunctionalComponentToSpecPage(h(IconTriangleDown, null));
    expect(page.root).toEqualHtml(`
      <svg class="icon-triangle-down" height="16" width="16" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0.5L4.60606 5.5L9.21212 0.5H0Z" fill="#6A6976" />
      </svg>
    `);
  });
  it('should render correct size', async () => {
    const page = await renderFunctionalComponentToSpecPage(h(IconTriangleDown, { size: "12" }));
    expect(page.root).toEqualHtml(`
      <svg class="icon-triangle-down" height="12" width="12" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 0.5L4.60606 5.5L9.21212 0.5H0Z" fill="#6A6976" />
      </svg>
    `);
  });
  it('should not have onClick by default', async () => {
    const page = await renderFunctionalComponentToSpecPage(h(IconTriangleDown, null));
    expect(page.root).not.toContain('onClick');
  });
});
// eslint-disable-next-line @typescript-eslint/ban-types
function renderFunctionalComponentToSpecPage(componentConstructor) {
  return newSpecPage({
    components: [],
    template: () => componentConstructor,
  });
}
