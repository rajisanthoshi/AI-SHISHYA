// eslint-disable-next-line
import { h } from '@stencil/core';
import { IconCheck } from '../icons/icon-check';
export class ModusListItem {
  constructor() {
    this.classBySize = new Map([
      ['condensed', 'small'],
      ['standard', 'standard'],
      ['large', 'large'],
    ]);
    this.disabled = undefined;
    this.selected = undefined;
    this.size = 'standard';
    this.type = 'standard';
  }
  render() {
    const containerClass = `${this.classBySize.get(this.size)} ${this.disabled ? 'disabled' : ''} ${this.selected ? 'selected' : ''}`;
    const iconSize = this.size === 'condensed' ? '18' : '22';
    return (h("li", { class: containerClass, onClick: () => (!this.disabled ? this.itemClick.emit() : null) }, h("span", { class: "slot" }, h("slot", null)), this.selected && h(IconCheck, { size: iconSize })));
  }
  static get is() { return "modus-list-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["modus-list-item.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["modus-list-item.css"]
    };
  }
  static get properties() {
    return {
      "disabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "(optional) Disables the list item"
        },
        "attribute": "disabled",
        "reflect": false
      },
      "selected": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "(optional) The selected state of the list item"
        },
        "attribute": "selected",
        "reflect": false
      },
      "size": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'condensed' | 'large' | 'standard'",
          "resolved": "\"condensed\" | \"large\" | \"standard\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "(optional) The size of list item"
        },
        "attribute": "size",
        "reflect": false,
        "defaultValue": "'standard'"
      },
      "type": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "(optional) The type of list item"
        },
        "attribute": "type",
        "reflect": false,
        "defaultValue": "'standard'"
      }
    };
  }
  static get events() {
    return [{
        "method": "itemClick",
        "name": "itemClick",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "An event that fires on list item click"
        },
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        }
      }];
  }
}
