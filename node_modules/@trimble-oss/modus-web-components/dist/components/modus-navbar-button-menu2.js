import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const modusNavbarButtonMenuCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.button-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-border-color, #cbcdd6);border-radius:0.125rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0.5rem;position:absolute;right:0;top:48px;z-index:100;cursor:default;top:0;width:max-content}.button-menu.reverse{left:0}";

const ModusNavbarButtonMenu = /*@__PURE__*/ proxyCustomElement(class ModusNavbarButtonMenu extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.reverse = undefined;
  }
  render() {
    const menuClasses = {
      'button-menu': true,
      reverse: this.reverse,
    };
    return (h("div", { class: menuClasses }, h("slot", null)));
  }
  static get style() { return modusNavbarButtonMenuCss; }
}, [4, "modus-navbar-button-menu", {
    "reverse": [4]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-navbar-button-menu"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-navbar-button-menu":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusNavbarButtonMenu);
      }
      break;
  } });
}

export { ModusNavbarButtonMenu as M, defineCustomElement as d };
