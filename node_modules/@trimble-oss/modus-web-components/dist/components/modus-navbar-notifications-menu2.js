import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const modusNavbarNotificationsMenuCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.notifications-menu{background-color:var(--modus-body-bg, #fff);border:0.0625rem solid var(--modus-border-color, #cbcdd6);border-radius:0.125rem;box-shadow:0 0 8px rgba(36, 35, 45, 0.3);color:var(--modus-body-color, #252a2e);display:flex;flex-direction:column;max-width:384px;padding:0.5rem;position:absolute;right:0;top:48px;z-index:100;cursor:default;width:max-content}.notifications-menu.reverse{left:0}.notifications-menu .title{font-size:1.125rem;font-weight:600;margin-bottom:0.5rem}";

const ModusNavbarNotificationsMenu = /*@__PURE__*/ proxyCustomElement(class ModusNavbarNotificationsMenu extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.reverse = undefined;
  }
  render() {
    const direction = this.reverse ? 'reverse' : '';
    return (h("div", { class: `notifications-menu ${direction}`, onClick: (event) => event.preventDefault() }, h("div", { class: "title" }, "Notifications"), h("slot", null)));
  }
  static get style() { return modusNavbarNotificationsMenuCss; }
}, [1, "modus-navbar-notifications-menu", {
    "reverse": [4]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-navbar-notifications-menu"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-navbar-notifications-menu":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusNavbarNotificationsMenu);
      }
      break;
  } });
}

export { ModusNavbarNotificationsMenu as M, defineCustomElement as d };
