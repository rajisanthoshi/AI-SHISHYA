import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$4 } from './modus-button2.js';
import { d as defineCustomElement$3 } from './modus-checkbox2.js';
import { p as defineCustomElement$2 } from './modus-table-columns-visibility2.js';
import { d as defineCustomElement$1 } from './modus-table-dropdown-menu2.js';

const modusTableToolbarCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.table-toolbar{align-items:center;display:flex;justify-content:space-between;padding-bottom:3px}.table-toolbar .section{align-items:center;display:flex}";

const ModusTablePanel = /*@__PURE__*/ proxyCustomElement(class ModusTablePanel extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.table = undefined;
    this.options = undefined;
  }
  render() {
    return (h(Host, null, h("div", { class: "table-toolbar" }, h("div", { class: "section" }, h("slot", { name: "group-left" })), h("div", { class: "section" }, h("slot", { name: "group-right" }), h("modus-table-dropdown-menu", { table: this.table, options: this.options })))));
  }
  static get style() { return modusTableToolbarCss; }
}, [1, "modus-table-toolbar", {
    "table": [16],
    "options": [16]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-table-toolbar", "modus-button", "modus-checkbox", "modus-table-columns-visibility", "modus-table-dropdown-menu"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-table-toolbar":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusTablePanel);
      }
      break;
    case "modus-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$4();
      }
      break;
    case "modus-checkbox":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "modus-table-columns-visibility":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "modus-table-dropdown-menu":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { ModusTablePanel as M, defineCustomElement as d };
