import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const modusAccordionCss = "@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\");.accordion{font-family:\"Open Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";position:relative}";

const ModusAccordion$1 = /*@__PURE__*/ proxyCustomElement(class ModusAccordion extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.ariaLabel = undefined;
  }
  render() {
    return (h("div", { "aria-label": this.ariaLabel, class: "accordion" }, h("slot", null)));
  }
  static get style() { return modusAccordionCss; }
}, [1, "modus-accordion", {
    "ariaLabel": [1, "aria-label"]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["modus-accordion"];
  components.forEach(tagName => { switch (tagName) {
    case "modus-accordion":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ModusAccordion$1);
      }
      break;
  } });
}

const ModusAccordion = ModusAccordion$1;
const defineCustomElement = defineCustomElement$1;

export { ModusAccordion, defineCustomElement };
