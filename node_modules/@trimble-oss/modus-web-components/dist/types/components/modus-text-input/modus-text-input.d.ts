import { EventEmitter } from '../../stencil-public-runtime';
export declare class ModusTextInput {
  /** (optional) The input's aria-label. */
  ariaLabel: string | null;
  /** (optional) Sets autofocus on the input. */
  autoFocusInput: boolean;
  /** (optional) Whether the input has a clear button. */
  clearable: boolean;
  /** (optional) Whether the input is disabled. */
  disabled: boolean;
  /** (optional) The input's error state text. */
  errorText: string;
  /** (optional) The input's helper text displayed below the input. */
  helperText: string;
  /** (optional) Whether the search icon is included. */
  includeSearchIcon: boolean;
  /** (optional) Whether the password text toggle icon is included. */
  includePasswordTextToggle: boolean;
  /** (optional) The input's inputmode. */
  inputmode: 'decimal' | 'email' | 'numeric' | 'search' | 'tel' | 'text' | 'url';
  /** (optional) The input's label. */
  label: string;
  /** (optional) The input's maximum length. */
  maxLength: number;
  /** (optional) The input's minimum length. */
  minLength: number;
  /** (optional) The input's placeholder text. */
  placeholder: string;
  /** (optional) Whether the input's content is read-only */
  readOnly: boolean;
  /** (optional) Whether the input is required. */
  required: boolean;
  /** (optional) The input's size. */
  size: 'medium' | 'large';
  /** (optional) The input's text alignment. */
  textAlign: 'left' | 'right';
  /** (optional) The input's type. */
  type: 'text' | 'password';
  /** (optional) The input's valid state text. */
  validText: string;
  /** (optional) The input's value. */
  value: string;
  watchValue(newValue: string): void;
  /** An event that fires on input value change. */
  valueChange: EventEmitter<string>;
  classBySize: Map<string, string>;
  textInput: HTMLInputElement;
  buttonTogglePassword: HTMLDivElement;
  /** Focus the input. */
  focusInput(): Promise<void>;
  handleClear(): void;
  handleOnInput(event: Event): void;
  handleTogglePassword(): void;
  render(): unknown;
}
