'use strict';

const index = require('./index-77fbe095.js');
const iconUploadCloud = require('./icon-upload-cloud-bbd28597.js');
const iconCheck = require('./icon-check-28f05d54.js');
const iconInfo = require('./icon-info-9b412425.js');
const iconChevronDownThick = require('./icon-chevron-down-thick-0b9e8fcf.js');
const iconChevronRightThick = require('./icon-chevron-right-thick-fbe0222c.js');
const iconClose = require('./icon-close-394815fc.js');
const iconHelp = require('./icon-help-e043cd22.js');
const iconIndeterminate = require('./icon-indeterminate-4000397d.js');
const iconRemove = require('./icon-remove-8569cbbd.js');
const iconSearch = require('./icon-search-780e6dd3.js');
const iconChevronUpThick = require('./icon-chevron-up-thick-11476cb6.js');
const iconChevronLeftThick = require('./icon-chevron-left-thick-5835e464.js');
const iconVisibilityOff = require('./icon-visibility-off-4d0bd823.js');

// eslint-disable-next-line
const IconAdd = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: `icon-add ${props.pressed ? 'pressed' : ''}`, height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M19,13H13v6H11V13H5V11h6V5h2v6h6Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconApps = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: props.pressed ? 'icon-apps pressed' : 'icon-apps', height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M4 8H8V4H4V8ZM10 20H14V16H10V20ZM4 20H8V16H4V20ZM4 14H8V10H4V14ZM10 14H14V10H10V14ZM16 4V8H20V4H16ZM10 8H14V4H10V8ZM16 14H20V10H16V14ZM16 20H20V16H16V20Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconCalendar = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: props.pressed ? 'icon-calendar pressed' : 'icon-calendar', height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor', d: "M13.5 11h-3v3h3v-3Zm4.5 0h-3v3h3v-3Zm2-8h-2c0-.55-.45-1-1-1s-1 .45-1 1H8c0-.55-.45-1-1-1s-1 .45-1 1H4c-1.1 0-2 .9-2 2v15c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2Zm0 17H4V9.97h16V20Zm0-12.03H4V5h2v1c0 .55.45 1 1 1s1-.45 1-1V5h8v1c0 .55.45 1 1 1s1-.45 1-1V5h2v2.97ZM9 11H6v3h3v-3Z" })));
};

// eslint-disable-next-line
const IconCaretDown = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-caret-down", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "m12.6 14.74 4.22-4.58c.43-.46.06-1.16-.6-1.16H7.78c-.66 0-1.03.7-.6 1.16l4.22 4.58c.31.34.89.34 1.2 0Z" })));
};

// eslint-disable-next-line
const IconCheckCircleOutline = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-check-circle-outline", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: () => props.onClick(), viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M12 4C16.4 4 20 7.6 20 12C20 16.4 16.4 20 12 20C7.6 20 4 16.4 4 12C4 7.6 7.6 4 12 4ZM12 18.36C15.531 18.36 18.4 15.4343 18.4 11.9234C18.4 8.41257 15.531 5.56 12 5.56C8.46897 5.56 5.6 8.48571 5.6 11.9966C5.6 15.5074 8.46897 18.36 12 18.36ZM15.44 10.4L11.28 14.56C11.12 14.72 10.96 14.72 10.8 14.72C10.64 14.72 10.48 14.64 10.32 14.56L8.48 12.72C8.24 12.48 8.24 12.08 8.48 11.84C8.72 11.6 9.12 11.6 9.36 11.84L10.72 13.2L14.48 9.44C14.72 9.2 15.12 9.2 15.36 9.44C15.68 9.68 15.68 10.08 15.44 10.4Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconCollapseAll = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-collapse-all", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M0,0H24V24H0Z", fill: "none" }),
    index.h("path", { d: "M7.41,18.59,8.83,20,12,16.83,15.17,20l1.41-1.41L12,14ZM16.59,5.41,15.17,4,12,7.17,8.83,4,7.41,5.41,12,10Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconCopy = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-copy", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M0,0H24V24H0Z", fill: "none" }),
    index.h("path", { d: "M16,1H4A2.006,2.006,0,0,0,2,3V17H4V3H16Zm3,4H8A2.006,2.006,0,0,0,6,7V21a2.006,2.006,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V7A2.006,2.006,0,0,0,19,5Zm0,16H8V7H19Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconDrag = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-drag", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M11,18a2,2,0,1,1-2-2A2.006,2.006,0,0,1,11,18ZM9,10a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,10ZM9,4a2,2,0,1,0,2,2A2.006,2.006,0,0,0,9,4Zm6,4a2,2,0,1,0-2-2A2.006,2.006,0,0,0,15,8Zm0,2a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,10Zm0,6a2,2,0,1,0,2,2A2.006,2.006,0,0,0,15,16Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconEdit = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-edit", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M0,0H24V24H0Z", fill: "none" }),
    index.h("path", { d: "M3,17.25V21H6.75L17.81,9.94,14.06,6.19ZM20.71,7.04a1,1,0,0,0,0-1.41L18.37,3.29a1,1,0,0,0-1.41,0L15.13,5.12l3.75,3.75,1.83-1.83Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconExpandAll = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-expand-all", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M0,0H24V24H0Z", fill: "rgba(0,0,0,0)" }),
    index.h("path", { d: "M12,5.83,15.17,9l1.41-1.41L12,3,7.41,7.59,8.83,9Zm0,12.34L8.83,15,7.42,16.41,12,21l4.59-4.59L15.17,15Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconFolder = (props) => {
  var _a, _b;
  return (index.h("svg", { class: "icon-folder", xmlns: "http://www.w3.org/2000/svg", fill: "currentColor", height: (_a = props.size) !== null && _a !== void 0 ? _a : 24, width: (_b = props.size) !== null && _b !== void 0 ? _b : 24, viewBox: "0 0 32 32" },
    index.h("path", { d: "M28.79 12.39A1 1 0 0 0 28 12h-2V9c0-.55-.45-1-1-1h-9.59l-1.7-1.71C13.52 6.11 13.27 6 13 6H4c-.55 0-1 .45-1 1v17c0 .04.02.07.02.11.01.05.02.11.04.16.02.09.06.17.1.25.02.03.02.06.05.09.01.01.03.02.04.03.07.08.15.14.23.19.04.03.06.05.1.07.13.06.27.1.42.1h21c.13 0 .25-.03.36-.07.04-.02.07-.04.1-.06.07-.04.14-.08.2-.13.03-.03.06-.06.09-.1.05-.05.09-.11.12-.18a.31.31 0 0 0 .06-.13c.01-.02.03-.04.03-.07l3-11c.09-.3.02-.62-.17-.87zM5 8h7.59l1.7 1.71c.19.18.44.29.71.29h9v2H7c-.45 0-.85.3-.96.74L5 16.53V8z" })));
};

// eslint-disable-next-line
const IconInfoOutline = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-info-outline", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: () => props.onClick(), viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M3 12C3 16.9631 7.03773 21 12 21C16.9623 21 21 16.9631 21 12C21 7.03773 16.9623 3 12 3C7.03773 3 3 7.03773 3 12ZM4.81555 12C4.81555 8.03836 8.03836 4.81555 12 4.81555C15.9616 4.81555 19.1845 8.03836 19.1845 12C19.1845 15.9616 15.9616 19.1845 12 19.1845C8.03836 19.1845 4.81555 15.9616 4.81555 12ZM11 17V11H13V17H11ZM11 7V9H13V7H11Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' }),
    index.h("mask", { id: "mask0", "mask-type": "alpha", maskUnits: "userSpaceOnUse", x: "3", y: "3", width: "18", height: "18" },
      index.h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M3 12C3 16.9631 7.03773 21 12 21C16.9623 21 21 16.9631 21 12C21 7.03773 16.9623 3 12 3C7.03773 3 3 7.03773 3 12ZM4.81555 12C4.81555 8.03836 8.03836 4.81555 12 4.81555C15.9616 4.81555 19.1845 8.03836 19.1845 12C19.1845 15.9616 15.9616 19.1845 12 19.1845C8.03836 19.1845 4.81555 15.9616 4.81555 12ZM11 17V11H13V17H11ZM11 7V9H13V7H11Z", fill: "white" })),
    index.h("g", { mask: "url(#mask0)" })));
};

// eslint-disable-next-line
const IconMenu = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: props.pressed ? 'icon-menu pressed' : 'icon-menu', height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M3 18H21V16H3V18ZM3 13H21V11H3V13ZM3 6V8H21V6H3Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconNotifications = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: `icon-notifications ${props.pressed ? 'pressed' : ''}`, height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M10 20h4c0 1.1-.9 2-2 2s-2-.9-2-2Zm9.67-2.69C18.36 15.96 17 13.66 17 10a5 5 0 0 0-4-4.9V4c0-.55-.45-1-1-1s-1 .45-1 1v1.1A5 5 0 0 0 7 10c0 3.66-1.37 5.96-2.67 7.31-.61.64-.16 1.69.72 1.69h13.91c.88 0 1.33-1.05.72-1.69Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconRefresh = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: `${props.pressed ? 'pressed' : ''}`, height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", "data-test-id": "iconRefresh", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M18.36 5.64a8.976 8.976 0 0 0-7.16-2.61c-4.2.36-7.66 3.73-8.13 7.92C2.46 16.39 6.68 21 12 21c3.59 0 6.67-2.1 8.11-5.13.36-.75-.18-1.62-1.01-1.62-.42 0-.82.22-.99.6-1.07 2.3-3.4 3.9-6.11 3.9-3.62 0-6.7-3.02-6.75-6.64S8.24 5.25 12 5.25c1.87 0 3.53.78 4.75 2l-1.92 1.92c-.63.63-.18 1.71.71 1.71H20c.55 0 1-.45 1-1V5.42c0-.89-1.08-1.34-1.71-.71l-.94.94Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconTriangleLeft = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-triangle-left", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: () => props.onClick(), viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "m16 4-8 8 8 8Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconTriangleDown = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-triangle-down", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 10 6", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M0 0.5L4.60606 5.5L9.21212 0.5H0Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconWarningOutline = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-warning-outline", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: () => props.onClick(), viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M12 4.68605C11.6138 4.68605 11.268 4.88157 11.0752 5.20881L3.82989 17.5336C3.64191 17.8533 3.63917 18.2368 3.82371 18.5592C4.01512 18.8934 4.36295 19.093 4.75468 19.093H19.2453C19.6371 19.093 19.9849 18.8934 20.1763 18.5592C20.3608 18.2375 20.3581 17.8533 20.1701 17.5336L12.9248 5.20881C12.732 4.88157 12.3869 4.68605 12 4.68605ZM19.2453 19.779H4.75468C4.11391 19.779 3.54312 19.4504 3.22823 18.9002C2.92019 18.3617 2.92431 17.7209 3.23852 17.1865L10.4838 4.86167C10.8008 4.32244 11.3675 4 12 4C12.6325 4 13.1999 4.32244 13.5162 4.86167L20.7615 17.1865C21.0757 17.7209 21.0798 18.3617 20.7718 18.9002C20.4569 19.4504 19.8861 19.779 19.2453 19.779ZM12.0001 17.0989C11.3264 17.0989 10.7823 16.5432 10.7823 15.8811C10.7823 15.2191 11.3264 14.6634 12.0001 14.6634C12.6738 14.6634 13.2178 15.2191 13.2178 15.8811C13.2178 16.5432 12.6738 17.0989 12.0001 17.0989ZM11.078 13.6706H12.9221L13.2295 8.96292H10.7707L11.078 13.6706Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' }),
    index.h("mask", { id: "mask0", "mask-type": "alpha", maskUnits: "userSpaceOnUse", x: "3", y: "4", width: "18", height: "16" },
      index.h("path", { "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M12 4.68605C11.6138 4.68605 11.268 4.88157 11.0752 5.20881L3.82989 17.5336C3.64191 17.8533 3.63917 18.2368 3.82371 18.5592C4.01512 18.8934 4.36295 19.093 4.75468 19.093H19.2453C19.6371 19.093 19.9849 18.8934 20.1763 18.5592C20.3608 18.2375 20.3581 17.8533 20.1701 17.5336L12.9248 5.20881C12.732 4.88157 12.3869 4.68605 12 4.68605ZM19.2453 19.779H4.75468C4.11391 19.779 3.54312 19.4504 3.22823 18.9002C2.92019 18.3617 2.92431 17.7209 3.23852 17.1865L10.4838 4.86167C10.8008 4.32244 11.3675 4 12 4C12.6325 4 13.1999 4.32244 13.5162 4.86167L20.7615 17.1865C21.0757 17.7209 21.0798 18.3617 20.7718 18.9002C20.4569 19.4504 19.8861 19.779 19.2453 19.779ZM12.0001 17.0989C11.3264 17.0989 10.7823 16.5432 10.7823 15.8811C10.7823 15.2191 11.3264 14.6634 12.0001 14.6634C12.6738 14.6634 13.2178 15.2191 13.2178 15.8811C13.2178 16.5432 12.6738 17.0989 12.0001 17.0989ZM11.078 13.6706H12.9221L13.2295 8.96292H10.7707L11.078 13.6706Z", fill: "white" })),
    index.h("g", { mask: "url(#mask0)" })));
};

// eslint-disable-next-line
const IconDelete = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-delete", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 32 32" },
    index.h("path", { d: "M27.8 19.4c.07-.22.12-.45.14-.69-.04.23-.1.45-.16.68.01 0 .01.01.02.01zM28 6h-6.38l-1.73-3.45A.988.988 0 0 0 19 2h-6c-.38 0-.72.21-.89.55L10.38 6H4c-.55 0-1 .45-1 1s.45 1 1 1h3v17.17A4.84 4.84 0 0 0 11.83 30h8.34A4.84 4.84 0 0 0 25 25.17V8h3c.55 0 1-.45 1-1s-.45-1-1-1zM12 25V11c0-.55.45-1 1-1s1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1zm8 0c0 .55-.45 1-1 1s-1-.45-1-1V11c0-.55.45-1 1-1s1 .45 1 1v14zM13.62 4h4.76l1 2h-6.76l1-2z" })));
};

// eslint-disable-next-line
const IconVerticalEllipsis = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { width: (_a = props.size) !== null && _a !== void 0 ? _a : 16, height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976', onClick: props.onClick ? () => props.onClick() : null, viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg" },
    index.h("circle", { cx: "12", cy: "17.5", r: "1.5" }),
    index.h("circle", { cx: "12", cy: "12", r: "1.5" }),
    index.h("circle", { cx: "12", cy: "6.5", r: "1.5" })));
};

// eslint-disable-next-line
const IconMoon = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-moon", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M18.84 15.35c.44-.13.83.34.58.71-1.88 2.68-5.5 4.18-9.34 3.07-2.43-.7-4.39-2.53-5.16-4.82C3.44 9.91 6.03 5.8 10 4.52c.36-.12.67.27.46.58-1.09 1.68-1.45 3.83-.64 6.06.67 1.85 2.22 3.34 4.15 4.02 1.72.6 3.39.6 4.87.17Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconSun = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-moon", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M5 12c0-.34.03-.67.08-1H3c-.55 0-1 .45-1 1s.45 1 1 1h2.08c-.05-.33-.08-.66-.08-1Zm1.4-4.19c.4-.54.88-1.01 1.41-1.41L6.34 4.93a.996.996 0 1 0-1.41 1.41L6.4 7.81Zm11.2 0 1.47-1.47a.996.996 0 1 0-1.41-1.41L16.19 6.4c.54.4 1.01.88 1.41 1.41ZM6.4 16.18l-1.47 1.47a.996.996 0 0 0 .71 1.7c.26 0 .51-.1.71-.29l1.47-1.47c-.54-.4-1.01-.88-1.41-1.41ZM13 5.07V2.99c0-.55-.45-1-1-1s-1 .45-1 1v2.08c.33-.05.66-.08 1-.08s.67.03 1 .08Zm8 5.92h-2.08c.05.33.08.66.08 1s-.03.67-.08 1H21c.55 0 1-.45 1-1s-.45-1-1-1Zm-3.4 5.19c-.4.54-.88 1.01-1.41 1.41l1.47 1.47c.2.2.45.29.71.29s.51-.1.71-.29a.996.996 0 0 0 0-1.41l-1.47-1.47ZM12 6.99c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5Zm-1 11.92v2.08c0 .55.45 1 1 1s1-.45 1-1v-2.08c-.33.05-.66.08-1 .08s-.67-.03-1-.08Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor' })));
};

// eslint-disable-next-line
const IconDownloadLine = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-download-line", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "M16.59 9.5H15v-5c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v5H7.41c-.89 0-1.34 1.08-.71 1.71l4.59 4.59c.39.39 1.02.39 1.41 0l4.59-4.59c.63-.63.18-1.71-.71-1.71ZM5 19.5c0 .55.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1Z" })));
};

// eslint-disable-next-line
const IconTune = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-tune", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "M3 18c0 .55.45 1 1 1h5v-2H4c-.55 0-1 .45-1 1ZM3 6c0 .55.45 1 1 1h9V5H4c-.55 0-1 .45-1 1Zm10 14v-1h7c.55 0 1-.45 1-1s-.45-1-1-1h-7v-1c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1ZM7 10v1H4c-.55 0-1 .45-1 1s.45 1 1 1h3v1c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1Zm14 2c0-.55-.45-1-1-1h-9v2h9c.55 0 1-.45 1-1Zm-5-3c.55 0 1-.45 1-1V7h3c.55 0 1-.45 1-1s-.45-1-1-1h-3V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1Z" })));
};

// eslint-disable-next-line
const IconChevronDoubleUp = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "mi-outline mi-chevron-double-up", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "M8.11 11.7 12 7.83l3.88 3.88a.996.996 0 1 0 1.41-1.41L12.7 5.71a.996.996 0 0 0-1.41 0L6.7 10.29a.996.996 0 1 0 1.41 1.41Zm4.59.6a.996.996 0 0 0-1.41 0L6.7 16.88a.996.996 0 1 0 1.41 1.41L12 14.42l3.88 3.88a.996.996 0 1 0 1.41-1.41L12.7 12.3Z" })));
};

// eslint-disable-next-line
const IconChevronDoubleDown = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "mi-outline mi-chevron-double-down", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "M11.29 11.7c.39.39 1.02.39 1.41 0l4.59-4.59c.39-.38.39-1.01 0-1.4s-1.02-.39-1.41 0L12 9.58 8.11 5.7A.996.996 0 1 0 6.7 7.11l4.59 4.59Zm6 .6a.996.996 0 0 0-1.41 0L12 16.17l-3.88-3.88a.996.996 0 1 0-1.41 1.41l4.59 4.59c.39.39 1.02.39 1.41 0l4.59-4.59a.993.993 0 0 0-.01-1.4Z" })));
};

// eslint-disable-next-line
const IconTimerCountdown = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: `icon-timer-countdown ${props.pressed ? 'pressed' : ''}`, height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick ? (event) => props.onClick(event) : null, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { d: "M12 9v4.5l3.55 2.76A4.496 4.496 0 0 0 12 9Zm7.21.66.52-.52a.996.996 0 0 0 0-1.41l-1.27-1.27a.996.996 0 0 0-1.41 0l-.47.47c-.77-.55-1.64-.96-2.57-1.21V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1h1v1.69a7.99 7.99 0 0 0-6.05 7.75c0 4.42 3.58 8 8 8s8-3.58 8-8c0-1.33-.33-2.57-.9-3.68.05-.04.11-.06.16-.11Zm-7.26 10.01c-3.43 0-6.22-2.79-6.22-6.22s2.79-6.22 6.22-6.22 6.22 2.79 6.22 6.22-2.79 6.22-6.22 6.22Z", fill: (_c = props.color) !== null && _c !== void 0 ? _c : '#6A6976' })));
};

// eslint-disable-next-line
const IconCaretUp = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "icon-caret-up", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "m11.4 9.26-4.22 4.58c-.43.46-.06 1.16.6 1.16h8.43c.66 0 1.03-.7.6-1.16l-4.22-4.58a.833.833 0 0 0-1.2 0Z" })));
};

// eslint-disable-next-line
const IconExport = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "mi-outline mi-export", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "m14.92 16.79-1.88 1.88h-.01V13c0-.55-.45-1-1-1s-1 .45-1 1v5.67l-1.88-1.88a1 1 0 0 0-1.41 1.41l3.59 3.59c.39.39 1.02.39 1.41 0l3.59-3.59a1 1 0 0 0-1.41-1.41Zm4.79-9.09L14.3 2.29a.99.99 0 0 0-.71-.29H6c-1.1 0-2 .9-2 2v11c0 .55.45 1 1 1s1-.45 1-1V4h6v5c0 .55.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1V8.41c0-.27-.11-.52-.29-.71ZM14 7.99v-3l3 3h-3Z" })));
};

// eslint-disable-next-line
const IconHistory = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "mi-outline mi-history", xmlns: "http://www.w3.org/2000/svg", fill: (_a = props.color) !== null && _a !== void 0 ? _a : 'currentColor', height: (_b = props.size) !== null && _b !== void 0 ? _b : 16, width: (_c = props.size) !== null && _c !== void 0 ? _c : 16, onClick: props.onClick, viewBox: "0 0 24 24" },
    index.h("path", { d: "M13.26 3C8.17 2.86 4 6.95 4 12H2.21c-.45 0-.67.54-.35.85l2.79 2.8c.2.2.51.2.71 0l2.79-2.8a.5.5 0 0 0-.36-.85H6c0-3.89 3.16-7.03 7.07-7s6.87 3.15 6.93 6.86c.07 3.93-3.09 7.14-7 7.14-.3 0-.59-.02-.88-.06a.991.991 0 0 0-1.12.99c0 .51.38.93.88 1 .37.05.74.07 1.12.07 5.05 0 9.14-4.17 9-9.26-.13-4.7-4.04-8.61-8.74-8.74Zm-.51 5c-.41 0-.75.34-.75.75v3.68c0 .35.19.68.49.86l3.12 1.85c.36.21.82.09 1.03-.26.21-.36.09-.82-.26-1.03l-2.88-1.71v-3.4c0-.4-.34-.74-.75-.74Z" })));
};

// eslint-disable-next-line
const IconPencil = (props) => {
  var _a, _b, _c;
  return (index.h("svg", { class: "mi-solid mi-pencil", height: (_a = props.size) !== null && _a !== void 0 ? _a : 16, width: (_b = props.size) !== null && _b !== void 0 ? _b : 16, onClick: props.onClick, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
    index.h("path", { fill: (_c = props.color) !== null && _c !== void 0 ? _c : 'currentColor', d: "M3.1 17.15c-.1.1-.15.22-.15.36v3.04c0 .28.22.5.5.5h3.04c.13 0 .26-.05.35-.15L17.76 9.99l-3.75-3.75L3.1 17.15ZM20.66 5.68l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83a.996.996 0 0 0 0-1.41Z" })));
};

// eslint-disable-next-line
const IconMap = (props) => {
  switch (props.icon) {
    case 'add':
      return index.h(IconAdd, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
    case 'apps':
      return index.h(IconApps, { color: props.color, onClick: props.onClick, size: props.size });
    case 'calendar':
      return index.h(IconCalendar, { color: props.color, onClick: props.onClick, size: props.size });
    case 'cancel':
      return index.h(iconUploadCloud.IconCancel, { color: props.color, onClick: props.onClick, size: props.size });
    case 'caret-down':
      return index.h(IconCaretDown, { color: props.color, onClick: props.onClick, size: props.size });
    case 'caret-up':
      return index.h(IconCaretUp, { color: props.color, onClick: props.onClick, size: props.size });
    case 'check':
      return index.h(iconCheck.IconCheck, { color: props.color, onClick: props.onClick, size: props.size });
    case 'check-circle':
      return index.h(iconInfo.IconCheckCircle, { color: props.color, onClick: props.onClick, size: props.size });
    case 'check-circle-outline':
      return index.h(IconCheckCircleOutline, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-down-thick':
      return index.h(iconChevronDownThick.IconChevronDownThick, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-left-thick':
      return index.h(iconChevronLeftThick.IconChevronLeftThick, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-right-thick':
      return index.h(iconChevronRightThick.IconChevronRightThick, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-up-thick':
      return index.h(iconChevronUpThick.IconChevronUpThick, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-double-up':
      return index.h(IconChevronDoubleUp, { color: props.color, onClick: props.onClick, size: props.size });
    case 'chevron-double-down':
      return index.h(IconChevronDoubleDown, { color: props.color, onClick: props.onClick, size: props.size });
    case 'close':
      return index.h(iconClose.IconClose, { color: props.color, onClick: props.onClick, size: props.size });
    case 'collapse-all':
      return index.h(IconCollapseAll, { color: props.color, onClick: props.onClick, size: props.size });
    case 'copy':
      return index.h(IconCopy, { color: props.color, onClick: props.onClick, size: props.size });
    case 'timer-countdown':
      return index.h(IconTimerCountdown, { color: props.color, onClick: props.onClick, size: props.size });
    case 'delete':
      return index.h(IconDelete, { color: props.color, onClick: props.onClick, size: props.size });
    case 'download-line':
      return index.h(IconDownloadLine, { color: props.color, onClick: props.onClick, size: props.size });
    case 'drag':
      return index.h(IconDrag, { color: props.color, onClick: props.onClick, size: props.size });
    case 'edit':
      return index.h(IconEdit, { color: props.color, onClick: props.onClick, size: props.size });
    case 'error':
      return index.h(iconInfo.IconError, { color: props.color, onClick: props.onClick, size: props.size });
    case 'expand-all':
      return index.h(IconExpandAll, { color: props.color, onClick: props.onClick, size: props.size });
    case 'folder':
      return index.h(IconFolder, { color: props.color, onClick: props.onClick, size: props.size });
    case 'help':
      return index.h(iconHelp.IconHelp, { color: props.color, onClick: props.onClick, size: props.size });
    case 'indeterminate':
      return index.h(iconIndeterminate.IconIndeterminate, { color: props.color, onClick: props.onClick, size: props.size });
    case 'info':
      return index.h(iconInfo.IconInfo, { color: props.color, onClick: props.onClick, size: props.size });
    case 'info-outline':
      return index.h(IconInfoOutline, { color: props.color, onClick: props.onClick, size: props.size });
    case 'menu':
      return index.h(IconMenu, { color: props.color, onClick: props.onClick, size: props.size });
    case 'moon':
      return index.h(IconMoon, { color: props.color, onClick: props.onClick, size: props.size });
    case 'notifications':
      return index.h(IconNotifications, { color: props.color, onClick: props.onClick, size: props.size, pressed: props.pressed });
    case 'refresh':
      return index.h(IconRefresh, { color: props.color, onClick: props.onClick, size: props.size });
    case 'remove':
      return index.h(iconRemove.IconRemove, { color: props.color, onClick: props.onClick, size: props.size });
    case 'search':
      return index.h(iconSearch.IconSearch, { color: props.color, onClick: props.onClick, size: props.size });
    case 'sort-a-z':
      return index.h(iconChevronUpThick.IconSortAZ, { color: props.color, onClick: props.onClick, size: props.size });
    case 'sort-z-a':
      return index.h(iconChevronUpThick.IconSortZA, { color: props.color, onClick: props.onClick, size: props.size });
    case 'sun':
      return index.h(IconSun, { color: props.color, onClick: props.onClick, size: props.size });
    case 'triangle-down':
      return index.h(IconTriangleDown, { color: props.color, onClick: props.onClick, size: props.size });
    case 'triangle-left':
      return index.h(IconTriangleLeft, { color: props.color, onClick: props.onClick, size: props.size });
    case 'tune':
      return index.h(IconTune, { color: props.color, onClick: props.onClick, size: props.size });
    case 'upload-cloud':
      return index.h(iconUploadCloud.IconUploadCloud, { color: props.color, onClick: props.onClick, size: props.size });
    case 'vertical-ellipsis':
      return index.h(IconVerticalEllipsis, { color: props.color, onClick: props.onClick, size: props.size });
    case 'warning':
      return index.h(iconInfo.IconWarning, { color: props.color, onClick: props.onClick, size: props.size });
    case 'warning-outline':
      return index.h(IconWarningOutline, { color: props.color, onClick: props.onClick, size: props.size });
    case 'visibility':
      return index.h(iconVisibilityOff.IconVisibility, { color: props.color, onClick: props.onClick, size: props.size });
    case 'visibility-off':
      return index.h(iconVisibilityOff.IconVisibilityOff, { color: props.color, onClick: props.onClick, size: props.size });
    case 'history':
      return index.h(IconHistory, { color: props.color, onClick: props.onClick, size: props.size });
    case 'export':
      return index.h(IconExport, { color: props.color, onClick: props.onClick, size: props.size });
    case 'pencil':
      return index.h(IconPencil, { color: props.color, onClick: props.onClick, size: props.size });
    default:
      return index.h("img", Object.assign({ src: props.icon }, (props.imageOptions || {})));
  }
};

exports.IconApps = IconApps;
exports.IconMap = IconMap;
exports.IconMenu = IconMenu;
exports.IconNotifications = IconNotifications;
