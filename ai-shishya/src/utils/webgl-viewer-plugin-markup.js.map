{"version":3,"file":"index.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../node_modules/rxjs/src/internal/config.ts","../../../../node_modules/rxjs/src/internal/Observer.ts","../../../../node_modules/rxjs/src/internal/util/isObject.ts","../../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../../../node_modules/rxjs/src/internal/Subscription.ts","../../../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../../../node_modules/rxjs/src/internal/Subscriber.ts","../../../../node_modules/rxjs/src/internal/util/canReportError.ts","../../../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../../../node_modules/rxjs/src/internal/util/pipe.ts","../../../../node_modules/rxjs/src/internal/Observable.ts","../../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../../../node_modules/rxjs/src/internal/SubjectSubscription.ts","../../../../node_modules/rxjs/src/internal/Subject.ts","../../../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../../../node_modules/rxjs/src/internal/observable/empty.ts","../../../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToArray.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../../../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../../../../node_modules/rxjs/src/internal/operators/map.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToPromise.ts","../../../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToIterable.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToObservable.ts","../../../../node_modules/rxjs/src/internal/util/subscribeTo.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../../../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../../../node_modules/rxjs/src/internal/util/isIterable.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../../../../node_modules/rxjs/src/internal/observable/from.ts","../../../../node_modules/rxjs/src/internal/innerSubscribe.ts","../../../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../../../node_modules/rxjs/src/internal/observable/merge.ts","../../../../node_modules/rxjs/src/internal/operators/filter.ts","../../../webgl-viewer/src/Helpers/common-utils.ts","../../../webgl-viewer/src/Model.ts","../../src/Markups/Markup.ts","../../../webgl-viewer/src/Helpers/FrustumHelper.ts","../../src/MarkupModel.ts","../../../webgl-viewer/src/Picker/Caster.ts","../../../webgl-viewer/src/Helpers/utils.ts","../../../../node_modules/rxjs/src/internal/operators/take.ts","../../../../node_modules/rxjs/src/internal/operators/switchMap.ts","../../../../node_modules/rxjs/src/internal/operators/takeUntil.ts","../../../../node_modules/rxjs/src/internal/operators/tap.ts","../../../webgl-viewer/src/InputHandler.ts","../../../webgl-viewer/src/Picker/Picker.ts","../../src/CustomObjects/Mixins/MovableMixin.ts","../../../../node_modules/three/examples/jsm/lines/LineMaterial.js","../../../webgl-viewer/node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","../../../webgl-viewer/node_modules/three/examples/jsm/lines/LineGeometry.js","../../../webgl-viewer/node_modules/three/examples/jsm/lines/LineMaterial.js","../../../webgl-viewer/node_modules/three/examples/jsm/lines/LineSegments2.js","../../../webgl-viewer/src/CustomObjects/MeshLine.ts","../../../../node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","../../../../node_modules/three/examples/jsm/lines/LineGeometry.js","../../src/Markups/LineMarkup.ts","../../src/Tools/MarkupTool.ts","../../src/Tools/TapMoveTool.ts","../../src/Tools/TapMoveTapTool.ts","../../src/Tools/LineMarkupTool.ts","../../src/Tools/TapMoveTapOnPlaneTool.ts","../../src/Markups/ArrowMarkup.ts","../../src/Tools/ArrowMarkupTool.ts","../../src/Tools/TapTool.ts","../../src/Markups/CloudShape.ts","../../src/Markups/CloudMarkup.ts","../../src/Tools/CloudMarkupTool.ts","../../../webgl-viewer/src/CustomObjects/StickyElement.ts","../../src/Markups/PositionElement.ts","../../src/Markups/PointMarkup.ts","../../src/Tools/PointMarkupTool.ts","../../src/Tools/TapDragOnPlaneTool.ts","../../src/CustomObjects/PickablePlane.ts","../../src/Markups/FreelineMarkup.ts","../../src/Tools/FreelineMarkupTool.ts","../../src/Markups/MeasurementElement.ts","../../src/Markups/MeasurementLines.ts","../../src/Markups/Measurement.ts","../../src/Tools/MeasurementTool.ts","../../src/Markups/TextElement.ts","../../src/Markups/TextMarkup.ts","../../src/Tools/TextMarkupTool.ts","../../src/MarkupSettings.ts","../../../webgl-viewer/src/Version.ts","../../../webgl-viewer/src/WebglViewerPlugin.ts","../../../../node_modules/three/examples/jsm/postprocessing/Pass.js","../../../../node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../src/MarkupPlugin.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = (iterable as any)[Symbol_iterator]();\n\n  do {\n    let item: IteratorResult<T>;\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  let subscription: Subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result);\n  }\n\n  private _innerSub(ish: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift()!);\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * @deprecated renamed. Use {@link mergeMap}\n */\nexport const flatMap = mergeMap;","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import {Vector3} from \"three\";\n\n/**\n * A utils file common for main thread and workers.\n * NB: Be careful what you import here, as it will be added to the web worker bundle.\n * In particular, do not use THREE.js here.\n */\n\n// max size of buffer which can be indexed by 16bit integer\nexport const MAX_16BIT_SIZE = 0x10000;\n\nconst DEG_RATIO = 1 / 360;\nexport function getPerspectiveViewWorldSize(fov: number, distance: number): number {\n    return Math.tan(fov * Math.PI * DEG_RATIO) * distance;\n}\n\nexport function iterate<T>(array: T[] | T, loop: (o: T, i: number) => void): void {\n    if (Array.isArray(array)) {\n        for (let i = 0; i < array.length; i++)\n            loop(array[i], i);\n    }\n    else {\n        loop(array, 0);\n    }\n}\n\n// Remove image from RAM after they are transfered to VRAM\nexport function disposeImage(): void {\n    // @ts-ignore\n    this.image = undefined;\n}\n\nexport class Vector3Const {\n    static zero = Object.freeze(new Vector3(0, 0, 0));\n    static one = Object.freeze(new Vector3(1, 1, 1));\n    static up = Object.freeze(new Vector3(0, 0, 1));\n    static down = Object.freeze(new Vector3(0, 0, -1));\n    static forward = Object.freeze(new Vector3(0, 1, 0));\n    static back = Object.freeze(new Vector3(0, -1, 0));\n    static right = Object.freeze(new Vector3(1, 0, 0));\n    static left = Object.freeze(new Vector3(-1, 0, 0));\n}\n","import {BehaviorSubject} from \"rxjs\";\nimport {Box3, Line, Matrix4, Mesh, Object3D, Points} from \"three\";\nimport {IIntersection} from \"./Picker/IIntersection\";\nimport {Caster} from \"./Picker/Caster\";\nimport {PointerInput} from \"./InputHandler\";\nimport {SnapType} from \"./common\";\nimport {Vector3Const} from \"./Helpers/common-utils\";\n\nexport type GeometryObject3D = Mesh | Points | Line;\n\nexport interface SelectableModel extends PickableModel {\n    readonly isSelectable: true;\n    areaPick(caster: Caster, containedOnly?: boolean): Promise<IIntersection>;\n    setSelection(ids: number[]): void;\n    clearSelection(): void;\n}\n\nexport interface HoverableModel {\n    setHoveredFromEvent(event: PointerInput): void;\n}\n\nexport interface PickableModel {\n    pick(caster: Caster): Promise<IIntersection>;\n}\n\nexport interface SnappedPickableModel extends PickableModel {\n    pickSnapped(caster: Caster, snapTypes: SnapType[]): Promise<IIntersection[]>;\n}\n\nexport abstract class Model extends Object3D {\n    get modelId(): string {\n        return this.name;\n    }\n\n    protected boundingBox: BehaviorSubject<Box3>;\n\n    constructor(name: string) {\n        super();\n        super.name = name;\n        this.boundingBox = new BehaviorSubject(new Box3());\n        this.up.copy(Vector3Const.up);\n    }\n\n    getBoundingBox(ids?: number[]): Promise<Box3> {\n        return Promise.resolve(this.boundingBox.value);\n    }\n\n    subscribeToBoundingBox(callback: (box: Box3) => void): void {\n        this.boundingBox.subscribe(callback);\n    }\n\n    transform(matrix: Matrix4): void {\n        const newTransform = new Matrix4().fromArray(matrix.elements);\n        const oldTransform = this.matrixWorld.clone();\n        newTransform.decompose(this.position, this.quaternion, this.scale);\n\n        const bbTransform = newTransform.multiply(oldTransform.invert());\n        this.boundingBox.value.applyMatrix4(bbTransform);\n\n        this.updateMatrixWorld(true);\n        this.boundingBox.next(this.boundingBox.value);\n    }\n\n    isLoading(): boolean {\n        return false;\n    }\n\n    dispose(): void {};\n}\n","import {Object3D, Box3, Color, MeshBasicMaterial, LineBasicMaterial} from \"three\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { MarkupEventName } from \"../common\";\nimport {MarkupModel} from \"../MarkupModel\";\nimport {LineMaterial} from \"three/examples/jsm/lines/LineMaterial\";\n\nexport abstract class Markup extends Object3D {\n    selected: boolean;\n    boundingBox: Box3;\n    private _color: Color;\n    protected coloredMaterials: Array<MeshBasicMaterial | LineMaterial | LineBasicMaterial> = [];\n\n    constructor(name: string, protected _api: Api) {\n        super();\n        this.name = name;\n        this._api.eventDispatcher.dispatch(new CustomEvent(MarkupEventName.Added, {detail: this}));\n    }\n\n    get color(): Color {\n        return this._color;\n    }\n\n    set color(value: Color) {\n        this._color = value;\n        this.applyColor(value);\n    }\n\n    protected applyColor(color: Color): void {\n        for (const m of this.coloredMaterials)\n            m.color.copy(color);\n        this._api.renderingManager.redraw();\n    }\n\n    protected updateBoundingBox(): void {\n        if (!this.boundingBox) this.boundingBox = new Box3();\n        this.boundingBox.setFromObject(this);\n        const model = this.parent;\n        if (model && model instanceof MarkupModel)\n            model.updateBoundingBox();\n    }\n\n    protected dispatchModifiedEvent(): void {\n        this._api.eventDispatcher.dispatch(new CustomEvent(MarkupEventName.Modified, {detail: this}));\n    }\n\n    select(): void {\n        this.selected = true;\n        this.applyColor(this._api.settingsDispatcher.settings.selectionColor);\n    }\n\n    deselect(): void {\n        this.selected = false;\n        this.applyColor(this._color);\n    }\n\n    dispose(): void {\n        this.traverse((object: any) => {\n            if (object.geometry)\n                object.geometry.dispose();\n            if (object.material)\n                object.material.dispose();\n        });\n        this._api.eventDispatcher.dispatch(new CustomEvent(MarkupEventName.Removed, {detail: this}));\n    };\n}\n","import {Box3, Frustum, Matrix4, Plane, Vector3} from \"three\";\n\nexport class FrustumHelper {\n    static transformFrustum(frustum: Frustum, matrix: Matrix4, out: Frustum = new Frustum()): Frustum {\n        for (let i = 0; i < out.planes.length; i++)\n            out.planes[i].copy(frustum.planes[i]).applyMatrix4(matrix);\n        return out;\n    }\n\n    static planesIntersectBoxInternal = (() => {\n        const point = new Vector3();\n\n        return (planes: Plane[], box: Box3, contain: boolean) => {\n            for (let i = 0, length = planes.length; i < length; i++) {\n                const normal = planes[i].normal;\n                point.set(\n                    (normal.x >= 0.0) !== contain ? box.max.x : box.min.x,\n                    (normal.y >= 0.0) !== contain ? box.max.y : box.min.y,\n                    (normal.z >= 0.0) !== contain ? box.max.z : box.min.z\n                );\n                if (planes[i].distanceToPoint(point) < 0)\n                    return false;\n            }\n            return true;\n        };\n    })();\n\n    static planesIntersectBox(planes: Plane[], box: Box3): boolean {\n        return FrustumHelper.planesIntersectBoxInternal(planes, box, false);\n    }\n\n    static planesContainBox(planes: Plane[], box: Box3): boolean {\n        return FrustumHelper.planesIntersectBoxInternal(planes, box, true);\n    }\n\n    public static insideNonIntersectingPlanes(point: Vector3, clipPlanes: Plane[]): boolean {\n        let insideClipPlanes = true;\n        for (const clipPlane of clipPlanes)\n            insideClipPlanes = insideClipPlanes && clipPlane.distanceToPoint(point) > 0;\n        return insideClipPlanes;\n    }\n}\n","import {Model, SelectableModel} from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport {IIntersection} from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport {Markup} from \"./Markups/Markup\";\nimport {Caster} from \"@technology/webgl-viewer/dist/esnext/Picker/Caster\";\nimport {Box3, Intersection, Object3D} from \"three\";\nimport {FrustumHelper} from \"@technology/webgl-viewer/dist/esnext/Helpers/FrustumHelper\";\n\nexport class MarkupModel extends Model implements SelectableModel {\n    static get ModelId(): string { return \"markup\" };\n\n    readonly isSelectable = true;\n\n    private readonly intersectTarget: Intersection[] = [];\n\n    constructor() {\n        super(MarkupModel.ModelId);\n    }\n\n    setSelection(ids: number[]): void {\n        this.clearSelection();\n        for (const id of ids)\n            (this.getObjectById(id) as Markup).select();\n    }\n\n    clearSelection(): void {\n        this.children.forEach((markup: Markup) => markup.deselect());\n    }\n\n    areaPick(caster: Caster, containedOnly: boolean): Promise<IIntersection> {\n        if (!FrustumHelper.planesIntersectBox(caster.frustum.planes, this.boundingBox.value))\n            return null;\n\n        const markups: Markup[] = [];\n        this.children.forEach((markup: Markup) => {\n            if (containedOnly) {\n                if (FrustumHelper.planesContainBox(caster.frustum.planes, markup.boundingBox))\n                    markups.push(markup);\n            } else {\n                if (FrustumHelper.planesIntersectBox(caster.frustum.planes, markup.boundingBox))\n                    markups.push(markup);\n            }\n        });\n\n        if (markups.length === 0)\n            return null;\n\n        return Promise.resolve({\n            model: this,\n            object: markups[0],\n            id: markups[0].id,\n            childrenIds: markups.map(o => o.id)\n        });\n    }\n\n    async pick(caster: Caster): Promise<IIntersection> {\n        if (!caster.frustum.intersectsBox(this.boundingBox.value))\n            return;\n        const intersections = caster.intersectObjects(this.children, true, this.intersectTarget);\n        // prioritise movable objects, check MovableMixin\n        const intersection = intersections.find(inn => inn.object.userData.isMovable) || intersections[0];\n        this.intersectTarget.length = 0;\n        if (intersection) {\n            const markup = this.findMarkup(intersection.object);\n            const result = { caster: caster, model: this, object: markup, id: markup.id, pickPriority: 1 } as IIntersection;\n            return Object.assign(result, intersection);\n        }\n    }\n\n    private findMarkup(object: Object3D): Markup {\n        while (object) {\n            if (object instanceof Markup) return object;\n            object = object.parent;\n        }\n    }\n\n    async getBoundingBox(ids?: number[]): Promise<Box3> {\n        if (ids) {\n            const result = new Box3();\n            const box = new Box3();\n            for (const id of ids) {\n                box.setFromObject(this.getObjectById(id));\n                result.union(box);\n            }\n            return result;\n        }\n        return super.getBoundingBox();\n    }\n\n    public updateBoundingBox(): void {\n        this.boundingBox.value.makeEmpty();\n\n        this.children.forEach((markup: Markup) => {\n            this.boundingBox.value.union(markup.boundingBox);\n        });\n\n        this.boundingBox.value.expandByScalar(1.1); // Bounding boxes for cloudMarkups and arrowMarkups were too small\n        this.boundingBox.next(this.boundingBox.value);\n    }\n}\n","import { Vector2, Raycaster, Frustum } from \"three\";\n\nexport class Caster extends Raycaster {\n    screenPosition: Vector2;\n    frustum: Frustum;\n    navigation: boolean;\n\n    constructor() {\n        super();\n    }\n}\n","import {CustomLengthFormatter, LengthUnit} from \"../common\";\nimport {\n    Box3,\n    BufferAttribute,\n    BufferGeometry,\n    Camera, ConeGeometry, Euler,\n    Material, Matrix4,\n    Mesh, Object3D,\n    Ray,\n    TypedArray,\n    Vector2,\n    Vector3\n} from \"three\";\nimport {IIntersection} from \"../Picker/IIntersection\";\nimport {Caster} from \"../Picker/Caster\";\nimport {Api} from \"../Api\";\nimport {BufferGeometryUtils} from \"three/examples/jsm/utils/BufferGeometryUtils\";\n\nexport function getBoxCorners(box: Box3): Vector3[] {\n    const min = box.min.x === Infinity ? new Vector3(-50, -50, -50) : box.min;\n    const max = box.max.x === -Infinity ? new Vector3(50, 50, 50) : box.max;\n    const corners: Vector3[] = [];\n\n    /*\n      5____4\n\t1/___0/|\n\t| 6__|_7\n\t2/___3/\n\t0: max.x, max.y, max.z\n\t1: min.x, max.y, max.z\n\t2: min.x, min.y, max.z\n\t3: max.x, min.y, max.z\n\t4: max.x, max.y, min.z\n\t5: min.x, max.y, min.z\n\t6: min.x, min.y, min.z\n\t7: max.x, min.y, min.z\n\t*/\n\n    corners.push(new Vector3(max.x, max.y, max.z));\n    corners.push(new Vector3(min.x, max.y, max.z));\n    corners.push(new Vector3(min.x, min.y, max.z));\n    corners.push(new Vector3(max.x, min.y, max.z));\n\n    corners.push(new Vector3(max.x, max.y, min.z));\n    corners.push(new Vector3(min.x, max.y, min.z));\n    corners.push(new Vector3(min.x, min.y, min.z));\n    corners.push(new Vector3(max.x, min.y, min.z));\n\n    return corners;\n}\n\nexport function DirectionToSpherical(direction: Vector3, up: Vector3): Vector2 {\n    let y: number;\n\n    if (Math.abs(direction.x) < 0.002 && Math.abs(direction.y) < 0.002) {\n        if (direction.z > 0) {\n            y = Math.PI + calculateSphericalYAngle(up);\n        } else {\n            y = calculateSphericalYAngle(up);\n        }\n    } else {\n        y = Math.atan2(direction.y, direction.x);\n    }\n\n    return new Vector2(Math.acos(direction.z), y);\n}\n\nexport function calculateSphericalYAngle(up: Vector3): number {\n    if (up.x === 0.0) {\n        if (up.y > 0) {\n            return Math.PI / 2;\n        } else {\n            return -Math.PI / 2;\n        }\n    } else if (up.y === 0) {\n        if (up.x > 0) {\n            return 0.0;\n        } else {\n            return Math.PI;\n        }\n    } else {\n        const angle = Math.atan2(Math.abs(up.y), Math.abs(up.x));\n\n        if (up.x < 0) {\n            if (up.y < 0) {\n                return angle + Math.PI;\n            } else {\n                return angle + Math.PI / 2;\n            }\n        } else {\n            if (up.y < 0) {\n                return angle + 1.5 * Math.PI;\n            } else {\n                return angle;\n            }\n        }\n    }\n}\n\nexport function SphericalToDirection(sphericalCoordinates: Vector2, vec: Vector3): Vector3 {\n    return vec.set(\n        Math.sin(sphericalCoordinates.x) * Math.cos(sphericalCoordinates.y),\n        Math.sin(sphericalCoordinates.x) * Math.sin(sphericalCoordinates.y),\n        Math.cos(sphericalCoordinates.x)\n    ).normalize();\n}\n\nexport function closestPointBetweenRays(line0: Ray, line1: Ray): Vector3 {\n    const originDiff = new Vector3().subVectors(line0.origin, line1.origin);\n    const a01 = -line0.direction.dot(line1.direction);\n\n    const b0 = originDiff.dot(line0.direction);\n    const c = originDiff.length();\n    const determinant = Math.abs(1.0 - a01 * a01);\n    let line0Parameter: number;\n\n    if (determinant >= 0) {\n        // lines are not parallel\n        const fB1 = -originDiff.dot(line1.direction);\n        const inverseDeterminant = 1.0 / determinant;\n        line0Parameter = (a01 * fB1 - b0) * inverseDeterminant;\n    } else {\n        // lines are parallel, select any closest pair of points\n        line0Parameter = -b0;\n    }\n\n    return new Vector3()\n        .copy(line0.origin)\n        .add(line0.direction.multiplyScalar(line0Parameter));\n}\n\nexport function getTouchPoint(event: TouchEvent): { x: number; y: number } {\n    const point = { x: 0, y: 0 };\n    const touches = event.touches.length !== 0 ? event.touches : event.changedTouches;\n    for (const touch of touches) {\n        point.x += touch.clientX;\n        point.y += touch.clientY;\n    }\n    point.x /= touches.length;\n    point.y /= touches.length;\n    return point;\n}\n\nexport function getRayIntersection(x: number, y: number, camera: Camera): IIntersection {\n    const vector = new Vector3();\n    const raycaster = new Caster();\n\n    vector.set((x / window.innerWidth) * 2 - 1, -(y / window.innerHeight) * 2 + 1, 0.5);\n\n    vector.unproject(camera);\n\n    const dir = vector.sub(camera.position).normalize();\n    raycaster.set(camera.position, dir);\n    return {\n        id: null,\n        object: null,\n        model: null,\n        caster: raycaster\n    };\n}\n\nexport function rayToWorldPosition(ray: Ray, camera: Camera, point: Vector3): Vector3 {\n    const dir = ray.direction;\n    const distance = camera.position.distanceTo(point);\n    return camera.position.clone().add(dir.multiplyScalar(distance));\n}\n\nexport function copyToVector3(from: Vector3, to: Vector3): Vector3 {\n    to.x = from.x; to.y = from.y; to.z = from.z;\n    return to;\n}\n\nexport const MILLIMETERS_IN_FOOT = 304.8;\nexport const MILLIMETERS_IN_INCH = 25.4;\n\nexport const lengthUnits: Record<\n    LengthUnit,\n    { inMillimeters: number; symbol: string }\n> = {\n    mm: { inMillimeters: 1, symbol: \"mm\" },\n    cm: { inMillimeters: 1e1, symbol: \"cm\" },\n    m: { inMillimeters: 1e3, symbol: \"m\" },\n    km: { inMillimeters: 1e6, symbol: \"km\" },\n    ft: { inMillimeters: MILLIMETERS_IN_FOOT, symbol: \"ft\" },\n    in: { inMillimeters: MILLIMETERS_IN_INCH, symbol: \"in\" },\n    yd: { inMillimeters: 914.4, symbol: \"yd\" },\n    mi: { inMillimeters: 1609344, symbol: \"mi\" },\n    custom: { inMillimeters: 1e3, symbol: \"m\" }\n};\n\nexport function formatLength(\n    millimeters: number,\n    unit: LengthUnit,\n    decimals: number = 2\n): string {\n    const value = lengthUnits[unit];\n    return `${roundToDecimals(millimeters / value.inMillimeters, decimals)} ${value.symbol}`;\n}\n\nfunction roundToDecimals(value: number, decimals: number): number {\n    const p = Math.pow(10, decimals);\n    return Math.round(value * p) / p;\n}\n\nexport const distanceFormatter = (lengthUnit: LengthUnit, decimals: number) => {\n    return (distance: number) => {\n        return formatLength(distance * 1000, lengthUnit, decimals);\n    };\n};\n\nexport const positionFormatter = (position: Vector3, lengthFormatter: CustomLengthFormatter) => {\n    return `X ${lengthFormatter(position.x)} | Y ${lengthFormatter(position.y)} | Z ${lengthFormatter(position.z)}`;\n};\n\nexport function createGeometryAttribute(geometry: BufferGeometry, attributeName: string, length: number, itemSize: number, arrayType: new (size: number) => TypedArray): BufferAttribute {\n    let array: TypedArray;\n    let attribute = attributeName === \"index\" ? geometry.getIndex() : geometry.getAttribute(attributeName) as BufferAttribute;\n\n    // minimize the number of array allocations, reallocate only if too small or 2x size\n    if (attribute && attribute.array.length >= length * itemSize && attribute.array.length < length * itemSize * 2) {\n        attribute.count = length;\n        attribute.updateRange.count = length * itemSize;\n        attribute.needsUpdate = true;\n    }\n    else {\n        array = new arrayType(length * itemSize);\n        attribute = new BufferAttribute(array, itemSize);\n        if (attributeName === \"index\") geometry.setIndex(attribute);\n        else geometry.setAttribute(attributeName, attribute);\n    }\n    return attribute;\n}\n\nexport interface ITrimBIMValidationInfo {\n    version?: string;\n    versionNumber?: number;\n}\n\nexport function getFileBuffer(file: File): Promise<ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = event => {\n            const target = <any>event.target;\n            resolve(target.result);\n        };\n\n        reader.onerror = e => {\n            console.error(e);\n            return reject(e);\n        };\n\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nexport async function toImage(blob: Blob): Promise<ImageBitmap | HTMLImageElement> {\n    if (typeof createImageBitmap === \"undefined\") {\n        return new Promise(async (resolve, reject) => {\n            const img = new Image();\n            img.src = URL.createObjectURL(blob);\n            img.onload = () => resolve(img);\n            img.onerror = () => reject(\"Image did not load\");\n        });\n    }\n\n    try {\n        // @ts-ignore\n        return await createImageBitmap(blob, { imageOrientation: \"flipY\" });\n    } catch (e) {\n        return await createImageBitmap(blob); // firefox does not support options argument\n    }\n}\n\nconst vec3 = new Vector3();\nexport function createScreenStaticSizeMesh(geometry: BufferGeometry, material: Material, api: Api, adjustScale?: (scale: number) => number): Mesh {\n    const marker = new Mesh(geometry, material as any);\n    makeScreenStaticSize(marker, api, adjustScale);\n    return marker;\n}\n\nexport function makeScreenStaticSize(object: Object3D, api: Api, adjustScale?: (scale: number) => number): void {\n    object.renderOrder = 1;\n\n    let mesh: Mesh = undefined;\n    object.traverse(o => { if (o instanceof Mesh) mesh = o });\n    mesh.onBeforeRender = () => {\n        let scale = api.camera.getProjectionCompensatingScale(object.getWorldPosition(vec3).distanceTo(api.camera.position));\n        if (adjustScale) scale = adjustScale(scale);\n        object.scale.set(scale, scale, scale);\n        object.updateMatrixWorld(true);\n    };\n}\n\nexport function createArrowGeometry(size: number): BufferGeometry {\n    const geometry = new ConeGeometry(size / 3, size, 10);\n    geometry.applyMatrix4(new Matrix4().makeRotationFromEuler(new Euler(-Math.PI / 2, 0, 0)).setPosition(0, 0, size / 2));\n    return geometry;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index = 0;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete(): void {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue: R): void {\n      this.destination.next!(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { getTouchPoint } from \"./Helpers/utils\";\nimport {ConnectableObservable, fromEvent, merge, Observable, timer} from \"rxjs\";\n\nimport {\n    buffer,\n    debounceTime,\n    delay,\n    filter,\n    map, mergeMap,\n    publish,\n    switchMap,\n    takeUntil,\n    tap,\n} from \"rxjs/operators\";\n\nimport { Picker } from \"./Picker/Picker\";\nimport { IIntersection } from \"./Picker/IIntersection\";\nimport { MouseButton } from \"./common\";\nimport { Vector2 } from \"three\";\nimport { Model } from \"./Model\";\nimport {Cursor3D} from \"./Picker/Cursor3D\";\n\nexport interface Input {\n    // use for pick position\n    x: number;\n    y: number;\n\n    // use for delta calculation\n    screenX: number;\n    screenY: number;\n\n    originalEvent: WheelEvent | MouseEvent | TouchEvent | GestureEvent;\n    intersection?: IIntersection;\n}\n\nexport interface PointerInput extends Input {\n    mouseButton?: MouseButton;\n    anyMouseButtonDown?: boolean;\n    touchCount?: number;\n    isTouch: boolean;\n}\n\nexport interface ScrollEvent extends Input {\n    speed: number;\n}\n\n// Mac's Safari custom event https://developer.apple.com/documentation/webkitjs/gestureevent\ninterface GestureEvent extends UIEvent {\n    scale: number;\n    clientX: number;\n    clientY: number;\n}\n\nexport interface PointerObservableOptions {\n    touchCount?: number;\n    button?: MouseButton;\n}\n\nconst TAP_TIME = 150;\nconst DOUBLE_TAP_TIME = 250;\nconst LONG_TAP_TIME = 1000;\nconst TAP_DIST = 12;\n\nexport class InputHandler {\n    private _cursor: string;\n\n    public pointerDown$: ConnectableObservable<PointerInput>;\n    private _pointerDownObserver: Observable<any>;\n\n    public pointerMove$: ConnectableObservable<PointerInput>;\n    private _moveObserver: ConnectableObservable<PointerInput>;\n\n    public pointerUp$: ConnectableObservable<PointerInput>;\n    private _pointerUpObserver: Observable<any>;\n\n    public wheel$: ConnectableObservable<ScrollEvent>;\n    public gesture$: ConnectableObservable<ScrollEvent>;\n    public zoom$: Observable<ScrollEvent>;\n    public contextMenu$: Observable<any>;\n\n    public keyDown$: ConnectableObservable<KeyboardEvent>;\n\n    public keyUp$: ConnectableObservable<KeyboardEvent>;\n\n    constructor(\n        public picker: Picker,\n        public container: HTMLElement,\n    ) {\n        const eventOptions = {\n            passive: false\n        };\n\n        let lastTouchTime: number;\n        const notDuplicate = (e: Event) => {\n            // OculusBrowser generates both mouse and touch events, filter duplicates\n            const now = performance.now();\n            if (typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent)\n                lastTouchTime = now;\n            if (typeof MouseEvent !== \"undefined\" && e instanceof MouseEvent)\n                return lastTouchTime === undefined || now - lastTouchTime > 1000;\n            return true;\n        };\n\n        this._pointerDownObserver = merge(\n            fromEvent(container, \"mousedown\", eventOptions),\n            fromEvent(container, \"touchstart\", eventOptions)\n        ).pipe(\n            filter(notDuplicate),\n            tap((e: Event) => {\n                if (e.cancelable)\n                    e.preventDefault();\n            }),\n            map((event: any) => this.convertEventToPointerInput(event))\n        );\n\n        this._moveObserver = merge(\n            fromEvent(window, \"mousemove\", eventOptions), // listen on window to allow drag mouse out of canvas\n            fromEvent(container, \"touchmove\", eventOptions)\n        ).pipe(\n            filter(notDuplicate),\n            map((event: any) => this.convertEventToPointerInput(event)),\n            publish()\n        ) as ConnectableObservable<PointerInput>;\n        this._moveObserver.connect();\n\n        this._pointerUpObserver = merge(\n            fromEvent(container, \"mouseup\", eventOptions),\n            fromEvent(container, \"touchend\", eventOptions)\n        ).pipe(\n            filter(notDuplicate),\n            map((event: any) => this.convertEventToPointerInput(event))\n        );\n\n        this.pointerDown$ = this._pointerDownObserver.pipe(\n            publish()\n        ) as ConnectableObservable<PointerInput>;\n        this.pointerDown$.connect();\n\n        this.pointerMove$ = this._moveObserver.pipe(publish()) as ConnectableObservable<PointerInput>;\n        this.pointerMove$.connect();\n\n        this.pointerUp$ = this._pointerUpObserver.pipe(\n            publish()\n        ) as ConnectableObservable<PointerInput>;\n        this.pointerUp$.connect();\n\n        this.wheel$ = fromEvent(container, \"wheel\", eventOptions).pipe(\n            map(e => this.fromWheelToScrollEvent(e as WheelEvent)),\n            publish()\n        ) as ConnectableObservable<ScrollEvent>;\n        this.wheel$.connect();\n\n        this.gesture$ = merge(\n            fromEvent(container, \"gesturestart\", eventOptions),\n            fromEvent(container, \"gesturechange\", eventOptions),\n            fromEvent(container, \"gestureend\", eventOptions)\n        ).pipe(\n            map(e => this.fromGestureToScrollEvent(e as GestureEvent)),\n            publish()\n        ) as ConnectableObservable<ScrollEvent>;\n        this.gesture$.connect();\n\n        // Use GestureEvent for macOS safari, ignore for iOS (TouchEvent will be used instead)\n        this.zoom$ = \"TouchEvent\" in window ? this.wheel$ : merge(this.wheel$, this.gesture$);\n\n        const isValidKeyEvent = (event: Event) => {\n            const e = event as KeyboardEvent;\n            const elementFromPath = e.composedPath()[0] as HTMLElement;\n            return !e.repeat &&\n                (!elementFromPath || !elementFromPath.tagName ||\n                elementFromPath.tagName.toLowerCase() !== \"text-element\" &&\n                elementFromPath.tagName.toLowerCase() !== \"input\" &&\n                elementFromPath.tagName.toLowerCase() !== \"textarea\");\n        }\n\n        this.keyDown$ = fromEvent(window, \"keydown\", eventOptions).pipe(\n            filter(isValidKeyEvent),\n            publish()\n        ) as ConnectableObservable<KeyboardEvent>;\n        this.keyDown$.connect();\n\n        this.keyUp$ = fromEvent(window, \"keyup\", eventOptions).pipe(\n            filter(isValidKeyEvent),\n            publish()\n        ) as ConnectableObservable<KeyboardEvent>;\n        this.keyUp$.connect();\n\n        this.contextMenu$ = fromEvent(container, \"contextmenu\", eventOptions);\n        this.contextMenu$.subscribe(event => {\n            event.preventDefault();\n        });\n    }\n\n    private clampScrollSpeed(speed: number): number {\n        // Windows mouse wheel gives discrete abs value 1 (very fast movements 2) - no values in between\n        // Windows track pad pinch gives same as mouse wheel\n        // Windows track pad scroll gives range 0.05 : 8 (but tends to be around 1)\n        // Mac mouse wheel gives range 0.04 : 7\n        // Mac track pad pinch gives range 0.01 : 1.1\n        // Mac track pad scroll gives 0.01 : 1.6\n\n        // Clamp abs value to normalize different devices mentioned above\n        speed = 0 === speed ? 0 : speed > 0 ? Math.max(speed, 0.3) : Math.min(speed, -0.3);\n        return Math.min(Math.max(speed, -2), 2);\n    }\n\n    private fromWheelToScrollEvent(event: WheelEvent): ScrollEvent {\n        event.preventDefault();\n\n        const delta = event.deltaY + event.deltaX;\n        const speed = event.ctrlKey ? delta / 25 : // Trackpad pinch gesture (Chrome)\n            event.deltaMode === WheelEvent.DOM_DELTA_PIXEL ? delta / 100 :\n                event.deltaMode === WheelEvent.DOM_DELTA_LINE ? delta / 3 :\n                    event.deltaMode === WheelEvent.DOM_DELTA_PAGE ? delta * 80 : 0;\n\n        return {\n            speed: this.clampScrollSpeed(speed),\n            x: event.x,\n            y: event.y,\n            screenX: event.screenX,\n            screenY: event.screenY,\n            originalEvent: event\n        };\n    }\n\n    // Mac safari trackpad pinch gesture event\n    private fromGestureToScrollEvent(event: GestureEvent): ScrollEvent {\n        event.preventDefault();\n\n        // Mac safari trackpad pinch gives values 0.05 : 4\n        const speed = 1 - event.scale;\n        return {\n            speed: speed,\n            x: event.clientX,\n            y: event.clientY,\n            screenX: event.clientX,\n            screenY: event.clientY,\n            originalEvent: event\n        };\n    }\n\n    set cursor(cursor: string) {\n        this._cursor = this._cursor || \"default\";\n\n        if (cursor === \"\") {\n            this.container.classList.remove(this._cursor);\n            this.container.classList.add(\"default\");\n            this._cursor = \"default\";\n        } else if (cursor !== this._cursor) {\n            this.container.classList.remove(this._cursor);\n            this.container.classList.add(cursor);\n            this._cursor = cursor;\n        }\n    }\n\n    get cursor(): string {\n        this._cursor = this._cursor || \"default\";\n        return this._cursor;\n    }\n\n    private convertEventToPointerInput(event: TouchEvent | MouseEvent): PointerInput {\n        const inputEvent: PointerInput = {\n            x: 0,\n            y: 0,\n            screenX: 0,\n            screenY: 0,\n            originalEvent: event,\n            isTouch: typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent\n        };\n\n        if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\n            const point = getTouchPoint(event as TouchEvent);\n            inputEvent.x = point.x;\n            inputEvent.y = point.y;\n            inputEvent.screenX = point.x;\n            inputEvent.screenY = point.y;\n            inputEvent.touchCount = event.touches.length;\n        }\n        else if (typeof MouseEvent !== \"undefined\" && event instanceof MouseEvent) {\n            inputEvent.x = event.x;\n            inputEvent.y = event.y;\n            inputEvent.screenX = event.screenX;\n            inputEvent.screenY = event.screenY;\n            inputEvent.mouseButton = event.button;\n            inputEvent.anyMouseButtonDown = event.buttons !== 0;\n        }\n\n        return inputEvent;\n    }\n\n    createTapObservable(options: PointerObservableOptions): Observable<PointerInput> {\n        return this.pointerDown$.pipe(\n            filter(allowInput(options)),\n            switchMap(down =>\n                this.pointerUp$.pipe(\n                    filter(allowInput(options ? {button: options.button, touchCount: 0} : undefined)),\n                    takeUntil(this.pointerMove$.pipe(delay(TAP_TIME))),\n                    filter(up => getScreenDistance(down, up) < TAP_DIST),\n                    map(() => down)\n                )\n            )\n        );\n    }\n\n    createSnappedTapObservable(cursor: Cursor3D, options: PointerObservableOptions): Observable<PointerInput> {\n        return this.createTapObservable(options).pipe(\n            mergeMap(async e => {\n                // recalculate for touch because was not calculated on mouse move\n                if (e.isTouch) await cursor.calculateIntersection(e, true);\n                e.intersection = cursor.intersection;\n                return e;\n            }),\n            filter(hasIntersection)\n        );\n    };\n\n    createDoubleTapObservable(options: PointerObservableOptions): Observable<PointerInput> {\n        const taps = this.pointerDown$.pipe(\n            filter(allowInput(options))\n        );\n\n        return taps.pipe(\n            buffer(taps.pipe(debounceTime(DOUBLE_TAP_TIME))),\n            filter(events => events.length === 2),\n            map(events => events[0]),\n            filter(allowInput(options))\n        );\n    }\n\n    createDragObservable(options: PointerObservableOptions,\n                                         onDown: (e: PointerInput) => Promise<PointerInput>,\n                                         onMove: (e: PointerInput) => void,\n                                         onUp: (e: PointerInput) => void): Observable<PointerInput> {\n        let downTime: number;\n        return this.pointerDown$.pipe(\n            filter(e => allowPointerInput(e, options)),\n            mergeMap(async event => {\n                downTime = performance.now();\n                return await onDown(event);\n            }),\n            mergeMap(down =>\n                this.pointerMove$.pipe(\n                    takeUntil(controlsReleased(this, options)\n                        .pipe(tap(onUp))),\n                    filter(e => getScreenDistance(down, e) >= TAP_DIST || performance.now() - downTime > TAP_TIME),\n                    tap(onMove)\n                )\n            )\n        );\n    }\n\n    createLongTapObservable(options: PointerObservableOptions): Observable<PointerInput> {\n        return this.pointerDown$.pipe(\n            filter(e => allowPointerInput(e, options)),\n            switchMap(down =>\n                timer(LONG_TAP_TIME).pipe(\n                    takeUntil(merge(this.pointerUp$, this.pointerMove$)),\n                    map(() => down)\n                )\n            )\n        );\n    }\n}\n\nexport const allowInput = (options: PointerObservableOptions) => (e: PointerInput) =>\n    allowPointerInput(e, options);\n\nexport function allowPointerInput(e: PointerInput, options: PointerObservableOptions): boolean {\n    return !options || (e.mouseButton === options.button && !e.isTouch) || (e.touchCount === options.touchCount && e.isTouch);\n}\n\nexport const controlsReleased = (inputs: InputHandler, options: PointerObservableOptions) =>\n    merge(\n        inputs.pointerUp$.pipe(filter(e => e.mouseButton === options.button || (e.touchCount !== options.touchCount && e.isTouch))),\n        inputs.pointerMove$.pipe(filter(e => !e.isTouch && !e.anyMouseButtonDown || e.isTouch && e.touchCount !== options.touchCount))\n    );\n\nexport const hasIntersection = (e: PointerInput) => !!(e && e.intersection);\n\nexport const addIntersection = (picker: Picker, models?: Model[]) => async (e: PointerInput): Promise<PointerInput> => {\n    e.intersection = await picker.pick(new Vector2(e.x, e.y), models);\n    return e;\n};\n\nexport const addIntersectionForNavigation = (picker: Picker) => async (e: PointerInput): Promise<PointerInput> => {\n    e.intersection = await picker.pickForNavigation(new Vector2(e.x, e.y));\n    return e;\n};\n\nexport function getScreenDistance(ev1: PointerInput | Touch, ev2: PointerInput | Touch): number {\n    const e1 = ev1 as Touch & PointerInput;\n    const e2 = ev2 as Touch & PointerInput;\n    const x1 = e1.clientX || e1.x;\n    const y1 = e1.clientY || e1.y;\n    const x2 = e2.clientX || e2.x;\n    const y2 = e2.clientY || e2.y;\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n","import {Box3, Camera, Frustum, Plane, Ray, Raycaster, Vector2, Vector3} from \"three\";\nimport {IIntersection} from \"./IIntersection\";\nimport {Models} from \"../Models\";\nimport {Caster} from \"./Caster\";\nimport {WVCamera} from \"../Rendering/WVCamera\";\nimport {Model, PickableModel, SelectableModel, SnappedPickableModel} from \"../Model\";\nimport {PickComplexity, PickerCache} from \"./PickerCache\";\nimport {Settings, SnapType} from \"../common\";\nimport {SettingsDispatcher} from \"../SettingsDispatcher\";\n\nexport class Picker {\n    private _worldBoundingBox: Box3;\n    pickerBusy: boolean;\n    private cache = new PickerCache();\n    private backClipPlane = new Plane();\n\n    constructor(\n        private _camera: WVCamera,\n        private _models: Models,\n        private _container: HTMLElement,\n        private settingsDispatcher: SettingsDispatcher<Settings>\n    ) {\n        _camera.subscribe(() => this.cache.clear());\n    }\n\n    public setWorldBoundingBox(box: Box3): void {\n        this._worldBoundingBox = box;\n    }\n\n    private createCaster(screenPosition: Vector2, snapDistance: number): Caster {\n        const caster = new Caster();\n        caster.screenPosition = screenPosition;\n        const p = screenPositionToRayTracePoint(caster.screenPosition, this._container);\n        caster.setFromCamera(p, this._camera);\n        caster.frustum = this.createFrustumFromScreenPoint(caster.screenPosition, snapDistance);\n        return caster;\n    }\n\n    private createFrustumFromScreenPoint(screenPoint: Vector2, snapDistance: number): Frustum {\n        return this.createFrustumFromScreenRect(screenPoint.clone().subScalar(snapDistance), screenPoint.clone().addScalar(snapDistance));\n    }\n\n    private createFrustumFromScreenRect = (() => {\n        const top = new Plane();\n        const right = new Plane();\n        const bottom = new Plane();\n        const left = new Plane();\n        const near = new Plane();\n        const far = new Plane();\n        const topLeft = new Vector3();\n        const topRight = new Vector3();\n        const bottomLeft = new Vector3();\n        const bottomRight = new Vector3();\n        const topLeftNear = new Vector3();\n        const bottomRightNear = new Vector3();\n        const topLeftPoint = new Vector2();\n        const bottomRightPoint = new Vector2();\n\n        return (screenPointTopLeft: Vector2, screenPointBottomRight: Vector2): Frustum => {\n            screenPositionToRayTracePoint(screenPointTopLeft, this._container, topLeftPoint);\n            screenPositionToRayTracePoint(screenPointBottomRight, this._container, bottomRightPoint);\n\n            const camera = this._camera;\n            topLeft.set(topLeftPoint.x, topLeftPoint.y, 1).unproject(camera);\n            topRight.set(bottomRightPoint.x, topLeftPoint.y, 1).unproject(camera);\n            bottomLeft.set(topLeftPoint.x, bottomRightPoint.y, 1).unproject(camera);\n            bottomRight.set(bottomRightPoint.x, bottomRightPoint.y, 1).unproject(camera);\n\n            topLeftNear.set(topLeftPoint.x, topLeftPoint.y, 0).unproject(camera);\n            bottomRightNear.set(bottomRightPoint.x, bottomRightPoint.y, 0).unproject(camera);\n\n            top.setFromCoplanarPoints(topLeftNear, topLeft, topRight);\n            right.setFromCoplanarPoints(bottomRightNear, topRight, bottomRight);\n            bottom.setFromCoplanarPoints(bottomRightNear, bottomRight, bottomLeft);\n            left.setFromCoplanarPoints(topLeftNear, bottomLeft, topLeft);\n\n            camera.getWorldDirection(near.normal);\n            near.constant = camera.position.length();\n            far.normal = near.normal;\n            far.constant = Infinity;\n\n            return new Frustum(top, bottom, left, right, near, far);\n        };\n    })();\n\n    async pickForNavigation(screenPosition: Vector2): Promise<IIntersection> {\n        return await this.cache.execCached(screenPosition, undefined, PickComplexity.NAVIGATION, async () => {\n            const caster = this.createCaster(screenPosition, 50);\n            caster.navigation = true;\n            return this.reduceIntersections(await this.pickAllModels(caster, undefined));\n        });\n    }\n\n    pick(screenPosition: Vector2, models: Model[]): Promise<IIntersection> {\n        return this.cache.execCached(screenPosition, models, PickComplexity.NORMAL, async () => {\n            const caster = this.createCaster(screenPosition, this.settingsDispatcher.settings.snapDistance);\n            return this.reduceIntersections(await this.pickAllModels(caster, models));\n        });\n    }\n\n    async pickSnapped(screenPosition: Vector2, snapTypes: SnapType[], waitIfBusy: boolean): Promise<IIntersection> {\n        const intersection = await this.cache.execCached(screenPosition, undefined, PickComplexity.SNAPPED, async () => {\n            const caster = this.createCaster(screenPosition, this.settingsDispatcher.settings.snapDistance);\n            let intersections = await this.pickAllModelsSnapped(caster, snapTypes, waitIfBusy);\n\n            // TODO: this code is very similar to PickManager.pickSnapped, unify?\n            // if we have a face hit, filter out all points behind this face\n            if (intersections) {\n                const faceIntersection = intersections.find(inn => inn.snapType === SnapType.FACE);\n                if (faceIntersection) {\n                    this.backClipPlane.setFromNormalAndCoplanarPoint(faceIntersection.normal, faceIntersection.point);\n                    intersections = intersections.filter(inn => this.backClipPlane.distanceToPoint(inn.point) >= 0);\n                }\n            }\n            return this.reduceIntersections(intersections);\n        });\n        // Filter cached interesction with unwanted snap type\n        return (intersection && snapTypes.includes(intersection.snapType)) ? intersection : null;\n    }\n\n    public async getIntersectionFromScreenRect(screenPointTopLeft: Vector2, screenPointBottomRight: Vector2, excludeIntersected: boolean = false): Promise<IIntersection[]> {\n        const caster = new Caster();\n        delete caster.ray;\n        caster.frustum = this.createFrustumFromScreenRect(screenPointTopLeft, screenPointBottomRight);\n        const picks = [];\n        const models = this._models.getIterable();\n\n        for (const model of models) {\n            const m = model as Model & SelectableModel;\n            if (m.isSelectable) picks.push(m.areaPick(caster, excludeIntersected));\n        }\n\n        let intersections: (IIntersection)[] = await Promise.all(picks);\n        intersections = intersections.filter(item => !!item);\n\n        return intersections;\n    }\n\n    private async pickAllModels(caster: Caster, models: Model[]): Promise<IIntersection[]> {\n        const promises: Array<Promise<IIntersection>> = [];\n        for (const model of models ? models : this._models.getIterable()) {\n            const m = model as Model & PickableModel;\n            if (m.pick)\n                promises.push(m.pick(caster));\n        }\n        const intersections = await Promise.all(promises);\n        return intersections.filter(i => !!i);\n    }\n\n    private async pickAllModelsSnapped(caster: Caster, snapTypes: SnapType[], waitIfBusy: boolean): Promise<IIntersection[]> {\n        if (this.pickerBusy && !waitIfBusy) return;\n        this.pickerBusy = true;\n\n        const promises: Array<Promise<IIntersection[]>> = [];\n        for (const model of this._models.getIterable()) {\n            const m = model as Model & SnappedPickableModel;\n            if (m.pickSnapped)\n                promises.push(m.pickSnapped(caster, snapTypes));\n        }\n        const ins = await Promise.all(promises);\n\n        this.pickerBusy = false;\n        return ins.flat().filter(i => !!i);\n    }\n\n    private reduceIntersections(intersections: IIntersection[]): IIntersection {\n        return !intersections || intersections.length === 0 ? undefined : intersections.reduce((a, b) => {\n            // when comparing edges or points that are closer than all the faces, compare by distance to ray not distance to ray origin.\n            const deltaDistance = (a.distanceToRay !== undefined && b.distanceToRay !== undefined) ?\n                (a.distanceToRay / a.distance) - (b.distanceToRay / b.distance) :\n                a.distance - b.distance;\n            const deltaPriority = (a.pickPriority !== undefined ? a.pickPriority : 0) - (b.pickPriority ? b.pickPriority : 0);\n            const deltaSnapType = (a.snapType !== undefined ? a.snapType : 0) - (b.snapType ? b.snapType : 0);\n\n            return (deltaPriority === 0 ? (deltaSnapType === 0 ? deltaDistance : -deltaSnapType) : -deltaPriority) < 0 ? a : b;\n        });\n    }\n}\n\nconst rayCaster = new Raycaster();\nexport function screenPositionToRay(point: { x: number; y: number }, container: HTMLElement, camera: Camera, out: Ray = new Ray()): Ray {\n    rayCaster.setFromCamera(screenPositionToRayTracePoint(point, container), camera);\n    return out.copy(rayCaster.ray);\n}\n\nexport function screenPositionToRayTracePoint(point: { x: number; y: number }, container: HTMLElement, out: Vector2 = new Vector2()): Vector2 {\n    const dimensions = container.getBoundingClientRect();\n    out.x = ((point.x - dimensions.left) / container.clientWidth) * 2 - 1;\n    out.y = -((point.y - dimensions.top) / container.clientHeight) * 2 + 1;\n    return out;\n}\n\nexport const worldToScreenPoint = (() => {\n    const pos = new Vector3();\n\n    return (point: Vector3, camera: Camera, canvasWidth: number, canvasHeight: number) => {\n        pos.copy(point).applyMatrix4(camera.matrixWorldInverse);\n        if (pos.z > 0) // point behind camera\n            return;\n\n        pos.applyMatrix4(camera.projectionMatrix);\n        pos.x = ((pos.x + 1) * canvasWidth) / 2;\n        pos.y = ((-pos.y + 1) * canvasHeight) / 2;\n\n        return pos;\n    };\n})();\n","import {\n    PointerInput,\n    allowInput,\n    controlsReleased, addIntersection\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\nimport { Object3D, Plane, Ray, Vector3 } from \"three\";\nimport { tap, switchMap, map, mergeMap, takeUntil, filter} from \"rxjs/operators\";\nimport { merge } from 'rxjs';\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport { screenPositionToRay } from \"@technology/webgl-viewer/dist/esnext/Picker/Picker\";\nimport { MouseButton } from \"@technology/webgl-viewer/dist/esnext/common\";\n\nexport interface MovablePointerInput extends PointerInput {\n    origin?: Object3D;\n}\n\nexport interface IMovable {\n    selected: boolean;\n    dragStart: (event: MovablePointerInput) => void;\n    dragging: (event: MovablePointerInput) => void;\n    dragEnd: (event: MovablePointerInput) => void;\n}\n\nexport interface MovableMixin extends Object3D {\n    userData: {\n        isMovable: true;\n    };\n}\n\nfunction isMovable(event: PointerInput): boolean {\n    return (\n        event.intersection &&\n        event.intersection.object &&\n        event.intersection.object.userData.isMovable\n    );\n}\n\nconst removeSelf = (event: PointerInput) => {\n    if (event.intersection && (!event.intersection.object || event.intersection.object.userData.isMovable))\n        event.intersection = undefined;\n    return event;\n};\n\nexport const makeMovable = (\n    api: Api,\n    target: Object3D,\n    callbackTarget: IMovable,\n) => {\n    const mixedTarget = <MovableMixin>target;\n    mixedTarget.userData.isMovable = true;\n\n    let active = false;\n    let dragSent = false;\n\n    const downCallback = event => {\n        event.origin = mixedTarget;\n        callbackTarget.dragStart(event);\n        if (!dragSent) api.eventDispatcher.dragStart(undefined);\n        dragSent = true;\n        active = true;\n    };\n\n    const moveCallback = (event: PointerInput) => {\n        if (active) {\n            (event as any).origin = mixedTarget;\n            callbackTarget.dragging(event);\n        }\n    };\n\n    const upCallback = (event: PointerInput) => {\n        if (active) {\n            (event as any).origin = mixedTarget;\n            callbackTarget.dragEnd(event);\n            active = false;\n            if (dragSent) api.eventDispatcher.dragEnd(undefined);\n            dragSent = false;\n        }\n    };\n\n    const button = MouseButton.left;\n    const touchCount = 1;\n\n    const options = {button, touchCount};\n    api.inputHandler.pointerDown$.pipe(\n        filter(allowInput(options)),\n        mergeMap(addIntersection(api.inputHandler.picker)),\n        filter(event => isMovable(event) && callbackTarget.selected && event.intersection.object === mixedTarget),\n        tap(downCallback),\n        switchMap(() =>\n            merge(api.inputHandler.pointerMove$.pipe(\n                mergeMap(addIntersection(api.inputHandler.picker)),\n                takeUntil(controlsReleased(api.inputHandler, options)),\n                map(removeSelf),\n                tap(moveCallback)\n            ),\n            api.inputHandler.pointerUp$.pipe(tap(upCallback))\n            ))).\n        subscribe();\n\n    return mixedTarget;\n};\n\nexport const makeMovableOnPlane = (\n    api: Api,\n    target: Object3D,\n    callbackTarget: IMovable,\n    plane?: Plane\n) => {\n    const mixedTarget = <MovableMixin>target;\n    mixedTarget.userData.isMovable = true;\n\n    let active = false;\n    let dragSent = false;\n\n    const prePlaned = !!plane;\n    plane = plane || new Plane();\n    const ray = new Ray();\n    const point = new Vector3();\n\n    const pickOnPlane = (event: PointerInput): PointerInput => {\n        screenPositionToRay(event, api.container, api.camera, ray);\n        ray.intersectPlane(plane, point);\n        event.intersection = { point: point } as IIntersection;\n        return event;\n    };\n\n    const downCallback = (event: PointerInput) => {\n        if (event.intersection.object === mixedTarget) {\n            (event as any).origin = mixedTarget;\n            if (!prePlaned) {\n                const normal = event.intersection.caster.ray.direction.clone().negate();\n                plane.setFromNormalAndCoplanarPoint(normal, event.intersection.point);\n            }\n            callbackTarget.dragStart(event);\n            if (!dragSent) api.eventDispatcher.dragStart(undefined);\n            dragSent = true;\n            active = true;\n        }\n    };\n\n    const moveCallback = (event: PointerInput) => {\n        if (active) {\n            (event as any).origin = mixedTarget;\n            callbackTarget.dragging(event);\n        }\n    };\n\n    const upCallback = (event: PointerInput) => {\n        if (active) {\n            (event as any).origin = mixedTarget;\n            callbackTarget.dragEnd(event);\n            active = false;\n            if (dragSent) api.eventDispatcher.dragEnd(undefined);\n            dragSent = false;\n        }\n    };\n\n    const button = MouseButton.left;\n    const touchCount = 1;\n\n    const options = {button, touchCount};\n    api.inputHandler.pointerDown$.pipe(\n        filter(allowInput(options)),\n        mergeMap(addIntersection(api.inputHandler.picker)),\n        filter(event => isMovable(event) && callbackTarget.selected && event.intersection.object === mixedTarget),\n        tap(downCallback),\n        switchMap(() =>\n            merge(api.inputHandler.pointerMove$.pipe(\n                takeUntil(controlsReleased(api.inputHandler, options)),\n                map(pickOnPlane),\n                tap(moveCallback),\n                ),\n                api.inputHandler.pointerUp$.pipe(\n                    map(pickOnPlane),\n                    tap(upCallback),\n                )))\n    ).subscribe();\n\n    return mixedTarget;\n};\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from '../../../build/three.module.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tdashOffset: { value: 0 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashOffset: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport { LineMaterial };\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from '../../../build/three.module.js';\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n","import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from '../../../build/three.module.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tdashOffset: { value: 0 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashOffset: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport { LineMaterial };\n","import {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from '../../../build/three.module.js';\nimport { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\nimport { LineMaterial } from '../lines/LineMaterial.js';\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// camera forward is negative\n\t\t\tvar near = - camera.near;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// skip the segment if it's entirely behind the camera\n\t\t\t\tvar isBehindCameraNear = start.z > near && end.z > near;\n\t\t\t\tif ( isBehindCameraNear ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// trim the segment if it extends behind camera near\n\t\t\t\tif ( start.z > near ) {\n\n\t\t\t\t\tconst deltaDist = start.z - end.z;\n\t\t\t\t\tconst t = ( start.z - near ) / deltaDist;\n\t\t\t\t\tstart.lerp( end, t );\n\n\t\t\t\t} else if ( end.z > near ) {\n\n\t\t\t\t\tconst deltaDist = end.z - start.z;\n\t\t\t\t\tconst t = ( end.z - near ) / deltaDist;\n\t\t\t\t\tend.lerp( start, t );\n\n\t\t\t\t}\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n","import {\n    Vector3,\n    WebGLRenderer,\n    Intersection,\n    Matrix4,\n    Ray,\n    LineSegments,\n    Frustum,\n    Line3,\n    InterleavedBufferAttribute,\n    Box3,\n    InterleavedBuffer,\n} from \"three\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport {Caster} from \"../Picker/Caster\";\nimport {LineSegments2} from \"three/examples/jsm/lines/LineSegments2\";\n\nexport class MeshLine extends LineSegments2 {\n    geometry: LineGeometry;\n    material: LineMaterial;\n\n    private _inverseMatrix = new Matrix4();\n    private _ray = new Ray();\n    private _frustum = new Frustum();\n    private _box = new Box3();\n    private vStart = new Vector3();\n    private vEnd = new Vector3();\n    private interPoint = new Vector3();\n    private segmentPoint = new Vector3();\n\n    constructor(geometry: LineGeometry, material: LineMaterial) {\n        super(geometry, material);\n        this.material = material;\n        material.dashed ? material.defines.USE_DASH = \"\": delete material.defines.USE_DASH;\n        this.onBeforeRender = (renderer: WebGLRenderer) => renderer.getSize(material.resolution);\n    }\n\n    update(vectors: Vector3[] | Float32Array): void {\n        let positions: Float32Array;\n\n        if (vectors instanceof Float32Array) {\n            positions = vectors\n        }\n        else {\n            const positionsAttribute = this.geometry.attributes.instanceEnd as InterleavedBufferAttribute;\n            positions = positionsAttribute ? positionsAttribute.data.array as Float32Array : undefined;\n            if (!positions || positions.length !== vectors.length * 3)\n                positions = new Float32Array(vectors.length * 3);\n            for (let i = 0; i < vectors.length; i++) vectors[i].toArray(positions, i * 3);\n        }\n\n        const instanceStartAttr = this.geometry.getAttribute(\"instanceStart\");\n        if (instanceStartAttr && instanceStartAttr.array.length !== positions.length * 2 - 6) {\n            // TODO: LineGeometry does not support resizing, this is a hackaround. Avoid this if possible\n            this.geometry = new LineGeometry();\n        }\n        this.geometry.setPositions(positions);\n        if (this.material.dashed) this.computeLineDistances();\n    }\n\n    onUpload( callback: () => void ): void {\n        const startBuffer = (this.geometry.attributes.instanceStart as InterleavedBufferAttribute).data as any as InterleavedBuffer;\n        (startBuffer as any).onUploadCallback = callback;\n        const endBuffer = (this.geometry.attributes.instanceEnd as InterleavedBufferAttribute).data as any as InterleavedBuffer;\n        (endBuffer as any).onUploadCallback = callback;\n    }\n\n    raycast(caster: Caster, intersects: Intersection[]): void {\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n\n        this._box.copy(geometry.boundingBox);\n        this._box.applyMatrix4(matrixWorld);\n\n        if (!caster.frustum.intersectsBox(this._box)) return;\n\n        this._inverseMatrix.copy(matrixWorld).invert();\n        this._ray.copy(caster.ray).applyMatrix4(this._inverseMatrix);\n        this._frustum.copy(caster.frustum);\n        for (const plane of this._frustum.planes) plane.applyMatrix4(this._inverseMatrix);\n\n        const step = (this && this instanceof LineSegments) ? 2 : 1;\n\n        const positions = (geometry.attributes.instanceEnd as InterleavedBufferAttribute).data.array;\n\n        for (let i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            this.vStart.fromArray(positions, 3 * i);\n            this.vEnd.fromArray(positions, 3 * i + 3);\n\n            if (!this.intersect(this._ray, this._frustum, this.vStart, this.vEnd, this.interPoint)) continue;\n\n            this.interPoint.applyMatrix4(this.matrixWorld);\n            const distance = caster.ray.origin.distanceTo(this.interPoint);\n            if (distance < caster.near || distance > caster.far) continue;\n\n            intersects.push({\n                distance: distance,\n                point: this.interPoint.clone(),\n                index: i,\n                object: this\n            });\n        }\n    }\n\n    private intersect(ray: Ray, frustum: Frustum, lineStart: Vector3, lineEnd: Vector3, target: Vector3): boolean {\n        ray.distanceSqToSegment(lineStart, lineEnd, target, this.segmentPoint);\n        return frustum.containsPoint(this.segmentPoint);\n    }\n}\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from '../../../build/three.module.js';\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n","import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {\n    Vector3,\n    SphereGeometry,\n    Mesh,\n    MeshBasicMaterial,\n    Box3, Color, BufferGeometry\n} from \"three\";\nimport {\n    makeMovable,\n    IMovable,\n    MovablePointerInput\n} from \"../CustomObjects/Mixins/MovableMixin\";\nimport { Markup } from \"./Markup\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { ITapMoveTap } from \"../Tools/TapMoveTool\";\nimport {MeshLine} from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport {SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\n\nexport class LineMarkup extends Markup implements ITapMoveTap, IMovable {\n    public startHandle: Mesh;\n    public endHandle: Mesh;\n\n    protected _line: MeshLine;\n    protected _handleMaterial: MeshBasicMaterial;\n    protected _lineMaterial: LineMaterial;\n\n    startPick: SnapPick;\n    endPick: SnapPick;\n\n    constructor(\n        name: string, color: Color,\n        protected _api: Api,\n        protected _startGeometry: BufferGeometry = new SphereGeometry(0.3),\n        protected _endGeometry: BufferGeometry = _startGeometry\n    ) {\n        super(name, _api);\n        this._handleMaterial = new MeshBasicMaterial({ depthTest: false, depthWrite: false, transparent: true });\n        this._lineMaterial = new LineMaterial({ linewidth: 2, depthTest: false, depthWrite: false, transparent: true });\n        this.boundingBox = new Box3();\n\n        this.coloredMaterials.push(this._handleMaterial, this._lineMaterial);\n        this.createLine();\n        this.color = color;\n    }\n\n    protected makeMovable(): void {\n        makeMovable(this._api, this.startHandle, this);\n        makeMovable(this._api, this.endHandle, this);\n    }\n\n    protected init(start: Vector3): void {\n        this.position.copy(start);\n        this.updateMatrixWorld(false);\n\n        this.startHandle = createScreenStaticSizeMesh(this._startGeometry, this._handleMaterial, this._api);\n        this.endHandle = createScreenStaticSizeMesh(this._endGeometry, this._handleMaterial, this._api);\n\n        this.makeMovable();\n\n        this.add(this.startHandle);\n        this.add(this.endHandle);\n        this.updateLine(this.startHandle.position, this.endHandle.position);\n    }\n\n    public start(startPick: SnapPick): void {\n        this.startPick = startPick;\n        this.init(startPick.point);\n    }\n\n    public update(endPick: SnapPick): void {\n        this.endPick = endPick;\n        const localPosition = this.worldToLocal(endPick.point.clone());\n\n        this.endHandle.position.copy(localPosition);\n        this.updateLine(this.startHandle.position, this.endHandle.position);\n        this.endHandle.visible = false;\n        this._api.renderingManager.redraw();\n    }\n\n    public end(): void {\n        this.showHandles(this.selected);\n        this.updateBoundingBox();\n        this.dispatchModifiedEvent();\n    }\n\n    protected createLine(): void {\n        this._line = new MeshLine(new LineGeometry(), this._lineMaterial);\n        this._line.renderOrder = 1;\n        this.add(this._line);\n    }\n\n    protected updateLine(start: Vector3, end: Vector3): void {\n        this._line.update([start, end]);\n    }\n\n    public dragStart(event: MovablePointerInput): void {\n        if (this._api.cursor) {\n            this._api.cursor.subscribe();\n        }\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = false;\n        } else {\n            this.endHandle.visible = false;\n        }\n    }\n\n    public dragging(event: MovablePointerInput): void {\n        if (this.selected && this._api.cursor.intersection) {\n            const localPosition = this.worldToLocal(this._api.cursor.intersection.point.clone());\n            if (event.origin === this.startHandle) {\n                this.startPick = this._api.cursor.intersection;\n                this.startHandle.position.copy(localPosition);\n            }\n            else{\n                this.endPick = this._api.cursor.intersection;\n                this.endHandle.position.copy(localPosition);\n            }\n            this.updateLine(this.startHandle.position, this.endHandle.position);\n            this.updateBoundingBox();\n            this._api.renderingManager.redraw();\n        }\n    }\n\n    public dragEnd(event: MovablePointerInput): void {\n        this.updateBoundingBox();\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = true;\n        } else {\n            this.endHandle.visible = true;\n        }\n        this._api.cursor.unsubscribe();\n        this.dispatchModifiedEvent();\n    }\n\n    select(): void {\n        super.select();\n        this.activeCallback();\n    }\n\n    deselect(): void {\n        super.deselect();\n        this.activeCallback();\n    }\n\n    protected showHandles(value: boolean): void {\n        this.startHandle.visible = value;\n        if (this.endHandle)\n            this.endHandle.visible = value;\n    }\n\n    protected activeCallback(): void {\n        this.showHandles(this.selected);\n    }\n\n    public cancel(): void {\n        if (this.parent)\n            this.parent.remove(this);\n        this.dispose();\n    }\n}\n","import {Key} from \"ts-key-enum\";\nimport {Cursor3D} from \"@technology/webgl-viewer/dist/esnext/Picker/Cursor3D\";\nimport {SnappingTool, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {InputHandler} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\n\nexport abstract class MarkupTool implements SnappingTool {\n    name: string;\n    enabled: boolean;\n    protected cursor: Cursor3D;\n    private keySubscription: Subscription;\n    onFinished?: () => void;\n    onCanceled?: () => void;\n\n    constructor(protected inputHandler: InputHandler) {\n    }\n\n    get allowedSnapTypes(): SnapType[] {\n        return [SnapType.POINT, SnapType.LINE, SnapType.FACE];\n    }\n\n    private _snapTypes: SnapType[] = this.allowedSnapTypes;\n\n    get snapTypes(): SnapType[] {\n        return this._snapTypes;\n    }\n\n    set snapTypes(value: SnapType[]) {\n        this._snapTypes = value;\n        if (this.enabled) this.cursor.snapTypes = value;\n    }\n\n    protected onEnabled(): void {\n        this.cursor.snapTypes = this.snapTypes;\n        this.keySubscription = this.inputHandler.keyDown$.subscribe((e: KeyboardEvent) => {\n            if (e.code === Key.Escape) {\n                e.preventDefault();\n                this.cancel();\n            }\n        });\n    }\n\n    protected onEnd(): void {\n        if (this.keySubscription) this.keySubscription.unsubscribe();\n        if (this.enabled && this.onFinished) {\n            this.cursor.snapTypes = [SnapType.POINT, SnapType.LINE, SnapType.FACE];\n            this.onFinished();\n        }\n    }\n\n    protected cancel(): void {\n        if (this.keySubscription) this.keySubscription.unsubscribe();\n        if (this.enabled && this.onCanceled) {\n            this.cursor.snapTypes = [SnapType.POINT, SnapType.LINE, SnapType.FACE];\n            this.onCanceled();\n        }\n    }\n}\n","import {MarkupTool} from \"./MarkupTool\";\nimport {SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Markup} from \"../Markups/Markup\";\n\nexport interface ITapMoveTap {\n    start(intersection: SnapPick): void;\n    update?(intersection: SnapPick): void;\n    end(): void;\n    cancel(): void;\n}\n\nexport abstract class TapMoveTool extends MarkupTool {\n    protected _name: string;\n    protected object: ITapMoveTap;\n    protected finished: boolean = true;\n\n    get name(): string {\n        return this._name;\n    }\n\n    protected abstract _createMarkup(): ITapMoveTap & Markup;\n\n    protected onStart(intersection: SnapPick): void {\n        this.finished = false;\n        this.object = this._createMarkup();\n        this.object.start(intersection);\n    }\n\n    protected onMove(intersection: SnapPick): void {\n        if (this.object && intersection)\n            this.object.update(intersection);\n    }\n\n    protected onEnd(): void {\n        this.finished = true;\n        if (this.object) {\n            this.object.end();\n            this.object = undefined;\n        }\n        super.onEnd();\n    }\n\n    protected cancel(): void {\n        super.cancel();\n        this.finished = true;\n        if (this.object) this.object.cancel();\n        this.object = undefined;\n    }\n\n    abstract get enabled(): boolean;\n    abstract set enabled(enabled: boolean);\n}\n","import {\n    PointerObservableOptions,\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\nimport {Color} from \"three\";\nimport { Observable, Subscription } from \"rxjs\";\nimport {ITapMoveTap, TapMoveTool} from \"./TapMoveTool\";\nimport {MouseButton, SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {Markup} from \"../Markups/Markup\";\n\nexport abstract class TapMoveTapTool<T extends ITapMoveTap & Markup> extends TapMoveTool {\n    private subscription: Subscription;\n    private observable: Observable<any>;\n\n    constructor(name: string, protected api: Api, protected markupSettings: MarkupSettings) {\n        super(api.inputHandler);\n        this._name = name;\n        this.cursor = api.cursor;\n\n        const options = {\n            button: MouseButton.left,\n            touchCount: 1\n        } as PointerObservableOptions;\n\n        this.observable = api.inputHandler.createTapObservable(options);\n    }\n\n    set enabled(enabled: boolean) {\n\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n            this.cursor.unsubscribe();\n            if (!this.finished && this.object) {\n                this.object.cancel();\n                this.object = null;\n            }\n        }\n        if (!enabled) return;\n\n        this.subscription = this.observable.subscribe(async e => {\n            if (!this.object) { // first tap\n                if (e.isTouch) await this.cursor.calculateIntersection(e, true);\n                if (this.cursor.intersection)\n                    this.onStart(this.cursor.intersection);\n            }\n            else { // second tap\n                if (e.isTouch) await this.cursor.calculateIntersection(e, true);\n                if (this.cursor.intersection) {\n                    this.onMove(this.cursor.intersection);\n                    this.onEnd();\n                }\n            }\n        });\n        this.cursor.subscribe(() => this.onMove(this.cursor.intersection));\n        this.onEnabled();\n    }\n\n    get enabled(): boolean {\n        return !!this.subscription;\n    }\n\n    add(start: SnapPick, end: SnapPick, color?: Color): T {\n        const m = this._createMarkup();\n        if (color !== undefined) m.color = color;\n        m.start(start);\n        m.update(end);\n        m.end();\n        return m as T;\n    }\n}\n","import { LineMarkup } from \"../Markups/LineMarkup\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { Model } from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport { TapMoveTapTool } from \"./TapMoveTapTool\";\nimport {MarkupSettings} from \"../MarkupSettings\";\n\nexport class LineMarkupTool extends TapMoveTapTool<LineMarkup> {\n    static get Name(): string { return \"lineMarkup\" };\n\n    constructor(api: Api, private model: Model, markupSettings: MarkupSettings) {\n        super(LineMarkupTool.Name, api, markupSettings);\n    }\n\n    protected _createMarkup(): LineMarkup {\n        const markup = new LineMarkup(this.name, this.markupSettings.color, this.api);\n        this.model.add(markup);\n        return markup;\n    };\n}\n","import {\n    PointerObservableOptions,\n    PointerInput,\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\nimport {Ray, Plane, Vector3, Color} from \"three\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport {tap, take, map, switchMap, takeUntil} from \"rxjs/operators\";\nimport { Observable, Subscription } from \"rxjs\";\nimport {ITapMoveTap, TapMoveTool} from \"./TapMoveTool\";\nimport { screenPositionToRay } from \"@technology/webgl-viewer/dist/esnext/Picker/Picker\";\nimport { MarkupModel } from \"../MarkupModel\";\nimport {MouseButton, SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {Markup} from \"../Markups/Markup\";\n\nexport abstract class TapMoveTapOnPlaneTool<T extends ITapMoveTap & Markup> extends TapMoveTool {\n    protected handle: Subscription;\n    protected tap$: Observable<PointerInput>;\n    protected tap2$: Observable<PointerInput>;\n    protected plane = new Plane();\n    protected options = {\n        button: MouseButton.left,\n        touchCount: 1\n    } as PointerObservableOptions;\n\n    constructor(name: string, protected api: Api, protected model: MarkupModel, protected markupSettings: MarkupSettings) {\n        super(api.inputHandler);\n        this._name = name;\n        this.cursor = api.cursor;\n\n        this.tap$ = api.inputHandler.createSnappedTapObservable(api.cursor, this.options);\n        this.tap2$ = api.inputHandler.createTapObservable(this.options);\n    }\n\n    set enabled(enabled: boolean) {\n        if (this.handle) {\n            this.handle.unsubscribe();\n            this.handle = null;\n            this.cursor.unsubscribe();\n            if (!this.finished && this.object) {\n                this.object.cancel();\n                this.object = null;\n            }\n        }\n        if (!enabled) return;\n\n        this.handle = this.tap$\n            .pipe(\n                take(1),\n                tap(() => {\n                        this.plane.setFromNormalAndCoplanarPoint(\n                            this.cursor.intersection.caster.ray.direction.clone().negate(),\n                            this.cursor.intersection.point\n                        );\n                        this.onStart(this.cursor.intersection);\n                    }\n                ),\n                switchMap((e) => {\n                    this.cursor.unsubscribe();\n                    if (e.isTouch) {\n                        return this.tap2$.pipe(\n                            map(this.intersectPlane),\n                            tap(e => {\n                                this.onMove(e);\n                                this.onEnd();\n                            })\n                        )\n                    }\n                    else {\n                        return this.api.inputHandler.pointerMove$.pipe(\n                            map(this.intersectPlane),\n                            tap(e => this.onMove(e)),\n                            takeUntil(\n                                this.tap2$.pipe(\n                                    map(this.intersectPlane),\n                                    tap(() => this.onEnd())\n                                )\n                            )\n                        )\n                    }\n                })\n            )\n            .subscribe();\n\n        this.cursor.subscribe();\n        this.onEnabled();\n    }\n\n    private intersectPlane = (() => {\n        const ray = new Ray();\n        const point = new Vector3();\n\n        return (event):IIntersection => {\n            screenPositionToRay(event, this.api.inputHandler.container, this.api.camera, ray);\n            ray.intersectPlane(this.plane, point);\n            return { id: null, object: null, model: null, point: point.clone() };\n        };\n    })();\n\n    get enabled(): boolean {\n        return !!this.handle;\n    }\n\n    add(startPick: SnapPick, endPick: SnapPick, color?: Color): T {\n        const m = this._createMarkup();\n        if (color !== undefined) m.color = color;\n        m.start(startPick);\n        m.update(endPick);\n        m.end();\n        return m as T;\n    }\n}\n","import { LineMarkup } from \"./LineMarkup\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {Color, SphereGeometry, Vector3} from \"three\";\nimport { makeMovableOnPlane, makeMovable, MovablePointerInput } from \"../CustomObjects/Mixins/MovableMixin\";\nimport {createArrowGeometry} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\n\nexport class ArrowMarkup extends LineMarkup {\n    private _tmp = new Vector3();\n\n    constructor(name: string, color: Color, api: Api) {\n        super(name, color, api, createArrowGeometry(1.2), new SphereGeometry(0.3));\n    }\n\n    protected makeMovable(): void {\n        makeMovable(this._api, this.startHandle, this);\n        makeMovableOnPlane(this._api, this.endHandle, this);\n    }\n\n    protected updateLine(start: Vector3, end: Vector3): void {\n        super.updateLine(start, end);\n        this.startHandle.lookAt(this.endHandle.getWorldPosition(this._tmp));\n    }\n\n    protected showHandles(value: boolean): void {\n        super.showHandles(value);\n        this.startHandle.visible = true;\n        this.endHandle.visible = value;\n    }\n\n    public dragStart(event: MovablePointerInput): void {\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = false;\n            if (this._api.cursor) {\n                this._api.cursor.subscribe();\n            }\n        } else {\n            this.endHandle.visible = false;\n        }\n    }\n\n    public dragging(event: MovablePointerInput): void {\n        if (!(this.selected && event.origin))\n            return;\n\n        if (event.origin === this.startHandle) {\n            if (this._api.cursor.intersection) {\n                const localPosition = this.worldToLocal(this._api.cursor.intersection.point.clone());\n                this.startPick = this._api.cursor.intersection;\n                this.startHandle.position.copy(localPosition);\n            } else\n                return;\n        }\n        else{\n            if (event.intersection) {\n                const localPosition = this.worldToLocal(event.intersection.point);\n                this.endPick = event.intersection;\n                this.endHandle.position.copy(localPosition);\n            } else\n                return;\n        }\n\n        this.updateLine(this.startHandle.position, this.endHandle.position);\n        this.updateBoundingBox();\n        this._api.renderingManager.redraw();\n    }\n\n    public dragEnd(event: MovablePointerInput): void {\n        this.updateBoundingBox();\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = true;\n        } else {\n            this.endHandle.visible = true;\n        }\n        this._api.cursor.unsubscribe();\n        this.dispatchModifiedEvent();\n    }\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { TapMoveTapOnPlaneTool } from \"./TapMoveTapOnPlaneTool\";\nimport { ArrowMarkup } from \"../Markups/ArrowMarkup\";\nimport { MarkupModel } from \"../MarkupModel\";\nimport {MarkupSettings} from \"../MarkupSettings\";\n\nexport class ArrowMarkupTool extends TapMoveTapOnPlaneTool<ArrowMarkup> {\n    static get Name(): string { return \"arrowMarkup\" };\n\n    constructor(api: Api, model: MarkupModel, markupSettings: MarkupSettings) {\n        super(ArrowMarkupTool.Name, api, model, markupSettings);\n    }\n\n    protected _createMarkup(): ArrowMarkup {\n        const markup = new ArrowMarkup(this.name, this.markupSettings.color, this.api);\n        this.model.add(markup);\n        return markup;\n    }\n}\n","import {\n    PointerObservableOptions,\n    InputHandler,\n    PointerInput\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\nimport { Plane } from \"three\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport {tap} from \"rxjs/operators\";\nimport { Cursor3D } from \"@technology/webgl-viewer/dist/esnext/Picker/Cursor3D\";\nimport { Observable, Subscription } from \"rxjs\";\nimport {MarkupTool} from \"./MarkupTool\";\nimport {MouseButton} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Markup} from \"../Markups/Markup\";\n\nexport interface ITap {\n    insert(intersection: IIntersection): void;\n}\n\nexport abstract class TapTool extends MarkupTool {\n    protected _name: string;\n    protected handle: Subscription;\n    protected tap$: Observable<PointerInput>;\n    protected plane = new Plane();\n\n    protected options = {\n        button: MouseButton.left,\n        touchCount: 1\n    } as PointerObservableOptions;\n\n    get name(): string {\n        return this._name;\n    }\n\n    protected abstract _createMarkup(): ITap & Markup;\n\n    constructor(name: string, protected inputs: InputHandler, cursor: Cursor3D) {\n        super(inputs);\n        this._name = name;\n        this.cursor = cursor;\n        this.tap$ = inputs.createSnappedTapObservable(cursor, this.options);\n    }\n\n    async tap(event: PointerInput): Promise<void> {\n        const object = this._createMarkup();\n        object.insert(event.intersection);\n        this.onEnd();\n    }\n\n    set enabled(enabled: boolean) {\n        if (this.handle) {\n            this.handle.unsubscribe();\n            this.handle = null;\n            this.cursor.unsubscribe();\n        }\n        if (!enabled) return;\n\n        this.handle = this.tap$.pipe(\n            tap(e => this.tap(e))\n        ).subscribe();\n        this.cursor.subscribe();\n        this.onEnabled();\n    }\n\n    get enabled(): boolean {\n        return !!this.handle;\n    }\n}\n","import { Vector3 } from \"three\";\nimport {MeshLine} from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\n\nexport class CloudShape extends MeshLine {\n    public updateShape(width: number, height: number): void {\n        this.update(cloudPoints(width, height));\n    }\n}\n\nconst cloudPoints = (width: number, height: number) => {\n    const translatePoints = (points: Vector3[], width: number, height: number) => {\n        const x = 578.81836 / 2 + 65;\n        const y = 486.67773 / 2 + 55;\n\n        const xMultiplier = 240;\n        const yMultiplier = 190;\n\n        let maxX = 0;\n        let maxY = 0;\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            maxX = Math.max(p.x, maxX);\n            maxY = Math.max(p.y, maxY);\n\n            const newX = (p.x - x) / (xMultiplier / width);\n            const newY = (p.y - y) / (yMultiplier / height);\n\n            p.set(newX, newY, 0);\n        }\n    };\n    const points = getPoints();\n    translatePoints(points, width, height);\n\n    return points;\n};\n\nconst getPoints = () => {\n    return [\n        new Vector3(360.11914, 112.91992),\n        new Vector3(324.158923467, 118.111793265),\n        new Vector3(292.252606325, 132.707124564),\n        new Vector3(266.46070852, 155.375163582),\n        new Vector3(248.84375, 184.78516),\n        new Vector3(225.573005953, 187.564686143),\n        new Vector3(203.992424299, 194.006147247),\n        new Vector3(184.536777636, 203.718833168),\n        new Vector3(167.640838557, 216.312033763),\n        new Vector3(153.739379659, 231.395038887),\n        new Vector3(143.267173536, 248.577138397),\n        new Vector3(136.658992785, 267.467622149),\n        new Vector3(134.34961, 287.67578),\n        new Vector3(137.262200495, 310.264888292),\n        new Vector3(145.703333349, 331.510628581),\n        new Vector3(159.268874528, 350.670977081),\n        new Vector3(177.55469, 367.00391),\n        new Vector3(166.560848824, 386.416049052),\n        new Vector3(162.75977, 407.378910004),\n        new Vector3(164.830013084, 423.131271689),\n        new Vector3(170.767586993, 437.803077714),\n        new Vector3(180.162727123, 451.08002049),\n        new Vector3(192.605668873, 462.647792427),\n        new Vector3(207.686647638, 472.192085937),\n        new Vector3(224.995898816, 479.398593429),\n        new Vector3(244.123657805, 483.953007313),\n        new Vector3(264.66016, 485.54102),\n        new Vector3(302.10156875, 480.039840271),\n        new Vector3(334.28711, 464.36914),\n        new Vector3(368.304774234, 480.911489076),\n        new Vector3(406.58594, 486.67773),\n        new Vector3(429.454321646, 484.679781835),\n        new Vector3(451.235395655, 478.834773416),\n        new Vector3(471.317092719, 469.366596533),\n        new Vector3(489.08734353, 456.499142976),\n        new Vector3(503.657759454, 440.805874426),\n        new Vector3(514.37898362, 423.071344558),\n        new Vector3(520.997494357, 403.836083155),\n        new Vector3(523.25977, 383.64062),\n        new Vector3(522.3125, 371.59961),\n        new Vector3(545.653344192, 356.642784942),\n        new Vector3(563.452733046, 336.239434903),\n        new Vector3(574.808470377, 311.777889913),\n        new Vector3(578.81836, 284.64648),\n        new Vector3(576.928049429, 265.837169463),\n        new Vector3(571.398187577, 247.922181565),\n        new Vector3(562.440589575, 231.404935693),\n        new Vector3(550.267070557, 216.788851232),\n        new Vector3(535.420156425, 204.80461725),\n        new Vector3(518.642075641, 195.986323635),\n        new Vector3(500.444197176, 190.54249101),\n        new Vector3(481.33789, 188.68164),\n        new Vector3(473.00781, 189.09375),\n        new Vector3(465.757398952, 172.807193423),\n        new Vector3(455.985311066, 158.074572097),\n        new Vector3(429.999074056, 134.028880594),\n        new Vector3(397.295037518, 118.472166294),\n        new Vector3(360.11914, 112.91992)\n    ];\n};\n","import {\n    Object3D,\n    Color,\n    Vector3,\n    SphereGeometry,\n    MeshBasicMaterial, Mesh, BufferGeometry,\n} from \"three\";\nimport {\n    IMovable,\n    MovablePointerInput,\n    makeMovableOnPlane\n} from \"../CustomObjects/Mixins/MovableMixin\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { CloudShape } from \"./CloudShape\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport { Markup } from \"./Markup\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { ITap } from \"../Tools/TapTool\";\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\nimport {WVCamera} from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\n\nexport class CloudMarkup extends Markup implements ITap, IMovable {\n    private _camera: WVCamera;\n    public normal: Vector3;\n    public width: number;\n    public height: number;\n\n    private _edgeHandlesMap: Map<Object3D, { i: number; j: number }> = new Map();\n    private _cloudShape: CloudShape;\n\n    private _handleMaterial = new MeshBasicMaterial({ depthTest: false, depthWrite: false, transparent: true });\n    private _cloudMaterial: any;\n\n    constructor(name: string, color: Color, _api: Api, private _centerGeometry: BufferGeometry = new SphereGeometry(0.5)) {\n        super(name, _api);\n\n        this._camera = _api.camera;\n        this._cloudMaterial = new LineMaterial({ linewidth: 2, depthTest: false, depthWrite: false, transparent: true });\n        this.coloredMaterials.push(this._handleMaterial, this._cloudMaterial);\n        this.color = color;\n    }\n\n    init(position: Vector3, normal: Vector3, width: number, height: number): void {\n        this.position.copy(position);\n        this.normal = normal;\n        this.width = width;\n        this.height = height;\n\n        this.createEdgeHandles(this.width, this.height);\n        this._cloudShape = new CloudShape(new LineGeometry(), this._cloudMaterial);\n        this._cloudShape.renderOrder = 1;\n        this.add(this._cloudShape);\n\n        this.updateCloud();\n        this.showHandles(false);\n\n        this.lookAt(this.position.clone().add(this.normal));\n        this.updateBoundingBox();\n\n        this._api.renderingManager.redraw();\n    }\n\n    public insert(intersection: IIntersection): void {\n        const position = intersection.point;\n        const api = this._api;\n        const scale = api.camera.getProjectionCompensatingScale(position.distanceTo(api.camera.position));\n        const width = 4 * scale;\n        const height = 3 * scale;\n\n        this.init(position, intersection.normal, width, height);\n    }\n\n    private createEdgeHandles(width: number, height: number): void {\n        const geometry = new SphereGeometry(0.3);\n\n        for (let i = -1; i <= 1; i++) {\n            for (let j = -1; j <= 1; j++) {\n                const position = new Vector3(i * width, j * height);\n                const handle = createScreenStaticSizeMesh(geometry, this._handleMaterial, this._api);\n                handle.position.copy(position);\n\n                this._edgeHandlesMap.set(handle, { i, j });\n                this.add(handle);\n                makeMovableOnPlane(this._api, handle, this);\n\n                if (i === 0 && j === 0)\n                    handle.geometry = this._centerGeometry;\n            }\n        }\n    }\n\n    private updateHandlePositions(): void {\n        for (const keyPair of this._edgeHandlesMap.entries()) {\n            const handle = keyPair[0];\n            const normal = keyPair[1];\n\n            handle.position.copy(new Vector3(normal.i * this.width, normal.j * this.height));\n        }\n    }\n\n    private updateCloud(): void {\n        this._cloudShape.updateShape(this.width, this.height);\n        this.updateHandlePositions();\n        this.updateBoundingBox();\n    }\n\n    public dragStart(event: MovablePointerInput): void {\n    }\n\n    public dragging(event: MovablePointerInput): void {\n        if (event.origin.visible && (event.origin as Mesh).geometry === this._centerGeometry) {\n            event.origin.visible = false;\n            this._api.cursor.subscribe();\n        }\n\n        const normal = this._edgeHandlesMap.get(event.origin);\n        const localPosition = this.worldToLocal(event.intersection.point.clone());\n        const v = new Vector3(\n            Math.abs(normal.i * localPosition.x),\n            Math.abs(normal.j * localPosition.y)\n        );\n\n        if (v.x !== 0) {\n            this.width = v.x;\n        }\n        if (v.y !== 0) {\n            this.height = v.y;\n        }\n\n        if (v.x === 0 && v.y === 0) {\n            if (this._api.cursor.intersection) {\n                this.position.copy(this._api.cursor.intersection.point);\n                this.normal.copy(this._api.cursor.intersection.normal);\n                this.lookAt(this.position.clone().add(this.normal));\n            }\n        } else {\n            this.updateCloud();\n        }\n\n        this._api.renderingManager.redraw();\n    }\n\n    public dragEnd(event: MovablePointerInput): void {\n        this._api.cursor.unsubscribe();\n        this.updateBoundingBox();\n        event.origin.visible = true;\n        this.dispatchModifiedEvent();\n    }\n\n    select(): void {\n        super.select();\n        this.activeCallback();\n    }\n\n    deselect(): void {\n        super.deselect();\n        this.selected = false;\n        this.activeCallback();\n    }\n\n    protected showHandles(value: boolean): void {\n        for (const handle of this._edgeHandlesMap.keys()) {\n            handle.visible = value;\n        }\n    }\n\n    public activeCallback(): void {\n        this.showHandles(this.selected);\n        if (this.selected) this._api.renderingManager.redraw();\n    }\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { Model } from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport { TapTool } from \"./TapTool\";\nimport { CloudMarkup } from \"../Markups/CloudMarkup\";\nimport { MarkupSettings } from \"../MarkupSettings\";\nimport {SnapPick, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Color} from \"three\";\n\nexport class CloudMarkupTool extends TapTool {\n    static get Name(): string { return \"cloudMarkup\" };\n\n    get allowedSnapTypes(): SnapType[] {\n        return [SnapType.FACE];\n    }\n\n    constructor(private api: Api, private model: Model, private markupSettings: MarkupSettings) {\n        super(CloudMarkupTool.Name, api.inputHandler, api.cursor);\n        this.snapTypes = [SnapType.FACE];\n    }\n\n    protected _createMarkup(): CloudMarkup {\n        const markup = new CloudMarkup(this.name, this.markupSettings.color, this.api);\n        this.model.add(markup);\n        return markup;\n    }\n\n    add(pick: SnapPick, width: number, height: number, color?: Color): CloudMarkup {\n        const m = this._createMarkup() as CloudMarkup;\n        if (color !== undefined) m.color = color;\n        m.init(pick.point, pick.normal, width, height);\n        return m;\n    }\n}\n","import { worldToScreenPoint } from \"../Picker/Picker\";\nimport {Vector3, Matrix4} from \"three\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\n\nexport abstract class StickyElement extends HTMLElement {\n    matrix: Matrix4;\n    private readonly _originalPosition: Vector3;\n\n    static get is(): string {\n        return \"sticky-element\";\n    }\n\n    public visible = true;\n\n    private static delta = -0.01;\n\n    private _currentAlign = new Vector3();\n\n    constructor(\n        protected camera: WVCamera,\n        public position: Vector3,\n        public adjustAlign?: (pos: Vector3) => void\n    ) {\n        super();\n        this.style.position = \"absolute\";\n        this.style.zIndex = \"1\";\n        this.style.left = this._currentAlign.x + \"px\";\n        this.style.top = this._currentAlign.y + \"px\";\n        this.style.willChange = \"transform\";\n\n        this._originalPosition = position.clone();\n    }\n\n    get height(): number {\n        return this.clientHeight;\n    }\n\n    get width(): number {\n        return this.clientWidth;\n    }\n\n    private applyMatrix4(): void {\n        if (!this.matrix) return;\n\n        this.position.copy(this._originalPosition);\n        this.position.applyMatrix4(this.matrix);\n    }\n\n    updatePosition(canvas: ClientRect): void {\n        this.applyMatrix4();\n\n        const screenPoint = worldToScreenPoint(\n            this.position,\n            this.camera,\n            canvas.width,\n            canvas.height\n        );\n\n        if (!this.visible || !screenPoint) {\n            this.style.display = \"none\";\n            return;\n        } else {\n            this._currentAlign.copy(screenPoint);\n            if (this.adjustAlign)\n                this.adjustAlign(this._currentAlign);\n\n            if (this._currentAlign.x >= StickyElement.delta &&\n                this._currentAlign.x <= canvas.right - StickyElement.delta &&\n                this._currentAlign.y >= StickyElement.delta &&\n                this._currentAlign.y <= canvas.bottom - StickyElement.delta\n            ) {\n                if (this.style.display !== \"block\")\n                    this.style.display = \"block\";\n                this.style.transform = `translate3d(${this._currentAlign.x}px,${this._currentAlign.y}px,${this._currentAlign.z}px)`;\n            } else {\n                if (this.style.display !== \"none\")\n                    this.style.display = \"none\";\n            }\n        }\n    }\n}\n\n","import { Color, Vector3 } from \"three\";\nimport { StickyElement } from \"@technology/webgl-viewer/dist/esnext/CustomObjects/StickyElement\";\nimport { distanceFormatter, positionFormatter } from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport { WVCamera } from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\nimport {CustomLengthFormatter, LengthUnit} from \"@technology/webgl-viewer/dist/esnext/common\";\n\nconst stopImmediatePropagation = (event: MouseEvent) => {\n    event.stopImmediatePropagation();\n};\n\nexport interface PositionElementOptions {\n    color: Color;\n    lengthUnit: LengthUnit;\n    customLengthFormatter: CustomLengthFormatter;\n    decimals: number;\n}\n\nexport class PositionElement extends StickyElement {\n    static get is(): string {\n        return \"position-element\";\n    }\n\n    private _text: string;\n    private _position: Vector3;\n    private _formatter: CustomLengthFormatter;\n\n    constructor(\n        _camera: WVCamera,\n        _position: Vector3,\n        options: PositionElementOptions\n    ) {\n        super(_camera, _position, (pos: Vector3) => {\n            pos.y = pos.y - this.height / 2;\n            pos.x = pos.x + this.height;\n        });\n\n        this.spellcheck = false;\n        this.style.userSelect = \"none\";\n        this.style.webkitUserSelect = \"none\";\n        this.style.pointerEvents = \"none\";\n        this.style.background = \"white\";\n        this.style.borderRadius = \"2px\";\n        this.style.padding = \"0px 3px\";\n        this.style.fontFamily = '\"Open Sans\", sans-serif';\n        this.style.overflow = \"hidden\";\n        this.style.fontSize = \"1em\";\n        this.style.boxShadow = \"0rem 0rem 0.06rem rgba(54,53,69,0.2), 0.12rem 0.12rem 0.5rem rgba(54,53,69,0.30)\";\n\n        this.hidden = true;\n\n        if(options.lengthUnit === LengthUnit.custom){\n            this._formatter = options.customLengthFormatter;\n        }\n        else{\n            this._formatter = distanceFormatter(options.lengthUnit, options.decimals);\n        }\n    }\n\n    set borderColor(color: Color) {\n        this.style.borderColor = `#${color.getHexString()}`;\n    }\n\n    public get text() {\n        return this._text;\n    }\n\n    public set text(text: string) {\n        this._text = text;\n        this.innerText = text;\n    }\n\n    public update(start: Vector3):void {\n\n        this._position = start;\n\n        this.text = positionFormatter(start, this._formatter);\n\n        this.position.copy(start);\n        this.hidden = false;\n    }\n\n    public updateText(options: PositionElementOptions ): void {\n        if(options.lengthUnit === LengthUnit.custom){\n            this._formatter = options.customLengthFormatter;\n        }\n        else{\n            this._formatter = distanceFormatter(options.lengthUnit, options.decimals);\n        }\n\n        this.text = positionFormatter(this._position, this._formatter);\n    }\n\n    updatePosition(canvas: ClientRect) {\n        super.updatePosition(canvas);\n\n        if (this.hidden) {\n            this.style.display = \"none\";\n        }\n    }\n\n    connectedCallback() {\n        this.addEventListener(\"mousemove\", stopImmediatePropagation);\n        this.addEventListener(\"mousedown\", stopImmediatePropagation);\n    }\n\n    disconnectedCallback() {\n        this.removeEventListener(\"mousemove\", stopImmediatePropagation);\n        this.removeEventListener(\"mousedown\", stopImmediatePropagation);\n    }\n}\n\n// Using eval to allow code to be removed by tree-shaking during build\n// tslint:disable-next-line:no-eval\neval(\"if (window.customElements && typeof PositionElement !== 'undefined') window.customElements.define(PositionElement.is, PositionElement)\");\n","import {\n    Vector3,\n    SphereGeometry,\n    MeshBasicMaterial,\n    Mesh, Color, BufferGeometry\n} from \"three\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\n\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport { Markup } from \"./Markup\";\nimport { WVCamera } from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\nimport { ITap } from \"../Tools/TapTool\";\nimport { PositionElement, PositionElementOptions } from \"./PositionElement\";\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\n\nexport class PointMarkup extends Markup implements ITap {\n    private _camera: WVCamera;\n    private _handleMaterial = new MeshBasicMaterial({ depthTest: false, depthWrite: false, transparent: true });\n    private handle: Mesh;\n\n    private _textElement: PositionElement;\n    private _positionElementOptions: PositionElementOptions;\n\n    constructor(name: string, color: Color, _api: Api, private _centerGeometry: BufferGeometry = new SphereGeometry(0.5)) {\n        super(name, _api);\n\n        this._camera = _api.camera;\n\n        this.coloredMaterials.push(this._handleMaterial);\n        this.color = color;\n        this.updateAllPositionText();\n        this._api.settingsDispatcher.subscribe(\"lengthUnit\", () => this.updateAllPositionText());\n        this._api.settingsDispatcher.subscribe(\"decimals\", () => this.updateAllPositionText());\n        this._api.settingsDispatcher.subscribe(\"customLengthFormatter\", () => this.updateAllPositionText());\n    }\n\n    init(position: Vector3): void {\n        this.position.copy(position);\n\n        this.handle = createScreenStaticSizeMesh(this._centerGeometry, this._handleMaterial, this._api);\n        this.add(this.handle);\n        this.updatePositionText(position);\n\n        this.updateBoundingBox();\n\n        this._api.renderingManager.redraw();\n    }\n\n    public insert(intersection: IIntersection): void {\n        const position = intersection.point;\n        this.init(position);\n    }\n\n    select(): void {\n        super.select();\n        this.activeCallback();\n    }\n\n    deselect(): void {\n        super.deselect();\n        this.activeCallback();\n    }\n\n    public dispose(): void {\n        super.dispose();\n        if (this._textElement) {\n            this._api.htmlElementPositioner.removeElement(this._textElement);\n        }\n    }\n\n    public activeCallback(): void {\n        if (this.selected) this._api.renderingManager.redraw();\n    }\n\n    private updatePositionOptions(): void {\n        this._positionElementOptions = {\n            color: this.color,\n            lengthUnit: this._api.settingsDispatcher.settings.lengthUnit,\n            customLengthFormatter: this._api.settingsDispatcher.settings.customLengthFormatter,\n            decimals: this._api.settingsDispatcher.settings.decimals\n        }\n    }\n\n    private updatePositionText(\n    position: Vector3\n    ): void {\n\n        this.updatePositionOptions();\n        if (!this._textElement) {\n            this._textElement = new PositionElement(this._api.camera, new Vector3(), this._positionElementOptions);\n            this._api.htmlElementPositioner.addElement(this._textElement);\n        }\n\n        this._textElement.update(position);\n    }\n\n    private updateAllPositionText(): void {\n        this.updatePositionOptions();\n        if(this._textElement){\n            this._textElement.updateText(this._positionElementOptions);\n        }\n    }\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { Model } from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport { Cursor3D } from \"@technology/webgl-viewer/dist/esnext/Picker/Cursor3D\";\nimport { TapTool } from \"./TapTool\";\nimport { PointMarkup } from \"../Markups/PointMarkup\";\nimport { MarkupSettings } from \"../MarkupSettings\";\nimport {SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Color} from \"three\";\n\nexport class PointMarkupTool extends TapTool {\n    static get Name(): string { return \"pointMarkup\" };\n\n    constructor(private api: Api, private markupSettings: MarkupSettings, private model: Model, cursor: Cursor3D) {\n        super(PointMarkupTool.Name, api.inputHandler, cursor);\n        this.cursor = cursor;\n    }\n\n    protected _createMarkup(): PointMarkup {\n        const markup = new PointMarkup(this.name, this.markupSettings.color, this.api);\n        this.model.add(markup);\n        return markup;\n    }\n\n    add(pick: SnapPick, color?: Color): PointMarkup {\n        const m = this._createMarkup();\n        if (color !== undefined) m.color = color;\n        m.init(pick.point);\n        return m;\n    }\n}\n","import {\n    PointerInput,\n    controlsReleased,\n    allowInput,\n    hasIntersection, addIntersection\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport { tap, filter, mergeMap, switchMap, takeUntil } from \"rxjs/operators\";\nimport {  Subscription } from \"rxjs\";\nimport { TapMoveTool } from \"./TapMoveTool\";\nimport { MarkupModel } from \"../MarkupModel\";\nimport {MouseButton} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {Model} from \"@technology/webgl-viewer/dist/esnext/Model\";\n\nexport interface ITapDrags {\n    start(intersection: IIntersection): void;\n    dragStart(intersection: IIntersection): void;\n    dragging(intersection: IIntersection): void;\n    dragEnd(intersection: IIntersection): void;\n    end(): void;\n    cancel(): void;\n}\n\nexport abstract class TapDragOnPlaneTool extends TapMoveTool {\n    protected object: ITapDrags;\n    protected pointerSubscription: Subscription;\n    protected options = {\n        filter: () => true,\n        button: MouseButton.left,\n        touchCount: 1\n    };\n\n    constructor(name: string, protected api: Api, protected model: MarkupModel) {\n        super(api.inputHandler);\n        this._name = name;\n        this.cursor = api.cursor;\n    }\n\n    set enabled(enabled: boolean) {\n        if (this.pointerSubscription) {\n            this.pointerSubscription.unsubscribe();\n            this.pointerSubscription = null;\n            if (!this.finished && this.object) {\n                this.object.cancel();\n                this.object = null;\n            }\n        }\n        if (!enabled) return;\n\n        const models: Model[] = [];\n        for (const m of this.api.models.getIterable())\n            if (m !== this.model) models.push(m);\n\n        this.pointerSubscription = this.api.inputHandler.pointerDown$\n            .pipe(\n                filter(allowInput(this.options)),\n                mergeMap(addIntersection(this.api.inputHandler.picker)),\n                tap((e: PointerInput) => {\n                    this.onStart(e.intersection);\n                    this.object.dragStart(e.intersection);\n                    this.api.eventDispatcher.dragStart(this);\n                }),\n                switchMap(() =>\n                    this.api.inputHandler.pointerMove$.pipe(\n                        takeUntil(\n                            controlsReleased(\n                                this.api.inputHandler,\n                                this.options\n                            )\n                        )\n                    )\n                ),\n                mergeMap(addIntersection(this.api.inputHandler.picker, models)),\n                filter(hasIntersection),\n                tap(e => this.object.dragging(e.intersection)),\n                takeUntil(\n                    this.api.inputHandler.pointerUp$.pipe(\n                        tap(() => {\n                            if (this.object)\n                                this.object.dragEnd(undefined);\n\n                            this.onEnd();\n                            this.api.eventDispatcher.dragEnd(this);\n                        })\n                    )\n                )\n            )\n            .subscribe();\n\n        this.onEnabled();\n    }\n\n    get enabled(): boolean {\n        return !!this.pointerSubscription;\n    }\n}\n","import {\n    Object3D,\n    Raycaster,\n    Plane,\n    Vector3,\n    Box3\n} from \"three\";\nimport {WVCamera} from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\n\nexport class PickablePlane extends Object3D {\n    geometry: any;\n    normal: Vector3;\n    _constant: any;\n\n    plane: Plane;\n\n    constructor(camera: WVCamera, normal: Vector3, coplanarPoint: Vector3) {\n        super();\n        this.plane = new Plane().setFromNormalAndCoplanarPoint(normal, coplanarPoint);\n        this.normal = this.plane.normal;\n        this._constant = this.plane.constant;\n        this.visible = true;\n        const min = new Vector3();\n        const max = new Vector3();\n        const origin = new Vector3();\n\n        this.geometry = {\n            boundingBox: new Box3(),\n            computeBoundingBox() {\n                min.set(-1, -1, 1).unproject(camera);\n                max.set(1, 1, 1).unproject(camera);\n                origin.copy(camera.position);\n                this.boundingBox.makeEmpty();\n                this.boundingBox.setFromPoints([min, max, origin]);\n            },\n            dispose() {}\n        };\n    }\n\n    get constant() {\n        return this._constant;\n    }\n\n    set constant(v: number) {\n        this.plane.constant = v;\n        this._constant = v;\n    }\n\n    raycast(raycaster: Raycaster, intersects: any[]) {\n        if (raycaster.ray.intersectsPlane) {\n            intersects.push({\n                object: this,\n                point: raycaster.ray.intersectPlane(this.plane, new Vector3())\n            });\n        }\n    }\n}\n","import {\n    Vector3,\n    Box3,\n    Color,\n} from \"three\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { PickablePlane } from \"../CustomObjects/PickablePlane\";\nimport { IIntersection } from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport { Markup } from \"./Markup\";\nimport { WVCamera } from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\nimport { ITapDrags } from \"../Tools/TapDragOnPlaneTool\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { MeshLine } from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\n\nexport class FreelineMarkup extends Markup implements ITapDrags {\n    private _camera: WVCamera;\n    private _pickablePlane: PickablePlane;\n    private _meshLineMaterial: LineMaterial;\n    private _currentMeshLine: MeshLine;\n    points: Vector3[];\n\n    constructor(name: string, color: Color, _api: Api) {\n        super(name, _api);\n\n        this._camera = _api.camera;\n        this.boundingBox = new Box3();\n        this._meshLineMaterial = new LineMaterial({ linewidth: 3, depthTest: false, depthWrite: false, transparent: true });\n        this.coloredMaterials.push(this._meshLineMaterial);\n        this.color = color;\n    }\n\n    public from(positions: Vector3[]): void {\n        this.points = positions;\n        this.createMeshLine();\n        this.updateMeshLine();\n        this.updateBoundingBox();\n    }\n\n    private createMeshLine(): void {\n        this._currentMeshLine = new MeshLine(new LineGeometry(), this._meshLineMaterial);\n        this._currentMeshLine.renderOrder = 1;\n        this.add(this._currentMeshLine);\n    }\n\n    private updateMeshLine(): void {\n        if (this.points.length > 1) {\n            this._currentMeshLine.update(this.points);\n        }\n    }\n\n    public start(): void {\n        const camera = this._camera;\n        const direction = camera.getWorldDirection(new Vector3);\n        const point = new Vector3().addVectors ( camera.position, direction.multiplyScalar( 100 ) );\n\n        this.position.copy(point);\n        this._pickablePlane = new PickablePlane(\n            camera,\n            direction.negate(),\n            point\n        );\n        this.add(this._pickablePlane);\n        this.updateBoundingBox();\n    }\n\n    private adjustPickablePlane(intersection: IIntersection): void {\n        if (intersection && intersection.caster.ray && intersection.point) {\n            this.position.copy(intersection.point);\n            this.remove(this._pickablePlane);\n            this._pickablePlane = new PickablePlane(\n                this._camera,\n                intersection.caster.ray.direction.clone().negate(),\n                intersection.point\n            );\n            this.add(this._pickablePlane);\n            this.updateBoundingBox();\n        }\n    }\n\n    public dragStart(intersection: IIntersection): void {\n        this.adjustPickablePlane(intersection);\n        this.points = [];\n        this.createMeshLine();\n    }\n\n    public dragging(intersection: IIntersection): void {\n        const localPosition = this.worldToLocal(intersection.point.clone());\n        this.points.push(localPosition);\n        this.updateMeshLine();\n        this._api.renderingManager.redraw();\n    }\n\n    public dragEnd(): void {\n        if (this.points.length < 2) {\n            this.cancel();\n            return;\n        }\n\n        this.updateBoundingBox();\n        this.dispatchModifiedEvent();\n    }\n\n    public end(): void {\n        this.remove(this._pickablePlane);\n    }\n\n    public cancel(): void {\n        this.parent.remove(this);\n        this.dispose();\n    }\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { TapDragOnPlaneTool } from \"./TapDragOnPlaneTool\";\nimport { FreelineMarkup } from \"../Markups/FreelineMarkup\";\nimport { MarkupSettings } from \"../MarkupSettings\";\nimport { MarkupModel } from \"../MarkupModel\";\nimport {Color, Vector3} from \"three\";\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\n\nexport class FreelineMarkupTool extends TapDragOnPlaneTool {\n    static get Name(): string { return \"freelineMarkup\" };\n\n    get allowedSnapTypes(): SnapType[] {\n        return [];\n    }\n\n    constructor(api: Api, private markupSettings: MarkupSettings, model: MarkupModel) {\n        super(FreelineMarkupTool.Name, api, model);\n    }\n\n    protected _createMarkup(): FreelineMarkup {\n        const markup = new FreelineMarkup(this.name, this.markupSettings.color, this.api);\n        this.model.add(markup);\n        return markup;\n    }\n\n    add(points: Vector3[], color?: Color): FreelineMarkup {\n        const m = this._createMarkup();\n        if (color !== undefined) m.color = color;\n        m.from(points);\n        return m;\n    }\n}\n","import { Color, Vector3 } from \"three\";\nimport { StickyElement } from \"@technology/webgl-viewer/dist/esnext/CustomObjects/StickyElement\";\nimport { distanceFormatter,  } from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport { WVCamera } from \"@technology/webgl-viewer/dist/esnext/Rendering/WVCamera\";\nimport {CustomLengthFormatter, LengthUnit} from \"@technology/webgl-viewer/dist/esnext/common\";\n\nconst stopImmediatePropagation = (event: MouseEvent) => {\n    event.stopImmediatePropagation();\n};\n\nexport interface MeasurementElementOptions {\n    lengthUnit: LengthUnit;\n    customLengthFormatter: CustomLengthFormatter;\n    decimals: number;\n    prefix?: string;\n    textStyleTop?: string;\n}\n\nexport class MeasurementElement extends StickyElement {\n    static get is(): string {\n        return \"measurement-element\";\n    }\n\n    public isMeasurementElement = true;\n\n    private _text: string;\n    private _distance: number;\n    private _formatter: CustomLengthFormatter;\n    public _prefix: string = \"\";\n\n    constructor(\n        _camera: WVCamera,\n        _position: Vector3,\n        options: MeasurementElementOptions\n    ) {\n        super(_camera, _position, (pos: Vector3) => {\n            // left middle\n            pos.y = pos.y - this.height / 2;\n        });\n\n        this.spellcheck = false;\n        this.style.userSelect = \"none\";\n        this.style.webkitUserSelect = \"none\";\n        this.style.pointerEvents = \"none\";\n        this.style.borderRadius = \"2px\";\n        this.style.padding = \"0px 3px\";\n        this.style.fontFamily = '\"Open Sans\", sans-serif';\n        this.style.overflow = \"hidden\";\n        this.style.fontSize = \"1em\";\n        this.style.boxShadow = \"0rem 0rem 0.06rem rgba(54,53,69,0.2), 0.12rem 0.12rem 0.5rem rgba(54,53,69,0.30)\";\n\n        this.style.top = options.textStyleTop;\n\n        this.hidden = true;\n\n        typeof options.prefix !== 'undefined' ? this._prefix = options.prefix : this._prefix = \"\";\n\n        if(options.lengthUnit === LengthUnit.custom){\n            this._formatter = options.customLengthFormatter;\n        }\n        else{\n            this._formatter = distanceFormatter(options.lengthUnit, options.decimals);\n        }\n    }\n\n    set borderColor(color: Color) {\n        this.style.borderColor = `#${color.getHexString()}`;\n    }\n\n    public get text(): string {\n        return this._text;\n    }\n\n    public set text(text: string) {\n        this._text = text;\n        this.innerText = text;\n    }\n\n    public update(start: Vector3, end: Vector3): void {\n        const distance = start.distanceTo(end);\n        this._distance = distance;\n        const direction = end.clone()\n            .sub(start)\n            .normalize()\n            .multiplyScalar(distance / 2);\n        const position = start.clone().add(direction);\n\n        this.text = this._prefix + this._formatter(distance);\n        this.position.copy(position);\n        this.hidden = false;\n    }\n\n\n    public updateText(options: MeasurementElementOptions ): void {\n        if(options.lengthUnit === LengthUnit.custom){\n            this._formatter = options.customLengthFormatter;\n        }\n        else{\n            this._formatter = distanceFormatter(options.lengthUnit, options.decimals);\n        }\n        this.text = this._prefix + this._formatter(this._distance);\n    }\n\n\n\n    updatePosition(canvas: ClientRect): void {\n        super.updatePosition(canvas);\n\n        if (this.hidden) {\n            this.style.display = \"none\";\n        }\n    }\n\n    connectedCallback(): void {\n        this.addEventListener(\"mousemove\", stopImmediatePropagation);\n        this.addEventListener(\"mousedown\", stopImmediatePropagation);\n    }\n\n    disconnectedCallback(): void {\n        this.removeEventListener(\"mousemove\", stopImmediatePropagation);\n        this.removeEventListener(\"mousedown\", stopImmediatePropagation);\n    }\n}\n\n// Using eval to allow code to be removed by tree-shaking during build\n// tslint:disable-next-line:no-eval\neval(\"if (window.customElements && typeof MeasurementElement !== 'undefined') window.customElements.define(MeasurementElement.is, MeasurementElement)\");\n\n","import {BufferGeometry, Color, Line3, Mesh, MeshBasicMaterial, Object3D, Plane, SphereGeometry, Vector3} from \"three\";\nimport {LineMaterial, LineMaterialParameters} from \"three/examples/jsm/lines/LineMaterial\";\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {SnapPick, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {MeasurementElement, MeasurementElementOptions} from \"./MeasurementElement\";\nimport {MovablePointerInput} from \"../CustomObjects/Mixins/MovableMixin\";\nimport {MeshLine} from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\nimport {IIntersection} from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\nimport {Vector3Const} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\n\nexport class MeasurementLines extends  Object3D {\n    private readonly minimumLineLength = 0.00001;\n\n    /// Measurement elements appearance settings\n    private startHandlePositionGeometry: BufferGeometry = new SphereGeometry(0.15);\n    private endHandlePositionGeometry: BufferGeometry = this.startHandlePositionGeometry;\n    private startHandlePositionMarkerMaterial = new MeshBasicMaterial({ color: 0x000000, depthTest: false, depthWrite: false, transparent: true });\n    private endHandlePositionMarkerMaterial = new MeshBasicMaterial({ color: 0x000000, depthTest: false, depthWrite: false, transparent: true });\n\n    private baseMaterialParameters = {\n        color: 0x000000,\n        opacity: 0.5,\n        linewidth: 1.5,\n        depthTest: false,\n        depthWrite: false,\n        transparent: true\n    } as LineMaterialParameters;\n    private dashedLineMaterialParameters = {dashed: true, dashSize: 0.5, gapSize: 0.2} as LineMaterialParameters;\n\n    private globalXStyle = {\n        color: \"#fe2929\",\n        backgroundColor: \"#ffffff\",\n        border: \"1px solid #fe2929\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n    private globalYStyle = {\n        color: \"#28ce13\",\n        backgroundColor: \"#ffffff\",\n        border: \"1px solid #28ce13\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n    private globalZStyle = {\n        color: \"#0000ff\",\n        backgroundColor: \"#ffffff\",\n        border: \"1px solid #0000ff\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n    private blackOnWhiteStyle = {\n        color: \"#000000\",\n        backgroundColor: \"#ffffff\",\n        border: \"1px solid #000000\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n\n    /// markup display status\n    private active: boolean = false; // determines how lines are displayed depending on whether selected or not\n\n    private endsFlippedByDrag: boolean = false;\n\n    private startIntersection: SnapPick;\n    private endIntersection: SnapPick;\n    private startSnapType: SnapType; // snap type of first pick. will help determine whether measuring from plane or edge.\n\n    private measurementNormal: Vector3 = new Vector3();\n    private measurementPlane: Plane = new Plane();\n\n    private startEdgeLine: Line3 = new Line3(); // line that second pick edge lies in.\n    private startEdgePerpendicularPoint: Vector3 = new Vector3();\n    private endEdgeLine: Line3 = new Line3(); // line that second pick edge lies in.\n    private endEdgePerpendicularPoint: Vector3 = new Vector3();\n    private planeHorizontalDirection: Vector3 = new Vector3();  // horizontal line from first pick that lies in the plane.\n    private endPlaneHorizontalLine: Line3 = new Line3(); // horizontal line that runs through pick point in second plane.\n    private snapToLineOrPoint = false;\n\n    /// Calculated positions of line end points\n    private startHandlePosition: Vector3 = new Vector3();\n    private endHandlePosition: Vector3 = new Vector3();\n    private startPointEndPlaneProjectionPosition: Vector3 = new Vector3(); // point on end Plane intersected by perpendicular line through start point\n    private endPlaneIntersectionPoint: Vector3 = new Vector3(); // point where vertical and horizontal lines connecting end pick point to endPlanePerpendicular point in end plane meet.\n\n    private _vertical = false;\n    axisIndex = 0; // this number identifies the line from  axisLines that should be replaced by the main line. Will depend on whether local or global is chosen for display\n    directionIndex = 0; // use line snap edge normal or line direction itself\n\n    private axisLines = new Array<MeshLine>(3);  // 0 - between start and end pick points, 1 - globalX, 2 - globalY, 3 - globalZ, 4 - localX, 5 - localY, 6 - localZ\n    private axisLine3Lines = new Array<Line3>(3);\n    private axisLineDirections = new Array<Vector3>(3);\n    private nonZeroLines = new Array<boolean>(3); // are lines zero length?\n    public textElements = new Array<MeasurementElement>(3);\n    public labels = new Array<string>(3); // Store text of latest label in case needed for display elsewhere\n\n    /// point markers\n    private showMarkers: boolean = false; // stop them being added when not wanted.\n    private startHandlePositionMarker: Mesh;\n    private endHandlePositionMarker: Mesh;\n\n    constructor(\n        private api: Api,\n        private markupSettings: MarkupSettings,\n        private _textElement: MeasurementElement,\n        private _measurementElementOptions: MeasurementElementOptions,\n        private startHandle: Mesh,\n        private endHandle: Mesh,\n    ) {\n        super();\n        this.createTextElements();\n        this.createLines();\n        this.updateAllMeasurementText();\n        this.api.settingsDispatcher.subscribe(\"lengthUnit\", () => this.updateAllMeasurementText());\n        this.api.settingsDispatcher.subscribe(\"decimals\", () => this.updateAllMeasurementText());\n        this.api.settingsDispatcher.subscribe(\"customLengthFormatter\", () => this.updateAllMeasurementText());\n    }\n\n    setAxisLinesColor(color: Color): void {\n        for (const line of this.axisLines)\n            (line.material as LineMaterial).color = color;\n        this.startHandlePositionMarkerMaterial.color = color;\n        this.endHandlePositionMarkerMaterial.color = color;\n    }\n\n    private createLines(): void {\n        this.axisLines[0] = this.createLine(this.blackOnWhiteStyle.color, true); // used for start to end point when this place not selected.\n        this.axisLines[1] = this.createLine(this.blackOnWhiteStyle.color, true);\n        this.axisLines[2] = this.createLine(this.blackOnWhiteStyle.color, true);\n\n        for (let i = 0; i < 3; i++) {\n            this.axisLine3Lines[i] = new Line3();\n            this.axisLineDirections[i] = new Vector3();\n        }\n    }\n\n    private createLine(color: string, dashed: boolean): MeshLine {\n        const lineMaterialParameters = this.baseMaterialParameters;\n        lineMaterialParameters.color = color as any;\n        if (dashed) Object.assign(lineMaterialParameters, this.dashedLineMaterialParameters);\n        const lineMaterial = new LineMaterial(lineMaterialParameters);\n\n        const line = new MeshLine(new LineGeometry(), lineMaterial);\n        line.renderOrder = 1;\n        return line;\n    }\n\n    private updateTextElementVisibility(index: number, visible: boolean): void {\n        this.textElements[index].visible = visible;\n    }\n\n    private createTextElements(): void {\n        for(let i = 0; i < 3; i++){\n            this.textElements[i] = new MeasurementElement(this.api.camera, new Vector3(), this._measurementElementOptions);\n            this.api.htmlElementPositioner.addElement(this.textElements[i]);\n        }\n    }\n\n    start(intersection: SnapPick): void {\n        this.startIntersection =  intersection;\n        this.updateAppearance();\n        this.startHandlePosition.copy(intersection.point);\n        this.endHandlePosition.copy(intersection.point);\n        this.startSnapType = intersection.snapType;\n    }\n\n    private updateAppearance(): void {\n        this.updateTextElementsColors();\n    }\n\n    private updateTextElementsColors(): void {\n        for(let i = 0; i < 3; i++){\n            const axisNumber = this.getParallelGlobalAxis(this.axisLineDirections[i]);\n            if(axisNumber === 0) {\n                this.updateTextElementStyle(i, this.globalXStyle , \"X: \");\n            }\n            else if(axisNumber === 1) {\n                this.updateTextElementStyle(i, this.globalYStyle, \"Y: \");\n            }\n            else if(axisNumber === 2) {\n                this.updateTextElementStyle(i, this.globalZStyle, \"Z: \");\n            }\n            else {\n                this.updateTextElementStyle(i, this.blackOnWhiteStyle);\n            }\n        }\n    }\n\n    private getParallelGlobalAxis(direction: Vector3): number {\n        if(Math.abs(direction.x) > 0.999) return 0;\n        if(Math.abs(direction.y) > 0.999) return 1;\n        if(Math.abs(direction.z) > 0.999) return 2;\n        return -1;\n    }\n\n    private updateTextElementStyle(index: number, style: {}, prefix?: string): void {\n        Object.assign(this.textElements[index].style, style);\n        switch(index) {\n            case 0:\n                prefix ? this.textElements[0]._prefix = prefix : this.textElements[0]._prefix = \"x*: \";\n                break;\n            case 1:\n                prefix ? this.textElements[1]._prefix = prefix : this.textElements[1]._prefix = \"y*: \";\n                break;\n            case 2:\n                prefix ? this.textElements[2]._prefix = prefix : this.textElements[2]._prefix = \"z*: \";\n                break;\n            default:\n        }\n    }\n\n    private updateAllMeasurementText(): void {\n        this.updateMeasurementOptions();\n        for (const textElement of this.textElements) {\n            if (textElement) {\n                textElement.updateText(this._measurementElementOptions);\n            }\n        }\n    }\n\n    private updateMeasurementOptions(): void {\n        this._measurementElementOptions = {\n            lengthUnit: this.api.settingsDispatcher.settings.lengthUnit,\n            customLengthFormatter: this.api.settingsDispatcher.settings.customLengthFormatter,\n            decimals: this.api.settingsDispatcher.settings.decimals,\n        }\n    }\n\n    update(endIntersection: SnapPick): void {\n        this.endIntersection = endIntersection;\n        this.snapToLineOrPoint = false;\n\n        if (this._vertical) {\n            this.endIntersection.snapType = SnapType.FACE;\n            this.endIntersection.normal = Vector3Const.up;\n        }\n\n        const endSnap = endIntersection.snapType;\n        const endPoint = endIntersection.point;\n        const endNormal = endIntersection.normal;\n\n        const startSnap = this.startIntersection.snapType;\n        const startPoint = this.startIntersection.point;\n        const startNormal = this.startIntersection.normal;\n\n        const startLineDirection = this.startIntersection.snapLineStart ?\n            this.startIntersection.snapLineStart.clone().sub(this.startIntersection.snapLineEnd).normalize() :\n            startNormal ? startNormal.clone() : undefined;\n        const endLineDirection = endIntersection.snapLineStart ?\n            endIntersection.snapLineStart.clone().sub(endIntersection.snapLineEnd).normalize() :\n            endNormal ? endNormal.clone() : undefined;\n\n        /// both points\n        if (startSnap === SnapType.POINT && endSnap === SnapType.POINT) {\n            this.updateForTwoPoints(startPoint, endPoint);\n        }\n\n        /// point and edge case\n        else if(startSnap === SnapType.LINE && endSnap === SnapType.POINT) {\n            this.updateForLineAndPoint(startPoint, startNormal, startLineDirection, endPoint);\n        } else if (startSnap === SnapType.POINT && endSnap === SnapType.LINE) {\n            this.updateForLineAndPoint(endPoint, endNormal, endLineDirection, startPoint);\n        }\n\n        /// both surfaces\n        else if(startSnap === SnapType.FACE && endSnap === SnapType.FACE) {\n            this.updateForTwoFaces(startNormal, startPoint, endNormal, endPoint);\n        }\n\n        // one surface and one edge\n        else if (startSnap === SnapType.FACE && endSnap === SnapType.LINE) {\n            this.updateForFaceAndLine(startNormal, startPoint, endPoint, endNormal, endLineDirection);\n        }\n        else if (startSnap === SnapType.LINE && endSnap === SnapType.FACE) {\n            this.updateForFaceAndLine(endNormal, endPoint, startPoint, startNormal, startLineDirection);\n        }\n\n        // both lines\n        else if (startSnap === SnapType.LINE && endSnap === SnapType.LINE) {\n            this.updateForTwoLines(startPoint, startNormal, startLineDirection, endPoint, endNormal, endLineDirection);\n        }\n\n        // one surface and one point\n        else if(startSnap === SnapType.FACE && endSnap === SnapType.POINT) {\n            this.updateForFaceAndPoint(startNormal, startPoint, endPoint);\n        } else if(startSnap === SnapType.POINT && endSnap === SnapType.FACE) {\n            this.updateForFaceAndPoint(endNormal, endPoint, startPoint);\n        }\n\n        this.measurementPlane.setFromNormalAndCoplanarPoint(this.measurementNormal, endPoint);\n        this.measurementPlane.projectPoint(this.startHandlePosition, this.startPointEndPlaneProjectionPosition);\n\n        /// calculate intersection point\n        this.endPlaneHorizontalLine.set(\n            this.startPointEndPlaneProjectionPosition,\n            this.startPointEndPlaneProjectionPosition.clone().add(this.planeHorizontalDirection)\n        );\n\n        if (this.snapToLineOrPoint) {\n            this.endPlaneIntersectionPoint.copy(endPoint);\n        } else {\n            this.endPlaneHorizontalLine.closestPointToPoint(endPoint, false, this.endPlaneIntersectionPoint);\n        }\n\n        this.endHandlePosition.copy(endPoint);\n\n        if (this.startHandlePosition.distanceTo(this.endHandlePosition) < this.minimumLineLength) {\n            this.startPointEndPlaneProjectionPosition.copy(this.startHandlePosition);\n            this.endPlaneIntersectionPoint.copy(this.startHandlePosition);\n        }\n\n        this.updateAppearance();\n        this.updatePositions();\n    }\n\n    private calculatePlaneHorizontalDirection(): void {\n        if (Math.abs(this.measurementNormal.z) < 0.999999 ) {  /// plane normal is not vertical\n            this.planeHorizontalDirection.crossVectors(Vector3Const.up, this.measurementNormal).normalize();\n        } else {\n            this.planeHorizontalDirection.copy(Vector3Const.forward);\n            if ((this.startIntersection as IIntersection).model)\n                this.planeHorizontalDirection.applyMatrix4((this.startIntersection as IIntersection).model.matrixWorld);\n        }\n    }\n\n    private updateForTwoPoints(point1: Vector3, point2: Vector3): void {\n        this.measurementNormal.copy(point1).sub(point2).normalize();\n        this.snapToLineOrPoint = true;\n    }\n\n    private updateForLineAndPoint(linePoint: Vector3, lineEdgeNormal: Vector3, lineDirection: Vector3, point: Vector3): void {\n        if (this.areDirectionsParallel(lineDirection, linePoint.clone().sub(point).normalize())) { // point is on the line\n            this.measurementNormal.copy(lineDirection);\n            this.calculatePlaneHorizontalDirection();\n            return;\n        }\n\n        if (this.directionIndex % 2 === 1) {\n            this.startEdgeLine.set(linePoint, linePoint.clone().add(lineEdgeNormal));\n            this.measurementNormal.copy(lineEdgeNormal);\n        }\n        else {\n            this.startEdgeLine.set(linePoint, linePoint.clone().add(lineDirection));\n            this.startEdgeLine.closestPointToPoint(point, false, this.startEdgePerpendicularPoint);\n            this.measurementNormal.copy(point).sub(this.startEdgePerpendicularPoint).normalize();\n        }\n        this.calculatePlaneHorizontalDirection();\n    }\n\n    private updateForTwoLines(point1: Vector3, edgeNormal1: Vector3, lineDirection1: Vector3, point2: Vector3, edgeNormal2: Vector3, lineDirection2: Vector3): void {\n        const edgeNormalIndex = this.directionIndex % 3;\n        if (edgeNormalIndex > 0) {\n            const n = edgeNormalIndex === 1 ? edgeNormal2 : edgeNormal1;\n            this.measurementNormal.copy(n);\n            this.calculatePlaneHorizontalDirection();\n        }\n        else {\n            if (!this.areDirectionsParallel(lineDirection1, lineDirection2)) {\n                this.measurementNormal.crossVectors(lineDirection1, lineDirection2).normalize();\n                this.calculatePlaneHorizontalDirection();\n            } else {\n                this.endEdgeLine.set(point2, point2.clone().add(lineDirection2));\n                this.endEdgeLine.closestPointToPoint(this.startHandlePosition, false, this.endEdgePerpendicularPoint);\n                this.measurementNormal.copy(this.endEdgePerpendicularPoint.clone().sub(point1).normalize());\n                this.snapToLineOrPoint = true;\n            }\n        }\n    }\n\n    private updateForFaceAndPoint(faceNormal: Vector3, facePoint: Vector3, point: Vector3): void {\n        if (!this.arePointOnTheSamePlane(faceNormal, facePoint, point))\n            this.measurementNormal.copy(faceNormal);\n        else\n            this.measurementNormal.copy(facePoint).sub(point).normalize();\n        this.snapToLineOrPoint = true;\n    }\n\n    private updateForTwoFaces(normal1: Vector3, point1: Vector3, normal2: Vector3, point2: Vector3): void {\n        if (this.areDirectionsParallel(normal1, normal2)) {\n            if (!this.arePointOnTheSamePlane(normal1, point1, point2))\n                this.measurementNormal.copy(normal1);\n            else\n                this.measurementNormal.copy(point1).sub(point2).normalize();\n        }\n        else {\n            this.measurementNormal.copy(point1).sub(point2).normalize();\n        }\n        this.snapToLineOrPoint = true;\n    }\n\n    private arePointOnTheSamePlane(normal: Vector3, point1: Vector3, point2: Vector3): boolean {\n        return Math.abs(this.measurementPlane.setFromNormalAndCoplanarPoint(normal, point1).distanceToPoint(point2)) < 0.001\n    }\n\n    private areDirectionsParallel(dir1: Vector3, dir2: Vector3): boolean {\n        return Math.abs(dir1.dot(dir2)) > 0.999\n    }\n\n    private updateForFaceAndLine(faceNormal: Vector3, facePoint: Vector3, linePoint: Vector3, lineEdgeNormal: Vector3, lineDirection: Vector3): void {\n        if (this.arePointOnTheSamePlane(faceNormal, facePoint, linePoint)) {\n            if (!lineEdgeNormal || this.areDirectionsParallel(lineEdgeNormal, faceNormal))\n                this.measurementNormal.crossVectors(lineDirection, faceNormal).normalize();\n            else\n                this.measurementNormal.copy(lineEdgeNormal);\n        }\n        else{\n            if(this.areDirectionsOrthogonal(faceNormal, lineDirection))\n                this.measurementNormal.copy(faceNormal);\n            else\n                this.measurementNormal.copy(facePoint).sub(linePoint).normalize();\n        }\n\n        this.planeHorizontalDirection.crossVectors(lineDirection, this.measurementNormal).normalize();\n\n        // are measurement normal and line direction parallel?\n        if (this.planeHorizontalDirection.equals(Vector3Const.zero))\n            this.planeHorizontalDirection.copy(lineEdgeNormal);\n    }\n\n    private areDirectionsOrthogonal(dir1: Vector3, dir2: Vector3): boolean {\n        return Math.abs(dir1.dot(dir2)) < 0.01\n    }\n\n    private updatePositions(): void {\n        this.updateAxisLinePositions();\n        this.clearMainLinePosition(this.axisIndex);\n    }\n\n    private updateAxisLinePositions(): void {\n        this.updateAxisLinePosition(0, this.startHandlePosition, this.startPointEndPlaneProjectionPosition);\n        this.updateAxisLinePosition(1, this.startPointEndPlaneProjectionPosition, this.endPlaneIntersectionPoint);\n        this.updateAxisLinePosition(2, this.endPlaneIntersectionPoint, this.endHandlePosition);\n    }\n\n    private updateAxisLinePosition(index: number, start: Vector3, end: Vector3): void {\n        this.updateLineCalculations(index, start, end);\n\n        const dimLength = start.distanceTo(end);\n        if (dimLength < this.minimumLineLength) {\n            if (this.axisLines[index].parent) this.removeFromMarkup(index);\n            this.nonZeroLines[index] = false;\n            this.updateTextElementVisibility(index, false);\n        } else {\n            this.nonZeroLines[index] = true;\n            this.updateTextElementPosition(index, start, end);\n            this.active ? this.updateTextElementVisibility(index, true): this.updateTextElementVisibility(index, false);\n            this.addToMarkup(index);\n            this.axisLines[index].update([this.worldToLocal(start.clone()), this.worldToLocal(end.clone())]);\n        }\n    }\n\n    private updateLineCalculations(index: number, start: Vector3, end: Vector3): void {\n        this.axisLine3Lines[index].set(start, end);\n        this.axisLine3Lines[index].delta(this.axisLineDirections[index]);\n        this.axisLineDirections[index].normalize();\n    }\n\n    private addToMarkup(index: number): void {\n        this.add(this.axisLines[index]);\n    }\n\n    private removeFromMarkup(index: number): void {\n        this.remove(this.axisLines[index]);\n    }\n\n    private updateTextElementPosition(index: number, start: Vector3, end: Vector3): void {\n        this.textElements[index].update(start, end);\n        this.labels[index] = this.textElements[index].text;\n    }\n\n    private clearMainLinePosition(index: number): void {\n        this.removeFromMarkup(index);\n        if(this._textElement) this._textElement.update(this.axisLine3Lines[index].start, this.axisLine3Lines[index].end);\n        this.updateTextElementVisibility(index, false);\n        this.api.renderingManager.redraw();\n    }\n\n    getMainLine(): Line3 {\n        return this.axisLine3Lines[this.axisIndex];\n    }\n\n    end(): void {\n        this.updateAppearance();\n        this.updatePositions();\n        this.createPointMarkerGeometry();\n        this.updateMarkerPositions();\n        this.showMarkers = true;\n        this.addLocalMarkers();\n    }\n\n    private createPointMarkerGeometry(): void {\n        this.startHandlePositionMarker = createScreenStaticSizeMesh(this.startHandlePositionGeometry, this.startHandlePositionMarkerMaterial, this.api);\n        this.endHandlePositionMarker = createScreenStaticSizeMesh(this.endHandlePositionGeometry, this.endHandlePositionMarkerMaterial, this.api);\n    }\n\n    private updateMarkerPositions(): void {\n        this.worldToLocal(this.startHandlePositionMarker.position.copy(this.startHandlePosition));\n        this.worldToLocal(this.endHandlePositionMarker.position.copy(this.endHandlePosition));\n    }\n\n    private addLocalMarkers(): void {\n        this.removeAllMarkers();\n        if(this.showMarkers){\n            if(this.axisIndex === 1){\n                if(this.nonZeroLines[2]) this.add(this.startHandlePositionMarker);\n                if(this.nonZeroLines[1]) this.add(this.endHandlePositionMarker);\n            } else if (this.axisIndex === 2) {\n                if(this.nonZeroLines[2]) this.add(this.startHandlePositionMarker);\n            } else if (this.axisIndex === 0) {\n                if(this.nonZeroLines[1]) this.add(this.endHandlePositionMarker);\n            }\n        }\n    }\n\n    private removeAllMarkers(): void {\n        this.remove(this.startHandlePositionMarker);\n        this.remove(this.endHandlePositionMarker);\n    }\n\n    updateStartHandle(startHandle: Mesh): void {\n        this.startHandle = startHandle;\n    }\n\n    updateEndHandle(endHandle: Mesh): void {\n        this.endHandle = endHandle;\n    }\n\n    dragStart(event: MovablePointerInput): void {\n        if((event.origin === this.startHandle && this.endsFlippedByDrag === false) || (event.origin === this.endHandle && this.endsFlippedByDrag === true)) {\n            const oldStartIntersection = this.startIntersection;\n            this.startIntersection = this.endIntersection;\n            this.endIntersection = oldStartIntersection;\n            const oldStartHandlePosition = new Vector3();\n            oldStartHandlePosition.copy(this.startHandlePosition);\n            this.startHandlePosition.copy(this.endHandlePosition);\n            this.endHandlePosition.copy(oldStartHandlePosition);\n            this.endsFlippedByDrag = !this.endsFlippedByDrag;\n        }\n\n        this.showMarkers = false;\n        this.removeAllMarkers();\n        this.api.renderingManager.redraw();\n    }\n\n    dragging(event: MovablePointerInput): void {\n        if(event && event.intersection) {\n            this.update(event.intersection);\n        } else {\n            this.update(this.endIntersection);\n        }\n    }\n\n    dragEnd(): void {\n        this.updateMarkerPositions();\n        this.showMarkers = true;\n        this.addLocalMarkers();\n    }\n\n    onSelectionUpdate(): void {\n        this.active = true;\n        this.updateAppearance();\n        this.updatePositions();\n        this.showMarkers = true;\n        this.updateMarkerVisibility();\n    }\n\n    private updateMarkerVisibility(): void {\n        this.removeAllMarkers();\n        if(this.showMarkers === true) this.addLocalMarkers();\n    }\n\n    onDeselectionUpdate(): void {\n        if(this.active) {\n            this.active = false;\n            this.updateAppearance();\n            this.updatePositions();\n            this.showMarkers = true;\n            this.updateMarkerVisibility();\n        }\n    }\n\n    switchAxis(): void {\n        if(this.nonZeroLines[(this.axisIndex + 1) % 3]){\n            this.axisIndex = (this.axisIndex + 1) % 3;\n        } else if(this.nonZeroLines[(this.axisIndex + 2) % 3]){\n            this.axisIndex = (this.axisIndex + 2) % 3;\n        } else if(this.nonZeroLines[(this.axisIndex + 3) % 3]){\n            this.axisIndex = (this.axisIndex + 3) % 3;\n        }\n        this.addAllLocalLines();\n        this.updatePositions();\n    }\n\n    switchDirection(): void {\n        this.directionIndex++;\n        this.update(this.endIntersection);\n    }\n\n    set vertical(v: boolean) {\n        this._vertical = v;\n        this.update(this.endIntersection);\n    }\n\n    private addAllLocalLines(): void {\n        if (this.axisLines[0].parent) this.removeFromMarkup(0);\n        for (let i = 1; i < 3; i++) {\n            if (!this.axisLines[i].parent && this.nonZeroLines[i]) this.addToMarkup(i);\n        }\n    }\n\n    disposeTextElements(): void {\n        for(let i = 0; i < 3; i++) {\n            this.api.htmlElementPositioner.removeElement(this.textElements[i]);\n        }\n    }\n}\n","import {LineMarkup} from \"./LineMarkup\";\nimport {\n    Plane,\n    Ray,\n    Vector3,\n    Mesh,\n    MeshBasicMaterial,\n    SphereGeometry, MathUtils, Color, Line3, BufferGeometry, Object3D\n} from \"three\";\nimport { MeasurementElement, MeasurementElementOptions } from \"./MeasurementElement\";\nimport {\n    makeMovable,\n    MovablePointerInput\n} from \"../CustomObjects/Mixins/MovableMixin\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {MeasurementLines} from \"./MeasurementLines\";\nimport {Key} from \"ts-key-enum\";\nimport {\n    createArrowGeometry,\n    createScreenStaticSizeMesh\n} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport {SnapPick, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {Vector3Const} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\n\nexport class Measurement extends LineMarkup {\n    private chosenLineStyle = {\n        color: \"#ffffff\",\n        backgroundColor: \"#000000\",\n        border: \"1px solid #000000\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n\n    private activeMainStyle = {\n        color: \"#ffcc02\",\n        backgroundColor: \"#363545\",\n        border: \"1px solid #363545\",\n        top: \"-4x\",\n        borderRadius: \"2px\",\n        padding: \"0px 2px\",\n        fontFamily: '\"Open Sans\", sans-serif',\n        fontSize: \".8rem\",\n        fontWeight: \"600\",\n        boxShadow: \"none\"\n    };\n\n    static lastUsedMeasurement: Measurement\n\n    /// Arrow components\n    private arrowMaterial: MeshBasicMaterial;\n    private startArrowMarker: Object3D;\n    private endArrowMarker: Object3D;\n    private startScreenPos = new Vector3();\n    private endScreenPos = new Vector3();\n\n    private markupSettings: MarkupSettings;\n    private measurementLines: MeasurementLines;\n\n    private _textElement: MeasurementElement;\n    private keySubscription: Subscription;\n\n    private _update = {\n        startPoint: false,\n        endPoint: false\n    };\n    private _measurementElementOptions: MeasurementElementOptions;\n    onSelected: () => void;\n\n    constructor(name: string, color: Color, api: Api, markupSettings: MarkupSettings) {\n        super(name, color, api, new SphereGeometry(0.25));\n\n        this.markupSettings = markupSettings;\n\n        this.arrowMaterial = new MeshBasicMaterial({\n            depthTest: false,\n            depthWrite: false,\n            transparent: false\n        });\n        this.coloredMaterials.push(this.arrowMaterial);\n        this.applyColor(color);\n\n        this.createArrows();\n        this.createAxisLines();\n        this.measurementLines.setAxisLinesColor(this._api.settingsDispatcher.settings.color);\n        this.updateAllMeasurementText();\n\n        this._api.settingsDispatcher.subscribe(\"lengthUnit\", () => this.updateAllMeasurementText());\n        this._api.settingsDispatcher.subscribe(\"decimals\", () => this.updateAllMeasurementText());\n        this._api.settingsDispatcher.subscribe(\"customLengthFormatter\", () => this.updateAllMeasurementText());\n        this._api.settingsDispatcher.subscribe(\"color\", () => {\n            this.measurementLines.setAxisLinesColor(this._api.settingsDispatcher.settings.color);\n        });\n    }\n\n    getTextElement(): MeasurementElement {\n        return this._textElement;\n    }\n\n    getAxisLinesTextElements(): MeasurementElement[] {\n        return this.measurementLines.textElements;\n    }\n\n    private createAxisLines(): void {\n        this.updateMeasurementOptions();\n        this.measurementLines = new MeasurementLines(\n            this._api,\n            this.markupSettings,\n            this._textElement,\n            this._measurementElementOptions,\n            this.startHandle,\n            this.endHandle,\n        );\n        this.add(this.measurementLines);\n    }\n\n    private createArrows(): void {\n        this.coloredMaterials.push(this.arrowMaterial);\n        const geometry = createArrowGeometry(1.2);\n        this.startArrowMarker = this.createArrow(geometry);\n        this.endArrowMarker = this.createArrow(geometry);\n        this.startArrowMarker.visible = false;\n        this.endArrowMarker.visible = false;\n    }\n\n    private createArrow(geometry: BufferGeometry): Mesh {\n        const mesh = createScreenStaticSizeMesh(geometry, this.arrowMaterial, this._api, this.adjustArrowScale);\n        mesh.renderOrder = 1;\n        this.add(mesh);\n        return mesh;\n    }\n\n    private adjustArrowScale = (scale: number) => {\n        if (this.endArrowMarker.position.equals(Vector3Const.zero)) return scale;\n\n        this.startArrowMarker.getWorldPosition(this.startScreenPos).project(this._api.camera);\n        this.endArrowMarker.getWorldPosition(this.endScreenPos).project(this._api.camera);\n        this.startScreenPos.z = this.endScreenPos.z = 0;\n        const screenDistance = this.startScreenPos.distanceTo(this.endScreenPos);\n\n        return scale * MathUtils.clamp(screenDistance * 5, 0, 1);\n    };\n\n    protected updateLine(start: Vector3, end: Vector3): void {\n        this._line.update([start, end]);\n        this.updateArrowMarkers(start, end);\n    }\n\n    protected updateArrowMarkers(start: Vector3, end: Vector3): void {\n        this.startArrowMarker.position.copy(start);\n        this.startArrowMarker.lookAt(this.localToWorld(end.clone()));\n        this.endArrowMarker.position.copy(end);\n        this.endArrowMarker.lookAt(this.localToWorld(start.clone()));\n        this.startArrowMarker.visible = true;\n        this.endArrowMarker.visible = true\n    }\n\n    protected activeCallback(): void {\n        super.activeCallback();\n        if(this.selected) {\n            Measurement.lastUsedMeasurement = this;\n            this.measurementLines.onSelectionUpdate();\n            this.updateTextElementAppearance();\n        } else {\n            this.measurementLines.onDeselectionUpdate();\n            this.updateTextElementAppearance();\n        }\n        this.onSelected();\n    }\n\n    set vertical(v: boolean) {\n        this.measurementLines.vertical = v;\n        this.updateMeasurement();\n        this.moveMainLineAndText();\n        this.updateTextElementAppearance();\n        this._api.renderingManager.redraw();\n    }\n\n    get axisIndex(): number {\n        return this.measurementLines.axisIndex;\n    }\n\n    get directionIndex(): number {\n        return this.measurementLines.directionIndex;\n    }\n\n    switchAxis(): void {\n        this.measurementLines.switchAxis();\n        this.moveMainLineAndText();\n    }\n\n    switchDirection(): void {\n        this.measurementLines.switchDirection();\n        this.moveMainLineAndText();\n    }\n\n    getMainLine(): Line3 {\n        return this.measurementLines.getMainLine();\n    }\n\n    protected updateStartPoint(startPickObject: SnapPick): void {\n        if (!this.startHandle) {\n            this.startHandle = createScreenStaticSizeMesh(this._startGeometry, this._handleMaterial, this._api);\n            makeMovable(this._api, this.startHandle, this);\n            this.add(this.startHandle);\n            this.measurementLines.updateStartHandle(this.startHandle);\n            this.startHandle.position.copy(this.worldToLocal(startPickObject.point.clone()));\n            this.startArrowMarker.position.copy(this.worldToLocal(startPickObject.point.clone()));\n        }\n        this.startPick = startPickObject;\n        this._update.startPoint = true;\n    }\n\n    protected updateEndPoint(endPickObject: SnapPick): void {\n        if (!this.endHandle) {\n            this.endHandle = createScreenStaticSizeMesh(this._endGeometry, this._handleMaterial, this._api);\n            makeMovable(this._api, this.endHandle, this);\n            this.add(this.endHandle);\n            this.measurementLines.updateEndHandle(this.endHandle);\n        }\n        this.endPick = endPickObject;\n        this._update.endPoint = true;\n    }\n\n    private updateMeasurementOptions(): void {\n        this._measurementElementOptions = {\n            lengthUnit: this._api.settingsDispatcher.settings.lengthUnit,\n            customLengthFormatter: this._api.settingsDispatcher.settings.customLengthFormatter,\n            decimals: this._api.settingsDispatcher.settings.decimals,\n        }\n    }\n\n    private updateMeasurementText({startPositionWorld, endPositionWorld}: {\n        startPositionWorld: Vector3;\n        endPositionWorld: Vector3;\n    }): void {\n        this.updateMeasurementOptions();\n        if (!this._textElement) {\n\n            this._textElement = new MeasurementElement(this._api.camera, new Vector3(), this._measurementElementOptions);\n            this._api.htmlElementPositioner.addElement(this._textElement);\n        }\n        this._textElement.update(startPositionWorld, endPositionWorld);\n    }\n\n    private updateAllMeasurementText(): void {\n        this.updateMeasurementOptions();\n        if (this._textElement) {\n            this._textElement.updateText(this._measurementElementOptions);\n        }\n    }\n\n    private updatePositions({\n                                startPositionWorld,\n                                endPositionWorld\n                            }: {\n        startPositionWorld: Vector3;\n        endPositionWorld: Vector3;\n    }): {\n        startPositionLocal: Vector3;\n        endPositionLocal: Vector3;\n    } {\n        let startPositionLocal = this.startHandle.position.clone();\n        let endPositionLocal = this.endHandle.position.clone();\n\n        if (this.position.equals(new Vector3())) {\n            this.position.copy(startPositionWorld.clone());\n            this.updateMatrixWorld(true);\n        }\n\n        if (this._update.startPoint) {\n            startPositionLocal = this.worldToLocal(startPositionWorld.clone());\n            this.startHandle.position.copy(startPositionLocal);\n            this._update.startPoint = false;\n        }\n\n        if (this._update.endPoint) {\n            endPositionLocal = this.worldToLocal(endPositionWorld.clone());\n            this.endHandle.position.copy(endPositionLocal);\n            this._update.endPoint = false;\n        }\n\n        return {startPositionLocal, endPositionLocal};\n    }\n\n    protected updateMeasurement(): void {\n        const worldPositions = this.getMeasurementWorldPositions(\n            this.startPick,\n            this.endPick\n        );\n        const localPositions = this.updatePositions(worldPositions);\n        this.updateMeasurementText(worldPositions);\n        this.updateLine(localPositions.startPositionLocal, localPositions.endPositionLocal);  // this is now done by MeasurementLines.ts\n        this.updateBoundingBox();\n    }\n\n    private moveMainLineAndText(): void {\n        const mainLine = this.measurementLines.getMainLine();\n        this._textElement.update(mainLine.start, mainLine.end);\n        const localPositionStart = this.worldToLocal(mainLine.start.clone());\n        const localPositionEnd = this.worldToLocal(mainLine.end.clone());\n        this.updateLine(localPositionStart, localPositionEnd);\n    }\n\n    private updateTextElementAppearance(): void {\n        if (this._textElement){\n            if(this.selected) {\n                Object.assign(this._textElement.style, this.activeMainStyle);\n            } else {\n                const c = new Color().copyGammaToLinear(this.color);\n                const luminance = 0.299*c.r + 0.587*c.g + 0.114*c.b;\n                Object.assign(this.chosenLineStyle, {\n                    color: luminance < 0.5 ? \"#ffffff\" : \"#000000\",\n                    backgroundColor: \"#\" + this.color.getHexString(),\n                    border: `1px solid #${this.color.getHexString()}`\n                });\n                Object.assign(this._textElement.style, this.chosenLineStyle);\n            }\n        }\n    }\n\n    public dispose(): void {\n        super.dispose();\n        if (this._textElement) {\n            this._api.htmlElementPositioner.removeElement(this._textElement);\n        }\n        this.measurementLines.disposeTextElements();\n        if (this.keySubscription) this.keySubscription.unsubscribe();\n    }\n\n    private getPlanePoint = (plane: Plane, point: Vector3) => {\n        const target = new Vector3();\n        let ray = new Ray(point, plane.normal.clone().negate());\n\n        if (!ray.intersectPlane(plane, target)) {\n            ray = new Ray(point, plane.normal.clone());\n            ray.intersectPlane(plane, target);\n        }\n\n        return target;\n    };\n\n    private getRayPoint = (start: Vector3, end: Vector3, point) => {\n        const target = new Vector3();\n        const ray = new Ray(end);\n\n        ray.lookAt(start);\n        ray.closestPointToPoint(point, target);\n\n        return target;\n    };\n\n    private getTargetPosition(point: Vector3, target: SnapPick): Vector3 {\n        switch (target.snapType) {\n            case SnapType.LINE: {\n                return this.getRayPoint(target.snapLineStart, target.snapLineEnd, point);\n            }\n            case SnapType.FACE: {\n                return this.getPlanePoint(new Plane().setFromNormalAndCoplanarPoint(target.normal, target.point), point);\n            }\n            case SnapType.POINT: {\n                return target.point.clone();\n            }\n        }\n    };\n\n    private getMeasurementWorldPositions = (\n        start: SnapPick,\n        end: SnapPick\n    ) => {\n        let startPositionWorld = start.point;\n        let endPositionWorld = end.point;\n\n        const hasStartPoint = true;\n        const hasEndPoint = true;\n        const hasNoPoints = !(hasStartPoint || hasEndPoint);\n\n        if (hasNoPoints) {\n            if (start.snapLineStart) {\n                startPositionWorld = start.snapLineStart;\n                endPositionWorld = this.getTargetPosition(startPositionWorld, end);\n            } else if (end.snapLineStart) {\n                endPositionWorld = end.snapLineStart;\n                startPositionWorld = this.getTargetPosition(endPositionWorld, start);\n            } else {\n                endPositionWorld = end.point;\n                startPositionWorld = this.getTargetPosition(endPositionWorld, start);\n            }\n        }\n\n        if (!hasEndPoint) {\n            endPositionWorld = this.getTargetPosition(startPositionWorld, end);\n        }\n\n        if (!hasStartPoint) {\n            startPositionWorld = this.getTargetPosition(endPositionWorld, start);\n        }\n\n        return {startPositionWorld, endPositionWorld};\n    };\n\n    public start(intersection: SnapPick): void {\n        Measurement.lastUsedMeasurement = this;\n        this.updateStartPoint(intersection);\n        this.startHandle.visible = true;\n        this.measurementLines.start(intersection);\n        this._api.renderingManager.redraw();\n    }\n\n    public update(intersection: SnapPick): void {\n        this.startHandle.visible = true;\n        this.updateEndPoint(intersection);\n        this.endHandle.visible = false;\n\n        this.updateMeasurement();\n        this.measurementLines.update(intersection);\n        this.moveMainLineAndText();\n        this.updateTextElementAppearance();\n        this._api.renderingManager.redraw();\n    }\n\n    public end(): void {\n        this.measurementLines.end();\n        this.completeIfValidEndPick();\n    }\n\n    private completeIfValidEndPick(): void {\n        if(this.endPickObjectNotCreated()) {\n            this.cancel();\n        } else {\n            this.showHandles(this.selected);\n            this.updateBoundingBox();\n            this.dispatchModifiedEvent();\n        }\n    }\n\n    private endPickObjectNotCreated(): boolean {\n        return typeof this.endPick === \"undefined\";\n    }\n\n    public dragStart(event: MovablePointerInput): void {\n        if (this._api.cursor) {\n            this._api.cursor.unsubscribe();\n            this._api.cursor.subscribe();\n        }\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = false;\n        } else {\n            this.endHandle.visible = false;\n        }\n        this.measurementLines.dragStart(event);\n    }\n\n    public dragging(event: MovablePointerInput): void {\n        if (this.selected && this._api.cursor.intersection) {\n            if (event.origin === this.startHandle) {\n                this.updateStartPoint(this._api.cursor.intersection);\n                this.updateEndPoint(this.endPick);\n            } else {\n                this.updateEndPoint(this._api.cursor.intersection);\n                this.updateStartPoint(this.startPick);\n            }\n\n            this.updateMeasurement();\n            this.measurementLines.dragging(event);\n            this.moveMainLineAndText();\n            this._api.renderingManager.redraw();\n        }\n    }\n\n    public dragEnd(event: MovablePointerInput): void {\n        this.updateBoundingBox();\n        if (event.origin === this.startHandle) {\n            this.startHandle.visible = true;\n        } else {\n            this.endHandle.visible = true;\n        }\n        this.measurementLines.dragEnd();\n        this._api.cursor.unsubscribe();\n        this.dispatchModifiedEvent();\n    }\n\n    select(): void {\n        super.select();\n        this.keySubscription = this._api.inputHandler.keyDown$.subscribe(this.onKey);\n    }\n\n    deselect(): void {\n        super.deselect();\n        if (this.keySubscription) this.keySubscription.unsubscribe();\n    }\n\n    private onKey = (e: KeyboardEvent) => {\n        if (!this.selected) return;\n\n        if (e.code === Key.Tab) {\n            e.preventDefault();\n            this.switchAxis();\n        }\n        if (e.code === \"KeyD\") {\n            e.preventDefault();\n            this.switchDirection();\n        }\n    };\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { Model } from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport { TapMoveTapTool } from \"./TapMoveTapTool\";\nimport { Measurement } from \"../Markups/Measurement\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {SnapPick, WebglViewerEventName} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Color} from \"three\";\nimport {MeasurementElement} from \"../Markups/MeasurementElement\";\nimport {Key} from \"ts-key-enum\";\nimport {merge} from \"rxjs\";\n\nexport class MeasurementTool extends TapMoveTapTool<Measurement> {\n    static get Name(): string { return \"measurement\" };\n    private hideableMeasurementElements: MeasurementElement[] = [];\n    private unhideableMeasurementElement: MeasurementElement[] = [];\n\n    constructor(api: Api, private model: Model, markupSettings: MarkupSettings) {\n        super(MeasurementTool.Name, api, markupSettings);\n        this.api.eventDispatcher.subscribe(WebglViewerEventName.NavigationEnd, () => this.hideOverlappingMeasurementElements())\n\n        merge(this.api.inputHandler.keyDown$, this.api.inputHandler.keyUp$).subscribe(e => {\n            if (this.object && e.key === Key.Shift)\n                (this.object as Measurement).vertical = e.type === \"keydown\";\n        });\n    }\n\n    protected _createMarkup(): Measurement {\n        const markup = new Measurement(this.name, this.markupSettings.color, this.api, this.markupSettings);\n        markup.onSelected = () => this.hideOverlappingMeasurementElements();\n        this.model.add(markup);\n        return markup;\n    }\n\n    add(start: SnapPick, end: SnapPick, color?: Color): Measurement {\n        const m = super.add(start, end, color);\n        this.api.htmlElementPositioner.update();\n        this.hideOverlappingMeasurementElements();\n        return m;\n    }\n\n    private hideOverlappingMeasurementElements(): void {\n        this.hideableMeasurementElements.length = 0;\n        this.unhideableMeasurementElement.length = 0;\n\n        for (const markup of this.model.children) {\n            if (markup.name === \"measurement\") {\n                const measurement = markup as Measurement;\n                const mainLineElement = measurement.getTextElement();\n                mainLineElement.style.visibility = \"visible\";\n\n                if (measurement.selected || measurement === Measurement.lastUsedMeasurement) {\n                    this.unhideableMeasurementElement.push(mainLineElement)\n                    this.unhideableMeasurementElement.push(...measurement.getAxisLinesTextElements())\n                } else {\n                    this.hideableMeasurementElements.push(mainLineElement);\n                }\n            }\n        }\n\n        // check selected measurement labels against unselected measurement labels and hide only the unselected when they overlap\n        for (const hme of this.unhideableMeasurementElement) {\n            for (const ume of this.hideableMeasurementElements) {\n                const rs = hme.getBoundingClientRect();\n                const ru = ume.getBoundingClientRect();\n\n                if (this.doBoundingRectsOverlap(rs, ru)) {\n                   ume.style.visibility = \"hidden\";\n                }\n            }\n        }\n\n        // compare unselected measurement labels and hide both if they overlap\n        for (let i = 0; i < this.hideableMeasurementElements.length - 1; i++) { // not -1?\n            for (let j = i + 1; j < this.hideableMeasurementElements.length; j++) {\n                const ri = this.hideableMeasurementElements[i].getBoundingClientRect();\n                const rj = this.hideableMeasurementElements[j].getBoundingClientRect();\n\n                if (this.doBoundingRectsOverlap(ri, rj)) {\n                    this.hideableMeasurementElements[i].style.visibility = \"hidden\";\n                    this.hideableMeasurementElements[j].style.visibility = \"hidden\";\n                }\n            }\n        }\n    }\n\n    private doBoundingRectsOverlap(r1: DOMRect, r2: DOMRect): boolean {\n        return !(\n            r1.right < r2.left ||\n            r2.right < r1.left ||\n            r1.bottom < r2.top ||\n            r2.bottom  < r1.top\n        )\n    }\n}\n","import { StickyElement } from \"@technology/webgl-viewer/dist/esnext/CustomObjects/StickyElement\";\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {Color, Vector3} from \"three\";\nimport {Key} from \"ts-key-enum\";\n\nexport class TextElement extends StickyElement {\n    static get is(): string {\n        return \"text-element\";\n    }\n\n    constructor(\n        private _api: Api,\n        _position: Vector3,\n        private _text?: string,\n        private _textColor: Color = new Color(\"rgb(0,0,0)\")\n    ) {\n        super(_api.camera, _position, (pos: Vector3) => {\n            // left top\n            pos.y = pos.y - this.height;\n        });\n\n        this.spellcheck = false;\n        this.contentEditable = \"true\";\n        this.style.margin = \"-1px -1px 0px 0px\";\n        this.style.padding = \"0px 3px 0px 3px\";\n        this.style.borderBottom = \"2px solid black\";\n        this.style.fontFamily = '\"Open Sans\", sans-serif';\n        this.style.textShadow = \"-1px 0 #ffffff,0 1px #ffffff,1px 0 #ffffff,0 -1px #ffffff\";\n        this.style.overflow = \"hidden\";\n        this.style.fontSize = \"1.5em\";\n        this.style.letterSpacing = \"1px\";\n        this.style.minHeight = \"33px\";\n        this.style.height = \"auto\";\n        this.innerText = \"\";\n    }\n\n    set borderColor(color: Color) {\n        this.style.borderColor = `#${color.getHexString()}`;\n    }\n\n    set textColor(color: Color) {\n        this._textColor = color;\n        this.style.color = `#${this._textColor.getHexString()}`;\n    }\n\n    get textColor(): Color {\n        return this._textColor;\n    }\n\n    public selectText = () => {\n        this.contentEditable = \"true\";\n        if (\n            typeof window.getSelection !== \"undefined\" &&\n            typeof document.createRange !== \"undefined\"\n        ) {\n            var range = document.createRange();\n            range.selectNodeContents(this);\n            var sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n\n    private onKeyPress = (event: KeyboardEvent) => {\n        if (event.code === Key.Enter) {\n            this.blur();\n            window.getSelection().removeAllRanges();\n        }\n    };\n\n    connectedCallback(): void {\n        this.addEventListener(\"keypress\", this.onKeyPress);\n    }\n\n    disconnectedCallback(): void {\n        this.removeEventListener(\"keypress\", this.onKeyPress);\n    }\n\n    updatePosition(canvas: ClientRect): void {\n        super.updatePosition(canvas);\n\n        if (this.hidden) {\n            this.style.display = \"none\";\n        }\n    }\n}\n\n// Using eval to allow code to be removed by tree-shaking during build\n// tslint:disable-next-line:no-eval\neval(\"if (window.customElements && typeof TextElement !== 'undefined') window.customElements.define(TextElement.is, TextElement)\");\n","import {TextElement} from \"./TextElement\";\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport {Color, Vector2, Vector3} from \"three\";\nimport {getRayIntersection, rayToWorldPosition} from \"@technology/webgl-viewer/dist/esnext/Helpers/utils\";\nimport {Model, SelectableModel} from \"@technology/webgl-viewer/dist/esnext/Model\";\nimport {LineMarkup} from \"./LineMarkup\";\nimport {worldToScreenPoint} from \"@technology/webgl-viewer/dist/esnext/Picker/Picker\";\nimport {SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {Key} from \"ts-key-enum\";\n\nexport class TextMarkup extends LineMarkup {\n    private htmlElementIsDragging: boolean;\n    public textElement: TextElement;\n    private _offset = new Vector2();\n    private width: number = 0;\n\n    get text(): string {\n        return this.textElement.innerHTML;\n    }\n\n    set text(value: string) {\n        this.textElement.innerHTML = value;\n    }\n\n    constructor(name: string, color: Color, api: Api, private getTextCallback: (markup: TextMarkup) => string) {\n        super(name, color, api);\n        this.textElement = new TextElement(this._api, new Vector3());\n        this.textElement.hidden = true;\n        this.textElement.addEventListener(\"blur\", () => this.dispatchModifiedEvent());\n        this._api.htmlElementPositioner.addElement(this.textElement);\n\n        this.textElement.addEventListener(\"click\", this.onClick);\n        this.textElement.addEventListener(\"blur\", this.onBlur);\n\n        this.textElement.addEventListener(\"mousedown\", this.onHtmlDragStart);\n        this.textElement.addEventListener(\"pointerdown\", this.onHtmlDragStart);\n\n        window.addEventListener(\"mousemove\", this.onHtmlDrag);\n        window.addEventListener(\"pointermove\", this.onHtmlDrag);\n\n        window.addEventListener(\"mouseup\", this.onHtmlDragEnd);\n        window.addEventListener(\"pointerup\", this.onHtmlDragEnd);\n\n\n        window.addEventListener(\"keydown\", this.textMarkupKeyPress);\n\n        this.textElement.addEventListener(\"dblclick\", this.textElement.selectText);\n\n        const updateFunc = this.textElement.updatePosition.bind(this.textElement);\n        this.textElement.updatePosition = (() => {\n            const direction = new Vector3();\n            const start = new Vector3();\n            const end = new Vector3();\n            return canvas => {\n                updateFunc(canvas);\n                if (this.startHandle && this.endHandle) {\n                    this.startHandle.getWorldPosition(start);\n                    this.endHandle.getWorldPosition(end);\n                    const endScreenPoint = worldToScreenPoint(\n                        end,\n                        this._api.camera,\n                        canvas.width,\n                        canvas.height\n                    );\n                    if (endScreenPoint) {\n                        start.project(this._api.camera);\n                        end.project(this._api.camera);\n                        direction.subVectors(start, end);\n\n                        this.textElement.adjustAlign = (direction.x > 0 && endScreenPoint.x > this.width || direction.x < 0 && endScreenPoint.x + this.width > canvas.right) ?\n                            (pos: Vector3) => {\n                                pos.y = pos.y - this.textElement.height;\n                                pos.x = pos.x - this.width;\n                            } :\n                            (pos: Vector3) => {\n                                pos.y = pos.y - this.textElement.height;\n                            }\n                    }\n                }\n            };\n        })();\n        this.applyColor(color);\n    }\n\n    private textMarkupKeyPress = (e: KeyboardEvent) => {\n        if (e.code === Key.Escape) {\n            if (this.parent && this.textElement.isContentEditable) {\n                this.dispose();\n                this.parent.remove(this);\n            }\n        }\n    };\n\n    protected applyColor(color: Color): void {\n        super.applyColor(color);\n        if (this.textElement) {\n            this.textElement.textColor = color;\n            this.textElement.borderColor = color;\n        }\n    }\n\n    private onClick = () => {\n        if (!this.selected) {\n            const models = this._api.models.getIterable() as IterableIterator<Model & SelectableModel>;\n\n            for (const model of models) {\n                if (model.clearSelection)\n                    model.clearSelection();\n            }\n            this.select();\n        }\n    };\n\n    private onBlur = () => {\n        this.textElement.contentEditable = \"false\";\n        this.width = this.textElement.width;\n    };\n\n    private updateTextElement(): void {\n        const elementPosition = this.position.clone().add(this.endHandle.position);\n        this.textElement.position.copy(elementPosition);\n    }\n\n    private onHtmlDragStart = event => {\n        event.stopImmediatePropagation();\n        this.htmlElementIsDragging = true;\n        this._api.cursor.subscribe();\n        const pos = this.endHandle.getWorldPosition(new Vector3());\n        const offset = worldToScreenPoint(\n            pos,\n            this._api.camera,\n            this._api.container.clientWidth,\n            this._api.container.clientHeight\n        );\n        if (offset)\n            this._offset.set(offset.x - event.x, offset.y - event.y);\n    };\n\n    private onHtmlDrag = event => {\n        if (this.htmlElementIsDragging && this.selected) {\n            if (event.x !== 0 && event.y !== 0) {\n                const rayIntersection = getRayIntersection(\n                    this._offset.x + event.x,\n                    this._offset.y + event.y,\n                    this._api.camera\n                );\n                rayIntersection.point = rayToWorldPosition(\n                    rayIntersection.caster.ray,\n                    this._api.camera,\n                    this.position\n                );\n                this.update(rayIntersection);\n            }\n        }\n    };\n\n    private onHtmlDragEnd = () => {\n        if (this.htmlElementIsDragging) {\n            this.textElement.style.pointerEvents = \"all\";\n            this.htmlElementIsDragging = false;\n            this._api.cursor.unsubscribe();\n            this.dispatchModifiedEvent();\n        }\n    };\n\n    public update(intersection: SnapPick): void {\n        super.update(intersection);\n        this.textElement.hidden = false;\n        this.textElement.style.pointerEvents = \"none\";\n    }\n\n    public end(): void {\n        super.end();\n\n        this.textElement.style.pointerEvents = \"all\";\n\n        this.updateTextElement();\n\n        this.textElement.selectText();\n        setTimeout(() => this.textElement.focus(), 100);\n        if (this.getTextCallback)\n            this.text = this.getTextCallback(this);\n        else if (this._api.renderingManager.isMobile())\n            this.text = window.prompt();\n    }\n\n    public updateLine(start: Vector3, end: Vector3): void {\n        super.updateLine(start, end);\n        this.updateTextElement();\n    }\n\n    public select(): void {\n        super.select();\n        this.textElement.style.pointerEvents = \"all\";\n        this.textElement.borderColor = this.color;\n    }\n\n    public deselect(): void {\n        super.deselect();\n        this.textElement.style.pointerEvents = \"none\";\n        this.textElement.borderColor = this.color;\n    }\n\n    protected showHandles(value: boolean): void {\n        this.startHandle.visible = value;\n        this.endHandle.visible = false;\n    }\n\n    public dispose(): void {\n        super.dispose();\n        this._api.htmlElementPositioner.removeElement(this.textElement);\n        this._api.renderingManager.redraw();\n    }\n}\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { TapMoveTapOnPlaneTool } from \"./TapMoveTapOnPlaneTool\";\nimport { TextMarkup } from \"../Markups/TextMarkup\";\nimport { MarkupModel } from \"../MarkupModel\";\nimport {SnapPick} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {MarkupSettings} from \"../MarkupSettings\";\nimport {Color} from \"three\";\n\nexport class TextMarkupTool extends TapMoveTapOnPlaneTool<TextMarkup> {\n    static get Name(): string { return \"textMarkup\" };\n\n    getTextCallback: (markup: TextMarkup) => string;\n\n    constructor(api: Api, model: MarkupModel, markupSettings: MarkupSettings) {\n        super(TextMarkupTool.Name, api, model, markupSettings);\n    }\n\n    protected _createMarkup(): TextMarkup {\n        const markup = new TextMarkup(this.name, this.markupSettings.color, this.api, this.getTextCallback);\n        this.model.add(markup);\n        return markup;\n    }\n\n    add(startPick: SnapPick, endPick: SnapPick, color?: Color, text?: string): TextMarkup {\n        const m = super.add(startPick, endPick, color) as TextMarkup;\n        m.text = text;\n        m.textElement.hidden = false;\n        m.textElement.blur();\n        return m;\n    }\n}\n","import {Color} from \"three\";\n\nexport class MarkupSettings {\n    color: Color = new Color(\"#EC00B6\");\n}\n\n","export const version = \"DEV_BUILD\";\n","import { Api } from \"./Api\";\nimport { version } from \"./Version\";\nimport {QualityPreset} from \"./common\";\n\nexport abstract class WebglViewerPlugin {\n    get version(): string {\n        return version;\n    }\n\n    abstract get name(): string;\n    abstract set api(api: Api);\n}\n\nexport interface QualityAwarePlugin {\n    applyQualityPreset(quality: QualityPreset): void;\n}\n","import {\n\tOrthographicCamera,\n\tPlaneGeometry,\n\tMesh\n} from '../../../build/three.module.js';\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\n// from this module like Pass.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","import {\n\tColor\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\tthis._oldClearColor = new Color();\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","import { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\nimport { MarkupModel } from \"./MarkupModel\";\nimport { Markup } from \"./Markups/Markup\";\nimport { LineMarkupTool } from \"./Tools/LineMarkupTool\";\nimport { ArrowMarkupTool } from \"./Tools/ArrowMarkupTool\";\nimport { CloudMarkupTool } from \"./Tools/CloudMarkupTool\";\nimport { PointMarkupTool } from \"./Tools/PointMarkupTool\";\nimport { FreelineMarkupTool } from \"./Tools/FreelineMarkupTool\";\nimport { MeasurementTool } from \"./Tools/MeasurementTool\";\nimport { TextMarkupTool } from \"./Tools/TextMarkupTool\";\nimport { MarkupSettings } from \"./MarkupSettings\";\nimport { WebglViewerPlugin } from \"@technology/webgl-viewer/dist/esnext/WebglViewerPlugin\";\nimport {Color, Scene} from \"three\";\nimport {MarkupTool} from \"./Tools/MarkupTool\";\nimport {Key} from \"ts-key-enum\";\nimport {Tool} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\n\nexport class MarkupPlugin extends WebglViewerPlugin {\n    private _model: MarkupModel;\n    private _api: Api;\n    settings: MarkupSettings;\n    private renderPass: RenderPass;\n\n    get name(): string {\n        return \"markup\";\n    }\n\n    constructor(settings?: MarkupSettings) {\n        super();\n        this.settings = settings || new MarkupSettings();\n    }\n\n    getMarkups(): Markup[] {\n        return this._model.children as Markup[];\n    }\n\n    set api(api: Api) {\n        this._api = api;\n        const cursor = api.cursor;\n\n        this._model = new MarkupModel();\n        this._api.models.add(this._model, false);\n\n        this.renderPass = new RenderPass(new Scene(), this._api.camera);\n        this.renderPass.clear = false;\n        this._api.renderingManager.composer.addPassAfterSelection(this.renderPass);\n        this.renderPass.scene.add(this._model);\n\n        this._addTool(new LineMarkupTool(this._api, this._model, this.settings));\n        this._addTool(new ArrowMarkupTool(this._api, this._model, this.settings));\n        this._addTool(new CloudMarkupTool(this._api, this._model, this.settings));\n        this._addTool(new PointMarkupTool(this._api, this.settings, this._model, cursor));\n        this._addTool(new FreelineMarkupTool(this._api, this.settings, this._model));\n        this._addTool(new MeasurementTool(this._api, this._model, this.settings));\n        this._addTool(new TextMarkupTool(this._api, this._model, this.settings));\n\n        this.startKeyListener();\n    }\n\n    private startKeyListener(): void {\n        this._api.inputHandler.keyDown$.subscribe((e: KeyboardEvent) => {\n            if (e.code === Key.Delete || e.code === Key.Backspace)\n                this.removeSelected();\n        });\n    }\n\n    private _addTool(tool: MarkupTool & Tool): void {\n        this._api.toolManager.addTool(tool);\n        tool.onFinished = () => {\n            // restart\n            tool.enabled = false;\n            tool.enabled = true;\n        };\n        tool.onCanceled = () => {\n            this._api.toolManager.activateDefaultTool();\n        };\n    }\n\n    public removeById(id: number | number[]): void {\n        const ids = id instanceof Array ? id : [id];\n        ids.forEach(markupId => {\n            const markup = this._model.children.find(m => m.id === markupId) as Markup;\n            this.removeMarkup(markup);\n        });\n        this._api.renderingManager.redraw();\n    }\n\n    private removeMarkup(markup: Markup): void {\n        markup.dispose();\n        this._model.remove(markup);\n        this._api.selection.subtract(this._model.name, [markup.id], this);\n    }\n\n    private removeSelected(): void {\n        for (const o of [...this._model.children]) {\n            const markup = o as Markup;\n            if (markup.selected) this.removeMarkup(markup);\n        }\n        this._api.renderingManager.redraw();\n    }\n\n    public clear(): void {\n        for (const markup of [...this._model.children]) {\n            this.removeMarkup(markup as Markup);\n        }\n        this._api.renderingManager.redraw();\n    }\n\n    public colorSelectedMarkups(color: Color): void {\n        if (this._api.selection.has(this.name)) {\n            for (const id of this._api.selection.get(this.name))\n                (this._model.getObjectById(id) as Markup).color = color;\n        }\n    }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","config","Promise","value","closed","next","x","UnsubscriptionErrorImpl","Error","errors","name","Subscription","unsubscribe","_ctorUnsubscribe","_a","_parentOrParents","isFunction","isArray","index","sub","isObject","e","add","subscription","indexOf","subscriptions","subscriptionIndex","empty","rxSubscriber","Subscriber","_super","_this","destination","destinationOrNext","syncErrorThrowable","tslib_1.__extends","error","subscriber","isStopped","_next","_error","_complete","SafeSubscriber","context","observerOrNext","complete","_context","_parentSubscriber","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","syncErrorValue","wrappedComplete","parent","syncErrorThrown","hostReportError","closed_1","nextOrObserver","fns","input","Observable","subscribe","lift","operator","observable","source","sink","_subscribe","canReportError","forEach","promiseCtor","reject","operations","length","toPromise","getPromiseCtor","ObjectUnsubscribedErrorImpl","message","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","len","i","hasError","thrownError","asObservable","AnonymousSubject","BehaviorSubject","scheduler","isScheduler","array","ArgumentOutOfRangeErrorImpl","project","MapOperator","MapSubscriber","thisArg","count","result","subscribeToPromise","err","Symbol","iterator","iterable","item","subscribeToObservable","obj","schedule","scheduleIterable","Symbol_iterator","done","isInteropObservable","isIterable","SimpleInnerSubscriber","SimpleOuterSubscriber","notifyError","notifyComplete","innerSubscriber","concurrent","Number","MergeMapSubscriber","innerSubscription","hasCompleted","buffer","last","observables","FilterOperator","FilterSubscriber","Vector3Const","freeze","Vector3","Model","Object3D","[object Object]","super","boundingBox","Box3","up","copy","modelId","ids","resolve","callback","matrix","newTransform","Matrix4","fromArray","elements","oldTransform","matrixWorld","clone","decompose","position","quaternion","scale","bbTransform","multiply","invert","applyMatrix4","updateMatrixWorld","Markup","_api","eventDispatcher","dispatch","CustomEvent","detail","color","_color","applyColor","m","coloredMaterials","renderingManager","redraw","setFromObject","model","MarkupModel","updateBoundingBox","selected","settingsDispatcher","settings","selectionColor","traverse","object","geometry","dispose","material","FrustumHelper","frustum","out","Frustum","planes","box","planesIntersectBoxInternal","point","clipPlanes","insideClipPlanes","clipPlane","distanceToPoint","contain","normal","set","max","min","y","z","ModelId","clearSelection","id","getObjectById","select","children","markup","deselect","caster","containedOnly","planesIntersectBox","markups","planesContainBox","push","childrenIds","map","o","intersectsBox","intersections","intersectObjects","intersectTarget","intersection","find","inn","userData","isMovable","findMarkup","pickPriority","assign","union","getBoundingBox","makeEmpty","expandByScalar","Caster","Raycaster","getRayIntersection","camera","vector","raycaster","window","innerWidth","innerHeight","unproject","dir","normalize","rayToWorldPosition","ray","direction","distance","distanceTo","multiplyScalar","MILLIMETERS_IN_FOOT","MILLIMETERS_IN_INCH","lengthUnits","mm","inMillimeters","symbol","cm","km","ft","in","yd","mi","custom","formatLength","millimeters","unit","decimals","roundToDecimals","Math","pow","round","distanceFormatter","lengthUnit","positionFormatter","lengthFormatter","vec3","createScreenStaticSizeMesh","api","adjustScale","marker","Mesh","makeScreenStaticSize","mesh","renderOrder","onBeforeRender","getProjectionCompensatingScale","getWorldPosition","createArrowGeometry","size","ConeGeometry","makeRotationFromEuler","Euler","PI","setPosition","TakeOperator","total","TakeSubscriber","call","resultSelector","SwitchMapOperator","SwitchMapSubscriber","TakeUntilOperator","takeUntilSubscriber","notifierSubscription","seenValue","TakeUntilSubscriber","DoOperator","TapSubscriber","noop","_tapComplete","_tapError","_tapNext","allowInput","options","allowPointerInput","mouseButton","button","isTouch","touchCount","controlsReleased","inputs","merge","pointerUp$","pipe","filter","pointerMove$","anyMouseButtonDown","hasIntersection","addIntersection","picker","models","async","pick","Vector2","rayCaster","screenPositionToRay","container","Ray","setFromCamera","screenPositionToRayTracePoint","dimensions","getBoundingClientRect","left","clientWidth","top","clientHeight","worldToScreenPoint","pos","canvasWidth","canvasHeight","matrixWorldInverse","projectionMatrix","event","removeSelf","undefined","makeMovable","target","callbackTarget","mixedTarget","active","dragSent","moveCallback","origin","dragging","upCallback","dragEnd","inputHandler","pointerDown$","mergeMap","tap","dragStart","switchMap","takeUntil","makeMovableOnPlane","plane","prePlaned","Plane","pickOnPlane","intersectPlane","negate","setFromNormalAndCoplanarPoint","line","linewidth","resolution","dashScale","dashSize","dashOffset","gapSize","opacity","uniforms","UniformsUtils","UniformsLib","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","ShaderMaterial","type","ShaderLib","clipping","dashed","defineProperties","enumerable","get","diffuse","setValues","isLineMaterial","LineSegmentsGeometry","InstancedBufferGeometry","setIndex","setAttribute","Float32BufferAttribute","isLineSegmentsGeometry","start","attributes","instanceStart","end","instanceEnd","needsUpdate","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","lineSegments","Float32Array","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","setColors","colors","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","WireframeGeometry","fromLineSegments","isGeometry","isBufferGeometry","console","setFromBufferAttribute","Sphere","center","getCenter","maxRadiusSq","il","fromBufferAttribute","distanceToSquared","radius","sqrt","isNaN","toJSON","applyMatrix","warn","LineGeometry","isLineGeometry","points","fromLine","LineSegments2","random","isLineSegments2","computeLineDistances","lineDistances","data","j","l","instanceDistanceBuffer","raycast","Vector4","ssOrigin","ssOrigin3","mvMatrix","Line3","closestPoint","intersects","threshold","params","Line2","lineWidth","near","at","w","multiplyMatrices","deltaDist","t","lerp","param","closestPointToPointParameter","zPos","MathUtils","isInClipSpace","isInside","pointOnLine","distanceSqToSegment","face","faceIndex","uv","uv2","MeshLine","defines","USE_DASH","renderer","getSize","vectors","positions","positionsAttribute","toArray","instanceStartAttr","getAttribute","onUploadCallback","_box","_inverseMatrix","_ray","_frustum","step","LineSegments","vStart","vEnd","intersect","interPoint","far","lineStart","lineEnd","segmentPoint","containsPoint","LineMarkup","_startGeometry","SphereGeometry","_endGeometry","_handleMaterial","MeshBasicMaterial","depthTest","depthWrite","transparent","_lineMaterial","createLine","startHandle","endHandle","updateLine","startPick","init","endPick","localPosition","worldToLocal","visible","showHandles","dispatchModifiedEvent","_line","update","cursor","activeCallback","remove","MarkupTool","allowedSnapTypes","snapTypes","_snapTypes","enabled","keySubscription","keyDown$","code","preventDefault","cancel","onFinished","onCanceled","TapMoveTool","_name","finished","_createMarkup","onEnd","TapMoveTapTool","markupSettings","createTapObservable","calculateIntersection","onMove","onStart","onEnabled","LineMarkupTool","Name","TapMoveTapOnPlaneTool","tap$","createSnappedTapObservable","tap2$","handle","take","ArrowMarkup","lookAt","_tmp","ArrowMarkupTool","TapTool","insert","CloudShape","width","height","cloudPoints","getPoints","maxX","maxY","newX","newY","translatePoints","CloudMarkup","_centerGeometry","Map","_camera","_cloudMaterial","createEdgeHandles","_cloudShape","updateCloud","_edgeHandlesMap","keyPair","entries","updateShape","updateHandlePositions","v","abs","keys","CloudMarkupTool","StickyElement","HTMLElement","adjustAlign","style","zIndex","_currentAlign","willChange","_originalPosition","is","canvas","screenPoint","delta","right","bottom","display","transform","stopImmediatePropagation","PositionElement","_position","spellcheck","userSelect","webkitUserSelect","pointerEvents","background","borderRadius","padding","fontFamily","overflow","fontSize","boxShadow","hidden","_formatter","customLengthFormatter","borderColor","getHexString","text","_text","innerText","updatePosition","addEventListener","removeEventListener","eval","PointMarkup","updateAllPositionText","updatePositionText","_textElement","htmlElementPositioner","removeElement","_positionElementOptions","updatePositionOptions","addElement","updateText","PointMarkupTool","TapDragOnPlaneTool","pointerSubscription","getIterable","PickablePlane","coplanarPoint","_constant","constant","setFromPoints","intersectsPlane","FreelineMarkup","_meshLineMaterial","createMeshLine","updateMeshLine","_currentMeshLine","getWorldDirection","addVectors","_pickablePlane","adjustPickablePlane","FreelineMarkupTool","from","MeasurementElement","textStyleTop","prefix","_prefix","_distance","MeasurementLines","_measurementElementOptions","startHandlePositionGeometry","backgroundColor","border","fontWeight","createTextElements","createLines","updateAllMeasurementText","axisLines","startHandlePositionMarkerMaterial","endHandlePositionMarkerMaterial","blackOnWhiteStyle","axisLine3Lines","axisLineDirections","lineMaterialParameters","baseMaterialParameters","dashedLineMaterialParameters","lineMaterial","textElements","startIntersection","updateAppearance","startHandlePosition","endHandlePosition","startSnapType","snapType","updateTextElementsColors","axisNumber","getParallelGlobalAxis","updateTextElementStyle","globalXStyle","globalYStyle","globalZStyle","updateMeasurementOptions","textElement","endIntersection","snapToLineOrPoint","_vertical","endSnap","endPoint","endNormal","startSnap","startPoint","startNormal","startLineDirection","snapLineStart","snapLineEnd","endLineDirection","updateForTwoPoints","updateForLineAndPoint","updateForTwoFaces","updateForFaceAndLine","updateForTwoLines","updateForFaceAndPoint","measurementPlane","measurementNormal","projectPoint","startPointEndPlaneProjectionPosition","endPlaneHorizontalLine","planeHorizontalDirection","endPlaneIntersectionPoint","closestPointToPoint","minimumLineLength","updatePositions","crossVectors","forward","point1","point2","linePoint","lineEdgeNormal","lineDirection","areDirectionsParallel","calculatePlaneHorizontalDirection","directionIndex","startEdgeLine","startEdgePerpendicularPoint","edgeNormal1","lineDirection1","edgeNormal2","lineDirection2","edgeNormalIndex","n","endEdgeLine","endEdgePerpendicularPoint","faceNormal","facePoint","arePointOnTheSamePlane","normal1","normal2","dir1","dir2","dot","areDirectionsOrthogonal","equals","zero","updateAxisLinePositions","clearMainLinePosition","axisIndex","updateAxisLinePosition","updateLineCalculations","removeFromMarkup","nonZeroLines","updateTextElementVisibility","updateTextElementPosition","addToMarkup","labels","createPointMarkerGeometry","updateMarkerPositions","showMarkers","addLocalMarkers","startHandlePositionMarker","endHandlePositionMarker","endHandlePositionGeometry","removeAllMarkers","endsFlippedByDrag","oldStartIntersection","oldStartHandlePosition","updateMarkerVisibility","addAllLocalLines","vertical","Measurement","endArrowMarker","startArrowMarker","startScreenPos","endScreenPos","screenDistance","clamp","startPositionWorld","endPositionWorld","switchAxis","switchDirection","arrowMaterial","createArrows","createAxisLines","measurementLines","setAxisLinesColor","createArrow","adjustArrowScale","updateArrowMarkers","localToWorld","lastUsedMeasurement","onSelectionUpdate","updateTextElementAppearance","onDeselectionUpdate","onSelected","updateMeasurement","moveMainLineAndText","getMainLine","startPickObject","updateStartHandle","_update","endPickObject","updateEndHandle","startPositionLocal","endPositionLocal","worldPositions","getMeasurementWorldPositions","localPositions","updateMeasurementText","mainLine","localPositionStart","localPositionEnd","activeMainStyle","c","Color","copyGammaToLinear","luminance","r","g","chosenLineStyle","disposeTextElements","getRayPoint","getPlanePoint","updateStartPoint","updateEndPoint","completeIfValidEndPick","endPickObjectNotCreated","onKey","MeasurementTool","hideOverlappingMeasurementElements","keyUp$","key","hideableMeasurementElements","unhideableMeasurementElement","measurement","mainLineElement","getTextElement","visibility","getAxisLinesTextElements","hme","ume","rs","ru","doBoundingRectsOverlap","ri","rj","r1","r2","TextElement","_textColor","contentEditable","getSelection","document","createRange","range","selectNodeContents","sel","removeAllRanges","addRange","blur","margin","borderBottom","textShadow","letterSpacing","minHeight","textColor","onKeyPress","TextMarkup","getTextCallback","isContentEditable","htmlElementIsDragging","offset","_offset","rayIntersection","onClick","onBlur","onHtmlDragStart","onHtmlDrag","onHtmlDragEnd","textMarkupKeyPress","selectText","updateFunc","bind","endScreenPoint","subVectors","innerHTML","elementPosition","updateTextElement","setTimeout","focus","isMobile","prompt","TextMarkupTool","MarkupSettings","version","WebglViewerPlugin","Pass","needsSwap","clear","renderToScreen","FullScreenQuad","setSize","render","OrthographicCamera","PlaneGeometry","_mesh","defineProperty","RenderPass","scene","overrideMaterial","clearColor","clearAlpha","clearDepth","_oldClearColor","writeBuffer","readBuffer","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getClearAlpha","setClearColor","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","MarkupPlugin","_model","renderPass","Scene","composer","addPassAfterSelection","_addTool","startKeyListener","removeSelected","tool","toolManager","addTool","activateDefaultTool","markupId","removeMarkup","selection","subtract","has"],"mappings":"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"}