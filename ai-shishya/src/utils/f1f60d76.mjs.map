{"version":3,"file":"f1f60d76.mjs","sources":["../../src/common.ts","../../src/UUID.ts"],"sourcesContent":["import { Trimble } from \"./TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nexport import HierarchyType = Fbs.HierarchyType;\nexport import PropertyType = Fbs.PropertyType;\nexport import TrimbimGeometryType = Fbs.GeometryType;\nexport import IdentifierType = Fbs.IdentifierType;\nexport import Sidedness = Fbs.Sidedness;\nexport import LineStyle = Fbs.LineStyle;\nexport import AlignmentType = Fbs.AlignmentType;\nimport {UUID} from \"./UUID\";\nimport {Color, Plane} from \"three\";\nimport {Frustum, Vector3} from \"three\";\nimport {LoadOptions} from \"@technology/webgl-viewer/dist/esnext/common\";\n\nexport interface TrimbimSettings {\n    workerUrl?: string;\n    clipPlaneColor?: Color;\n    lodSetting?: LODSetting;\n\n    // Recommended GPU memory usage (auto detected by default)\n    gpuMemoryUsage?: number;\n    geometryCacheSize?: number; // LRU cache size in bytes\n}\n\nexport interface TrimbimLoadOptions extends LoadOptions {\n    pauseGeometryUpdate?: boolean;\n    editing?: boolean;\n}\n\nexport interface WorkerCamera {\n    frustum: Frustum;\n    position: Vector3;\n    fieldOfView: number;\n    resolution: number;\n    vr: boolean;\n    trimbimSettings: TrimbimSettings;\n    clipPlanes: Plane[];\n}\n\nexport const enum LODSetting {\n    High = 0.5,\n    Optimal = 1,\n    Low = 2\n}\n\nexport interface Entity {\n    id: number;\n    identifierType: IdentifierType;\n    identifier: string | UUID | number[];\n    class: string;\n}\n\nexport const enum TrimbimPickPriority {\n    // 0 is default in ModelEntityState\n    NORMAL = 0,\n    HIGH = 1,\n    NO_PICK = 2,\n}\n\nexport interface IMetaMaterial {\n    color?: Color;\n    opacity?: number;\n    transparent?: boolean;\n    side?: Sidedness;\n    lineStyle?: LineStyle;\n    textureId?: number;\n}\n\nexport interface Property {\n    name: string;\n    value: string | number;\n    type: PropertyType;\n}\n\nexport interface PropertyDefinition {\n    name: string;\n    type: PropertyType;\n}\n\nexport interface PropertySet {\n    name?: string;\n    properties?: Property[];\n}\n\nexport interface Product {\n    name: string;\n    description: string;\n    objectType: string;\n}\n\nexport class Entity {\n    id: number;\n    identifierType: IdentifierType;\n    identifier: string | UUID | number[];\n    class: string;\n}\n\nexport const enum AggregationOperator {\n    SUM,\n    SHARED\n}\n\nexport interface PropertyAggregation {\n    propertySetName: string;\n    propertyName: string;\n    operator: AggregationOperator;\n    value?: string | number;\n    type?: PropertyType;\n}\n\nexport const enum ClipPlaneEventName {\n    Added = \"clipplaneadded\",\n    RotationEnabled = \"clipplanerotationenabled\",\n    RotationDisabled = \"clipplanerotationdisabled\"\n}\n","export const Base64ConversionTable = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\",\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\",\n    \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\",\n    \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\",\n    \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\",\n    \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\",\n    \"y\", \"z\", \"_\", \"$\"\n];\n\nexport class UUID {\n    data: Uint8Array;\n    public type = \"UUID\";\n\n    constructor({\n        data,\n        ifcGuid,\n        msGuid\n    }: {\n        data?: Uint8Array;\n        ifcGuid?: string;\n        msGuid?: string;\n    }) {\n        if (data) {\n            this.data = data;\n        } else if (ifcGuid) {\n            this.setIfcGuid(ifcGuid);\n        } else if (msGuid) {\n            this.setMsGuid(msGuid);\n        } else {\n            this.data = new Uint8Array(16);\n        }\n    }\n\n    fromJSON({ type, data }: { type: string; data: string }) {\n        if (type === \"UUID\") {\n            this.data = new Uint8Array(JSON.parse(\"[\" + data + \"]\"));\n        } else {\n            throw TypeError(\"Incorrect type, type needs to be UUID\");\n        }\n    }\n\n    equals(uuid2: UUID) {\n        for (let i = 0; i < 16; i++) {\n            if (this.data[i] !== uuid2.data[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    toString() {\n        return this.msGuid;\n    }\n\n    get msGuid() {\n        const offset = this.data.byteOffset;\n        const view = new DataView(this.data.buffer, offset, 16);\n        const b1 = view\n            .getUint32(0, true)\n            .toString(16)\n            .padStart(8, \"0\");\n        const b2 = view\n            .getUint16(4, true)\n            .toString(16)\n            .padStart(4, \"0\");\n        const b3 = view\n            .getUint16(6, true)\n            .toString(16)\n            .padStart(4, \"0\");\n        const b4 = view\n            .getUint8(8)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b5 = view\n            .getUint8(9)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b6 = view\n            .getUint8(10)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b44 = view\n            .getUint8(11)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b45 = view\n            .getUint8(12)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b46 = view\n            .getUint8(13)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b47 = view\n            .getUint8(14)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b48 = view\n            .getUint8(15)\n            .toString(16)\n            .padStart(2, \"0\");\n        return `${b1}-${b2}-${b3}-${b4}${b5}-${b6}${b44}${b45}${b46}${b47}${b48}`;\n    }\n\n    setMsGuid(guid: string) {\n        this.data = this.data || new Uint8Array(16);\n        const offset = this.data.byteOffset;\n        const view = new DataView(this.data.buffer, offset, 16);\n        const getValue = (offset: number, size: number) => parseInt(guid.slice(offset, offset + size), 16);\n        view.setUint32(0, getValue(0, 8), true);\n        view.setUint16(4, getValue(9, 4), true);\n        view.setUint16(6, getValue(14, 4), true);\n        view.setUint8(8, getValue(19, 2));\n        view.setUint8(9, getValue(21, 2));\n        view.setUint8(10, getValue(24, 2));\n        view.setUint8(11, getValue(26, 2));\n        view.setUint8(12, getValue(28, 2));\n        view.setUint8(13, getValue(30, 2));\n        view.setUint8(14, getValue(32, 2));\n        view.setUint8(15, getValue(34, 2));\n    }\n\n    get ifcGuid() {\n        const guid16 = new Uint8Array(24);\n        const data = this.data;\n        /* no convert 24bit so  append 0's and use ToUInt32 */\n        guid16[0] = data[15];\n        guid16[1] = data[14];\n        guid16[2] = data[13];\n        guid16[3] = 0;\n        guid16[4] = data[12];\n        guid16[5] = data[11];\n        guid16[6] = data[10];\n        guid16[7] = 0;\n        guid16[8] = data[9];\n        guid16[9] = data[8];\n        guid16[10] = data[6];\n        guid16[11] = 0;\n        guid16[12] = data[7];\n        guid16[13] = data[4];\n        guid16[14] = data[5];\n        guid16[15] = 0;\n        guid16[16] = data[0];\n        guid16[17] = data[1];\n        guid16[18] = data[2];\n        guid16[19] = 0;\n        guid16[20] = data[3];\n        guid16[21] = 0;\n        guid16[22] = 0;\n        guid16[23] = 0;\n\n        const b32 = new Uint32Array(guid16.buffer);\n\n        return (\n            this.toBase64(b32[5], 8) +\n            this.toBase64(b32[4], 24) +\n            this.toBase64(b32[3], 24) +\n            this.toBase64(b32[2], 24) +\n            this.toBase64(b32[1], 24) +\n            this.toBase64(b32[0], 24)\n        );\n    }\n\n    setIfcGuid(ifcGuid: string) {\n        this.data = new Uint8Array(16);\n        const b5 = this.fromBase64(ifcGuid[0], 6) + this.fromBase64(ifcGuid[1], 0);\n        const b4 =\n            this.fromBase64(ifcGuid[2], 18) +\n            this.fromBase64(ifcGuid[3], 12) +\n            this.fromBase64(ifcGuid[4], 6) +\n            this.fromBase64(ifcGuid[5], 0);\n        const b3 =\n            this.fromBase64(ifcGuid[6], 18) +\n            this.fromBase64(ifcGuid[7], 12) +\n            this.fromBase64(ifcGuid[8], 6) +\n            this.fromBase64(ifcGuid[9], 0);\n        const b2 =\n            this.fromBase64(ifcGuid[10], 18) +\n            this.fromBase64(ifcGuid[11], 12) +\n            this.fromBase64(ifcGuid[12], 6) +\n            this.fromBase64(ifcGuid[13], 0);\n        const b1 =\n            this.fromBase64(ifcGuid[14], 18) +\n            this.fromBase64(ifcGuid[15], 12) +\n            this.fromBase64(ifcGuid[16], 6) +\n            this.fromBase64(ifcGuid[17], 0);\n        const b0 =\n            this.fromBase64(ifcGuid[18], 18) +\n            this.fromBase64(ifcGuid[19], 12) +\n            this.fromBase64(ifcGuid[20], 6) +\n            this.fromBase64(ifcGuid[21], 0);\n\n        const guid0103 = this.getBytes(b0);\n        const guid0406 = this.getBytes(b1);\n        const guid0709 = this.getBytes(b2);\n        const guid1012 = this.getBytes(b3);\n        const guid1315 = this.getBytes(b4);\n        const guid1616 = this.getBytes(b5);\n\n        this.data[15] = guid0103[0]; // char: 33\n        this.data[14] = guid0103[1]; // char: 37\n        this.data[13] = guid0103[2]; // char: 39\n        this.data[12] = guid0406[0]; // char: 37\n        this.data[11] = guid0406[1]; // char: 35\n        this.data[10] = guid0406[2]; // char: 32\n        this.data[9] = guid0709[0]; // short: 32\n        this.data[8] = guid0709[1]; // short: 31\n        this.data[6] = guid0709[2];\n        this.data[7] = guid1012[0]; // int: 0021\n        this.data[4] = guid1012[1];\n        this.data[5] = guid1012[2]; // int: 0000\n        this.data[0] = guid1315[0];\n        this.data[1] = guid1315[1];\n        this.data[2] = guid1315[2];\n        this.data[3] = guid1616[0]; // long: 490F2F93\n    }\n\n    setFromBufferData(buffer: ArrayBuffer | SharedArrayBuffer, offset: number) {\n        this.data = new Uint8Array(buffer, offset, 16);\n    }\n\n    private toBase64(base10Bit24: number, bitsLeft: number) {\n        let reV = \"\";\n        if (bitsLeft > 0) {\n            let a64 = base10Bit24 & 0x3f;\n            reV += Base64ConversionTable[a64];\n            reV = this.toBase64(base10Bit24 >> 6, bitsLeft - 6) + reV;\n        }\n\n        return reV;\n    }\n\n    private fromBase64(a: string, padBits: number) {\n        // base64 encoding table for IFC base64 encoding, differs from the .NET base64!\n\n        let value = 0;\n        while (value < 64) {\n            if (Base64ConversionTable[value] == a) {\n                break;\n            }\n\n            value++;\n        }\n\n        return value << padBits; // val == 64 error..\n    }\n\n    private getBytes(long: number) {\n        const buf = new ArrayBuffer(8);\n        const representation = new Int32Array(buf);\n        representation[0] = long;\n\n        return new Uint8Array(buf);\n    }\n}\n\nexport const uuidBufferAsString = ({ data }: UUID) => {\n    return `${data[0]}${data[1]}${data[2]}${data[3]}${data[4]}${data[5]}${data[6]}${data[7]}${\n        data[8]\n    }${data[9]}${data[10]}${data[11]}${data[12]}${data[13]}${data[14]}${data[15]}`;\n};\n"],"names":["Fbs","Trimble","Technology","TrimBim","HierarchyType","PropertyType","TrimbimGeometryType","GeometryType","IdentifierType","Sidedness","LineStyle","AlignmentType","Base64ConversionTable","[object Object]","data","ifcGuid","msGuid","this","setIfcGuid","setMsGuid","Uint8Array","type","TypeError","JSON","parse","uuid2","i","offset","byteOffset","view","DataView","buffer","getUint32","toString","padStart","getUint16","getUint8","guid","getValue","size","parseInt","slice","setUint32","setUint16","setUint8","guid16","b32","Uint32Array","toBase64","b5","fromBase64","b4","b3","b2","b1","b0","guid0103","getBytes","guid0406","guid0709","guid1012","guid1315","guid1616","base10Bit24","bitsLeft","reV","a","padBits","value","long","buf","ArrayBuffer","Int32Array"],"mappings":"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"}