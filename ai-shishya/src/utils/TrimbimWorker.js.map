{"version":3,"file":"TrimbimWorker.js","sources":["../../../../node_modules/flatbuffers/js/flatbuffers.mjs","../../src/TrimBim_generated.ts","../../../webgl-viewer/node_modules/three/src/math/MathUtils.js","../../../webgl-viewer/node_modules/three/src/math/Quaternion.js","../../../webgl-viewer/node_modules/three/src/math/Vector3.js","../../../webgl-viewer/node_modules/three/src/math/Matrix3.js","../../../webgl-viewer/node_modules/three/src/math/Plane.js","../../../webgl-viewer/node_modules/three/src/math/Triangle.js","../../../webgl-viewer/node_modules/three/src/math/Box3.js","../../../webgl-viewer/node_modules/three/src/math/Sphere.js","../../../webgl-viewer/node_modules/three/src/math/Frustum.js","../../../webgl-viewer/node_modules/three/src/math/Ray.js","../../../webgl-viewer/node_modules/three/src/math/Matrix4.js","../../../webgl-viewer/node_modules/three/src/math/Vector2.js","../../../webgl-viewer/node_modules/three/src/math/Color.js","../../src/GeometryEngine/MaterialManager.ts","../../src/GeometryEngine/LayerManager.ts","../../../../node_modules/lru-cache/node_modules/yallist/iterator.js","../../../../node_modules/lru-cache/node_modules/yallist/yallist.js","../../../../node_modules/lru-cache/index.js","../../../webgl-viewer/src/Helpers/Checksum.ts","../../../webgl-viewer/src/Helpers/common-utils.ts","../../src/GeometryEngine/GeometryBuilders/GeometryBuilder.ts","../../src/common.ts","../../../../node_modules/three/src/extras/Earcut.js","../../src/GeometryEngine/GeometryBuilders/BRepGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/MeshGeometryBuilder.ts","../../src/GeometryEngine/pick-utils.ts","../../src/GeometryEngine/GeometryBuilders/LinePrimitiveBuilder.ts","../../src/GeometryEngine/GeometryBuilders/LineGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/GraphicsGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/SweptDiskSolidGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/GridGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/BillboardGeometryBuilder.ts","../../src/GeometryEngine/GeometryUpdateMessenger.ts","../../src/GeometryEngine/TrimbimUtils.ts","../../src/GeometryEngine/ModelState.ts","../../src/GeometryEngine/GeometryBuilders/AlignmentGeometryBuilder.ts","../../../webgl-viewer/src/Helpers/FrustumHelper.ts","../../src/GeometryEngine/GeometryManager.ts","../../src/GeometryEngine/BoundingBoxManager.ts","../../src/GeometryEngine/PickManager.ts","../../src/GeometryEngine/EntityHierarchyState.ts","../../src/GeometryEngine/HierarchyManager.ts","../../src/GeometryEngine/LODingGeometryManager.ts","../../src/GeometryEngine/QuantizedAxisAlignedBox3.ts","../../src/GeometryEngine/QuantizedAxisAlignedBox3TreeNode.ts","../../src/GeometryEngine/AxisAlignedBox3Tree.ts","../../src/GeometryEngine/StaticBoundingBoxManager.ts","../../src/GeometryEngine/DisplayRanges.ts","../../src/GeometryEngine/BatchingGeometryManager.ts","../../src/UUID.ts","../../src/GeometryEngine/QueryManager.ts","../../src/GeometryEngine/TextureManager.ts","../../src/GeometryEngine/WorkerTrimbimModel.ts","../../src/GeometryEngine/WorkerMessenger.ts","../../src/GeometryEngine/AbstractWorkerMessenger.ts","../../src/GeometryEngine/TrimbimWorker.ts","../../src/GeometryEngine/AbstractWorker.ts"],"sourcesContent":["/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from \"flatbuffers\"\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum SegmentType{\n  LineSegment= 0,\n  PolyLine= 1,\n  Arc= 2\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum HorizontalSegmentType{\n  Invalid= 0,\n  LineSegment= 1,\n  CircularArcSegment= 2,\n  ClothoidalArcSegment= 3,\n  TransientCurveSegment= 4\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum VerticalSegmentType{\n  Invalid= 0,\n  LineSegment= 1,\n  CircularArcSegment= 2,\n  ParabolicArcSegment= 3\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum HorizontalTransitionCurveType{\n  Invalid= 0,\n  BiquadraticParabola= 1,\n  BlossCurve= 2,\n  ClothoidCurve= 3,\n  CosineCurve= 4,\n  CubicParabola= 5,\n  SineCurve= 6\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum OwnerHistoryState{\n  Undefined= 0,\n  ReadWrite= 1,\n  ReadOnly= 2,\n  Locked= 3,\n  ReadWriteLocked= 4,\n  ReadOnlyLocked= 5\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum OwnerHistoryChangeAction{\n  NoChange= 0,\n  Modified= 1,\n  Added= 2,\n  Deleted= 3\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum PropertyType{\n  LengthMeasure= 0,\n  AreaMeasure= 1,\n  VolumeMeasure= 2,\n  MassMeasure= 3,\n  AngleMeasure= 4,\n  StringValue= 5,\n  IntValue= 6,\n  DoubleValue= 7,\n  DateTime= 8,\n  Logical= 9,\n  Boolean= 10\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum Logical{\n  False= 0,\n  True= 1,\n  Unknown= 2\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum Sidedness{\n  Single= 0,\n  Double= 1,\n  FrontFace= 2,\n  BackFace= 3\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum LineStyle{\n  Normal= 0,\n  Border= 1,\n  Center= 2,\n  DashDot= 3,\n  Dashed= 4,\n  Divide= 5,\n  Dot= 6,\n  Hidden= 7,\n  ISO02W100= 8,\n  ISO03W100= 9,\n  ISO04W100= 10,\n  ISO05W100= 11,\n  ISO06W100= 12,\n  ISO07W100= 13,\n  ISO08W100= 14,\n  ISO09W100= 15,\n  ISO10W100= 16,\n  ISO11W100= 17,\n  ISO12W100= 18,\n  ISO13W100= 19,\n  ISO14W100= 20,\n  ISO15W100= 21\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum IdentifierType{\n  Guid= 0,\n  String= 1,\n  SpatialHash= 2,\n  DwgHandle= 3,\n  None= 4\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum GeometryType{\n  None= 0,\n  BRep= 1,\n  TriangleMesh= 2,\n  TriangleMesh8= 3,\n  SweptDiskSolid= 4,\n  GraphicsContainer= 5,\n  BRepWithUV= 6,\n  BRepWithNormals= 7,\n  AlignmentCurve= 8,\n  GridLineContainer= 9,\n  TexturedTriangleMesh= 10,\n  TexturedTriangleMesh8= 11,\n  CoordinateGeometryPoint= 12,\n  BillboardText= 13,\n  Billboard= 14,\n  TexturedBillboard= 15,\n  Bolt= 16\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum TextureType{\n  None= 0,\n  Png= 1,\n  JPeg= 2\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum LayoutType{\n  Invalid= 0,\n  LeftToRight= 1,\n  RightToLeft= 2,\n  Vertical= 3\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum AlignmentType{\n  Invalid= 0,\n  LeftTop= 1,\n  LeftCenter= 2,\n  LeftBottom= 3,\n  CenterTop= 4,\n  CenterCenter= 5,\n  CenterBottom= 6,\n  RightTop= 7,\n  RightCenter= 8,\n  RightBottom= 9,\n  LeftBaseLine= 10,\n  CenterBaseLine= 11,\n  RightBaseLine= 12,\n  LeftBottomBaseLine= 13,\n  CenterBottomBaseLine= 14,\n  RightBottomBaseLine= 15\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum BoltType{\n  None= 0,\n  Normal= 1,\n  Round= 2,\n  Countersunk= 3,\n  Stud= 4\n}};\n\n/**\n * @enum {number}\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport enum HierarchyType{\n  Unknown= 0,\n  SpatialHierarchy= 1,\n  SpatialContainment= 2,\n  Containment= 3,\n  ElementAssembly= 4,\n  Group= 5,\n  System= 6,\n  Zone= 7\n}};\n\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Vec3f {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Vec3f\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec3f {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nx():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_x(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ny():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_y(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nz():number {\n  return this.bb!.readFloat32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_z(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number x\n * @param number y\n * @param number z\n * @returns flatbuffers.Offset\n */\nstatic createVec3f(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\n  builder.prep(4, 12);\n  builder.writeFloat32(z);\n  builder.writeFloat32(y);\n  builder.writeFloat32(x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Vec2d {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Vec2d\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec2d {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nx():number {\n  return this.bb!.readFloat64(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_x(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ny():number {\n  return this.bb!.readFloat64(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_y(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number x\n * @param number y\n * @returns flatbuffers.Offset\n */\nstatic createVec2d(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {\n  builder.prep(8, 16);\n  builder.writeFloat64(y);\n  builder.writeFloat64(x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Vec3d {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Vec3d\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec3d {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nx():number {\n  return this.bb!.readFloat64(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_x(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ny():number {\n  return this.bb!.readFloat64(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_y(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nz():number {\n  return this.bb!.readFloat64(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_z(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number x\n * @param number y\n * @param number z\n * @returns flatbuffers.Offset\n */\nstatic createVec3d(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\n  builder.prep(8, 24);\n  builder.writeFloat64(z);\n  builder.writeFloat64(y);\n  builder.writeFloat64(x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class AABB3f {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns AABB3f\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):AABB3f {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nmin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nmax(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number min_x\n * @param number min_y\n * @param number min_z\n * @param number max_x\n * @param number max_y\n * @param number max_z\n * @returns flatbuffers.Offset\n */\nstatic createAABB3f(builder:flatbuffers.Builder, min_x: number, min_y: number, min_z: number, max_x: number, max_y: number, max_z: number):flatbuffers.Offset {\n  builder.prep(4, 24);\n  builder.prep(4, 12);\n  builder.writeFloat32(max_z);\n  builder.writeFloat32(max_y);\n  builder.writeFloat32(max_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(min_z);\n  builder.writeFloat32(min_y);\n  builder.writeFloat32(min_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Placement3 {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Placement3\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Placement3 {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\norigin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nxAxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 24, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nyAxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 36, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number origin_x\n * @param number origin_y\n * @param number origin_z\n * @param number xAxis_x\n * @param number xAxis_y\n * @param number xAxis_z\n * @param number yAxis_x\n * @param number yAxis_y\n * @param number yAxis_z\n * @returns flatbuffers.Offset\n */\nstatic createPlacement3(builder:flatbuffers.Builder, origin_x: number, origin_y: number, origin_z: number, xAxis_x: number, xAxis_y: number, xAxis_z: number, yAxis_x: number, yAxis_y: number, yAxis_z: number):flatbuffers.Offset {\n  builder.prep(8, 48);\n  builder.prep(4, 12);\n  builder.writeFloat32(yAxis_z);\n  builder.writeFloat32(yAxis_y);\n  builder.writeFloat32(yAxis_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(xAxis_z);\n  builder.writeFloat32(xAxis_y);\n  builder.writeFloat32(xAxis_x);\n  builder.prep(8, 24);\n  builder.writeFloat64(origin_z);\n  builder.writeFloat64(origin_y);\n  builder.writeFloat64(origin_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Line3f {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Line3f\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Line3f {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nstart(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nend(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number start_x\n * @param number start_y\n * @param number start_z\n * @param number end_x\n * @param number end_y\n * @param number end_z\n * @returns flatbuffers.Offset\n */\nstatic createLine3f(builder:flatbuffers.Builder, start_x: number, start_y: number, start_z: number, end_x: number, end_y: number, end_z: number):flatbuffers.Offset {\n  builder.prep(4, 24);\n  builder.prep(4, 12);\n  builder.writeFloat32(end_z);\n  builder.writeFloat32(end_y);\n  builder.writeFloat32(end_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(start_z);\n  builder.writeFloat32(start_y);\n  builder.writeFloat32(start_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Line3d {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Line3d\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Line3d {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\nstart(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\nend(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 24, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number start_x\n * @param number start_y\n * @param number start_z\n * @param number end_x\n * @param number end_y\n * @param number end_z\n * @returns flatbuffers.Offset\n */\nstatic createLine3d(builder:flatbuffers.Builder, start_x: number, start_y: number, start_z: number, end_x: number, end_y: number, end_z: number):flatbuffers.Offset {\n  builder.prep(8, 48);\n  builder.prep(8, 24);\n  builder.writeFloat64(end_z);\n  builder.writeFloat64(end_y);\n  builder.writeFloat64(end_x);\n  builder.prep(8, 24);\n  builder.writeFloat64(start_z);\n  builder.writeFloat64(start_y);\n  builder.writeFloat64(start_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Polyline3f {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Polyline3f\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Polyline3f {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Polyline3f= obj\n * @returns Polyline3f\n */\nstatic getRootAsPolyline3f(bb:flatbuffers.ByteBuffer, obj?:Polyline3f):Polyline3f {\n  return (obj || new Polyline3f()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Polyline3f= obj\n * @returns Polyline3f\n */\nstatic getSizePrefixedRootAsPolyline3f(bb:flatbuffers.ByteBuffer, obj?:Polyline3f):Polyline3f {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Polyline3f()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\npoints(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npointsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startPolyline3f(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset pointsOffset\n */\nstatic addPoints(builder:flatbuffers.Builder, pointsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, pointsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPointsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endPolyline3f(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\nstatic createPolyline3f(builder:flatbuffers.Builder, pointsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Polyline3f.startPolyline3f(builder);\n  Polyline3f.addPoints(builder, pointsOffset);\n  return Polyline3f.endPolyline3f(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Arc3f {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Arc3f\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Arc3f {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\ncenter(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\naxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nrefDirection(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 24, this.bb!);\n};\n\n/**\n * @returns number\n */\nradius():number {\n  return this.bb!.readFloat32(this.bb_pos + 36);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_radius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 36);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nangle():number {\n  return this.bb!.readFloat32(this.bb_pos + 40);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_angle(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number center_x\n * @param number center_y\n * @param number center_z\n * @param number axis_x\n * @param number axis_y\n * @param number axis_z\n * @param number refDirection_x\n * @param number refDirection_y\n * @param number refDirection_z\n * @param number radius\n * @param number angle\n * @returns flatbuffers.Offset\n */\nstatic createArc3f(builder:flatbuffers.Builder, center_x: number, center_y: number, center_z: number, axis_x: number, axis_y: number, axis_z: number, refDirection_x: number, refDirection_y: number, refDirection_z: number, radius: number, angle: number):flatbuffers.Offset {\n  builder.prep(4, 44);\n  builder.writeFloat32(angle);\n  builder.writeFloat32(radius);\n  builder.prep(4, 12);\n  builder.writeFloat32(refDirection_z);\n  builder.writeFloat32(refDirection_y);\n  builder.writeFloat32(refDirection_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(axis_z);\n  builder.writeFloat32(axis_y);\n  builder.writeFloat32(axis_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(center_z);\n  builder.writeFloat32(center_y);\n  builder.writeFloat32(center_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Arc3d {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Arc3d\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Arc3d {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\ncenter(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\naxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 24, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\nrefDirection(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 48, this.bb!);\n};\n\n/**\n * @returns number\n */\nradius():number {\n  return this.bb!.readFloat64(this.bb_pos + 72);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_radius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 72);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nangle():number {\n  return this.bb!.readFloat64(this.bb_pos + 80);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_angle(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 80);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number center_x\n * @param number center_y\n * @param number center_z\n * @param number axis_x\n * @param number axis_y\n * @param number axis_z\n * @param number refDirection_x\n * @param number refDirection_y\n * @param number refDirection_z\n * @param number radius\n * @param number angle\n * @returns flatbuffers.Offset\n */\nstatic createArc3d(builder:flatbuffers.Builder, center_x: number, center_y: number, center_z: number, axis_x: number, axis_y: number, axis_z: number, refDirection_x: number, refDirection_y: number, refDirection_z: number, radius: number, angle: number):flatbuffers.Offset {\n  builder.prep(8, 88);\n  builder.writeFloat64(angle);\n  builder.writeFloat64(radius);\n  builder.prep(8, 24);\n  builder.writeFloat64(refDirection_z);\n  builder.writeFloat64(refDirection_y);\n  builder.writeFloat64(refDirection_x);\n  builder.prep(8, 24);\n  builder.writeFloat64(axis_z);\n  builder.writeFloat64(axis_y);\n  builder.writeFloat64(axis_x);\n  builder.prep(8, 24);\n  builder.writeFloat64(center_z);\n  builder.writeFloat64(center_y);\n  builder.writeFloat64(center_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Guid {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Guid\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Guid {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\ndata1():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data1(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata2():number {\n  return this.bb!.readUint16(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data2(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint16(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata3():number {\n  return this.bb!.readUint16(this.bb_pos + 6);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data3(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint16(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata41():number {\n  return this.bb!.readUint8(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_1(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata42():number {\n  return this.bb!.readUint8(this.bb_pos + 9);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_2(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 9);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata43():number {\n  return this.bb!.readUint8(this.bb_pos + 10);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_3(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata44():number {\n  return this.bb!.readUint8(this.bb_pos + 11);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_4(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 11);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata45():number {\n  return this.bb!.readUint8(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_5(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata46():number {\n  return this.bb!.readUint8(this.bb_pos + 13);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_6(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 13);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata47():number {\n  return this.bb!.readUint8(this.bb_pos + 14);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_7(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndata48():number {\n  return this.bb!.readUint8(this.bb_pos + 15);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_data4_8(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 15);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number data1\n * @param number data2\n * @param number data3\n * @param number data4_1\n * @param number data4_2\n * @param number data4_3\n * @param number data4_4\n * @param number data4_5\n * @param number data4_6\n * @param number data4_7\n * @param number data4_8\n * @returns flatbuffers.Offset\n */\nstatic createGuid(builder:flatbuffers.Builder, data1: number, data2: number, data3: number, data4_1: number, data4_2: number, data4_3: number, data4_4: number, data4_5: number, data4_6: number, data4_7: number, data4_8: number):flatbuffers.Offset {\n  builder.prep(4, 16);\n  builder.writeInt8(data4_8);\n  builder.writeInt8(data4_7);\n  builder.writeInt8(data4_6);\n  builder.writeInt8(data4_5);\n  builder.writeInt8(data4_4);\n  builder.writeInt8(data4_3);\n  builder.writeInt8(data4_2);\n  builder.writeInt8(data4_1);\n  builder.writeInt16(data3);\n  builder.writeInt16(data2);\n  builder.writeInt32(data1);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class SpatialHash {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns SpatialHash\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):SpatialHash {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nx():number {\n  return this.bb!.readFloat64(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_x(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ny():number {\n  return this.bb!.readFloat64(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_y(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nz():number {\n  return this.bb!.readFloat64(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_z(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd0():number {\n  return this.bb!.readFloat64(this.bb_pos + 24);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d0(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd1():number {\n  return this.bb!.readFloat64(this.bb_pos + 32);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d1(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd2():number {\n  return this.bb!.readFloat64(this.bb_pos + 40);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d2(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd3():number {\n  return this.bb!.readFloat64(this.bb_pos + 48);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d3(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 48);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd4():number {\n  return this.bb!.readFloat64(this.bb_pos + 56);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d4(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 56);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd5():number {\n  return this.bb!.readFloat64(this.bb_pos + 64);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d5(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 64);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd6():number {\n  return this.bb!.readFloat64(this.bb_pos + 72);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d6(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 72);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nd7():number {\n  return this.bb!.readFloat64(this.bb_pos + 80);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_d7(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 80);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number x\n * @param number y\n * @param number z\n * @param number d0\n * @param number d1\n * @param number d2\n * @param number d3\n * @param number d4\n * @param number d5\n * @param number d6\n * @param number d7\n * @returns flatbuffers.Offset\n */\nstatic createSpatialHash(builder:flatbuffers.Builder, x: number, y: number, z: number, d0: number, d1: number, d2: number, d3: number, d4: number, d5: number, d6: number, d7: number):flatbuffers.Offset {\n  builder.prep(8, 88);\n  builder.writeFloat64(d7);\n  builder.writeFloat64(d6);\n  builder.writeFloat64(d5);\n  builder.writeFloat64(d4);\n  builder.writeFloat64(d3);\n  builder.writeFloat64(d2);\n  builder.writeFloat64(d1);\n  builder.writeFloat64(d0);\n  builder.writeFloat64(z);\n  builder.writeFloat64(y);\n  builder.writeFloat64(x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class UV {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns UV\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):UV {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nu():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_u(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nv():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_v(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number u\n * @param number v\n * @returns flatbuffers.Offset\n */\nstatic createUV(builder:flatbuffers.Builder, u: number, v: number):flatbuffers.Offset {\n  builder.prep(4, 8);\n  builder.writeFloat32(v);\n  builder.writeFloat32(u);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class OuterWire {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns OuterWire\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):OuterWire {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param OuterWire= obj\n * @returns OuterWire\n */\nstatic getRootAsOuterWire(bb:flatbuffers.ByteBuffer, obj?:OuterWire):OuterWire {\n  return (obj || new OuterWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param OuterWire= obj\n * @returns OuterWire\n */\nstatic getSizePrefixedRootAsOuterWire(bb:flatbuffers.ByteBuffer, obj?:OuterWire):OuterWire {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new OuterWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @returns number\n */\nvertexIndices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\n};\n\n/**\n * @returns number\n */\nvertexIndicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint16Array\n */\nvertexIndicesArray():Uint16Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startOuterWire(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset vertexIndicesOffset\n */\nstatic addVertexIndices(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, vertexIndicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createVertexIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(2, data.length, 2);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt16(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVertexIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endOuterWire(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // vertexIndices\n  return offset;\n};\n\nstatic createOuterWire(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  OuterWire.startOuterWire(builder);\n  OuterWire.addVertexIndices(builder, vertexIndicesOffset);\n  return OuterWire.endOuterWire(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class InnerWire {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns InnerWire\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):InnerWire {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param InnerWire= obj\n * @returns InnerWire\n */\nstatic getRootAsInnerWire(bb:flatbuffers.ByteBuffer, obj?:InnerWire):InnerWire {\n  return (obj || new InnerWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param InnerWire= obj\n * @returns InnerWire\n */\nstatic getSizePrefixedRootAsInnerWire(bb:flatbuffers.ByteBuffer, obj?:InnerWire):InnerWire {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new InnerWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\nouterWire():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_outerWire(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint16(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param number index\n * @returns number\n */\nvertexIndices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\n};\n\n/**\n * @returns number\n */\nvertexIndicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint16Array\n */\nvertexIndicesArray():Uint16Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startInnerWire(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number outerWire\n */\nstatic addOuterWire(builder:flatbuffers.Builder, outerWire:number) {\n  builder.addFieldInt16(0, outerWire, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset vertexIndicesOffset\n */\nstatic addVertexIndices(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, vertexIndicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createVertexIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(2, data.length, 2);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt16(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVertexIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endInnerWire(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // vertexIndices\n  return offset;\n};\n\nstatic createInnerWire(builder:flatbuffers.Builder, outerWire:number, vertexIndicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  InnerWire.startInnerWire(builder);\n  InnerWire.addOuterWire(builder, outerWire);\n  InnerWire.addVertexIndices(builder, vertexIndicesOffset);\n  return InnerWire.endInnerWire(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class BRep {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns BRep\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):BRep {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRep= obj\n * @returns BRep\n */\nstatic getRootAsBRep(bb:flatbuffers.ByteBuffer, obj?:BRep):BRep {\n  return (obj || new BRep()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRep= obj\n * @returns BRep\n */\nstatic getSizePrefixedRootAsBRep(bb:flatbuffers.ByteBuffer, obj?:BRep):BRep {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new BRep()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\n */\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nouterWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\n */\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ninnerWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBRep(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset outerWiresOffset\n */\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, outerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset innerWiresOffset\n */\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, innerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBRep(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // outerWires\n  builder.requiredField(offset, 6); // innerWires\n  builder.requiredField(offset, 8); // vertices\n  return offset;\n};\n\nstatic createBRep(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  BRep.startBRep(builder);\n  BRep.addOuterWires(builder, outerWiresOffset);\n  BRep.addInnerWires(builder, innerWiresOffset);\n  BRep.addVertices(builder, verticesOffset);\n  return BRep.endBRep(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class PositionUV {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns PositionUV\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):PositionUV {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nposition(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\n * @returns Trimble.Technology.TrimBim.Fbs.UV|null\n */\nuv(obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb_pos + 12, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number position_x\n * @param number position_y\n * @param number position_z\n * @param number uv_u\n * @param number uv_v\n * @returns flatbuffers.Offset\n */\nstatic createPositionUV(builder:flatbuffers.Builder, position_x: number, position_y: number, position_z: number, uv_u: number, uv_v: number):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.prep(4, 8);\n  builder.writeFloat32(uv_v);\n  builder.writeFloat32(uv_u);\n  builder.prep(4, 12);\n  builder.writeFloat32(position_z);\n  builder.writeFloat32(position_y);\n  builder.writeFloat32(position_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class PositionNormal {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns PositionNormal\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):PositionNormal {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nposition(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\n */\nnormal(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number position_x\n * @param number position_y\n * @param number position_z\n * @param number normal_x\n * @param number normal_y\n * @param number normal_z\n * @returns flatbuffers.Offset\n */\nstatic createPositionNormal(builder:flatbuffers.Builder, position_x: number, position_y: number, position_z: number, normal_x: number, normal_y: number, normal_z: number):flatbuffers.Offset {\n  builder.prep(4, 24);\n  builder.prep(4, 12);\n  builder.writeFloat32(normal_z);\n  builder.writeFloat32(normal_y);\n  builder.writeFloat32(normal_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(position_z);\n  builder.writeFloat32(position_y);\n  builder.writeFloat32(position_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class BRepWithUV {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns BRepWithUV\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):BRepWithUV {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRepWithUV= obj\n * @returns BRepWithUV\n */\nstatic getRootAsBRepWithUV(bb:flatbuffers.ByteBuffer, obj?:BRepWithUV):BRepWithUV {\n  return (obj || new BRepWithUV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRepWithUV= obj\n * @returns BRepWithUV\n */\nstatic getSizePrefixedRootAsBRepWithUV(bb:flatbuffers.ByteBuffer, obj?:BRepWithUV):BRepWithUV {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new BRepWithUV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\n */\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nouterWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\n */\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ninnerWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.PositionUV= obj\n * @returns Trimble.Technology.TrimBim.Fbs.PositionUV\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PositionUV):Trimble.Technology.TrimBim.Fbs.PositionUV|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PositionUV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBRepWithUV(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset outerWiresOffset\n */\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, outerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset innerWiresOffset\n */\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, innerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(20, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBRepWithUV(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // outerWires\n  builder.requiredField(offset, 6); // innerWires\n  builder.requiredField(offset, 8); // vertices\n  return offset;\n};\n\nstatic createBRepWithUV(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  BRepWithUV.startBRepWithUV(builder);\n  BRepWithUV.addOuterWires(builder, outerWiresOffset);\n  BRepWithUV.addInnerWires(builder, innerWiresOffset);\n  BRepWithUV.addVertices(builder, verticesOffset);\n  return BRepWithUV.endBRepWithUV(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class BRepWithNormal {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns BRepWithNormal\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):BRepWithNormal {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRepWithNormal= obj\n * @returns BRepWithNormal\n */\nstatic getRootAsBRepWithNormal(bb:flatbuffers.ByteBuffer, obj?:BRepWithNormal):BRepWithNormal {\n  return (obj || new BRepWithNormal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BRepWithNormal= obj\n * @returns BRepWithNormal\n */\nstatic getSizePrefixedRootAsBRepWithNormal(bb:flatbuffers.ByteBuffer, obj?:BRepWithNormal):BRepWithNormal {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new BRepWithNormal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\n */\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nouterWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\n */\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ninnerWiresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.PositionNormal= obj\n * @returns Trimble.Technology.TrimBim.Fbs.PositionNormal\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PositionNormal):Trimble.Technology.TrimBim.Fbs.PositionNormal|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PositionNormal()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBRepWithNormal(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset outerWiresOffset\n */\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, outerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset innerWiresOffset\n */\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, innerWiresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBRepWithNormal(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // outerWires\n  builder.requiredField(offset, 6); // innerWires\n  builder.requiredField(offset, 8); // vertices\n  return offset;\n};\n\nstatic createBRepWithNormal(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  BRepWithNormal.startBRepWithNormal(builder);\n  BRepWithNormal.addOuterWires(builder, outerWiresOffset);\n  BRepWithNormal.addInnerWires(builder, innerWiresOffset);\n  BRepWithNormal.addVertices(builder, verticesOffset);\n  return BRepWithNormal.endBRepWithNormal(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class IndexedVertex {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns IndexedVertex\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):IndexedVertex {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\npositionIndex():number {\n  return this.bb!.readUint16(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_positionIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint16(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nnormalIndex():number {\n  return this.bb!.readUint16(this.bb_pos + 2);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_normalIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 2);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint16(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number positionIndex\n * @param number normalIndex\n * @returns flatbuffers.Offset\n */\nstatic createIndexedVertex(builder:flatbuffers.Builder, positionIndex: number, normalIndex: number):flatbuffers.Offset {\n  builder.prep(2, 4);\n  builder.writeInt16(normalIndex);\n  builder.writeInt16(positionIndex);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TriangleMesh {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TriangleMesh\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TriangleMesh {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TriangleMesh= obj\n * @returns TriangleMesh\n */\nstatic getRootAsTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh):TriangleMesh {\n  return (obj || new TriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TriangleMesh= obj\n * @returns TriangleMesh\n */\nstatic getSizePrefixedRootAsTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh):TriangleMesh {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npositionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nnormalsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex= obj\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex):Trimble.Technology.TrimBim.Fbs.IndexedVertex|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nindices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\n};\n\n/**\n * @returns number\n */\nindicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint16Array\n */\nindicesArray():Uint16Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTriangleMesh(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset positionsOffset\n */\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, positionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset normalsOffset\n */\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, normalsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset indicesOffset\n */\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, indicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(2, data.length, 2);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt16(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTriangleMesh(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // positions\n  builder.requiredField(offset, 6); // normals\n  builder.requiredField(offset, 8); // vertices\n  builder.requiredField(offset, 10); // indices\n  return offset;\n};\n\nstatic createTriangleMesh(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  TriangleMesh.startTriangleMesh(builder);\n  TriangleMesh.addPositions(builder, positionsOffset);\n  TriangleMesh.addNormals(builder, normalsOffset);\n  TriangleMesh.addVertices(builder, verticesOffset);\n  TriangleMesh.addIndices(builder, indicesOffset);\n  return TriangleMesh.endTriangleMesh(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class IndexedVertex8 {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns IndexedVertex8\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):IndexedVertex8 {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\npositionIndex():number {\n  return this.bb!.readUint8(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_positionIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nnormalIndex():number {\n  return this.bb!.readUint8(this.bb_pos + 1);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_normalIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 1);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number positionIndex\n * @param number normalIndex\n * @returns flatbuffers.Offset\n */\nstatic createIndexedVertex8(builder:flatbuffers.Builder, positionIndex: number, normalIndex: number):flatbuffers.Offset {\n  builder.prep(1, 2);\n  builder.writeInt8(normalIndex);\n  builder.writeInt8(positionIndex);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TriangleMesh8 {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TriangleMesh8\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TriangleMesh8 {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TriangleMesh8= obj\n * @returns TriangleMesh8\n */\nstatic getRootAsTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh8):TriangleMesh8 {\n  return (obj || new TriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TriangleMesh8= obj\n * @returns TriangleMesh8\n */\nstatic getSizePrefixedRootAsTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh8):TriangleMesh8 {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npositionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nnormalsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex8= obj\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex8\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex8):Trimble.Technology.TrimBim.Fbs.IndexedVertex8|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex8()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 2, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nindices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n};\n\n/**\n * @returns number\n */\nindicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint8Array\n */\nindicesArray():Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTriangleMesh8(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset positionsOffset\n */\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, positionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset normalsOffset\n */\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, normalsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset indicesOffset\n */\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, indicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTriangleMesh8(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // positions\n  builder.requiredField(offset, 6); // normals\n  builder.requiredField(offset, 8); // vertices\n  builder.requiredField(offset, 10); // indices\n  return offset;\n};\n\nstatic createTriangleMesh8(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  TriangleMesh8.startTriangleMesh8(builder);\n  TriangleMesh8.addPositions(builder, positionsOffset);\n  TriangleMesh8.addNormals(builder, normalsOffset);\n  TriangleMesh8.addVertices(builder, verticesOffset);\n  TriangleMesh8.addIndices(builder, indicesOffset);\n  return TriangleMesh8.endTriangleMesh8(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TexturedTriangleMesh {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TexturedTriangleMesh\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedTriangleMesh {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TexturedTriangleMesh= obj\n * @returns TexturedTriangleMesh\n */\nstatic getRootAsTexturedTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh):TexturedTriangleMesh {\n  return (obj || new TexturedTriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TexturedTriangleMesh= obj\n * @returns TexturedTriangleMesh\n */\nstatic getSizePrefixedRootAsTexturedTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh):TexturedTriangleMesh {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TexturedTriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npositionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nnormalsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\n * @returns Trimble.Technology.TrimBim.Fbs.UV\n */\nuvs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nuvsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex= obj\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex):Trimble.Technology.TrimBim.Fbs.IndexedVertex|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nindices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\n};\n\n/**\n * @returns number\n */\nindicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint16Array\n */\nindicesArray():Uint16Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTexturedTriangleMesh(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset positionsOffset\n */\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, positionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset normalsOffset\n */\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, normalsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset uvsOffset\n */\nstatic addUvs(builder:flatbuffers.Builder, uvsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, uvsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startUvsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset indicesOffset\n */\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, indicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(2, data.length, 2);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt16(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTexturedTriangleMesh(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // positions\n  builder.requiredField(offset, 6); // normals\n  builder.requiredField(offset, 8); // uvs\n  builder.requiredField(offset, 10); // vertices\n  builder.requiredField(offset, 12); // indices\n  return offset;\n};\n\nstatic createTexturedTriangleMesh(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, uvsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  TexturedTriangleMesh.startTexturedTriangleMesh(builder);\n  TexturedTriangleMesh.addPositions(builder, positionsOffset);\n  TexturedTriangleMesh.addNormals(builder, normalsOffset);\n  TexturedTriangleMesh.addUvs(builder, uvsOffset);\n  TexturedTriangleMesh.addVertices(builder, verticesOffset);\n  TexturedTriangleMesh.addIndices(builder, indicesOffset);\n  return TexturedTriangleMesh.endTexturedTriangleMesh(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TexturedTriangleMesh8 {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TexturedTriangleMesh8\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedTriangleMesh8 {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TexturedTriangleMesh8= obj\n * @returns TexturedTriangleMesh8\n */\nstatic getRootAsTexturedTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh8):TexturedTriangleMesh8 {\n  return (obj || new TexturedTriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TexturedTriangleMesh8= obj\n * @returns TexturedTriangleMesh8\n */\nstatic getSizePrefixedRootAsTexturedTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh8):TexturedTriangleMesh8 {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TexturedTriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npositionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\n */\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nnormalsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\n * @returns Trimble.Technology.TrimBim.Fbs.UV\n */\nuvs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nuvsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex8= obj\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex8\n */\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex8):Trimble.Technology.TrimBim.Fbs.IndexedVertex8|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex8()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 2, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nverticesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nindices(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n};\n\n/**\n * @returns number\n */\nindicesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint8Array\n */\nindicesArray():Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTexturedTriangleMesh8(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset positionsOffset\n */\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, positionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset normalsOffset\n */\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, normalsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset uvsOffset\n */\nstatic addUvs(builder:flatbuffers.Builder, uvsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, uvsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startUvsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticesOffset\n */\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, verticesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(2, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset indicesOffset\n */\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, indicesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTexturedTriangleMesh8(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // positions\n  builder.requiredField(offset, 6); // normals\n  builder.requiredField(offset, 8); // uvs\n  builder.requiredField(offset, 10); // vertices\n  builder.requiredField(offset, 12); // indices\n  return offset;\n};\n\nstatic createTexturedTriangleMesh8(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, uvsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  TexturedTriangleMesh8.startTexturedTriangleMesh8(builder);\n  TexturedTriangleMesh8.addPositions(builder, positionsOffset);\n  TexturedTriangleMesh8.addNormals(builder, normalsOffset);\n  TexturedTriangleMesh8.addUvs(builder, uvsOffset);\n  TexturedTriangleMesh8.addVertices(builder, verticesOffset);\n  TexturedTriangleMesh8.addIndices(builder, indicesOffset);\n  return TexturedTriangleMesh8.endTexturedTriangleMesh8(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Directrix {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Directrix\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Directrix {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Directrix= obj\n * @returns Directrix\n */\nstatic getRootAsDirectrix(bb:flatbuffers.ByteBuffer, obj?:Directrix):Directrix {\n  return (obj || new Directrix()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Directrix= obj\n * @returns Directrix\n */\nstatic getSizePrefixedRootAsDirectrix(bb:flatbuffers.ByteBuffer, obj?:Directrix):Directrix {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Directrix()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @returns Trimble.Technology.TrimBim.Fbs.SegmentType\n */\ntypes(index: number):Trimble.Technology.TrimBim.Fbs.SegmentType|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\n};\n\n/**\n * @returns number\n */\ntypesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Int8Array\n */\ntypesArray():Int8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nindexes(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n};\n\n/**\n * @returns number\n */\nindexesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint32Array\n */\nindexesArray():Uint32Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Line3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Line3f\n */\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Line3f):Trimble.Technology.TrimBim.Fbs.Line3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nlineSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Polyline3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Polyline3f\n */\npolyLines(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Polyline3f):Trimble.Technology.TrimBim.Fbs.Polyline3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Polyline3f()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npolyLinesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Arc3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3f\n */\narcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Arc3f):Trimble.Technology.TrimBim.Fbs.Arc3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\narcsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startDirectrix(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset typesOffset\n */\nstatic addTypes(builder:flatbuffers.Builder, typesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, typesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<Trimble.Technology.TrimBim.Fbs.SegmentType> data\n * @returns flatbuffers.Offset\n */\nstatic createTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.SegmentType[]):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTypesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset indexesOffset\n */\nstatic addIndexes(builder:flatbuffers.Builder, indexesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, indexesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createIndexesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt32(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startIndexesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lineSegmentsOffset\n */\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, lineSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset polyLinesOffset\n */\nstatic addPolyLines(builder:flatbuffers.Builder, polyLinesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, polyLinesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createPolyLinesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPolyLinesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset arcsOffset\n */\nstatic addArcs(builder:flatbuffers.Builder, arcsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, arcsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startArcsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(44, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endDirectrix(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // types\n  builder.requiredField(offset, 6); // indexes\n  builder.requiredField(offset, 8); // lineSegments\n  builder.requiredField(offset, 10); // polyLines\n  builder.requiredField(offset, 12); // arcs\n  return offset;\n};\n\nstatic createDirectrix(builder:flatbuffers.Builder, typesOffset:flatbuffers.Offset, indexesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, polyLinesOffset:flatbuffers.Offset, arcsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Directrix.startDirectrix(builder);\n  Directrix.addTypes(builder, typesOffset);\n  Directrix.addIndexes(builder, indexesOffset);\n  Directrix.addLineSegments(builder, lineSegmentsOffset);\n  Directrix.addPolyLines(builder, polyLinesOffset);\n  Directrix.addArcs(builder, arcsOffset);\n  return Directrix.endDirectrix(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class SweptDiskSolidContainer {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns SweptDiskSolidContainer\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):SweptDiskSolidContainer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param SweptDiskSolidContainer= obj\n * @returns SweptDiskSolidContainer\n */\nstatic getRootAsSweptDiskSolidContainer(bb:flatbuffers.ByteBuffer, obj?:SweptDiskSolidContainer):SweptDiskSolidContainer {\n  return (obj || new SweptDiskSolidContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param SweptDiskSolidContainer= obj\n * @returns SweptDiskSolidContainer\n */\nstatic getSizePrefixedRootAsSweptDiskSolidContainer(bb:flatbuffers.ByteBuffer, obj?:SweptDiskSolidContainer):SweptDiskSolidContainer {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new SweptDiskSolidContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Directrix= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Directrix\n */\ndirectrices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Directrix):Trimble.Technology.TrimBim.Fbs.Directrix|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Directrix()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ndirectricesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nradius(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nradiusLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nradiusArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startSweptDiskSolidContainer(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset directricesOffset\n */\nstatic addDirectrices(builder:flatbuffers.Builder, directricesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, directricesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createDirectricesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDirectricesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset radiusOffset\n */\nstatic addRadius(builder:flatbuffers.Builder, radiusOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, radiusOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createRadiusVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startRadiusVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endSweptDiskSolidContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // directrices\n  builder.requiredField(offset, 6); // radius\n  return offset;\n};\n\nstatic createSweptDiskSolidContainer(builder:flatbuffers.Builder, directricesOffset:flatbuffers.Offset, radiusOffset:flatbuffers.Offset):flatbuffers.Offset {\n  SweptDiskSolidContainer.startSweptDiskSolidContainer(builder);\n  SweptDiskSolidContainer.addDirectrices(builder, directricesOffset);\n  SweptDiskSolidContainer.addRadius(builder, radiusOffset);\n  return SweptDiskSolidContainer.endSweptDiskSolidContainer(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HorizontalLineSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HorizontalLineSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalLineSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalLineSegment= obj\n * @returns HorizontalLineSegment\n */\nstatic getRootAsHorizontalLineSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalLineSegment):HorizontalLineSegment {\n  return (obj || new HorizontalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalLineSegment= obj\n * @returns HorizontalLineSegment\n */\nstatic getSizePrefixedRootAsHorizontalLineSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalLineSegment):HorizontalLineSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new HorizontalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nstartDirection():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDirection(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nsegmentLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_segmentLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startHorizontalLineSegment(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startPointOffset\n */\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(2, startPointOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDirection\n */\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\n  builder.addFieldFloat64(3, startDirection, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number segmentLength\n */\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\n  builder.addFieldFloat64(4, segmentLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endHorizontalLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createHorizontalLineSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number):flatbuffers.Offset {\n  HorizontalLineSegment.startHorizontalLineSegment(builder);\n  HorizontalLineSegment.addStartTag(builder, startTagOffset);\n  HorizontalLineSegment.addEndTag(builder, endTagOffset);\n  HorizontalLineSegment.addStartPoint(builder, startPointOffset);\n  HorizontalLineSegment.addStartDirection(builder, startDirection);\n  HorizontalLineSegment.addSegmentLength(builder, segmentLength);\n  return HorizontalLineSegment.endHorizontalLineSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HorizontalCircularArcSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HorizontalCircularArcSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalCircularArcSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalCircularArcSegment= obj\n * @returns HorizontalCircularArcSegment\n */\nstatic getRootAsHorizontalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalCircularArcSegment):HorizontalCircularArcSegment {\n  return (obj || new HorizontalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalCircularArcSegment= obj\n * @returns HorizontalCircularArcSegment\n */\nstatic getSizePrefixedRootAsHorizontalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalCircularArcSegment):HorizontalCircularArcSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new HorizontalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nstartDirection():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDirection(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nsegmentLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_segmentLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nradius():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_radius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisCCW():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isCCW(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startHorizontalCircularArcSegment(builder:flatbuffers.Builder) {\n  builder.startObject(7);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startPointOffset\n */\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(2, startPointOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDirection\n */\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\n  builder.addFieldFloat64(3, startDirection, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number segmentLength\n */\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\n  builder.addFieldFloat64(4, segmentLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number radius\n */\nstatic addRadius(builder:flatbuffers.Builder, radius:number) {\n  builder.addFieldFloat64(5, radius, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isCCW\n */\nstatic addIsCCW(builder:flatbuffers.Builder, isCCW:boolean) {\n  builder.addFieldInt8(6, +isCCW, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endHorizontalCircularArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createHorizontalCircularArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, radius:number, isCCW:boolean):flatbuffers.Offset {\n  HorizontalCircularArcSegment.startHorizontalCircularArcSegment(builder);\n  HorizontalCircularArcSegment.addStartTag(builder, startTagOffset);\n  HorizontalCircularArcSegment.addEndTag(builder, endTagOffset);\n  HorizontalCircularArcSegment.addStartPoint(builder, startPointOffset);\n  HorizontalCircularArcSegment.addStartDirection(builder, startDirection);\n  HorizontalCircularArcSegment.addSegmentLength(builder, segmentLength);\n  HorizontalCircularArcSegment.addRadius(builder, radius);\n  HorizontalCircularArcSegment.addIsCCW(builder, isCCW);\n  return HorizontalCircularArcSegment.endHorizontalCircularArcSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HorizontalClothoidalArcSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HorizontalClothoidalArcSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalClothoidalArcSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalClothoidalArcSegment= obj\n * @returns HorizontalClothoidalArcSegment\n */\nstatic getRootAsHorizontalClothoidalArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalClothoidalArcSegment):HorizontalClothoidalArcSegment {\n  return (obj || new HorizontalClothoidalArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalClothoidalArcSegment= obj\n * @returns HorizontalClothoidalArcSegment\n */\nstatic getSizePrefixedRootAsHorizontalClothoidalArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalClothoidalArcSegment):HorizontalClothoidalArcSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new HorizontalClothoidalArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nstartDirection():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDirection(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nsegmentLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_segmentLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartRadius():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startRadius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nclothoidConstant():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_clothoidConstant(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisCCW():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isCCW(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisEntry():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isEntry(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startHorizontalClothoidalArcSegment(builder:flatbuffers.Builder) {\n  builder.startObject(9);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startPointOffset\n */\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(2, startPointOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDirection\n */\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\n  builder.addFieldFloat64(3, startDirection, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number segmentLength\n */\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\n  builder.addFieldFloat64(4, segmentLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startRadius\n */\nstatic addStartRadius(builder:flatbuffers.Builder, startRadius:number) {\n  builder.addFieldFloat64(5, startRadius, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number clothoidConstant\n */\nstatic addClothoidConstant(builder:flatbuffers.Builder, clothoidConstant:number) {\n  builder.addFieldFloat64(6, clothoidConstant, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isCCW\n */\nstatic addIsCCW(builder:flatbuffers.Builder, isCCW:boolean) {\n  builder.addFieldInt8(7, +isCCW, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isEntry\n */\nstatic addIsEntry(builder:flatbuffers.Builder, isEntry:boolean) {\n  builder.addFieldInt8(8, +isEntry, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endHorizontalClothoidalArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createHorizontalClothoidalArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, startRadius:number, clothoidConstant:number, isCCW:boolean, isEntry:boolean):flatbuffers.Offset {\n  HorizontalClothoidalArcSegment.startHorizontalClothoidalArcSegment(builder);\n  HorizontalClothoidalArcSegment.addStartTag(builder, startTagOffset);\n  HorizontalClothoidalArcSegment.addEndTag(builder, endTagOffset);\n  HorizontalClothoidalArcSegment.addStartPoint(builder, startPointOffset);\n  HorizontalClothoidalArcSegment.addStartDirection(builder, startDirection);\n  HorizontalClothoidalArcSegment.addSegmentLength(builder, segmentLength);\n  HorizontalClothoidalArcSegment.addStartRadius(builder, startRadius);\n  HorizontalClothoidalArcSegment.addClothoidConstant(builder, clothoidConstant);\n  HorizontalClothoidalArcSegment.addIsCCW(builder, isCCW);\n  HorizontalClothoidalArcSegment.addIsEntry(builder, isEntry);\n  return HorizontalClothoidalArcSegment.endHorizontalClothoidalArcSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HorizontalTransitionArcSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HorizontalTransitionArcSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalTransitionArcSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalTransitionArcSegment= obj\n * @returns HorizontalTransitionArcSegment\n */\nstatic getRootAsHorizontalTransitionArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalTransitionArcSegment):HorizontalTransitionArcSegment {\n  return (obj || new HorizontalTransitionArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalTransitionArcSegment= obj\n * @returns HorizontalTransitionArcSegment\n */\nstatic getSizePrefixedRootAsHorizontalTransitionArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalTransitionArcSegment):HorizontalTransitionArcSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new HorizontalTransitionArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nstartDirection():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDirection(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nsegmentLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_segmentLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartRadius():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startRadius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nendRadius():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_endRadius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisStartRadiusCCW():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isStartRadiusCCW(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisEndRadiusCCW():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isEndRadiusCCW(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType\n */\ntype():Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType.Invalid;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startHorizontalTransitionArcSegment(builder:flatbuffers.Builder) {\n  builder.startObject(10);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startPointOffset\n */\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(2, startPointOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDirection\n */\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\n  builder.addFieldFloat64(3, startDirection, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number segmentLength\n */\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\n  builder.addFieldFloat64(4, segmentLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startRadius\n */\nstatic addStartRadius(builder:flatbuffers.Builder, startRadius:number) {\n  builder.addFieldFloat64(5, startRadius, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number endRadius\n */\nstatic addEndRadius(builder:flatbuffers.Builder, endRadius:number) {\n  builder.addFieldFloat64(6, endRadius, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isStartRadiusCCW\n */\nstatic addIsStartRadiusCCW(builder:flatbuffers.Builder, isStartRadiusCCW:boolean) {\n  builder.addFieldInt8(7, +isStartRadiusCCW, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isEndRadiusCCW\n */\nstatic addIsEndRadiusCCW(builder:flatbuffers.Builder, isEndRadiusCCW:boolean) {\n  builder.addFieldInt8(8, +isEndRadiusCCW, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType type\n */\nstatic addType(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType) {\n  builder.addFieldInt8(9, type, Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType.Invalid);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endHorizontalTransitionArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createHorizontalTransitionArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, startRadius:number, endRadius:number, isStartRadiusCCW:boolean, isEndRadiusCCW:boolean, type:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType):flatbuffers.Offset {\n  HorizontalTransitionArcSegment.startHorizontalTransitionArcSegment(builder);\n  HorizontalTransitionArcSegment.addStartTag(builder, startTagOffset);\n  HorizontalTransitionArcSegment.addEndTag(builder, endTagOffset);\n  HorizontalTransitionArcSegment.addStartPoint(builder, startPointOffset);\n  HorizontalTransitionArcSegment.addStartDirection(builder, startDirection);\n  HorizontalTransitionArcSegment.addSegmentLength(builder, segmentLength);\n  HorizontalTransitionArcSegment.addStartRadius(builder, startRadius);\n  HorizontalTransitionArcSegment.addEndRadius(builder, endRadius);\n  HorizontalTransitionArcSegment.addIsStartRadiusCCW(builder, isStartRadiusCCW);\n  HorizontalTransitionArcSegment.addIsEndRadiusCCW(builder, isEndRadiusCCW);\n  HorizontalTransitionArcSegment.addType(builder, type);\n  return HorizontalTransitionArcSegment.endHorizontalTransitionArcSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class VerticalLineSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns VerticalLineSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalLineSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalLineSegment= obj\n * @returns VerticalLineSegment\n */\nstatic getRootAsVerticalLineSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalLineSegment):VerticalLineSegment {\n  return (obj || new VerticalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalLineSegment= obj\n * @returns VerticalLineSegment\n */\nstatic getSizePrefixedRootAsVerticalLineSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalLineSegment):VerticalLineSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new VerticalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nstartDistAlong():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDistAlong(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nhorizontalLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_horizontalLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartHeight():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startHeight(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartGradient():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startGradient(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startVerticalLineSegment(builder:flatbuffers.Builder) {\n  builder.startObject(6);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDistAlong\n */\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number horizontalLength\n */\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startHeight\n */\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\n  builder.addFieldFloat64(4, startHeight, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startGradient\n */\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\n  builder.addFieldFloat64(5, startGradient, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endVerticalLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createVerticalLineSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number):flatbuffers.Offset {\n  VerticalLineSegment.startVerticalLineSegment(builder);\n  VerticalLineSegment.addStartTag(builder, startTagOffset);\n  VerticalLineSegment.addEndTag(builder, endTagOffset);\n  VerticalLineSegment.addStartDistAlong(builder, startDistAlong);\n  VerticalLineSegment.addHorizontalLength(builder, horizontalLength);\n  VerticalLineSegment.addStartHeight(builder, startHeight);\n  VerticalLineSegment.addStartGradient(builder, startGradient);\n  return VerticalLineSegment.endVerticalLineSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class VerticalCircularArcSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns VerticalCircularArcSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalCircularArcSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalCircularArcSegment= obj\n * @returns VerticalCircularArcSegment\n */\nstatic getRootAsVerticalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalCircularArcSegment):VerticalCircularArcSegment {\n  return (obj || new VerticalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalCircularArcSegment= obj\n * @returns VerticalCircularArcSegment\n */\nstatic getSizePrefixedRootAsVerticalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalCircularArcSegment):VerticalCircularArcSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new VerticalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nstartDistAlong():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDistAlong(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nhorizontalLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_horizontalLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartHeight():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startHeight(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartGradient():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startGradient(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nradius():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_radius(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisConvex():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isConvex(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startVerticalCircularArcSegment(builder:flatbuffers.Builder) {\n  builder.startObject(8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDistAlong\n */\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number horizontalLength\n */\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startHeight\n */\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\n  builder.addFieldFloat64(4, startHeight, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startGradient\n */\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\n  builder.addFieldFloat64(5, startGradient, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number radius\n */\nstatic addRadius(builder:flatbuffers.Builder, radius:number) {\n  builder.addFieldFloat64(6, radius, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isConvex\n */\nstatic addIsConvex(builder:flatbuffers.Builder, isConvex:boolean) {\n  builder.addFieldInt8(7, +isConvex, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endVerticalCircularArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createVerticalCircularArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number, radius:number, isConvex:boolean):flatbuffers.Offset {\n  VerticalCircularArcSegment.startVerticalCircularArcSegment(builder);\n  VerticalCircularArcSegment.addStartTag(builder, startTagOffset);\n  VerticalCircularArcSegment.addEndTag(builder, endTagOffset);\n  VerticalCircularArcSegment.addStartDistAlong(builder, startDistAlong);\n  VerticalCircularArcSegment.addHorizontalLength(builder, horizontalLength);\n  VerticalCircularArcSegment.addStartHeight(builder, startHeight);\n  VerticalCircularArcSegment.addStartGradient(builder, startGradient);\n  VerticalCircularArcSegment.addRadius(builder, radius);\n  VerticalCircularArcSegment.addIsConvex(builder, isConvex);\n  return VerticalCircularArcSegment.endVerticalCircularArcSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class VerticalParabolicArcSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns VerticalParabolicArcSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalParabolicArcSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalParabolicArcSegment= obj\n * @returns VerticalParabolicArcSegment\n */\nstatic getRootAsVerticalParabolicArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalParabolicArcSegment):VerticalParabolicArcSegment {\n  return (obj || new VerticalParabolicArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalParabolicArcSegment= obj\n * @returns VerticalParabolicArcSegment\n */\nstatic getSizePrefixedRootAsVerticalParabolicArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalParabolicArcSegment):VerticalParabolicArcSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new VerticalParabolicArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nstartTag():string|null\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nendTag():string|null\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nendTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nstartDistAlong():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startDistAlong(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nhorizontalLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_horizontalLength(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartHeight():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startHeight(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nstartGradient():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startGradient(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nparabolaConstant():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_parabolaConstant(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns boolean\n */\nisConvex():boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_isConvex(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startVerticalParabolicArcSegment(builder:flatbuffers.Builder) {\n  builder.startObject(8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset startTagOffset\n */\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, startTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset endTagOffset\n */\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, endTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startDistAlong\n */\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number horizontalLength\n */\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startHeight\n */\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\n  builder.addFieldFloat64(4, startHeight, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startGradient\n */\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\n  builder.addFieldFloat64(5, startGradient, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number parabolaConstant\n */\nstatic addParabolaConstant(builder:flatbuffers.Builder, parabolaConstant:number) {\n  builder.addFieldFloat64(6, parabolaConstant, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param boolean isConvex\n */\nstatic addIsConvex(builder:flatbuffers.Builder, isConvex:boolean) {\n  builder.addFieldInt8(7, +isConvex, +false);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endVerticalParabolicArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // startTag\n  builder.requiredField(offset, 6); // endTag\n  return offset;\n};\n\nstatic createVerticalParabolicArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number, parabolaConstant:number, isConvex:boolean):flatbuffers.Offset {\n  VerticalParabolicArcSegment.startVerticalParabolicArcSegment(builder);\n  VerticalParabolicArcSegment.addStartTag(builder, startTagOffset);\n  VerticalParabolicArcSegment.addEndTag(builder, endTagOffset);\n  VerticalParabolicArcSegment.addStartDistAlong(builder, startDistAlong);\n  VerticalParabolicArcSegment.addHorizontalLength(builder, horizontalLength);\n  VerticalParabolicArcSegment.addStartHeight(builder, startHeight);\n  VerticalParabolicArcSegment.addStartGradient(builder, startGradient);\n  VerticalParabolicArcSegment.addParabolaConstant(builder, parabolaConstant);\n  VerticalParabolicArcSegment.addIsConvex(builder, isConvex);\n  return VerticalParabolicArcSegment.endVerticalParabolicArcSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HorizontalCurve {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HorizontalCurve\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalCurve {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalCurve= obj\n * @returns HorizontalCurve\n */\nstatic getRootAsHorizontalCurve(bb:flatbuffers.ByteBuffer, obj?:HorizontalCurve):HorizontalCurve {\n  return (obj || new HorizontalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param HorizontalCurve= obj\n * @returns HorizontalCurve\n */\nstatic getSizePrefixedRootAsHorizontalCurve(bb:flatbuffers.ByteBuffer, obj?:HorizontalCurve):HorizontalCurve {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new HorizontalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\nstartAlongDistance():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_startAlongDistance(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param number index\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType\n */\nsegmentTypes(index: number):Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\n};\n\n/**\n * @returns number\n */\nsegmentTypesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Int8Array\n */\nsegmentTypesArray():Int8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment\n */\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment):Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nlineSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment\n */\ncircularArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ncircularArcSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment\n */\nclothoidalArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nclothoidalArcSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment\n */\ntransitionArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntransitionArcSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startHorizontalCurve(builder:flatbuffers.Builder) {\n  builder.startObject(6);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number startAlongDistance\n */\nstatic addStartAlongDistance(builder:flatbuffers.Builder, startAlongDistance:number) {\n  builder.addFieldFloat64(0, startAlongDistance, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset segmentTypesOffset\n */\nstatic addSegmentTypes(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, segmentTypesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType> data\n * @returns flatbuffers.Offset\n */\nstatic createSegmentTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType[]):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startSegmentTypesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lineSegmentsOffset\n */\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, lineSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset circularArcSegmentsOffset\n */\nstatic addCircularArcSegments(builder:flatbuffers.Builder, circularArcSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, circularArcSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createCircularArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startCircularArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset clothoidalArcSegmentsOffset\n */\nstatic addClothoidalArcSegments(builder:flatbuffers.Builder, clothoidalArcSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, clothoidalArcSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createClothoidalArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startClothoidalArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset transitionArcSegmentsOffset\n */\nstatic addTransitionArcSegments(builder:flatbuffers.Builder, transitionArcSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, transitionArcSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTransitionArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTransitionArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endHorizontalCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // segmentTypes\n  builder.requiredField(offset, 8); // lineSegments\n  builder.requiredField(offset, 10); // circularArcSegments\n  builder.requiredField(offset, 12); // clothoidalArcSegments\n  builder.requiredField(offset, 14); // transitionArcSegments\n  return offset;\n};\n\nstatic createHorizontalCurve(builder:flatbuffers.Builder, startAlongDistance:number, segmentTypesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, circularArcSegmentsOffset:flatbuffers.Offset, clothoidalArcSegmentsOffset:flatbuffers.Offset, transitionArcSegmentsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  HorizontalCurve.startHorizontalCurve(builder);\n  HorizontalCurve.addStartAlongDistance(builder, startAlongDistance);\n  HorizontalCurve.addSegmentTypes(builder, segmentTypesOffset);\n  HorizontalCurve.addLineSegments(builder, lineSegmentsOffset);\n  HorizontalCurve.addCircularArcSegments(builder, circularArcSegmentsOffset);\n  HorizontalCurve.addClothoidalArcSegments(builder, clothoidalArcSegmentsOffset);\n  HorizontalCurve.addTransitionArcSegments(builder, transitionArcSegmentsOffset);\n  return HorizontalCurve.endHorizontalCurve(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class VerticalCurve {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns VerticalCurve\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalCurve {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalCurve= obj\n * @returns VerticalCurve\n */\nstatic getRootAsVerticalCurve(bb:flatbuffers.ByteBuffer, obj?:VerticalCurve):VerticalCurve {\n  return (obj || new VerticalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param VerticalCurve= obj\n * @returns VerticalCurve\n */\nstatic getSizePrefixedRootAsVerticalCurve(bb:flatbuffers.ByteBuffer, obj?:VerticalCurve):VerticalCurve {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new VerticalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalSegmentType\n */\nsegmentTypes(index: number):Trimble.Technology.TrimBim.Fbs.VerticalSegmentType|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\n};\n\n/**\n * @returns number\n */\nsegmentTypesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Int8Array\n */\nsegmentTypesArray():Int8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.VerticalLineSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalLineSegment\n */\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalLineSegment):Trimble.Technology.TrimBim.Fbs.VerticalLineSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nlineSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment\n */\ncircularArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment):Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ncircularArcSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment\n */\nparabolicArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment):Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nparabolicArcSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startVerticalCurve(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset segmentTypesOffset\n */\nstatic addSegmentTypes(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, segmentTypesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<Trimble.Technology.TrimBim.Fbs.VerticalSegmentType> data\n * @returns flatbuffers.Offset\n */\nstatic createSegmentTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.VerticalSegmentType[]):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startSegmentTypesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lineSegmentsOffset\n */\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, lineSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset circularArcSegmentsOffset\n */\nstatic addCircularArcSegments(builder:flatbuffers.Builder, circularArcSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, circularArcSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createCircularArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startCircularArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset parabolicArcSegmentsOffset\n */\nstatic addParabolicArcSegments(builder:flatbuffers.Builder, parabolicArcSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, parabolicArcSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createParabolicArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startParabolicArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endVerticalCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // segmentTypes\n  builder.requiredField(offset, 6); // lineSegments\n  builder.requiredField(offset, 8); // circularArcSegments\n  builder.requiredField(offset, 10); // parabolicArcSegments\n  return offset;\n};\n\nstatic createVerticalCurve(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, circularArcSegmentsOffset:flatbuffers.Offset, parabolicArcSegmentsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  VerticalCurve.startVerticalCurve(builder);\n  VerticalCurve.addSegmentTypes(builder, segmentTypesOffset);\n  VerticalCurve.addLineSegments(builder, lineSegmentsOffset);\n  VerticalCurve.addCircularArcSegments(builder, circularArcSegmentsOffset);\n  VerticalCurve.addParabolicArcSegments(builder, parabolicArcSegmentsOffset);\n  return VerticalCurve.endVerticalCurve(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class AlignmentCurve {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns AlignmentCurve\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):AlignmentCurve {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param AlignmentCurve= obj\n * @returns AlignmentCurve\n */\nstatic getRootAsAlignmentCurve(bb:flatbuffers.ByteBuffer, obj?:AlignmentCurve):AlignmentCurve {\n  return (obj || new AlignmentCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param AlignmentCurve= obj\n * @returns AlignmentCurve\n */\nstatic getSizePrefixedRootAsAlignmentCurve(bb:flatbuffers.ByteBuffer, obj?:AlignmentCurve):AlignmentCurve {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new AlignmentCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalCurve= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalCurve|null\n */\nhorizontalCurve(obj?:Trimble.Technology.TrimBim.Fbs.HorizontalCurve):Trimble.Technology.TrimBim.Fbs.HorizontalCurve|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalCurve()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.VerticalCurve= obj\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalCurve|null\n */\nverticalCurve(obj?:Trimble.Technology.TrimBim.Fbs.VerticalCurve):Trimble.Technology.TrimBim.Fbs.VerticalCurve|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalCurve()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nname():string|null\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nname(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startAlignmentCurve(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset horizontalCurveOffset\n */\nstatic addHorizontalCurve(builder:flatbuffers.Builder, horizontalCurveOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, horizontalCurveOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset verticalCurveOffset\n */\nstatic addVerticalCurve(builder:flatbuffers.Builder, verticalCurveOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, verticalCurveOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset nameOffset\n */\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, nameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endAlignmentCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // horizontalCurve\n  builder.requiredField(offset, 6); // verticalCurve\n  builder.requiredField(offset, 8); // name\n  return offset;\n};\n\nstatic createAlignmentCurve(builder:flatbuffers.Builder, horizontalCurveOffset:flatbuffers.Offset, verticalCurveOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset):flatbuffers.Offset {\n  AlignmentCurve.startAlignmentCurve(builder);\n  AlignmentCurve.addHorizontalCurve(builder, horizontalCurveOffset);\n  AlignmentCurve.addVerticalCurve(builder, verticalCurveOffset);\n  AlignmentCurve.addName(builder, nameOffset);\n  return AlignmentCurve.endAlignmentCurve(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GridLineSegment {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GridLineSegment\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GridLineSegment {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridLineSegment= obj\n * @returns GridLineSegment\n */\nstatic getRootAsGridLineSegment(bb:flatbuffers.ByteBuffer, obj?:GridLineSegment):GridLineSegment {\n  return (obj || new GridLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridLineSegment= obj\n * @returns GridLineSegment\n */\nstatic getSizePrefixedRootAsGridLineSegment(bb:flatbuffers.ByteBuffer, obj?:GridLineSegment):GridLineSegment {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new GridLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\naxisTag():string|null\naxisTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\naxisTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Line3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Line3d|null\n */\nlineSegment(obj?:Trimble.Technology.TrimBim.Fbs.Line3d):Trimble.Technology.TrimBim.Fbs.Line3d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startGridLineSegment(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset axisTagOffset\n */\nstatic addAxisTag(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, axisTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lineSegmentOffset\n */\nstatic addLineSegment(builder:flatbuffers.Builder, lineSegmentOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(1, lineSegmentOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endGridLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // axisTag\n  builder.requiredField(offset, 6); // lineSegment\n  return offset;\n};\n\nstatic createGridLineSegment(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset, lineSegmentOffset:flatbuffers.Offset):flatbuffers.Offset {\n  GridLineSegment.startGridLineSegment(builder);\n  GridLineSegment.addAxisTag(builder, axisTagOffset);\n  GridLineSegment.addLineSegment(builder, lineSegmentOffset);\n  return GridLineSegment.endGridLineSegment(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GridArc {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GridArc\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GridArc {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridArc= obj\n * @returns GridArc\n */\nstatic getRootAsGridArc(bb:flatbuffers.ByteBuffer, obj?:GridArc):GridArc {\n  return (obj || new GridArc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridArc= obj\n * @returns GridArc\n */\nstatic getSizePrefixedRootAsGridArc(bb:flatbuffers.ByteBuffer, obj?:GridArc):GridArc {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new GridArc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\naxisTag():string|null\naxisTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\naxisTag(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Arc3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3d|null\n */\narc(obj?:Trimble.Technology.TrimBim.Fbs.Arc3d):Trimble.Technology.TrimBim.Fbs.Arc3d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startGridArc(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset axisTagOffset\n */\nstatic addAxisTag(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, axisTagOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset arcOffset\n */\nstatic addArc(builder:flatbuffers.Builder, arcOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(1, arcOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endGridArc(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // axisTag\n  builder.requiredField(offset, 6); // arc\n  return offset;\n};\n\nstatic createGridArc(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset, arcOffset:flatbuffers.Offset):flatbuffers.Offset {\n  GridArc.startGridArc(builder);\n  GridArc.addAxisTag(builder, axisTagOffset);\n  GridArc.addArc(builder, arcOffset);\n  return GridArc.endGridArc(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GridLineContainer {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GridLineContainer\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GridLineContainer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridLineContainer= obj\n * @returns GridLineContainer\n */\nstatic getRootAsGridLineContainer(bb:flatbuffers.ByteBuffer, obj?:GridLineContainer):GridLineContainer {\n  return (obj || new GridLineContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GridLineContainer= obj\n * @returns GridLineContainer\n */\nstatic getSizePrefixedRootAsGridLineContainer(bb:flatbuffers.ByteBuffer, obj?:GridLineContainer):GridLineContainer {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new GridLineContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GridLineSegment= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GridLineSegment\n */\ngridLineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridLineSegment):Trimble.Technology.TrimBim.Fbs.GridLineSegment|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ngridLineSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GridArc= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GridArc\n */\ngridArcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridArc):Trimble.Technology.TrimBim.Fbs.GridArc|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridArc()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ngridArcsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startGridLineContainer(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset gridLineSegmentsOffset\n */\nstatic addGridLineSegments(builder:flatbuffers.Builder, gridLineSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, gridLineSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createGridLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startGridLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset gridArcsOffset\n */\nstatic addGridArcs(builder:flatbuffers.Builder, gridArcsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, gridArcsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createGridArcsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startGridArcsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endGridLineContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // gridLineSegments\n  builder.requiredField(offset, 6); // gridArcs\n  return offset;\n};\n\nstatic createGridLineContainer(builder:flatbuffers.Builder, gridLineSegmentsOffset:flatbuffers.Offset, gridArcsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  GridLineContainer.startGridLineContainer(builder);\n  GridLineContainer.addGridLineSegments(builder, gridLineSegmentsOffset);\n  GridLineContainer.addGridArcs(builder, gridArcsOffset);\n  return GridLineContainer.endGridLineContainer(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Owner {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Owner\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Owner {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Owner= obj\n * @returns Owner\n */\nstatic getRootAsOwner(bb:flatbuffers.ByteBuffer, obj?:Owner):Owner {\n  return (obj || new Owner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Owner= obj\n * @returns Owner\n */\nstatic getSizePrefixedRootAsOwner(bb:flatbuffers.ByteBuffer, obj?:Owner):Owner {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Owner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\npersonId():string|null\npersonId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\npersonId(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\npersonFamilyName():string|null\npersonFamilyName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\npersonFamilyName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\npersonGivenName():string|null\npersonGivenName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\npersonGivenName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\npersonMiddleNames():string|null\npersonMiddleNames(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\npersonMiddleNames(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\npersonRoles():string|null\npersonRoles(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\npersonRoles(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\norganizationId():string|null\norganizationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\norganizationId(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\norganizationName():string|null\norganizationName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\norganizationName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\norganizationDescription():string|null\norganizationDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\norganizationDescription(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\norganizationRoles():string|null\norganizationRoles(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\norganizationRoles(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\napplicationVersion():string|null\napplicationVersion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\napplicationVersion(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\napplicationFullName():string|null\napplicationFullName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\napplicationFullName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\napplicationIdentifier():string|null\napplicationIdentifier(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\napplicationIdentifier(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startOwner(builder:flatbuffers.Builder) {\n  builder.startObject(12);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset personIdOffset\n */\nstatic addPersonId(builder:flatbuffers.Builder, personIdOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, personIdOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset personFamilyNameOffset\n */\nstatic addPersonFamilyName(builder:flatbuffers.Builder, personFamilyNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, personFamilyNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset personGivenNameOffset\n */\nstatic addPersonGivenName(builder:flatbuffers.Builder, personGivenNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, personGivenNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset personMiddleNamesOffset\n */\nstatic addPersonMiddleNames(builder:flatbuffers.Builder, personMiddleNamesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, personMiddleNamesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset personRolesOffset\n */\nstatic addPersonRoles(builder:flatbuffers.Builder, personRolesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, personRolesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset organizationIdOffset\n */\nstatic addOrganizationId(builder:flatbuffers.Builder, organizationIdOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, organizationIdOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset organizationNameOffset\n */\nstatic addOrganizationName(builder:flatbuffers.Builder, organizationNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, organizationNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset organizationDescriptionOffset\n */\nstatic addOrganizationDescription(builder:flatbuffers.Builder, organizationDescriptionOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, organizationDescriptionOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset organizationRolesOffset\n */\nstatic addOrganizationRoles(builder:flatbuffers.Builder, organizationRolesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(8, organizationRolesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset applicationVersionOffset\n */\nstatic addApplicationVersion(builder:flatbuffers.Builder, applicationVersionOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(9, applicationVersionOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset applicationFullNameOffset\n */\nstatic addApplicationFullName(builder:flatbuffers.Builder, applicationFullNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(10, applicationFullNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset applicationIdentifierOffset\n */\nstatic addApplicationIdentifier(builder:flatbuffers.Builder, applicationIdentifierOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(11, applicationIdentifierOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endOwner(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\nstatic createOwner(builder:flatbuffers.Builder, personIdOffset:flatbuffers.Offset, personFamilyNameOffset:flatbuffers.Offset, personGivenNameOffset:flatbuffers.Offset, personMiddleNamesOffset:flatbuffers.Offset, personRolesOffset:flatbuffers.Offset, organizationIdOffset:flatbuffers.Offset, organizationNameOffset:flatbuffers.Offset, organizationDescriptionOffset:flatbuffers.Offset, organizationRolesOffset:flatbuffers.Offset, applicationVersionOffset:flatbuffers.Offset, applicationFullNameOffset:flatbuffers.Offset, applicationIdentifierOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Owner.startOwner(builder);\n  Owner.addPersonId(builder, personIdOffset);\n  Owner.addPersonFamilyName(builder, personFamilyNameOffset);\n  Owner.addPersonGivenName(builder, personGivenNameOffset);\n  Owner.addPersonMiddleNames(builder, personMiddleNamesOffset);\n  Owner.addPersonRoles(builder, personRolesOffset);\n  Owner.addOrganizationId(builder, organizationIdOffset);\n  Owner.addOrganizationName(builder, organizationNameOffset);\n  Owner.addOrganizationDescription(builder, organizationDescriptionOffset);\n  Owner.addOrganizationRoles(builder, organizationRolesOffset);\n  Owner.addApplicationVersion(builder, applicationVersionOffset);\n  Owner.addApplicationFullName(builder, applicationFullNameOffset);\n  Owner.addApplicationIdentifier(builder, applicationIdentifierOffset);\n  return Owner.endOwner(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class History {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns History\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):History {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.OwnerHistoryState\n */\nstate():Trimble.Technology.TrimBim.Fbs.OwnerHistoryState {\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryState value\n * @returns boolean\n */\nmutate_state(value:Trimble.Technology.TrimBim.Fbs.OwnerHistoryState):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction\n */\nchangeAction():Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 1));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction value\n * @returns boolean\n */\nmutate_changeAction(value:Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 1);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns flatbuffers.Long\n */\ncreationDate():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 8);\n};\n\n/**\n * @param flatbuffers.Long value\n * @returns boolean\n */\nmutate_creationDate(value:flatbuffers.Long):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns flatbuffers.Long\n */\nlastModificationDate():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 16);\n};\n\n/**\n * @param flatbuffers.Long value\n * @returns boolean\n */\nmutate_lastModificationDate(value:flatbuffers.Long):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryState state\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction changeAction\n * @param flatbuffers.Long creationDate\n * @param flatbuffers.Long lastModificationDate\n * @returns flatbuffers.Offset\n */\nstatic createHistory(builder:flatbuffers.Builder, state: Trimble.Technology.TrimBim.Fbs.OwnerHistoryState, changeAction: Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction, creationDate: flatbuffers.Long, lastModificationDate: flatbuffers.Long):flatbuffers.Offset {\n  builder.prep(8, 24);\n  builder.writeInt64(lastModificationDate);\n  builder.writeInt64(creationDate);\n  builder.pad(6);\n  builder.writeInt8(changeAction);\n  builder.writeInt8(state);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Product {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Product\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Product {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nowner():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_owner(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nhistory():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_history(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nname():number {\n  return this.bb!.readUint32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_name(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndescription():number {\n  return this.bb!.readUint32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_description(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nobjectType():number {\n  return this.bb!.readUint32(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_objectType(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number owner\n * @param number history\n * @param number name\n * @param number description\n * @param number objectType\n * @returns flatbuffers.Offset\n */\nstatic createProduct(builder:flatbuffers.Builder, owner: number, history: number, name: number, description: number, objectType: number):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.writeInt32(objectType);\n  builder.writeInt32(description);\n  builder.writeInt32(name);\n  builder.writeInt32(history);\n  builder.writeInt32(owner);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class ProductBinding {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns ProductBinding\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):ProductBinding {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nentityId():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_entityId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nproductId():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_productId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number entityId\n * @param number productId\n * @returns flatbuffers.Offset\n */\nstatic createProductBinding(builder:flatbuffers.Builder, entityId: number, productId: number):flatbuffers.Offset {\n  builder.prep(4, 8);\n  builder.writeInt32(productId);\n  builder.writeInt32(entityId);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class SinglePropertyDefinition {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns SinglePropertyDefinition\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):SinglePropertyDefinition {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nname():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_name(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.PropertyType\n */\ntype():Trimble.Technology.TrimBim.Fbs.PropertyType {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 4));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.PropertyType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.PropertyType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number name\n * @param Trimble.Technology.TrimBim.Fbs.PropertyType type\n * @returns flatbuffers.Offset\n */\nstatic createSinglePropertyDefinition(builder:flatbuffers.Builder, name: number, type: Trimble.Technology.TrimBim.Fbs.PropertyType):flatbuffers.Offset {\n  builder.prep(4, 8);\n  builder.pad(3);\n  builder.writeInt8(type);\n  builder.writeInt32(name);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class PropertySetDefinition {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns PropertySetDefinition\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):PropertySetDefinition {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param PropertySetDefinition= obj\n * @returns PropertySetDefinition\n */\nstatic getRootAsPropertySetDefinition(bb:flatbuffers.ByteBuffer, obj?:PropertySetDefinition):PropertySetDefinition {\n  return (obj || new PropertySetDefinition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param PropertySetDefinition= obj\n * @returns PropertySetDefinition\n */\nstatic getSizePrefixedRootAsPropertySetDefinition(bb:flatbuffers.ByteBuffer, obj?:PropertySetDefinition):PropertySetDefinition {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new PropertySetDefinition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\nname():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_name(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition= obj\n * @returns Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition\n */\nproperties(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition):Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npropertiesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startPropertySetDefinition(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number name\n */\nstatic addName(builder:flatbuffers.Builder, name:number) {\n  builder.addFieldInt32(0, name, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset propertiesOffset\n */\nstatic addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, propertiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPropertiesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endPropertySetDefinition(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // properties\n  return offset;\n};\n\nstatic createPropertySetDefinition(builder:flatbuffers.Builder, name:number, propertiesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  PropertySetDefinition.startPropertySetDefinition(builder);\n  PropertySetDefinition.addName(builder, name);\n  PropertySetDefinition.addProperties(builder, propertiesOffset);\n  return PropertySetDefinition.endPropertySetDefinition(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class PropertySet {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns PropertySet\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):PropertySet {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param PropertySet= obj\n * @returns PropertySet\n */\nstatic getRootAsPropertySet(bb:flatbuffers.ByteBuffer, obj?:PropertySet):PropertySet {\n  return (obj || new PropertySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param PropertySet= obj\n * @returns PropertySet\n */\nstatic getSizePrefixedRootAsPropertySet(bb:flatbuffers.ByteBuffer, obj?:PropertySet):PropertySet {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new PropertySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\ndefinition():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_definition(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param number index\n * @returns number\n */\nvalues(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n};\n\n/**\n * @returns number\n */\nvaluesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint32Array\n */\nvaluesArray():Uint32Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nentities(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n};\n\n/**\n * @returns number\n */\nentitiesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Uint32Array\n */\nentitiesArray():Uint32Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startPropertySet(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number definition\n */\nstatic addDefinition(builder:flatbuffers.Builder, definition:number) {\n  builder.addFieldInt32(0, definition, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset valuesOffset\n */\nstatic addValues(builder:flatbuffers.Builder, valuesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, valuesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createValuesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt32(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startValuesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset entitiesOffset\n */\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, entitiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createEntitiesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt32(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startEntitiesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endPropertySet(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // values\n  builder.requiredField(offset, 8); // entities\n  return offset;\n};\n\nstatic createPropertySet(builder:flatbuffers.Builder, definition:number, valuesOffset:flatbuffers.Offset, entitiesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  PropertySet.startPropertySet(builder);\n  PropertySet.addDefinition(builder, definition);\n  PropertySet.addValues(builder, valuesOffset);\n  PropertySet.addEntities(builder, entitiesOffset);\n  return PropertySet.endPropertySet(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class ModelProperties {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns ModelProperties\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelProperties {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelProperties= obj\n * @returns ModelProperties\n */\nstatic getRootAsModelProperties(bb:flatbuffers.ByteBuffer, obj?:ModelProperties):ModelProperties {\n  return (obj || new ModelProperties()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelProperties= obj\n * @returns ModelProperties\n */\nstatic getSizePrefixedRootAsModelProperties(bb:flatbuffers.ByteBuffer, obj?:ModelProperties):ModelProperties {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new ModelProperties()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.ProductBinding= obj\n * @returns Trimble.Technology.TrimBim.Fbs.ProductBinding\n */\nproductBindings(index: number, obj?:Trimble.Technology.TrimBim.Fbs.ProductBinding):Trimble.Technology.TrimBim.Fbs.ProductBinding|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ProductBinding()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nproductBindingsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Product= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Product\n */\nproducts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Product):Trimble.Technology.TrimBim.Fbs.Product|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Product()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nproductsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Owner= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Owner\n */\nowners(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Owner):Trimble.Technology.TrimBim.Fbs.Owner|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Owner()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nownersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.History= obj\n * @returns Trimble.Technology.TrimBim.Fbs.History\n */\nhistories(index: number, obj?:Trimble.Technology.TrimBim.Fbs.History):Trimble.Technology.TrimBim.Fbs.History|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.History()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nhistoriesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nnames(index: number):string\nnames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nnames(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nnamesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\ndescriptions(index: number):string\ndescriptions(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\ndescriptions(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\ndescriptionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nobjectTypes(index: number):string\nobjectTypes(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nobjectTypes(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nobjectTypesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.PropertySet= obj\n * @returns Trimble.Technology.TrimBim.Fbs.PropertySet\n */\npropertySetBindings(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PropertySet):Trimble.Technology.TrimBim.Fbs.PropertySet|null {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PropertySet()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\npropertySetBindingsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\npropertySetNames(index: number):string\npropertySetNames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\npropertySetNames(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\npropertySetNamesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\npropertyNames(index: number):string\npropertyNames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\npropertyNames(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\npropertyNamesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.PropertySetDefinition= obj\n * @returns Trimble.Technology.TrimBim.Fbs.PropertySetDefinition\n */\ndefinitions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PropertySetDefinition):Trimble.Technology.TrimBim.Fbs.PropertySetDefinition|null {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PropertySetDefinition()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ndefinitionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\nlengthMeasures(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nlengthMeasuresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nlengthMeasuresArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nareaMeasures(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nareaMeasuresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nareaMeasuresArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nvolumeMeasures(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nvolumeMeasuresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nvolumeMeasuresArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nmassMeasures(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nmassMeasuresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nmassMeasuresArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns number\n */\nangleMeasures(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\nangleMeasuresLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\nangleMeasuresArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nstringValues(index: number):string\nstringValues(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nstringValues(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nstringValuesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns number\n */\ndoubleValues(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\n};\n\n/**\n * @returns number\n */\ndoubleValuesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Float64Array\n */\ndoubleValuesArray():Float64Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param number index\n * @returns flatbuffers.Long\n */\ndateTimeValues(index: number):flatbuffers.Long|null {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\n};\n\n/**\n * @returns number\n */\ndateTimeValuesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startModelProperties(builder:flatbuffers.Builder) {\n  builder.startObject(19);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset productBindingsOffset\n */\nstatic addProductBindings(builder:flatbuffers.Builder, productBindingsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, productBindingsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startProductBindingsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset productsOffset\n */\nstatic addProducts(builder:flatbuffers.Builder, productsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, productsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startProductsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(20, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset ownersOffset\n */\nstatic addOwners(builder:flatbuffers.Builder, ownersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, ownersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createOwnersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startOwnersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset historiesOffset\n */\nstatic addHistories(builder:flatbuffers.Builder, historiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, historiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startHistoriesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset namesOffset\n */\nstatic addNames(builder:flatbuffers.Builder, namesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, namesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNamesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset descriptionsOffset\n */\nstatic addDescriptions(builder:flatbuffers.Builder, descriptionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, descriptionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createDescriptionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDescriptionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset objectTypesOffset\n */\nstatic addObjectTypes(builder:flatbuffers.Builder, objectTypesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, objectTypesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createObjectTypesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startObjectTypesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset propertySetBindingsOffset\n */\nstatic addPropertySetBindings(builder:flatbuffers.Builder, propertySetBindingsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, propertySetBindingsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createPropertySetBindingsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPropertySetBindingsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset propertySetNamesOffset\n */\nstatic addPropertySetNames(builder:flatbuffers.Builder, propertySetNamesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(8, propertySetNamesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createPropertySetNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPropertySetNamesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset propertyNamesOffset\n */\nstatic addPropertyNames(builder:flatbuffers.Builder, propertyNamesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(9, propertyNamesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createPropertyNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startPropertyNamesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset definitionsOffset\n */\nstatic addDefinitions(builder:flatbuffers.Builder, definitionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(10, definitionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createDefinitionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDefinitionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lengthMeasuresOffset\n */\nstatic addLengthMeasures(builder:flatbuffers.Builder, lengthMeasuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(11, lengthMeasuresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createLengthMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLengthMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset areaMeasuresOffset\n */\nstatic addAreaMeasures(builder:flatbuffers.Builder, areaMeasuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(12, areaMeasuresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createAreaMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startAreaMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset volumeMeasuresOffset\n */\nstatic addVolumeMeasures(builder:flatbuffers.Builder, volumeMeasuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(13, volumeMeasuresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createVolumeMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startVolumeMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset massMeasuresOffset\n */\nstatic addMassMeasures(builder:flatbuffers.Builder, massMeasuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(14, massMeasuresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createMassMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startMassMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset angleMeasuresOffset\n */\nstatic addAngleMeasures(builder:flatbuffers.Builder, angleMeasuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(15, angleMeasuresOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createAngleMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startAngleMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset stringValuesOffset\n */\nstatic addStringValues(builder:flatbuffers.Builder, stringValuesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(16, stringValuesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createStringValuesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startStringValuesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset doubleValuesOffset\n */\nstatic addDoubleValues(builder:flatbuffers.Builder, doubleValuesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(17, doubleValuesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createDoubleValuesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addFloat64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDoubleValuesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset dateTimeValuesOffset\n */\nstatic addDateTimeValues(builder:flatbuffers.Builder, dateTimeValuesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(18, dateTimeValuesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Long> data\n * @returns flatbuffers.Offset\n */\nstatic createDateTimeValuesVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDateTimeValuesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endModelProperties(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // productBindings\n  builder.requiredField(offset, 6); // products\n  builder.requiredField(offset, 8); // owners\n  builder.requiredField(offset, 10); // histories\n  builder.requiredField(offset, 12); // names\n  builder.requiredField(offset, 14); // descriptions\n  builder.requiredField(offset, 16); // objectTypes\n  builder.requiredField(offset, 18); // propertySetBindings\n  builder.requiredField(offset, 20); // propertySetNames\n  builder.requiredField(offset, 22); // propertyNames\n  builder.requiredField(offset, 24); // definitions\n  builder.requiredField(offset, 26); // lengthMeasures\n  builder.requiredField(offset, 28); // areaMeasures\n  builder.requiredField(offset, 30); // volumeMeasures\n  builder.requiredField(offset, 32); // massMeasures\n  builder.requiredField(offset, 34); // angleMeasures\n  builder.requiredField(offset, 36); // stringValues\n  builder.requiredField(offset, 38); // doubleValues\n  builder.requiredField(offset, 40); // dateTimeValues\n  return offset;\n};\n\nstatic createModelProperties(builder:flatbuffers.Builder, productBindingsOffset:flatbuffers.Offset, productsOffset:flatbuffers.Offset, ownersOffset:flatbuffers.Offset, historiesOffset:flatbuffers.Offset, namesOffset:flatbuffers.Offset, descriptionsOffset:flatbuffers.Offset, objectTypesOffset:flatbuffers.Offset, propertySetBindingsOffset:flatbuffers.Offset, propertySetNamesOffset:flatbuffers.Offset, propertyNamesOffset:flatbuffers.Offset, definitionsOffset:flatbuffers.Offset, lengthMeasuresOffset:flatbuffers.Offset, areaMeasuresOffset:flatbuffers.Offset, volumeMeasuresOffset:flatbuffers.Offset, massMeasuresOffset:flatbuffers.Offset, angleMeasuresOffset:flatbuffers.Offset, stringValuesOffset:flatbuffers.Offset, doubleValuesOffset:flatbuffers.Offset, dateTimeValuesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  ModelProperties.startModelProperties(builder);\n  ModelProperties.addProductBindings(builder, productBindingsOffset);\n  ModelProperties.addProducts(builder, productsOffset);\n  ModelProperties.addOwners(builder, ownersOffset);\n  ModelProperties.addHistories(builder, historiesOffset);\n  ModelProperties.addNames(builder, namesOffset);\n  ModelProperties.addDescriptions(builder, descriptionsOffset);\n  ModelProperties.addObjectTypes(builder, objectTypesOffset);\n  ModelProperties.addPropertySetBindings(builder, propertySetBindingsOffset);\n  ModelProperties.addPropertySetNames(builder, propertySetNamesOffset);\n  ModelProperties.addPropertyNames(builder, propertyNamesOffset);\n  ModelProperties.addDefinitions(builder, definitionsOffset);\n  ModelProperties.addLengthMeasures(builder, lengthMeasuresOffset);\n  ModelProperties.addAreaMeasures(builder, areaMeasuresOffset);\n  ModelProperties.addVolumeMeasures(builder, volumeMeasuresOffset);\n  ModelProperties.addMassMeasures(builder, massMeasuresOffset);\n  ModelProperties.addAngleMeasures(builder, angleMeasuresOffset);\n  ModelProperties.addStringValues(builder, stringValuesOffset);\n  ModelProperties.addDoubleValues(builder, doubleValuesOffset);\n  ModelProperties.addDateTimeValues(builder, dateTimeValuesOffset);\n  return ModelProperties.endModelProperties(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class SurfaceMaterial {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns SurfaceMaterial\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):SurfaceMaterial {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nr():number {\n  return this.bb!.readUint8(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_r(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ng():number {\n  return this.bb!.readUint8(this.bb_pos + 1);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_g(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 1);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nb():number {\n  return this.bb!.readUint8(this.bb_pos + 2);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_b(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 2);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\na():number {\n  return this.bb!.readUint8(this.bb_pos + 3);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_a(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 3);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ntextureId():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_textureId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.Sidedness\n */\nsidedness():Trimble.Technology.TrimBim.Fbs.Sidedness {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 8));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Sidedness value\n * @returns boolean\n */\nmutate_sidedness(value:Trimble.Technology.TrimBim.Fbs.Sidedness):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.LineStyle\n */\nlineStyle():Trimble.Technology.TrimBim.Fbs.LineStyle {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 9));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.LineStyle value\n * @returns boolean\n */\nmutate_lineStyle(value:Trimble.Technology.TrimBim.Fbs.LineStyle):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 9);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nmetallic():number {\n  return this.bb!.readFloat32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_metallic(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nroughness():number {\n  return this.bb!.readFloat32(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_roughness(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number r\n * @param number g\n * @param number b\n * @param number a\n * @param number textureId\n * @param Trimble.Technology.TrimBim.Fbs.Sidedness sidedness\n * @param Trimble.Technology.TrimBim.Fbs.LineStyle lineStyle\n * @param number metallic\n * @param number roughness\n * @returns flatbuffers.Offset\n */\nstatic createSurfaceMaterial(builder:flatbuffers.Builder, r: number, g: number, b: number, a: number, textureId: number, sidedness: Trimble.Technology.TrimBim.Fbs.Sidedness, lineStyle: Trimble.Technology.TrimBim.Fbs.LineStyle, metallic: number, roughness: number):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.writeFloat32(roughness);\n  builder.writeFloat32(metallic);\n  builder.pad(2);\n  builder.writeInt8(lineStyle);\n  builder.writeInt8(sidedness);\n  builder.writeInt32(textureId);\n  builder.writeInt8(a);\n  builder.writeInt8(b);\n  builder.writeInt8(g);\n  builder.writeInt8(r);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Entity {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Entity\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Entity {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.IdentifierType\n */\ntype():Trimble.Technology.TrimBim.Fbs.IdentifierType {\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.IdentifierType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.IdentifierType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nidentifierIndex():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_identifierIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nclassIndex():number {\n  return this.bb!.readUint32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_classIndex(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Placement3= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Placement3|null\n */\nglobalPlacement(obj?:Trimble.Technology.TrimBim.Fbs.Placement3):Trimble.Technology.TrimBim.Fbs.Placement3|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Placement3()).__init(this.bb_pos + 16, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.IdentifierType type\n * @param number identifierIndex\n * @param number classIndex\n * @param number globalPlacement_origin_x\n * @param number globalPlacement_origin_y\n * @param number globalPlacement_origin_z\n * @param number globalPlacement_xAxis_x\n * @param number globalPlacement_xAxis_y\n * @param number globalPlacement_xAxis_z\n * @param number globalPlacement_yAxis_x\n * @param number globalPlacement_yAxis_y\n * @param number globalPlacement_yAxis_z\n * @returns flatbuffers.Offset\n */\nstatic createEntity(builder:flatbuffers.Builder, type: Trimble.Technology.TrimBim.Fbs.IdentifierType, identifierIndex: number, classIndex: number, globalPlacement_origin_x: number, globalPlacement_origin_y: number, globalPlacement_origin_z: number, globalPlacement_xAxis_x: number, globalPlacement_xAxis_y: number, globalPlacement_xAxis_z: number, globalPlacement_yAxis_x: number, globalPlacement_yAxis_y: number, globalPlacement_yAxis_z: number):flatbuffers.Offset {\n  builder.prep(8, 64);\n  builder.prep(8, 48);\n  builder.prep(4, 12);\n  builder.writeFloat32(globalPlacement_yAxis_z);\n  builder.writeFloat32(globalPlacement_yAxis_y);\n  builder.writeFloat32(globalPlacement_yAxis_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(globalPlacement_xAxis_z);\n  builder.writeFloat32(globalPlacement_xAxis_y);\n  builder.writeFloat32(globalPlacement_xAxis_x);\n  builder.prep(8, 24);\n  builder.writeFloat64(globalPlacement_origin_z);\n  builder.writeFloat64(globalPlacement_origin_y);\n  builder.writeFloat64(globalPlacement_origin_x);\n  builder.pad(4);\n  builder.writeInt32(classIndex);\n  builder.writeInt32(identifierIndex);\n  builder.pad(3);\n  builder.writeInt8(type);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GeometryDefinition {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GeometryDefinition\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GeometryDefinition {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryType\n */\ntype():Trimble.Technology.TrimBim.Fbs.GeometryType {\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.GeometryType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.GeometryType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nindex():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_index(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.AABB3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.AABB3f|null\n */\nboundingBox(obj?:Trimble.Technology.TrimBim.Fbs.AABB3f):Trimble.Technology.TrimBim.Fbs.AABB3f|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.AABB3f()).__init(this.bb_pos + 8, this.bb!);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.GeometryType type\n * @param number index\n * @param number boundingBox_min_x\n * @param number boundingBox_min_y\n * @param number boundingBox_min_z\n * @param number boundingBox_max_x\n * @param number boundingBox_max_y\n * @param number boundingBox_max_z\n * @returns flatbuffers.Offset\n */\nstatic createGeometryDefinition(builder:flatbuffers.Builder, type: Trimble.Technology.TrimBim.Fbs.GeometryType, index: number, boundingBox_min_x: number, boundingBox_min_y: number, boundingBox_min_z: number, boundingBox_max_x: number, boundingBox_max_y: number, boundingBox_max_z: number):flatbuffers.Offset {\n  builder.prep(4, 32);\n  builder.prep(4, 24);\n  builder.prep(4, 12);\n  builder.writeFloat32(boundingBox_max_z);\n  builder.writeFloat32(boundingBox_max_y);\n  builder.writeFloat32(boundingBox_max_x);\n  builder.prep(4, 12);\n  builder.writeFloat32(boundingBox_min_z);\n  builder.writeFloat32(boundingBox_min_y);\n  builder.writeFloat32(boundingBox_min_x);\n  builder.writeInt32(index);\n  builder.pad(3);\n  builder.writeInt8(type);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GeometryInstance {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GeometryInstance\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GeometryInstance {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nlocalPlacementId():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_localPlacementId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nentityId():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_entityId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndefinitionId():number {\n  return this.bb!.readUint32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_definitionId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nsurfaceMaterialId():number {\n  return this.bb!.readUint32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_surfaceMaterialId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nlayerId():number {\n  return this.bb!.readUint32(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_layerId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number localPlacementId\n * @param number entityId\n * @param number definitionId\n * @param number surfaceMaterialId\n * @param number layerId\n * @returns flatbuffers.Offset\n */\nstatic createGeometryInstance(builder:flatbuffers.Builder, localPlacementId: number, entityId: number, definitionId: number, surfaceMaterialId: number, layerId: number):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.writeInt32(layerId);\n  builder.writeInt32(surfaceMaterialId);\n  builder.writeInt32(definitionId);\n  builder.writeInt32(entityId);\n  builder.writeInt32(localPlacementId);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Texture {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Texture\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Texture {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Texture= obj\n * @returns Texture\n */\nstatic getRootAsTexture(bb:flatbuffers.ByteBuffer, obj?:Texture):Texture {\n  return (obj || new Texture()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Texture= obj\n * @returns Texture\n */\nstatic getSizePrefixedRootAsTexture(bb:flatbuffers.ByteBuffer, obj?:Texture):Texture {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Texture()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.TextureType\n */\ntype():Trimble.Technology.TrimBim.Fbs.TextureType {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.TextureType.None;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.TextureType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.TextureType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param number index\n * @returns number\n */\nbytes(index: number):number|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n};\n\n/**\n * @returns number\n */\nbytesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @returns Int8Array\n */\nbytesArray():Int8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTexture(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.TextureType type\n */\nstatic addType(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.TextureType) {\n  builder.addFieldInt8(0, type, Trimble.Technology.TrimBim.Fbs.TextureType.None);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset bytesOffset\n */\nstatic addBytes(builder:flatbuffers.Builder, bytesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, bytesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<number> data\n * @returns flatbuffers.Offset\n */\nstatic createBytesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\n  builder.startVector(1, data.length, 1);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt8(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBytesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(1, numElems, 1);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTexture(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // bytes\n  return offset;\n};\n\nstatic createTexture(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.TextureType, bytesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Texture.startTexture(builder);\n  Texture.addType(builder, type);\n  Texture.addBytes(builder, bytesOffset);\n  return Texture.endTexture(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class GraphicsContainer {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns GraphicsContainer\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):GraphicsContainer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GraphicsContainer= obj\n * @returns GraphicsContainer\n */\nstatic getRootAsGraphicsContainer(bb:flatbuffers.ByteBuffer, obj?:GraphicsContainer):GraphicsContainer {\n  return (obj || new GraphicsContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param GraphicsContainer= obj\n * @returns GraphicsContainer\n */\nstatic getSizePrefixedRootAsGraphicsContainer(bb:flatbuffers.ByteBuffer, obj?:GraphicsContainer):GraphicsContainer {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new GraphicsContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Line3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Line3f\n */\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Line3f):Trimble.Technology.TrimBim.Fbs.Line3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nlineSegmentsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Arc3f= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3f\n */\narcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Arc3f):Trimble.Technology.TrimBim.Fbs.Arc3f|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\narcsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startGraphicsContainer(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset lineSegmentsOffset\n */\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, lineSegmentsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset arcsOffset\n */\nstatic addArcs(builder:flatbuffers.Builder, arcsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, arcsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startArcsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(44, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endGraphicsContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // lineSegments\n  builder.requiredField(offset, 6); // arcs\n  return offset;\n};\n\nstatic createGraphicsContainer(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset, arcsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  GraphicsContainer.startGraphicsContainer(builder);\n  GraphicsContainer.addLineSegments(builder, lineSegmentsOffset);\n  GraphicsContainer.addArcs(builder, arcsOffset);\n  return GraphicsContainer.endGraphicsContainer(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class CoordinateGeometryPoint {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns CoordinateGeometryPoint\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):CoordinateGeometryPoint {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param CoordinateGeometryPoint= obj\n * @returns CoordinateGeometryPoint\n */\nstatic getRootAsCoordinateGeometryPoint(bb:flatbuffers.ByteBuffer, obj?:CoordinateGeometryPoint):CoordinateGeometryPoint {\n  return (obj || new CoordinateGeometryPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param CoordinateGeometryPoint= obj\n * @returns CoordinateGeometryPoint\n */\nstatic getSizePrefixedRootAsCoordinateGeometryPoint(bb:flatbuffers.ByteBuffer, obj?:CoordinateGeometryPoint):CoordinateGeometryPoint {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new CoordinateGeometryPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nname():string|null\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nname(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nsymbol():string|null\nsymbol(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nsymbol(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startCoordinateGeometryPoint(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset nameOffset\n */\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, nameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset symbolOffset\n */\nstatic addSymbol(builder:flatbuffers.Builder, symbolOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, symbolOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endCoordinateGeometryPoint(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // name\n  builder.requiredField(offset, 6); // symbol\n  return offset;\n};\n\nstatic createCoordinateGeometryPoint(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, symbolOffset:flatbuffers.Offset):flatbuffers.Offset {\n  CoordinateGeometryPoint.startCoordinateGeometryPoint(builder);\n  CoordinateGeometryPoint.addName(builder, nameOffset);\n  CoordinateGeometryPoint.addSymbol(builder, symbolOffset);\n  return CoordinateGeometryPoint.endCoordinateGeometryPoint(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class BillboardText {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns BillboardText\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):BillboardText {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BillboardText= obj\n * @returns BillboardText\n */\nstatic getRootAsBillboardText(bb:flatbuffers.ByteBuffer, obj?:BillboardText):BillboardText {\n  return (obj || new BillboardText()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param BillboardText= obj\n * @returns BillboardText\n */\nstatic getSizePrefixedRootAsBillboardText(bb:flatbuffers.ByteBuffer, obj?:BillboardText):BillboardText {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new BillboardText()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\ntextStyleId():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_textStyleId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\ntext():string|null\ntext(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\ntext(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBillboardText(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number textStyleId\n */\nstatic addTextStyleId(builder:flatbuffers.Builder, textStyleId:number) {\n  builder.addFieldInt32(0, textStyleId, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset textOffset\n */\nstatic addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, textOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBillboardText(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // text\n  return offset;\n};\n\nstatic createBillboardText(builder:flatbuffers.Builder, textStyleId:number, textOffset:flatbuffers.Offset):flatbuffers.Offset {\n  BillboardText.startBillboardText(builder);\n  BillboardText.addTextStyleId(builder, textStyleId);\n  BillboardText.addText(builder, textOffset);\n  return BillboardText.endBillboardText(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TextStyle {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TextStyle\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TextStyle {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TextStyle= obj\n * @returns TextStyle\n */\nstatic getRootAsTextStyle(bb:flatbuffers.ByteBuffer, obj?:TextStyle):TextStyle {\n  return (obj || new TextStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param TextStyle= obj\n * @returns TextStyle\n */\nstatic getSizePrefixedRootAsTextStyle(bb:flatbuffers.ByteBuffer, obj?:TextStyle):TextStyle {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new TextStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nfont():string|null\nfont(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nfont(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nsize():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_size(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\noptions():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_options(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nverticalAlign():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_verticalAlign(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nhorizontalAlign():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_horizontalAlign(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nrotationAngle():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_rotationAngle(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.LayoutType\n */\nlayout():Trimble.Technology.TrimBim.Fbs.LayoutType {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.LayoutType.Invalid;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.LayoutType value\n * @returns boolean\n */\nmutate_layout(value:Trimble.Technology.TrimBim.Fbs.LayoutType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.AlignmentType\n */\nalignment():Trimble.Technology.TrimBim.Fbs.AlignmentType {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.AlignmentType.Invalid;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentType value\n * @returns boolean\n */\nmutate_alignment(value:Trimble.Technology.TrimBim.Fbs.AlignmentType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nmaxAutoScale():number {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_maxAutoScale(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nverticalDistanceToObject():number {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_verticalDistanceToObject(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startTextStyle(builder:flatbuffers.Builder) {\n  builder.startObject(10);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset fontOffset\n */\nstatic addFont(builder:flatbuffers.Builder, fontOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, fontOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number size\n */\nstatic addSize(builder:flatbuffers.Builder, size:number) {\n  builder.addFieldFloat64(1, size, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number options\n */\nstatic addOptions(builder:flatbuffers.Builder, options:number) {\n  builder.addFieldInt32(2, options, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number verticalAlign\n */\nstatic addVerticalAlign(builder:flatbuffers.Builder, verticalAlign:number) {\n  builder.addFieldFloat64(3, verticalAlign, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number horizontalAlign\n */\nstatic addHorizontalAlign(builder:flatbuffers.Builder, horizontalAlign:number) {\n  builder.addFieldFloat64(4, horizontalAlign, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number rotationAngle\n */\nstatic addRotationAngle(builder:flatbuffers.Builder, rotationAngle:number) {\n  builder.addFieldFloat64(5, rotationAngle, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.LayoutType layout\n */\nstatic addLayout(builder:flatbuffers.Builder, layout:Trimble.Technology.TrimBim.Fbs.LayoutType) {\n  builder.addFieldInt8(6, layout, Trimble.Technology.TrimBim.Fbs.LayoutType.Invalid);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentType alignment\n */\nstatic addAlignment(builder:flatbuffers.Builder, alignment:Trimble.Technology.TrimBim.Fbs.AlignmentType) {\n  builder.addFieldInt8(7, alignment, Trimble.Technology.TrimBim.Fbs.AlignmentType.Invalid);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number maxAutoScale\n */\nstatic addMaxAutoScale(builder:flatbuffers.Builder, maxAutoScale:number) {\n  builder.addFieldFloat64(8, maxAutoScale, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number verticalDistanceToObject\n */\nstatic addVerticalDistanceToObject(builder:flatbuffers.Builder, verticalDistanceToObject:number) {\n  builder.addFieldFloat64(9, verticalDistanceToObject, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endTextStyle(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\nstatic createTextStyle(builder:flatbuffers.Builder, fontOffset:flatbuffers.Offset, size:number, options:number, verticalAlign:number, horizontalAlign:number, rotationAngle:number, layout:Trimble.Technology.TrimBim.Fbs.LayoutType, alignment:Trimble.Technology.TrimBim.Fbs.AlignmentType, maxAutoScale:number, verticalDistanceToObject:number):flatbuffers.Offset {\n  TextStyle.startTextStyle(builder);\n  TextStyle.addFont(builder, fontOffset);\n  TextStyle.addSize(builder, size);\n  TextStyle.addOptions(builder, options);\n  TextStyle.addVerticalAlign(builder, verticalAlign);\n  TextStyle.addHorizontalAlign(builder, horizontalAlign);\n  TextStyle.addRotationAngle(builder, rotationAngle);\n  TextStyle.addLayout(builder, layout);\n  TextStyle.addAlignment(builder, alignment);\n  TextStyle.addMaxAutoScale(builder, maxAutoScale);\n  TextStyle.addVerticalDistanceToObject(builder, verticalDistanceToObject);\n  return TextStyle.endTextStyle(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Billboard {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Billboard\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Billboard {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Billboard= obj\n * @returns Billboard\n */\nstatic getRootAsBillboard(bb:flatbuffers.ByteBuffer, obj?:Billboard):Billboard {\n  return (obj || new Billboard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Billboard= obj\n * @returns Billboard\n */\nstatic getSizePrefixedRootAsBillboard(bb:flatbuffers.ByteBuffer, obj?:Billboard):Billboard {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Billboard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBillboard(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBillboard(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\nstatic createBillboard(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Billboard.startBillboard(builder);\n  return Billboard.endBillboard(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class TexturedBillboard {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns TexturedBillboard\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedBillboard {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nleftUpXY(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nleftUpUV(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 16, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nrightDownXY(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 32, this.bb!);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\n */\nrightDownUV(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 48, this.bb!);\n};\n\n/**\n * @returns boolean\n */\nIsInWorldUnits():boolean {\n  return !!this.bb!.readInt8(this.bb_pos + 64);\n};\n\n/**\n * @param boolean value\n * @returns boolean\n */\nmutate_IsInWorldUnits(value:boolean):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 64);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number leftUpXY_x\n * @param number leftUpXY_y\n * @param number leftUpUV_x\n * @param number leftUpUV_y\n * @param number rightDownXY_x\n * @param number rightDownXY_y\n * @param number rightDownUV_x\n * @param number rightDownUV_y\n * @param boolean IsInWorldUnits\n * @returns flatbuffers.Offset\n */\nstatic createTexturedBillboard(builder:flatbuffers.Builder, leftUpXY_x: number, leftUpXY_y: number, leftUpUV_x: number, leftUpUV_y: number, rightDownXY_x: number, rightDownXY_y: number, rightDownUV_x: number, rightDownUV_y: number, IsInWorldUnits: boolean):flatbuffers.Offset {\n  builder.prep(8, 72);\n  builder.pad(7);\n  builder.writeInt8(+IsInWorldUnits);\n  builder.prep(8, 16);\n  builder.writeFloat64(rightDownUV_y);\n  builder.writeFloat64(rightDownUV_x);\n  builder.prep(8, 16);\n  builder.writeFloat64(rightDownXY_y);\n  builder.writeFloat64(rightDownXY_x);\n  builder.prep(8, 16);\n  builder.writeFloat64(leftUpUV_y);\n  builder.writeFloat64(leftUpUV_x);\n  builder.prep(8, 16);\n  builder.writeFloat64(leftUpXY_y);\n  builder.writeFloat64(leftUpXY_x);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class BoltTop {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns BoltTop\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):BoltTop {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\ntopDiameter():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_topDiameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nthickness():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_thickness(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_diameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nlength():number {\n  return this.bb!.readFloat32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_length(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.BoltType\n */\ntype():Trimble.Technology.TrimBim.Fbs.BoltType {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 16));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.BoltType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.BoltType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number topDiameter\n * @param number thickness\n * @param number diameter\n * @param number length\n * @param Trimble.Technology.TrimBim.Fbs.BoltType type\n * @returns flatbuffers.Offset\n */\nstatic createBoltTop(builder:flatbuffers.Builder, topDiameter: number, thickness: number, diameter: number, length: number, type: Trimble.Technology.TrimBim.Fbs.BoltType):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.pad(3);\n  builder.writeInt8(type);\n  builder.writeFloat32(length);\n  builder.writeFloat32(diameter);\n  builder.writeFloat32(thickness);\n  builder.writeFloat32(topDiameter);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Washer {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Washer\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Washer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\noffset():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_offset(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ninnerDiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_innerDiameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nouterDiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_outerDiameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nthickness():number {\n  return this.bb!.readFloat32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_thickness(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number offset\n * @param number innerDiameter\n * @param number outerDiameter\n * @param number thickness\n * @returns flatbuffers.Offset\n */\nstatic createWasher(builder:flatbuffers.Builder, offset: number, innerDiameter: number, outerDiameter: number, thickness: number):flatbuffers.Offset {\n  builder.prep(4, 16);\n  builder.writeFloat32(thickness);\n  builder.writeFloat32(outerDiameter);\n  builder.writeFloat32(innerDiameter);\n  builder.writeFloat32(offset);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Nut {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Nut\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Nut {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\noffset():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_offset(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ninnerDiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_innerDiameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nouterDiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_outerDiameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nthickness():number {\n  return this.bb!.readFloat32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_thickness(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number offset\n * @param number innerDiameter\n * @param number outerDiameter\n * @param number thickness\n * @returns flatbuffers.Offset\n */\nstatic createNut(builder:flatbuffers.Builder, offset: number, innerDiameter: number, outerDiameter: number, thickness: number):flatbuffers.Offset {\n  builder.prep(4, 16);\n  builder.writeFloat32(thickness);\n  builder.writeFloat32(outerDiameter);\n  builder.writeFloat32(innerDiameter);\n  builder.writeFloat32(offset);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Hole {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Hole\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Hole {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\noffset():number {\n  return this.bb!.readFloat32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_offset(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nlength():number {\n  return this.bb!.readFloat32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_length(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\ndiameter():number {\n  return this.bb!.readFloat32(this.bb_pos + 8);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_diameter(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nxslot():number {\n  return this.bb!.readFloat32(this.bb_pos + 12);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_xslot(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nyslot():number {\n  return this.bb!.readFloat32(this.bb_pos + 16);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_yslot(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number offset\n * @param number length\n * @param number diameter\n * @param number xslot\n * @param number yslot\n * @returns flatbuffers.Offset\n */\nstatic createHole(builder:flatbuffers.Builder, offset: number, length: number, diameter: number, xslot: number, yslot: number):flatbuffers.Offset {\n  builder.prep(4, 20);\n  builder.writeFloat32(yslot);\n  builder.writeFloat32(xslot);\n  builder.writeFloat32(diameter);\n  builder.writeFloat32(length);\n  builder.writeFloat32(offset);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Bolt {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Bolt\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Bolt {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Bolt= obj\n * @returns Bolt\n */\nstatic getRootAsBolt(bb:flatbuffers.ByteBuffer, obj?:Bolt):Bolt {\n  return (obj || new Bolt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Bolt= obj\n * @returns Bolt\n */\nstatic getSizePrefixedRootAsBolt(bb:flatbuffers.ByteBuffer, obj?:Bolt):Bolt {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Bolt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.BoltTop= obj\n * @returns Trimble.Technology.TrimBim.Fbs.BoltTop|null\n */\ntop(obj?:Trimble.Technology.TrimBim.Fbs.BoltTop):Trimble.Technology.TrimBim.Fbs.BoltTop|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BoltTop()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Washer= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Washer\n */\nwashers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Washer):Trimble.Technology.TrimBim.Fbs.Washer|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Washer()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nwashersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Nut= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Nut\n */\nnuts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Nut):Trimble.Technology.TrimBim.Fbs.Nut|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Nut()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nnutsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Hole= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Hole\n */\nholes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Hole):Trimble.Technology.TrimBim.Fbs.Hole|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Hole()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nholesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startBolt(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset topOffset\n */\nstatic addTop(builder:flatbuffers.Builder, topOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(0, topOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset washersOffset\n */\nstatic addWashers(builder:flatbuffers.Builder, washersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, washersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startWashersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(16, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset nutsOffset\n */\nstatic addNuts(builder:flatbuffers.Builder, nutsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, nutsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startNutsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(16, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset holesOffset\n */\nstatic addHoles(builder:flatbuffers.Builder, holesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, holesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startHolesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(20, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endBolt(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 6); // washers\n  builder.requiredField(offset, 8); // nuts\n  builder.requiredField(offset, 10); // holes\n  return offset;\n};\n\nstatic createBolt(builder:flatbuffers.Builder, topOffset:flatbuffers.Offset, washersOffset:flatbuffers.Offset, nutsOffset:flatbuffers.Offset, holesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Bolt.startBolt(builder);\n  Bolt.addTop(builder, topOffset);\n  Bolt.addWashers(builder, washersOffset);\n  Bolt.addNuts(builder, nutsOffset);\n  Bolt.addHoles(builder, holesOffset);\n  return Bolt.endBolt(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class MapConversion {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns MapConversion\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):MapConversion {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param MapConversion= obj\n * @returns MapConversion\n */\nstatic getRootAsMapConversion(bb:flatbuffers.ByteBuffer, obj?:MapConversion):MapConversion {\n  return (obj || new MapConversion()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param MapConversion= obj\n * @returns MapConversion\n */\nstatic getSizePrefixedRootAsMapConversion(bb:flatbuffers.ByteBuffer, obj?:MapConversion):MapConversion {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new MapConversion()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @returns number\n */\neastings():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_eastings(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nnorthings():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_northings(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\northogonalHeight():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_orthogonalHeight(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nxAxisAbscissa():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_xAxisAbscissa(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nxAxisOrdinate():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_xAxisOrdinate(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nscaleToMapProjection():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_scaleToMapProjection(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionName():string|null\nprojectionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionDescription():string|null\nprojectionDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionDescription(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionGeodeticDatum():string|null\nprojectionGeodeticDatum(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionGeodeticDatum(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionVerticalDatum():string|null\nprojectionVerticalDatum(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionVerticalDatum(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionProjectionType():string|null\nprojectionProjectionType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionProjectionType(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionZone():string|null\nprojectionZone(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionZone(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nprojectionUnitName():string|null\nprojectionUnitName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nprojectionUnitName(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nprojectionScaleToMetric():number {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_projectionScaleToMetric(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\n */\nsourceOrigin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + offset, this.bb!) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startMapConversion(builder:flatbuffers.Builder) {\n  builder.startObject(15);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number eastings\n */\nstatic addEastings(builder:flatbuffers.Builder, eastings:number) {\n  builder.addFieldFloat64(0, eastings, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number northings\n */\nstatic addNorthings(builder:flatbuffers.Builder, northings:number) {\n  builder.addFieldFloat64(1, northings, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number orthogonalHeight\n */\nstatic addOrthogonalHeight(builder:flatbuffers.Builder, orthogonalHeight:number) {\n  builder.addFieldFloat64(2, orthogonalHeight, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number xAxisAbscissa\n */\nstatic addXAxisAbscissa(builder:flatbuffers.Builder, xAxisAbscissa:number) {\n  builder.addFieldFloat64(3, xAxisAbscissa, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number xAxisOrdinate\n */\nstatic addXAxisOrdinate(builder:flatbuffers.Builder, xAxisOrdinate:number) {\n  builder.addFieldFloat64(4, xAxisOrdinate, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number scaleToMapProjection\n */\nstatic addScaleToMapProjection(builder:flatbuffers.Builder, scaleToMapProjection:number) {\n  builder.addFieldFloat64(5, scaleToMapProjection, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionNameOffset\n */\nstatic addProjectionName(builder:flatbuffers.Builder, projectionNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, projectionNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionDescriptionOffset\n */\nstatic addProjectionDescription(builder:flatbuffers.Builder, projectionDescriptionOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, projectionDescriptionOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionGeodeticDatumOffset\n */\nstatic addProjectionGeodeticDatum(builder:flatbuffers.Builder, projectionGeodeticDatumOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(8, projectionGeodeticDatumOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionVerticalDatumOffset\n */\nstatic addProjectionVerticalDatum(builder:flatbuffers.Builder, projectionVerticalDatumOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(9, projectionVerticalDatumOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionProjectionTypeOffset\n */\nstatic addProjectionProjectionType(builder:flatbuffers.Builder, projectionProjectionTypeOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(10, projectionProjectionTypeOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionZoneOffset\n */\nstatic addProjectionZone(builder:flatbuffers.Builder, projectionZoneOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(11, projectionZoneOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset projectionUnitNameOffset\n */\nstatic addProjectionUnitName(builder:flatbuffers.Builder, projectionUnitNameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(12, projectionUnitNameOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number projectionScaleToMetric\n */\nstatic addProjectionScaleToMetric(builder:flatbuffers.Builder, projectionScaleToMetric:number) {\n  builder.addFieldFloat64(13, projectionScaleToMetric, 0.0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset sourceOriginOffset\n */\nstatic addSourceOrigin(builder:flatbuffers.Builder, sourceOriginOffset:flatbuffers.Offset) {\n  builder.addFieldStruct(14, sourceOriginOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endMapConversion(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  return offset;\n};\n\nstatic createMapConversion(builder:flatbuffers.Builder, eastings:number, northings:number, orthogonalHeight:number, xAxisAbscissa:number, xAxisOrdinate:number, scaleToMapProjection:number, projectionNameOffset:flatbuffers.Offset, projectionDescriptionOffset:flatbuffers.Offset, projectionGeodeticDatumOffset:flatbuffers.Offset, projectionVerticalDatumOffset:flatbuffers.Offset, projectionProjectionTypeOffset:flatbuffers.Offset, projectionZoneOffset:flatbuffers.Offset, projectionUnitNameOffset:flatbuffers.Offset, projectionScaleToMetric:number, sourceOriginOffset:flatbuffers.Offset):flatbuffers.Offset {\n  MapConversion.startMapConversion(builder);\n  MapConversion.addEastings(builder, eastings);\n  MapConversion.addNorthings(builder, northings);\n  MapConversion.addOrthogonalHeight(builder, orthogonalHeight);\n  MapConversion.addXAxisAbscissa(builder, xAxisAbscissa);\n  MapConversion.addXAxisOrdinate(builder, xAxisOrdinate);\n  MapConversion.addScaleToMapProjection(builder, scaleToMapProjection);\n  MapConversion.addProjectionName(builder, projectionNameOffset);\n  MapConversion.addProjectionDescription(builder, projectionDescriptionOffset);\n  MapConversion.addProjectionGeodeticDatum(builder, projectionGeodeticDatumOffset);\n  MapConversion.addProjectionVerticalDatum(builder, projectionVerticalDatumOffset);\n  MapConversion.addProjectionProjectionType(builder, projectionProjectionTypeOffset);\n  MapConversion.addProjectionZone(builder, projectionZoneOffset);\n  MapConversion.addProjectionUnitName(builder, projectionUnitNameOffset);\n  MapConversion.addProjectionScaleToMetric(builder, projectionScaleToMetric);\n  MapConversion.addSourceOrigin(builder, sourceOriginOffset);\n  return MapConversion.endMapConversion(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class ModelGeometry {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns ModelGeometry\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelGeometry {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelGeometry= obj\n * @returns ModelGeometry\n */\nstatic getRootAsModelGeometry(bb:flatbuffers.ByteBuffer, obj?:ModelGeometry):ModelGeometry {\n  return (obj || new ModelGeometry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelGeometry= obj\n * @returns ModelGeometry\n */\nstatic getSizePrefixedRootAsModelGeometry(bb:flatbuffers.ByteBuffer, obj?:ModelGeometry):ModelGeometry {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new ModelGeometry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Placement3= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Placement3\n */\nlocalPlacements(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Placement3):Trimble.Technology.TrimBim.Fbs.Placement3|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Placement3()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 48, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nlocalPlacementsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.SurfaceMaterial= obj\n * @returns Trimble.Technology.TrimBim.Fbs.SurfaceMaterial\n */\nsurfaceMaterials(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SurfaceMaterial):Trimble.Technology.TrimBim.Fbs.SurfaceMaterial|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SurfaceMaterial()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nsurfaceMaterialsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nlayers(index: number):string\nlayers(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nlayers(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nlayersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GeometryDefinition= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryDefinition\n */\ndefinitions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GeometryDefinition):Trimble.Technology.TrimBim.Fbs.GeometryDefinition|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GeometryDefinition()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 32, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ndefinitionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GeometryInstance= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryInstance\n */\ninstances(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GeometryInstance):Trimble.Technology.TrimBim.Fbs.GeometryInstance|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GeometryInstance()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ninstancesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Texture= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Texture\n */\ntextures(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Texture):Trimble.Technology.TrimBim.Fbs.Texture|null {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Texture()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntexturesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.BRep= obj\n * @returns Trimble.Technology.TrimBim.Fbs.BRep\n */\nbReps(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRep):Trimble.Technology.TrimBim.Fbs.BRep|null {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRep()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nbRepsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TriangleMesh= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TriangleMesh\n */\ntriangleMeshes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TriangleMesh):Trimble.Technology.TrimBim.Fbs.TriangleMesh|null {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TriangleMesh()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntriangleMeshesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 18);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TriangleMesh8= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TriangleMesh8\n */\ntriangleMeshes8(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TriangleMesh8):Trimble.Technology.TrimBim.Fbs.TriangleMesh8|null {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TriangleMesh8()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntriangleMeshes8Length():number {\n  var offset = this.bb!.__offset(this.bb_pos, 20);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh\n */\ntexturedTriangleMeshes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh):Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh|null {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntexturedTriangleMeshesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 22);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8\n */\ntexturedTriangleMeshes8(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8):Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8|null {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntexturedTriangleMeshes8Length():number {\n  var offset = this.bb!.__offset(this.bb_pos, 24);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer= obj\n * @returns Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer\n */\nsweptDiskSolids(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer):Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer|null {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nsweptDiskSolidsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 26);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.BRepWithUV= obj\n * @returns Trimble.Technology.TrimBim.Fbs.BRepWithUV\n */\nbRepWithUVs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRepWithUV):Trimble.Technology.TrimBim.Fbs.BRepWithUV|null {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRepWithUV()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nbRepWithUVsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 28);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.BRepWithNormal= obj\n * @returns Trimble.Technology.TrimBim.Fbs.BRepWithNormal\n */\nbRepWithNormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRepWithNormal):Trimble.Technology.TrimBim.Fbs.BRepWithNormal|null {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRepWithNormal()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nbRepWithNormalsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 30);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GraphicsContainer= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GraphicsContainer\n */\ngraphicsContainers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GraphicsContainer):Trimble.Technology.TrimBim.Fbs.GraphicsContainer|null {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GraphicsContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ngraphicsContainersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 32);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentCurve= obj\n * @returns Trimble.Technology.TrimBim.Fbs.AlignmentCurve\n */\nalignmentCurves(index: number, obj?:Trimble.Technology.TrimBim.Fbs.AlignmentCurve):Trimble.Technology.TrimBim.Fbs.AlignmentCurve|null {\n  var offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.AlignmentCurve()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nalignmentCurvesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 34);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.GridLineContainer= obj\n * @returns Trimble.Technology.TrimBim.Fbs.GridLineContainer\n */\ngridLineContainers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridLineContainer):Trimble.Technology.TrimBim.Fbs.GridLineContainer|null {\n  var offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridLineContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ngridLineContainersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 36);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint= obj\n * @returns Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint\n */\ncoordinateGeometryPoints(index: number, obj?:Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint):Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint|null {\n  var offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ncoordinateGeometryPointsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 38);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.BillboardText= obj\n * @returns Trimble.Technology.TrimBim.Fbs.BillboardText\n */\nbillboardTexts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BillboardText):Trimble.Technology.TrimBim.Fbs.BillboardText|null {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BillboardText()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nbillboardTextsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 40);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TextStyle= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TextStyle\n */\ntextStyles(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TextStyle):Trimble.Technology.TrimBim.Fbs.TextStyle|null {\n  var offset = this.bb!.__offset(this.bb_pos, 42);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TextStyle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntextStylesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 42);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Billboard= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Billboard\n */\nbillboards(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Billboard):Trimble.Technology.TrimBim.Fbs.Billboard|null {\n  var offset = this.bb!.__offset(this.bb_pos, 44);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Billboard()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nbillboardsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 44);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.TexturedBillboard= obj\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedBillboard\n */\ntexturedBillboards(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedBillboard):Trimble.Technology.TrimBim.Fbs.TexturedBillboard|null {\n  var offset = this.bb!.__offset(this.bb_pos, 46);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedBillboard()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 72, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\ntexturedBillboardsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 46);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Bolt= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Bolt\n */\nbolts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Bolt):Trimble.Technology.TrimBim.Fbs.Bolt|null {\n  var offset = this.bb!.__offset(this.bb_pos, 48);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Bolt()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nboltsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 48);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startModelGeometry(builder:flatbuffers.Builder) {\n  builder.startObject(23);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset localPlacementsOffset\n */\nstatic addLocalPlacements(builder:flatbuffers.Builder, localPlacementsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, localPlacementsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLocalPlacementsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(48, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset surfaceMaterialsOffset\n */\nstatic addSurfaceMaterials(builder:flatbuffers.Builder, surfaceMaterialsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, surfaceMaterialsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startSurfaceMaterialsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(20, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset layersOffset\n */\nstatic addLayers(builder:flatbuffers.Builder, layersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, layersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createLayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startLayersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset definitionsOffset\n */\nstatic addDefinitions(builder:flatbuffers.Builder, definitionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, definitionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDefinitionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(32, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset instancesOffset\n */\nstatic addInstances(builder:flatbuffers.Builder, instancesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, instancesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startInstancesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(20, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset texturesOffset\n */\nstatic addTextures(builder:flatbuffers.Builder, texturesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, texturesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTexturesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTexturesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset bRepsOffset\n */\nstatic addBReps(builder:flatbuffers.Builder, bRepsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, bRepsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBRepsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBRepsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset triangleMeshesOffset\n */\nstatic addTriangleMeshes(builder:flatbuffers.Builder, triangleMeshesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(7, triangleMeshesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTriangleMeshesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTriangleMeshesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset triangleMeshes8Offset\n */\nstatic addTriangleMeshes8(builder:flatbuffers.Builder, triangleMeshes8Offset:flatbuffers.Offset) {\n  builder.addFieldOffset(8, triangleMeshes8Offset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTriangleMeshes8Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTriangleMeshes8Vector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset texturedTriangleMeshesOffset\n */\nstatic addTexturedTriangleMeshes(builder:flatbuffers.Builder, texturedTriangleMeshesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(9, texturedTriangleMeshesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTexturedTriangleMeshesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTexturedTriangleMeshesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset texturedTriangleMeshes8Offset\n */\nstatic addTexturedTriangleMeshes8(builder:flatbuffers.Builder, texturedTriangleMeshes8Offset:flatbuffers.Offset) {\n  builder.addFieldOffset(10, texturedTriangleMeshes8Offset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTexturedTriangleMeshes8Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTexturedTriangleMeshes8Vector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset sweptDiskSolidsOffset\n */\nstatic addSweptDiskSolids(builder:flatbuffers.Builder, sweptDiskSolidsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(11, sweptDiskSolidsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createSweptDiskSolidsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startSweptDiskSolidsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset bRepWithUVsOffset\n */\nstatic addBRepWithUVs(builder:flatbuffers.Builder, bRepWithUVsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(12, bRepWithUVsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBRepWithUVsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBRepWithUVsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset bRepWithNormalsOffset\n */\nstatic addBRepWithNormals(builder:flatbuffers.Builder, bRepWithNormalsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(13, bRepWithNormalsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBRepWithNormalsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBRepWithNormalsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset graphicsContainersOffset\n */\nstatic addGraphicsContainers(builder:flatbuffers.Builder, graphicsContainersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(14, graphicsContainersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createGraphicsContainersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startGraphicsContainersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset alignmentCurvesOffset\n */\nstatic addAlignmentCurves(builder:flatbuffers.Builder, alignmentCurvesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(15, alignmentCurvesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createAlignmentCurvesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startAlignmentCurvesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset gridLineContainersOffset\n */\nstatic addGridLineContainers(builder:flatbuffers.Builder, gridLineContainersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(16, gridLineContainersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createGridLineContainersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startGridLineContainersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset coordinateGeometryPointsOffset\n */\nstatic addCoordinateGeometryPoints(builder:flatbuffers.Builder, coordinateGeometryPointsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(17, coordinateGeometryPointsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createCoordinateGeometryPointsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startCoordinateGeometryPointsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset billboardTextsOffset\n */\nstatic addBillboardTexts(builder:flatbuffers.Builder, billboardTextsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(18, billboardTextsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBillboardTextsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBillboardTextsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset textStylesOffset\n */\nstatic addTextStyles(builder:flatbuffers.Builder, textStylesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(19, textStylesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createTextStylesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTextStylesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset billboardsOffset\n */\nstatic addBillboards(builder:flatbuffers.Builder, billboardsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(20, billboardsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBillboardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBillboardsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset texturedBillboardsOffset\n */\nstatic addTexturedBillboards(builder:flatbuffers.Builder, texturedBillboardsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(21, texturedBillboardsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startTexturedBillboardsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(72, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset boltsOffset\n */\nstatic addBolts(builder:flatbuffers.Builder, boltsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(22, boltsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createBoltsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startBoltsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endModelGeometry(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // localPlacements\n  builder.requiredField(offset, 6); // surfaceMaterials\n  builder.requiredField(offset, 8); // layers\n  builder.requiredField(offset, 10); // definitions\n  builder.requiredField(offset, 12); // instances\n  builder.requiredField(offset, 14); // textures\n  builder.requiredField(offset, 16); // bReps\n  builder.requiredField(offset, 18); // triangleMeshes\n  builder.requiredField(offset, 20); // triangleMeshes8\n  builder.requiredField(offset, 22); // texturedTriangleMeshes\n  builder.requiredField(offset, 24); // texturedTriangleMeshes8\n  builder.requiredField(offset, 26); // sweptDiskSolids\n  builder.requiredField(offset, 28); // bRepWithUVs\n  builder.requiredField(offset, 30); // bRepWithNormals\n  builder.requiredField(offset, 32); // graphicsContainers\n  builder.requiredField(offset, 34); // alignmentCurves\n  builder.requiredField(offset, 36); // gridLineContainers\n  builder.requiredField(offset, 38); // coordinateGeometryPoints\n  builder.requiredField(offset, 40); // billboardTexts\n  builder.requiredField(offset, 42); // textStyles\n  builder.requiredField(offset, 44); // billboards\n  builder.requiredField(offset, 46); // texturedBillboards\n  builder.requiredField(offset, 48); // bolts\n  return offset;\n};\n\nstatic createModelGeometry(builder:flatbuffers.Builder, localPlacementsOffset:flatbuffers.Offset, surfaceMaterialsOffset:flatbuffers.Offset, layersOffset:flatbuffers.Offset, definitionsOffset:flatbuffers.Offset, instancesOffset:flatbuffers.Offset, texturesOffset:flatbuffers.Offset, bRepsOffset:flatbuffers.Offset, triangleMeshesOffset:flatbuffers.Offset, triangleMeshes8Offset:flatbuffers.Offset, texturedTriangleMeshesOffset:flatbuffers.Offset, texturedTriangleMeshes8Offset:flatbuffers.Offset, sweptDiskSolidsOffset:flatbuffers.Offset, bRepWithUVsOffset:flatbuffers.Offset, bRepWithNormalsOffset:flatbuffers.Offset, graphicsContainersOffset:flatbuffers.Offset, alignmentCurvesOffset:flatbuffers.Offset, gridLineContainersOffset:flatbuffers.Offset, coordinateGeometryPointsOffset:flatbuffers.Offset, billboardTextsOffset:flatbuffers.Offset, textStylesOffset:flatbuffers.Offset, billboardsOffset:flatbuffers.Offset, texturedBillboardsOffset:flatbuffers.Offset, boltsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  ModelGeometry.startModelGeometry(builder);\n  ModelGeometry.addLocalPlacements(builder, localPlacementsOffset);\n  ModelGeometry.addSurfaceMaterials(builder, surfaceMaterialsOffset);\n  ModelGeometry.addLayers(builder, layersOffset);\n  ModelGeometry.addDefinitions(builder, definitionsOffset);\n  ModelGeometry.addInstances(builder, instancesOffset);\n  ModelGeometry.addTextures(builder, texturesOffset);\n  ModelGeometry.addBReps(builder, bRepsOffset);\n  ModelGeometry.addTriangleMeshes(builder, triangleMeshesOffset);\n  ModelGeometry.addTriangleMeshes8(builder, triangleMeshes8Offset);\n  ModelGeometry.addTexturedTriangleMeshes(builder, texturedTriangleMeshesOffset);\n  ModelGeometry.addTexturedTriangleMeshes8(builder, texturedTriangleMeshes8Offset);\n  ModelGeometry.addSweptDiskSolids(builder, sweptDiskSolidsOffset);\n  ModelGeometry.addBRepWithUVs(builder, bRepWithUVsOffset);\n  ModelGeometry.addBRepWithNormals(builder, bRepWithNormalsOffset);\n  ModelGeometry.addGraphicsContainers(builder, graphicsContainersOffset);\n  ModelGeometry.addAlignmentCurves(builder, alignmentCurvesOffset);\n  ModelGeometry.addGridLineContainers(builder, gridLineContainersOffset);\n  ModelGeometry.addCoordinateGeometryPoints(builder, coordinateGeometryPointsOffset);\n  ModelGeometry.addBillboardTexts(builder, billboardTextsOffset);\n  ModelGeometry.addTextStyles(builder, textStylesOffset);\n  ModelGeometry.addBillboards(builder, billboardsOffset);\n  ModelGeometry.addTexturedBillboards(builder, texturedBillboardsOffset);\n  ModelGeometry.addBolts(builder, boltsOffset);\n  return ModelGeometry.endModelGeometry(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class HierarchyNode {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns HierarchyNode\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):HierarchyNode {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @returns number\n */\nparentElementId():number {\n  return this.bb!.readUint32(this.bb_pos);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_parentElementId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 0);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns number\n */\nchildElementId():number {\n  return this.bb!.readUint32(this.bb_pos + 4);\n};\n\n/**\n * @param number value\n * @returns boolean\n */\nmutate_childElementId(value:number):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeUint32(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @returns Trimble.Technology.TrimBim.Fbs.HierarchyType\n */\ntype():Trimble.Technology.TrimBim.Fbs.HierarchyType {\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 8));\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyType value\n * @returns boolean\n */\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.HierarchyType):boolean {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n\n  if (offset === 0) {\n    return false;\n  }\n\n  this.bb!.writeInt8(this.bb_pos + offset, value);\n  return true;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number parentElementId\n * @param number childElementId\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyType type\n * @returns flatbuffers.Offset\n */\nstatic createHierarchyNode(builder:flatbuffers.Builder, parentElementId: number, childElementId: number, type: Trimble.Technology.TrimBim.Fbs.HierarchyType):flatbuffers.Offset {\n  builder.prep(4, 12);\n  builder.pad(3);\n  builder.writeInt8(type);\n  builder.writeInt32(childElementId);\n  builder.writeInt32(parentElementId);\n  return builder.offset();\n};\n\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class ModelEntities {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns ModelEntities\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelEntities {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelEntities= obj\n * @returns ModelEntities\n */\nstatic getRootAsModelEntities(bb:flatbuffers.ByteBuffer, obj?:ModelEntities):ModelEntities {\n  return (obj || new ModelEntities()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param ModelEntities= obj\n * @returns ModelEntities\n */\nstatic getSizePrefixedRootAsModelEntities(bb:flatbuffers.ByteBuffer, obj?:ModelEntities):ModelEntities {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new ModelEntities()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Entity= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Entity\n */\nentities(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Entity):Trimble.Technology.TrimBim.Fbs.Entity|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Entity()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 64, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nentitiesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyNode= obj\n * @returns Trimble.Technology.TrimBim.Fbs.HierarchyNode\n */\nhierarchies(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HierarchyNode):Trimble.Technology.TrimBim.Fbs.HierarchyNode|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HierarchyNode()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nhierarchiesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.Guid= obj\n * @returns Trimble.Technology.TrimBim.Fbs.Guid\n */\nguidIdentifiers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Guid):Trimble.Technology.TrimBim.Fbs.Guid|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Guid()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nguidIdentifiersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nstringIdentifiers(index: number):string\nstringIdentifiers(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nstringIdentifiers(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nstringIdentifiersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.SpatialHash= obj\n * @returns Trimble.Technology.TrimBim.Fbs.SpatialHash\n */\nspatialHashIdentifiers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SpatialHash):Trimble.Technology.TrimBim.Fbs.SpatialHash|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SpatialHash()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 88, this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nspatialHashIdentifiersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @returns flatbuffers.Long\n */\ndwgHandleIdentifiers(index: number):flatbuffers.Long|null {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\n};\n\n/**\n * @returns number\n */\ndwgHandleIdentifiersLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array\n */\nentityClasses(index: number):string\nentityClasses(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\nentityClasses(index: number,optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n};\n\n/**\n * @returns number\n */\nentityClassesLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startModelEntities(builder:flatbuffers.Builder) {\n  builder.startObject(7);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset entitiesOffset\n */\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, entitiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startEntitiesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(64, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset hierarchiesOffset\n */\nstatic addHierarchies(builder:flatbuffers.Builder, hierarchiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, hierarchiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startHierarchiesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(12, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset guidIdentifiersOffset\n */\nstatic addGuidIdentifiers(builder:flatbuffers.Builder, guidIdentifiersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, guidIdentifiersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startGuidIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(16, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset stringIdentifiersOffset\n */\nstatic addStringIdentifiers(builder:flatbuffers.Builder, stringIdentifiersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, stringIdentifiersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createStringIdentifiersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startStringIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset spatialHashIdentifiersOffset\n */\nstatic addSpatialHashIdentifiers(builder:flatbuffers.Builder, spatialHashIdentifiersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, spatialHashIdentifiersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startSpatialHashIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(88, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset dwgHandleIdentifiersOffset\n */\nstatic addDwgHandleIdentifiers(builder:flatbuffers.Builder, dwgHandleIdentifiersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, dwgHandleIdentifiersOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Long> data\n * @returns flatbuffers.Offset\n */\nstatic createDwgHandleIdentifiersVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addInt64(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startDwgHandleIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset entityClassesOffset\n */\nstatic addEntityClasses(builder:flatbuffers.Builder, entityClassesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, entityClassesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createEntityClassesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startEntityClassesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endModelEntities(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // entities\n  builder.requiredField(offset, 6); // hierarchies\n  builder.requiredField(offset, 8); // guidIdentifiers\n  builder.requiredField(offset, 10); // stringIdentifiers\n  builder.requiredField(offset, 12); // spatialHashIdentifiers\n  builder.requiredField(offset, 14); // dwgHandleIdentifiers\n  builder.requiredField(offset, 16); // entityClasses\n  return offset;\n};\n\nstatic createModelEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset, hierarchiesOffset:flatbuffers.Offset, guidIdentifiersOffset:flatbuffers.Offset, stringIdentifiersOffset:flatbuffers.Offset, spatialHashIdentifiersOffset:flatbuffers.Offset, dwgHandleIdentifiersOffset:flatbuffers.Offset, entityClassesOffset:flatbuffers.Offset):flatbuffers.Offset {\n  ModelEntities.startModelEntities(builder);\n  ModelEntities.addEntities(builder, entitiesOffset);\n  ModelEntities.addHierarchies(builder, hierarchiesOffset);\n  ModelEntities.addGuidIdentifiers(builder, guidIdentifiersOffset);\n  ModelEntities.addStringIdentifiers(builder, stringIdentifiersOffset);\n  ModelEntities.addSpatialHashIdentifiers(builder, spatialHashIdentifiersOffset);\n  ModelEntities.addDwgHandleIdentifiers(builder, dwgHandleIdentifiersOffset);\n  ModelEntities.addEntityClasses(builder, entityClassesOffset);\n  return ModelEntities.endModelEntities(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class MetadataEntry {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns MetadataEntry\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):MetadataEntry {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param MetadataEntry= obj\n * @returns MetadataEntry\n */\nstatic getRootAsMetadataEntry(bb:flatbuffers.ByteBuffer, obj?:MetadataEntry):MetadataEntry {\n  return (obj || new MetadataEntry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param MetadataEntry= obj\n * @returns MetadataEntry\n */\nstatic getSizePrefixedRootAsMetadataEntry(bb:flatbuffers.ByteBuffer, obj?:MetadataEntry):MetadataEntry {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new MetadataEntry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nkey():string|null\nkey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nkey(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Encoding= optionalEncoding\n * @returns string|Uint8Array|null\n */\nvalue():string|null\nvalue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nvalue(optionalEncoding?:any):string|Uint8Array|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startMetadataEntry(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset keyOffset\n */\nstatic addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, keyOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset valueOffset\n */\nstatic addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, valueOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endMetadataEntry(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // key\n  builder.requiredField(offset, 6); // value\n  return offset;\n};\n\nstatic createMetadataEntry(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {\n  MetadataEntry.startMetadataEntry(builder);\n  MetadataEntry.addKey(builder, keyOffset);\n  MetadataEntry.addValue(builder, valueOffset);\n  return MetadataEntry.endMetadataEntry(builder);\n}\n}\n}\n/**\n * @constructor\n */\nexport namespace Trimble.Technology.TrimBim.Fbs{\nexport class Model {\n  bb: flatbuffers.ByteBuffer|null = null;\n\n  bb_pos:number = 0;\n/**\n * @param number i\n * @param flatbuffers.ByteBuffer bb\n * @returns Model\n */\n__init(i:number, bb:flatbuffers.ByteBuffer):Model {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Model= obj\n * @returns Model\n */\nstatic getRootAsModel(bb:flatbuffers.ByteBuffer, obj?:Model):Model {\n  return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @param Model= obj\n * @returns Model\n */\nstatic getSizePrefixedRootAsModel(bb:flatbuffers.ByteBuffer, obj?:Model):Model {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n};\n\n/**\n * @param flatbuffers.ByteBuffer bb\n * @returns boolean\n */\nstatic bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {\n  return bb.__has_identifier('TRB8');\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.ModelEntities= obj\n * @returns Trimble.Technology.TrimBim.Fbs.ModelEntities|null\n */\nentities(obj?:Trimble.Technology.TrimBim.Fbs.ModelEntities):Trimble.Technology.TrimBim.Fbs.ModelEntities|null {\n  var offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelEntities()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.ModelProperties= obj\n * @returns Trimble.Technology.TrimBim.Fbs.ModelProperties|null\n */\nproperties(obj?:Trimble.Technology.TrimBim.Fbs.ModelProperties):Trimble.Technology.TrimBim.Fbs.ModelProperties|null {\n  var offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelProperties()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n};\n\n/**\n * @param Trimble.Technology.TrimBim.Fbs.ModelGeometry= obj\n * @returns Trimble.Technology.TrimBim.Fbs.ModelGeometry|null\n */\ngeometry(obj?:Trimble.Technology.TrimBim.Fbs.ModelGeometry):Trimble.Technology.TrimBim.Fbs.ModelGeometry|null {\n  var offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelGeometry()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.MapConversion= obj\n * @returns Trimble.Technology.TrimBim.Fbs.MapConversion\n */\nmapConversions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.MapConversion):Trimble.Technology.TrimBim.Fbs.MapConversion|null {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.MapConversion()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nmapConversionsLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param number index\n * @param Trimble.Technology.TrimBim.Fbs.MetadataEntry= obj\n * @returns Trimble.Technology.TrimBim.Fbs.MetadataEntry\n */\nmetadata(index: number, obj?:Trimble.Technology.TrimBim.Fbs.MetadataEntry):Trimble.Technology.TrimBim.Fbs.MetadataEntry|null {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.MetadataEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n};\n\n/**\n * @returns number\n */\nmetadataLength():number {\n  var offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n};\n\n/**\n * @param flatbuffers.Builder builder\n */\nstatic startModel(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset entitiesOffset\n */\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, entitiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset propertiesOffset\n */\nstatic addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, propertiesOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset geometryOffset\n */\nstatic addGeometry(builder:flatbuffers.Builder, geometryOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, geometryOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset mapConversionsOffset\n */\nstatic addMapConversions(builder:flatbuffers.Builder, mapConversionsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, mapConversionsOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createMapConversionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startMapConversionsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset metadataOffset\n */\nstatic addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, metadataOffset, 0);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param Array.<flatbuffers.Offset> data\n * @returns flatbuffers.Offset\n */\nstatic createMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (var i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]);\n  }\n  return builder.endVector();\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param number numElems\n */\nstatic startMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @returns flatbuffers.Offset\n */\nstatic endModel(builder:flatbuffers.Builder):flatbuffers.Offset {\n  var offset = builder.endObject();\n  builder.requiredField(offset, 4); // entities\n  builder.requiredField(offset, 6); // properties\n  builder.requiredField(offset, 8); // geometry\n  builder.requiredField(offset, 10); // mapConversions\n  builder.requiredField(offset, 12); // metadata\n  return offset;\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset offset\n */\nstatic finishModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, 'TRB8');\n};\n\n/**\n * @param flatbuffers.Builder builder\n * @param flatbuffers.Offset offset\n */\nstatic finishSizePrefixedModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, 'TRB8', true);\n};\n\nstatic createModel(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset, propertiesOffset:flatbuffers.Offset, geometryOffset:flatbuffers.Offset, mapConversionsOffset:flatbuffers.Offset, metadataOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Model.startModel(builder);\n  Model.addEntities(builder, entitiesOffset);\n  Model.addProperties(builder, propertiesOffset);\n  Model.addGeometry(builder, geometryOffset);\n  Model.addMapConversions(builder, mapConversionsOffset);\n  Model.addMetadata(builder, metadataOffset);\n  return Model.endModel(builder);\n}\n}\n}\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\nconst MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\tdamp: function ( x, y, lambda, dt ) {\n\n\t\treturn MathUtils.lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n\t},\n\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\n\n\tpingpong: function ( x, length = 1 ) {\n\n\t\treturn length - Math.abs( MathUtils.euclideanModulo( x, length * 2 ) - length );\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\t// Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\tseededRandom: function ( s ) {\n\n\t\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t\t// Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\n\t\treturn ( _seed - 1 ) / 2147483646;\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c2 = cos( b / 2 );\n\t\tconst s2 = sin( b / 2 );\n\n\t\tconst c13 = cos( ( a + c ) / 2 );\n\t\tconst s13 = sin( ( a + c ) / 2 );\n\n\t\tconst c1_3 = cos( ( a - c ) / 2 );\n\t\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\t\tconst c3_1 = cos( ( c - a ) / 2 );\n\t\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n};\n\n\nexport { MathUtils };\n","import { MathUtils } from './MathUtils.js';\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tObject.defineProperty( this, 'isQuaternion', { value: true } );\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tconst EPS = 0.000001;\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nexport { Quaternion };\n","import { MathUtils } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tObject.defineProperty( this, 'isVector3', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\n\n\nexport { Vector3 };\n","class Matrix3 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isMatrix3', { value: true } );\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).copy( this ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nexport { Matrix3 };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal, constant ) {\n\n\t\tObject.defineProperty( this, 'isPlane', { value: true } );\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n}\n\n\nexport { Plane };\n","import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tconst dot00 = _v0.dot( _v0 );\n\t\tconst dot01 = _v0.dot( _v1 );\n\t\tconst dot02 = _v0.dot( _v2 );\n\t\tconst dot11 = _v1.dot( _v1 );\n\t\tconst dot12 = _v1.dot( _v2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\n\nexport { Triangle };\n","import { Vector3 } from './Vector3.js';\n\nclass Box3 {\n\n\tconstructor( min, max ) {\n\n\t\tObject.defineProperty( this, 'isBox3', { value: true } );\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nconst _box = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\n\nexport { Box3 };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass Sphere {\n\n\tconstructor( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n}\n\n\nexport { Sphere };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n}\n\n\nexport { Frustum };\n","import { Vector3 } from './Vector3.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector.dot( this.direction );\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n}\n\n\nexport { Ray };\n","import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tObject.defineProperty( this, 'isMatrix4', { value: true } );\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n","class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tObject.defineProperty( this, 'isVector2', { value: true } );\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { Vector2 };\n","import { MathUtils } from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tObject.defineProperty( this, 'isColor', { value: true } );\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n\nexport { Color };\n","import { ITrimbimMaterialsMessage, MessageType } from \"./WorkerMessages\";\nimport { Trimble } from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {IMetaMaterial} from \"../common\";\nimport {Color} from \"three\";\nimport {TextureManager} from \"./TextureManager\";\n\nexport class MaterialManager {\n    private readonly materials: IMetaMaterial[];\n\n    constructor(\n        private modelId: string,\n        private textureManager: TextureManager,\n        private postMessage: (message: any, transfer?: Transferable[]) => void\n    ) {\n        this.materials = [];\n    }\n\n    sendModelMaterials(model: Trimble.Technology.TrimBim.Fbs.Model): number[] {\n        const materials: IMetaMaterial[] = [];\n        const geometry = model.geometry();\n        const length = geometry.surfaceMaterialsLength();\n\n        for (let i = 0; i < length; i++) {\n            const matDef = geometry.surfaceMaterials(i);\n            let textureTransparent = false;\n\n            let textureId = matDef.textureId();\n            if (textureId === 0x100000000-1) // Unsigned -1\n                textureId = undefined;\n\n            if (textureId !== undefined)\n                textureTransparent = this.textureManager.isTransparent(textureId);\n\n            const material: IMetaMaterial = {\n                color: new Color(matDef.r() / 255, matDef.g() / 255 , matDef.b() / 255),\n                side: matDef.sidedness(),\n                lineStyle: matDef.lineStyle(),\n                textureId: textureId,\n                opacity: matDef.a() / 255,\n                transparent: textureTransparent || matDef.a() < 255\n            };\n\n            materials.push(material);\n        }\n        return this.sendMaterials(materials);\n    }\n\n    sendMaterials(materials: IMetaMaterial[]): number[] {\n        const ids: number[] = [];\n        const newMaterials: IMetaMaterial[] = [];\n        mainLoop: for (const material of materials) {\n            for (let i = 0, l = this.materials.length; i < l; i++) {\n                if (this.equal(material, this.materials[i])) {\n                    ids.push(i); continue mainLoop;\n                }\n            }\n            this.materials.push(material);\n            newMaterials.push(material);\n            ids.push(this.materials.length - 1);\n        }\n        this.postMessage({ type: MessageType.ADD_MATERIAL, modelId: this.modelId, materials: newMaterials } as ITrimbimMaterialsMessage);\n        return ids;\n    }\n\n    private equal(m1: IMetaMaterial, m2: IMetaMaterial): boolean {\n        return (m1.color === m2.color || m1.color && m2.color && m1.color.r === m2.color.r && m1.color.g === m2.color.g && m1.color.b === m2.color.b) &&\n            this.eq(m1.opacity, m2.opacity, 1.0) &&\n            this.eq(m1.side, m2.side, Fbs.Sidedness.Single) &&\n            this.eq(m1.lineStyle, m2.lineStyle, Fbs.LineStyle.Normal) &&\n            m1.textureId === m2.textureId;\n    }\n\n    private eq(v1: any, v2: any, def: any): boolean {\n        return v1 === v2 ||\n            v1 === undefined && v2 === def ||\n            v1 === def && v2 === undefined;\n    }\n\n    getMaterial(id: number): IMetaMaterial {\n        return this.materials[id];\n    }\n}\n","import {Trimble} from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class LayerManager {\n    private layerVisibilities: boolean[];\n    private instance = new Fbs.GeometryInstance();\n    private geometry: Fbs.ModelGeometry;\n    private entities: Fbs.ModelEntities;\n\n    constructor(model: Fbs.Model) {\n        this.geometry = model.geometry();\n        this.entities = model.entities();\n        this.layerVisibilities = new Array(this.geometry.layersLength());\n    }\n\n    getLayers(): string[] {\n        const layers: string[] = [];\n        for (let i = 0; i < this.geometry.layersLength(); i++)\n            layers.push(this.geometry.layers(i));\n        return layers;\n    }\n\n    findLayersByEntities(entityIds: number[]): string[] {\n        const layers = new Set<string>();\n        for (let instanceId = 0; instanceId < this.geometry.instancesLength(); instanceId++) {\n            this.geometry.instances(instanceId, this.instance);\n            if (entityIds.includes(this.instance.entityId())) layers.add(this.geometry.layers(this.instance.layerId()));\n        }\n        return Array.from(layers);\n    }\n\n    getLayerIndex(layer: string): number {\n        for (let i = 0; i < this.geometry.layersLength(); i++)\n            if (this.geometry.layers(i) === layer) return i;\n    }\n\n    getLayerVisibility(layer: string): boolean {\n        return this.layerVisibilities[this.getLayerIndex(layer)];\n    }\n\n    setLayerVisibility(layer: string, visible: boolean): void {\n        this.layerVisibilities[this.getLayerIndex(layer)] = visible;\n    }\n\n    isVisible(layerId: number): boolean {\n        const visibility = this.layerVisibilities[layerId];\n        return visibility === true || visibility === undefined;\n    }\n}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","\n/**\n * Simple incremental checksum builder.\n * Currently based crc32, but could be replaced.\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check\n * https://stackoverflow.com/questions/27939882/fast-crc-algorithm\n */\nexport class Checksum {\n    private static readonly POLY = 0x82f63b78;\n    private static readonly MAX_INT32 = 2147483647;\n    private static readonly MIN_INT32 = -2147483648;\n\n    private intPlaceholder = new Int32Array(1);\n    private floatPlaceholder = new Float32Array(this.intPlaceholder.buffer);\n    private bytes = new Uint8Array(this.intPlaceholder.buffer);\n    private crc = ~0;\n\n    /**\n     * Add a primitive to the checksum.\n     * If the primitive is of an unsupported type during runtime, it is ignored\n     * @param data The primitive to be added\n     * @returns Itself, to allow chaining\n     */\n    add(data: number | boolean | string | object): Checksum {\n        switch (typeof data) {\n            case \"number\":\n                if (\n                    Number.isInteger(data) &&\n                    data < Checksum.MAX_INT32 &&\n                    data > Checksum.MIN_INT32\n                )       // Can it be accurately represented by an int32?\n                    this.intPlaceholder[0] = data;\n                else    // If not, represent by a float32\n                    this.floatPlaceholder[0] = data;\n                this.compute();\n                break;\n            case \"boolean\":\n                this.intPlaceholder[0] = (data ? 1 : 0);\n                this.compute();\n                break;\n            case \"string\":\n                for (let i=0; i<data.length; ++i) {\n                    this.intPlaceholder[0] = data.codePointAt(i);\n                    this.compute();\n                }\n                break;\n            case \"object\":\n                for (const p in data)\n                    if (data.hasOwnProperty(p)) this.add((data as any)[p]);\n                break;\n        }\n        return this;\n    }\n\n    /**\n     * Gives the checksum of all data added since last clear.\n     * @returns A 32-bit checksum as a number\n     */\n    get(): number {\n        return ~this.crc;\n    }\n\n    /**\n     * Resets the builder to initial state.\n     * @returns Itself, to allow chaining\n     */\n    clear(): Checksum {\n        this.crc = ~0;\n        return this;\n    }\n\n    /**\n     * Increments the checksum with the data currently stored in the placeholder.\n     */\n    private compute(): void {\n        for (let i=0; i<4; ++i) {\n            this.crc ^= this.bytes[i];\n            for (let k = 0; k < 8; ++k)\n                this.crc = this.crc & 1 ? (this.crc >> 1) ^ Checksum.POLY : this.crc >> 1;\n        }\n    }\n\n}\n","import {Vector3} from \"three\";\n\n/**\n * A utils file common for main thread and workers.\n * NB: Be careful what you import here, as it will be added to the web worker bundle.\n * In particular, do not use THREE.js here.\n */\n\n// max size of buffer which can be indexed by 16bit integer\nexport const MAX_16BIT_SIZE = 0x10000;\n\nconst DEG_RATIO = 1 / 360;\nexport function getPerspectiveViewWorldSize(fov: number, distance: number): number {\n    return Math.tan(fov * Math.PI * DEG_RATIO) * distance;\n}\n\nexport function iterate<T>(array: T[] | T, loop: (o: T, i: number) => void): void {\n    if (Array.isArray(array)) {\n        for (let i = 0; i < array.length; i++)\n            loop(array[i], i);\n    }\n    else {\n        loop(array, 0);\n    }\n}\n\n// Remove image from RAM after they are transfered to VRAM\nexport function disposeImage(): void {\n    // @ts-ignore\n    this.image = undefined;\n}\n\nexport class Vector3Const {\n    static zero = Object.freeze(new Vector3(0, 0, 0));\n    static one = Object.freeze(new Vector3(1, 1, 1));\n    static up = Object.freeze(new Vector3(0, 0, 1));\n    static down = Object.freeze(new Vector3(0, 0, -1));\n    static forward = Object.freeze(new Vector3(0, 1, 0));\n    static back = Object.freeze(new Vector3(0, -1, 0));\n    static right = Object.freeze(new Vector3(1, 0, 0));\n    static left = Object.freeze(new Vector3(-1, 0, 0));\n}\n","import {HitPoint} from \"../HitPoint\";\nimport {Frustum, Ray} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport LRUCache from \"lru-cache\";\nimport {Checksum} from \"@technology/webgl-viewer/dist/esnext/Helpers/Checksum\";\nimport {iterate} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\n\nexport const normalLength = 32767;\n\nexport abstract class GeometryBuilder {\n    readonly geometryType: TrimbimGeometryType;\n    readonly snapGeometryType: GeometryType;\n\n    private geometryPrototypes: Array<GeometryDataPrototype | GeometryDataPrototype[]>;\n\n    // unified static geometry cache to keep track of total consumed memory of all models and all geometry types\n    private static geometries = new LRUCache<number, GeometryData | GeometryData[]>({\n        // navigator.deviceMemory only available in https with Chrome\n        max: 50 * 1024 * 1024 * ((navigator as any).deviceMemory !== undefined ? (navigator as any).deviceMemory : 1), // allow caching 50mb per each GB of device memory\n        length: g => {\n            if (Array.isArray(g)) return g.reduce((sum, g2) => sum + g2.memSize, 0);\n            else return g.memSize;\n        }\n    });\n\n    private modelGeometryKeys = new Set<number>();\n    private checksum = new Checksum();\n    private modelIdHash: number;\n\n    static set maxCacheSize(max: number) {\n        GeometryBuilder.geometries.max = max;\n    }\n\n    protected initGeometryCache(size: number): void {\n        this.geometryPrototypes = new Array(size);\n    }\n\n    protected setGeometryPrototype(geometryIndex: number, geometry: GeometryDataPrototype | GeometryDataPrototype[]): void {\n        this.geometryPrototypes[geometryIndex] = Object.seal(geometry);\n    }\n\n    protected getCachedGeometryData(geometryIndex: number): GeometryData {\n        let geometry = GeometryBuilder.geometries.get(this.getCacheKey(geometryIndex)) as GeometryData;\n        if (!geometry)\n           geometry = Object.assign({}, this.geometryPrototypes[geometryIndex] as GeometryData);\n        return geometry;\n    }\n\n    protected getCachedGeometryDatas(geometryIndex: number): GeometryData[] {\n        let geometries = GeometryBuilder.geometries.get(this.getCacheKey(geometryIndex)) as GeometryData[];\n        if (!geometries)\n            geometries = (this.geometryPrototypes[geometryIndex] as GeometryDataPrototype[]).map(p => Object.assign({}, p));\n        return geometries;\n    }\n\n    private getCacheKey(geometryIndex: number): number {\n        return this.checksum.clear().add(this.modelIdHash).add(this.geometryType).add(geometryIndex).get();\n    }\n\n    protected calculateMemSizeAndCache(geometryIndex: number, geometry: GeometryData | GeometryData[]): void {\n        iterate(geometry, g => {\n            g.memSize = g.positions.byteLength;\n            if (g.indices)\n                g.memSize += g.indices.byteLength;\n            if (g.normals)\n                g.memSize += g.normals.byteLength;\n            if (g.uvs)\n                g.memSize += g.uvs.byteLength;\n            if (g.pointUvs)\n                g.memSize += g.pointUvs.byteLength;\n            if (g.pointSizes)\n                g.memSize += g.pointSizes.byteLength;\n            // seal to make sure that object is not extended, JS engine optimization\n            Object.seal(g);\n        });\n        const key = this.getCacheKey(geometryIndex);\n        GeometryBuilder.geometries.set(key, geometry);\n        this.modelGeometryKeys.add(key);\n    }\n\n    constructor(modelId: string, protected geometry: Fbs.ModelGeometry) {\n        this.modelIdHash = this.checksum.clear().add(modelId).get();\n    }\n\n    dispose(): void {\n        for (const key of this.modelGeometryKeys)\n            GeometryBuilder.geometries.del(key);\n    }\n\n    abstract createGeometryPrototypes(): void | Promise<void>;\n    protected abstract createGeometryPrototype(geometryDefinition: any, objectType?: ObjectType): GeometryDataPrototype | GeometryDataPrototype[];\n    protected abstract build(geometryDefinition: any, bufferGeometry: GeometryData | GeometryData[]): void;\n\n    abstract getGeometries(geometryIndex: number, buildIfEmpty: boolean): GeometryData | GeometryData[];\n    abstract pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\n\n    abstract pickFace(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\n    abstract pickLine(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\n    abstract pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\n}\n\nexport interface GeometryDataPrototype {\n    objectType: ObjectType;\n    indicesLength?: number;\n    positionsLength?: number;\n    normalsLength?: number;\n    uvsLength?: number;\n    pointUvsLength?: number;\n    pointSizesLength?: number;\n    textureId?: number;\n}\n\nexport interface GeometryData extends GeometryDataPrototype {\n    memSize?: number;\n    indices?: Uint16Array | Uint8Array | Uint32Array;\n    positions?: Float32Array | Float64Array;\n    normals?: Int16Array;\n    uvs?: Float32Array;\n    pointUvs?: Float32Array;    // quadruplets of data used by textured points for the uv coordinates in its two opposing corners\n    pointSizes?: Float32Array;\n    materialId?: number;\n}\n","import { Trimble } from \"./TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nexport import HierarchyType = Fbs.HierarchyType;\nexport import PropertyType = Fbs.PropertyType;\nexport import TrimbimGeometryType = Fbs.GeometryType;\nexport import IdentifierType = Fbs.IdentifierType;\nexport import Sidedness = Fbs.Sidedness;\nexport import LineStyle = Fbs.LineStyle;\nexport import AlignmentType = Fbs.AlignmentType;\nimport {UUID} from \"./UUID\";\nimport {Color, Plane} from \"three\";\nimport {Frustum, Vector3} from \"three\";\nimport {LoadOptions} from \"@technology/webgl-viewer/dist/esnext/common\";\n\nexport interface TrimbimSettings {\n    workerUrl?: string;\n    clipPlaneColor?: Color;\n    lodSetting?: LODSetting;\n\n    // Recommended GPU memory usage (auto detected by default)\n    gpuMemoryUsage?: number;\n    geometryCacheSize?: number; // LRU cache size in bytes\n}\n\nexport interface TrimbimLoadOptions extends LoadOptions {\n    pauseGeometryUpdate?: boolean;\n    editing?: boolean;\n}\n\nexport interface WorkerCamera {\n    frustum: Frustum;\n    position: Vector3;\n    fieldOfView: number;\n    resolution: number;\n    vr: boolean;\n    trimbimSettings: TrimbimSettings;\n    clipPlanes: Plane[];\n}\n\nexport const enum LODSetting {\n    High = 0.5,\n    Optimal = 1,\n    Low = 2\n}\n\nexport interface Entity {\n    id: number;\n    identifierType: IdentifierType;\n    identifier: string | UUID | number[];\n    class: string;\n}\n\nexport const enum TrimbimPickPriority {\n    // 0 is default in ModelEntityState\n    NORMAL = 0,\n    HIGH = 1,\n    NO_PICK = 2,\n}\n\nexport interface IMetaMaterial {\n    color?: Color;\n    opacity?: number;\n    transparent?: boolean;\n    side?: Sidedness;\n    lineStyle?: LineStyle;\n    textureId?: number;\n}\n\nexport interface Property {\n    name: string;\n    value: string | number;\n    type: PropertyType;\n}\n\nexport interface PropertyDefinition {\n    name: string;\n    type: PropertyType;\n}\n\nexport interface PropertySet {\n    name?: string;\n    properties?: Property[];\n}\n\nexport interface Product {\n    name: string;\n    description: string;\n    objectType: string;\n}\n\nexport class Entity {\n    id: number;\n    identifierType: IdentifierType;\n    identifier: string | UUID | number[];\n    class: string;\n}\n\nexport const enum AggregationOperator {\n    SUM,\n    SHARED\n}\n\nexport interface PropertyAggregation {\n    propertySetName: string;\n    propertyName: string;\n    operator: AggregationOperator;\n    value?: string | number;\n    type?: PropertyType;\n}\n\nexport const enum ClipPlaneEventName {\n    Added = \"clipplaneadded\",\n    RotationEnabled = \"clipplanerotationenabled\",\n    RotationDisabled = \"clipplanerotationdisabled\"\n}\n","/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nexport { Earcut };\n","import {GeometryBuilder, GeometryData, GeometryDataPrototype, normalLength} from \"./GeometryBuilder\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {HitPoint} from \"../HitPoint\";\nimport {Frustum, Plane, Ray, Triangle, Vector3} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\n// @ts-ignore - no declaration\nimport {Earcut} from \"three/src/extras/Earcut\";\nimport {MAX_16BIT_SIZE} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport BRep = Trimble.Technology.TrimBim.Fbs.BRep;\nimport BRepWithUV = Trimble.Technology.TrimBim.Fbs.BRepWithUV;\nimport BRepWithNormal = Trimble.Technology.TrimBim.Fbs.BRepWithNormal;\n\ninterface BRepHole { vertices: number[]; uvs?: number[]; normals?: number[]; indices: number[] }\n\ninterface ICounters {\n    index_count: number;\n    vertex_count: number;\n    vertex_length: number;\n    uv_length: number;\n    normal_count: number;\n    normal_length: number;\n}\n\nenum polyType {\n    triangle = 3,\n    rectangle = 4\n}\n\nabstract class AbstractBRepGeometryBuilder extends GeometryBuilder {\n    abstract geometryType: TrimbimGeometryType;\n    readonly snapGeometryType = GeometryType.MESH;\n\n    protected abstract getBRep(idx: number): BRep | BRepWithUV | BRepWithNormal;\n\n    abstract createGeometryPrototypes(): void;\n\n    private v0 = new Vector3();\n    private v1 = new Vector3();\n    private v2 = new Vector3();\n    private n1 = new Vector3();\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            const poly = this.getBRep(geometryIndex);\n            this.build(poly, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n\n    createGeometryPrototype = (() => {\n        const innerWire = new Fbs.InnerWire();\n        const outerWire = new Fbs.OuterWire();\n        const indicesLength = new Uint16Array(MAX_16BIT_SIZE);\n        const verticesLength = new Uint16Array(MAX_16BIT_SIZE);\n\n        return (brep: BRep | BRepWithUV | BRepWithNormal): GeometryDataPrototype => {\n            let innerVertex_length = 0;\n\n            for (let i = 0, length = brep.innerWiresLength(); i < length; i++) {\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\n                ++indicesLength[outerWireId];\n                verticesLength[outerWireId] += innerWire.vertexIndicesLength() * 3;\n                innerVertex_length += innerWire.vertexIndicesLength();\n            }\n\n            let all_outerVertices_length = 0;\n            let indices_length = 0;\n\n            for (let i = 0, outerLength = brep.outerWiresLength(); i < outerLength; i++) {\n                const vertexIndicesLength = brep.outerWires(i, outerWire).vertexIndicesLength();\n                all_outerVertices_length += vertexIndicesLength;\n\n                if (indicesLength[i]) {\n                    indices_length += 3 * (\n                        vertexIndicesLength +\n                        verticesLength[i] / 3 -\n                        2 +\n                        2 * indicesLength[i]\n                    );\n                } else {\n                    indices_length += (vertexIndicesLength - 2) * 3;\n                }\n            }\n\n            // Cleaning the hole buffer after use\n            for (let i = 0, length = brep.innerWiresLength(); i < length; ++i) {\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\n                indicesLength[outerWireId] = 0;\n                verticesLength[outerWireId] = 0;\n            }\n\n            const bufferGeometry: GeometryDataPrototype = {\n                objectType: ObjectType.MESH,\n                indicesLength: indices_length,\n                positionsLength: (innerVertex_length + all_outerVertices_length) * 3,\n                normalsLength: (innerVertex_length + all_outerVertices_length) * 3\n            };\n\n            if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\n                bufferGeometry.uvsLength = (innerVertex_length + all_outerVertices_length) * 2;\n            }\n\n            return bufferGeometry;\n        }\n    })();\n\n    private getVertexDataSize(geometryType: TrimbimGeometryType): number {\n        if (geometryType === TrimbimGeometryType.BRepWithUV) {\n            return 5;\n        } else if (geometryType === TrimbimGeometryType.BRepWithNormals) {\n            return 6;\n        } else {\n            return 3;\n        }\n    }\n\n    private getBrepData(brep: BRep | BRepWithUV | BRepWithNormal, vertexDataSize: number): Float32Array {\n        const brepOffset = brep.bb.__offset(brep.bb_pos, 8);\n        return new Float32Array(\n            brep.bb.bytes().buffer,\n            brep.bb.__vector(brep.bb_pos + brepOffset),\n            brep.verticesLength() * vertexDataSize\n        );\n    }\n\n    build = (() => {\n        const outerWire = new Fbs.OuterWire();\n\n        return (brep: BRep | BRepWithUV | BRepWithNormal, bufferGeometry: GeometryData): void => {\n            const counters = {\n                vertex_count: 0,\n                index_count: 0,\n                vertex_length: 0,\n                uv_length: 0,\n                normal_length: 0,\n                normal_count: 0\n            };\n\n            bufferGeometry.indices = new Uint16Array(bufferGeometry.indicesLength);\n            bufferGeometry.positions = new Float32Array(bufferGeometry.positionsLength);\n            bufferGeometry.normals = new Int16Array(bufferGeometry.normalsLength);\n            bufferGeometry.uvs = new Float32Array(bufferGeometry.uvsLength);\n\n            const data = this.getBrepData(brep, this.getVertexDataSize(this.geometryType));\n            const holes = this.buildHoles(brep);\n\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\n                brep.outerWires(i, outerWire);\n                const vertexIndices = outerWire.vertexIndicesArray();\n\n                if (\n                    outerWire.vertexIndicesLength() === polyType.triangle &&\n                    !holes.has(i)\n                ) {\n                    buildTriangle(vertexIndices, data, this.geometryType, bufferGeometry, counters);\n                } else if (\n                    outerWire.vertexIndicesLength() === polyType.rectangle &&\n                    !holes.has(i)\n                ) {\n                    buildQuad(vertexIndices, data, i, this.geometryType, bufferGeometry, counters);\n                } else {\n                    buildPoly(vertexIndices, data, i, this.geometryType, bufferGeometry, holes, counters);\n                }\n            }\n\n            if (this.geometryType !== TrimbimGeometryType.BRepWithNormals) {\n                BRepGeometryBuilder.computeNormals(bufferGeometry);\n            }\n        }\n    })();\n\n    private buildHoles = (() => {\n        const vertex = new Fbs.Vec3f();\n        const vertexUv = new Fbs.PositionUV();\n        const vertexNormal = new Fbs.PositionNormal();\n        const innerWire = new Fbs.InnerWire();\n        const holes = new Map<number, BRepHole>();\n\n        return (brep: BRep | BRepWithUV | BRepWithNormal): Map<number, BRepHole> => {\n            holes.clear();\n\n            for (let i = 0, length = brep.innerWiresLength(); i < length; i++) {\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\n\n                if (holes.has(outerWireId)) {\n                    const tmp = holes.get(outerWireId);\n\n                    tmp.indices.push(tmp.vertices.length / 3);\n                    holes.set(outerWireId, tmp);\n                } else {\n                    if (this.geometryType === TrimbimGeometryType.BRep) {\n                        holes.set(outerWireId, { indices: [0], vertices: [] });\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals) {\n                        holes.set(outerWireId, { indices: [0], vertices: [], normals: [] });\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\n                        holes.set(outerWireId, { indices: [0], vertices: [], uvs: [] });\n                    }\n                }\n\n                const hole = holes.get(outerWireId);\n                for (let j = 0, innerlength = innerWire.vertexIndicesLength(); j < innerlength; j++) {\n                    if (this.geometryType === TrimbimGeometryType.BRep && brep instanceof BRep) {\n                        brep.vertices(innerWire.vertexIndices(j), vertex);\n                        hole.vertices.push(vertex.x(), vertex.y(), vertex.z());\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithUV && brep instanceof BRepWithUV) {\n                        brep.vertices(innerWire.vertexIndices(j), vertexUv);\n                        hole.vertices.push(\n                            vertexUv.position().x(),\n                            vertexUv.position().y(),\n                            vertexUv.position().z()\n                        );\n                        hole.uvs.push(vertexUv.uv().u(), vertexUv.uv().v());\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals && brep instanceof BRepWithNormal) {\n                        brep.vertices(innerWire.vertexIndices(j), vertexNormal);\n                        hole.vertices.push(\n                            vertexNormal.position().x(),\n                            vertexNormal.position().y(),\n                            vertexNormal.position().z()\n                        );\n                        hole.normals.push(\n                            vertexNormal.normal().x() * normalLength,\n                            vertexNormal.normal().y() * normalLength,\n                            vertexNormal.normal().z() * normalLength\n                        );\n                    }\n                }\n            }\n\n            return holes;\n        }\n    })();\n\n    static computeNormals = (() => {\n        const pA = new Vector3();\n        const pB = new Vector3();\n        const pC = new Vector3();\n        const ab = new Vector3();\n        const cb = new Vector3();\n        let vA = 0;\n        let vB = 0;\n        let vC = 0;\n        let normals: Float32Array;\n\n        return (geometry: GeometryData) => {\n\n            const indices = geometry.indices;\n            const positions = geometry.positions;\n            if (!normals || normals.length < geometry.normals.length)\n                normals = new Float32Array(geometry.normals.length);\n            else\n                normals.fill(0);\n\n            for (let i = 0, il = geometry.indices.length; i < il; i += 3) {\n                vA = indices[i] * 3;\n                vB = indices[i + 1] * 3;\n                vC = indices[i + 2] * 3;\n\n                pA.fromArray(positions, vA);\n                pB.fromArray(positions, vB);\n                pC.fromArray(positions, vC);\n\n                cb.subVectors(pC, pB);\n                ab.subVectors(pA, pB);\n                cb.cross(ab);\n\n                normals[ vA ] += cb.x;\n                normals[ vA + 1 ] += cb.y;\n                normals[ vA + 2 ] += cb.z;\n\n                normals[ vB ] += cb.x;\n                normals[ vB + 1 ] += cb.y;\n                normals[ vB + 2 ] += cb.z;\n\n                normals[ vC ] += cb.x;\n                normals[ vC + 1 ] += cb.y;\n                normals[ vC + 2 ] += cb.z;\n            }\n\n            for (let i = 0, il = geometry.normals.length; i < il; i += 3) {\n                cb.fromArray(normals, i);\n                cb.normalize();\n                cb.multiplyScalar(normalLength);\n                cb.toArray(geometry.normals, i);\n            }\n        };\n    })();\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickFace(geometryIndex, ray);\n    }\n\n    pickFace = (() => {\n        const plane = new Plane();\n        const pointsInside = <HitPoint[]>[];\n        const innerWiresLUT: Map<number, number[]> = new Map();\n\n        const v0 = new Vector3();\n        const v1 = new Vector3();\n        const v2 = new Vector3();\n\n        return (geometryIndex: number, ray: Ray): HitPoint[] => {\n            const brep = this.getBRep(geometryIndex);\n            pointsInside.length = 0;\n            innerWiresLUT.clear();\n\n            for (let i = 0; i < brep.innerWiresLength(); i++) {\n                const index = brep.innerWires(i).outerWire();\n                if (innerWiresLUT.has(index)) {\n                    innerWiresLUT.get(index).push(i);\n                } else {\n                    innerWiresLUT.set(brep.innerWires(i).outerWire(), [i]);\n                }\n            }\n\n            const indexOffset = this.getVertexDataSize(this.geometryType);\n            const data = this.getBrepData(brep, indexOffset);\n\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\n                const vertexIndices = brep.outerWires(i).vertexIndicesArray();\n\n                this.v0.set(0, 0, 0);\n                this.v1.set(0, 0, 0);\n                this.v2.set(0, 0, 0);\n                this.n1.set(0, 0, 0);\n\n                const outerWireIndicesLength = vertexIndices.length;\n\n                if (outerWireIndicesLength === 3) {\n                    let idx0 = vertexIndices[0];\n                    let idx1 = vertexIndices[1];\n                    let idx2 = vertexIndices[2];\n\n                    idx0 *= indexOffset;\n                    idx1 *= indexOffset;\n                    idx2 *= indexOffset;\n\n                    v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\n                    v1.set(data[idx1], data[idx1 + 1], data[idx1 + 2]);\n                    v2.set(data[idx2], data[idx2 + 1], data[idx2 + 2]);\n\n                    const result = this.intersectTriangle(ray, v0, v1, v2);\n\n                    if (result) {\n                        pointsInside.push(result);\n                    }\n                    continue;\n                }\n\n                const idx0 = vertexIndices[0] * indexOffset;\n\n                this.v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\n\n                getNormalFromTrimBIM(this.n1, data, vertexIndices, indexOffset);\n\n                plane.setFromNormalAndCoplanarPoint(this.n1, this.v0);\n\n                if (!ray.intersectPlane(plane, this.v1)) {\n                    continue;\n                }\n\n                if (innerWiresLUT.has(i)) {\n                    const innerWires = innerWiresLUT.get(i);\n\n                    if (this.insideHole(this.v1, plane, innerWires, brep, data)) {\n                        continue;\n                    }\n                }\n\n                if (this.pointInsidePolygon(this.v1, data, vertexIndices, indexOffset, plane)) {\n                    pointsInside.push({\n                        point: this.v1.clone(),\n                        normal: plane.normal.clone()\n                    });\n                }\n            }\n\n            return pointsInside;\n        };\n    })();\n\n    pickLine = (() => {\n        const outerWire = new Fbs.OuterWire();\n        const vecA = new Vector3();\n        const vecB = new Vector3();\n        const point = new Vector3();\n        const plane = new Plane();\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            const brep = this.getBRep(geometryIndex);\n            const result: HitPoint[] = [];\n\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\n                brep.outerWires(i, outerWire);\n\n                this.getVertex(brep, outerWire.vertexIndices(0), vecA);\n                this.getVertex(brep, outerWire.vertexIndices(1), point);\n                this.getVertex(brep, outerWire.vertexIndices(outerWire.vertexIndicesLength() - 1), vecB);\n                plane.setFromCoplanarPoints(vecA, vecB, point);\n\n                for (let j = 0, l = outerWire.vertexIndicesLength(); j < l; j++) {\n                    this.getVertex(brep, outerWire.vertexIndices(j), vecA);\n                    ray.distanceSqToSegment(vecA, vecB, undefined, point);\n                    if (frustum.containsPoint(point)) {\n                        result.push({ point: point.clone(), normal: plane.normal.clone(), snapLineStart: vecA.clone(), snapLineEnd: vecB.clone() })\n                    }\n                    vecB.copy(vecA);\n                }\n            }\n            return result;\n        };\n    })();\n\n    pickPoint = (() => {\n        const position = new Vector3();\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            const brep = this.getBRep(geometryIndex);\n            const result: HitPoint[] = [];\n\n            for (let i = 0, length = brep.verticesLength(); i < length; i++) {\n                this.getVertex(brep, i, position);\n                if (frustum.containsPoint(position)) {\n                    result.push({ point: position.clone() })\n                }\n            }\n\n            return result;\n        };\n    })();\n\n    getVertex = (() => {\n        const vertex = new Fbs.Vec3f();\n        const vertexUv = new Fbs.PositionUV();\n        const vertexNormal = new Fbs.PositionNormal();\n\n        return (brep: BRep | BRepWithUV | BRepWithNormal, i: number, out: Vector3): void => {\n            if (brep instanceof BRep)\n                brep.vertices(i, vertex);\n            else if (brep instanceof BRepWithNormal)\n                brep.vertices(i, vertexNormal).position(vertex);\n            else if (brep instanceof BRepWithUV)\n                brep.vertices(i, vertexUv).position(vertex);\n            out.set(vertex.x(), vertex.y(), vertex.z());\n        };\n    })();\n\n\n    public insideHole = (() => {\n        return (\n            point: Vector3,\n            plane: Plane,\n            indices: number[],\n            brep: BRep | BRepWithUV | BRepWithNormal,\n            data: Float32Array\n        ) => {\n            let indexOffset: number;\n\n            if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\n                indexOffset = 5;\n            } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals) {\n                indexOffset = 6;\n            } else {\n                indexOffset = 3;\n            }\n\n            for (let j = 0, l = indices.length; j < l; j++) {\n                const vertexIndices = brep.innerWires(indices[j]).vertexIndicesArray();\n\n                if (this.pointInsidePolygon(point, data, vertexIndices, indexOffset, plane)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    })();\n\n    public intersectTriangle = (() => {\n        const triangle = new Triangle();\n        const v0 = new Vector3();\n\n        return (ray: Ray, a: Vector3, b: Vector3, c: Vector3): HitPoint => {\n            triangle.a = a;\n            triangle.b = b;\n            triangle.c = c;\n\n            if (ray.intersectTriangle(a, b, c, false, v0))\n                return { point: v0.clone(), normal: triangle.getNormal(new Vector3()) };\n        };\n    })();\n\n    public createOrthonormalBasis(refAxis: Vector3, axis0: Vector3, axis1: Vector3): void {\n        if (Math.abs(refAxis.x) >= Math.abs(refAxis.y)) {\n            // w.x or w.z is the largest magnitude component, swap them\n            const invLength = 1.0 / Math.sqrt(refAxis.x * refAxis.x + refAxis.z * refAxis.z);\n            axis0.set(-refAxis.z * invLength, 0.0, refAxis.x * invLength);\n            axis1.set(\n                refAxis.y * axis0.z,\n                refAxis.z * axis0.x - refAxis.x * axis0.z,\n                -refAxis.y * axis0.x\n            );\n        } else {\n            // w.y or w.z is the largest magnitude component, swap them\n            const invLength = 1.0 / Math.sqrt(refAxis.y * refAxis.y + refAxis.z * refAxis.z);\n            axis0.set(0.0, refAxis.z * invLength, -refAxis.y * invLength);\n            axis1.set(\n                refAxis.y * axis0.z - refAxis.z * axis0.y,\n                -refAxis.x * axis0.z,\n                refAxis.x * axis0.y\n            );\n        }\n\n        axis0.normalize();\n        axis1.normalize();\n    }\n\n    private pointInsidePolygon = (() => {\n        const axis1 = new Vector3();\n        const axis0 = new Vector3();\n        const vector3 = new Vector3();\n\n        // Optimized version of https://wrf.ecse.rpi.edu//Research/Short_Notes/pnpoly.html\n        return (\n            point: Vector3,\n            data: Float32Array,\n            vertexIndices: Uint16Array,\n            indexOffset: number,\n            plane: Plane\n        ): boolean => {\n            this.createOrthonormalBasis(plane.normal, axis0, axis1);\n\n            const count = vertexIndices.length;\n            const lastIndex = vertexIndices[count - 1] * indexOffset;\n\n            const pj = vector3\n                .set(data[lastIndex], data[lastIndex + 1], data[lastIndex + 2])\n                .sub(point);\n\n            let jx = pj.dot(axis1);\n            let jy = pj.dot(axis0);\n            let c = false;\n\n            for (let i = 0; i < count; i++) {\n                const index = vertexIndices[i] * indexOffset;\n                const pi = vector3.set(data[index], data[index + 1], data[index + 2]).sub(point);\n\n                const ix = pi.dot(axis1);\n                const iy = pi.dot(axis0);\n\n                if (iy > 0 !== jy > 0) {\n                    if (0 < ((jx - ix) * -iy) / (jy - iy) + ix) {\n                        c = !c;\n                    }\n                }\n\n                jx = ix;\n                jy = iy;\n            }\n            return c;\n        };\n    })();\n}\n\nexport class BRepGeometryBuilder extends AbstractBRepGeometryBuilder {\n    geometryType = TrimbimGeometryType.BRep;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.createGeometryPrototypes();\n    }\n\n    protected getBRep = (() => {\n        const bRep = new BRep();\n        return (idx: number): BRep => {\n            return this.geometry.bReps(idx, bRep);\n        }\n    })();\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.bRepsLength())\n        for (let i = 0, l = this.geometry.bRepsLength(); i < l; i++) {\n            const poly = this.getBRep(i);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(poly))\n        }\n    }\n}\n\nexport class BRepWithUVGeometryBuilder extends AbstractBRepGeometryBuilder {\n    geometryType = TrimbimGeometryType.BRepWithUV;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.createGeometryPrototypes();\n    }\n\n    protected getBRep = (() => {\n        const bRep = new BRepWithUV();\n        return (idx: number): BRepWithUV => {\n            return this.geometry.bRepWithUVs(idx, bRep);\n        }\n    })();\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.bRepWithUVsLength());\n        for (let i = 0, l = this.geometry.bRepWithUVsLength(); i < l; i++) {\n            const poly = this.getBRep(i);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(poly));\n        }\n    }\n}\n\nexport class BRepWithNormalsGeometryBuilder extends AbstractBRepGeometryBuilder {\n    geometryType = TrimbimGeometryType.BRepWithNormals;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.createGeometryPrototypes();\n    }\n\n    protected getBRep = (() => {\n        const bRep = new BRepWithNormal();\n        return (idx: number): BRepWithNormal => {\n            return this.geometry.bRepWithNormals(idx, bRep);\n        }\n    })();\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.bRepWithNormalsLength());\n        for (let i = 0, l = this.geometry.bRepWithNormalsLength(); i < l; i++) {\n            const poly = this.getBRep(i);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(poly));\n        }\n    }\n}\n\nconst buildQuad = (() => {\n    const v0 = new Vector3();\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n    const v3 = new Vector3();\n\n    const v4 = new Vector3();\n    const v5 = new Vector3();\n    const v6 = new Vector3();\n\n    const n1 = new Vector3();\n    const n2 = new Vector3();\n\n    let idx0 = 0;\n    let idx1 = 0;\n    let idx2 = 0;\n    let idx3 = 0;\n\n    return (\n        vertexIndices: Uint16Array,\n        data: Float32Array,\n        i: number,\n        type: TrimbimGeometryType,\n        geometry: GeometryData,\n        counters: ICounters\n    ) => {\n        idx0 = vertexIndices[0];\n        idx1 = vertexIndices[1];\n        idx2 = vertexIndices[2];\n        idx3 = vertexIndices[3];\n\n        if (type === TrimbimGeometryType.BRep) {\n            idx0 *= 3;\n            idx1 *= 3;\n            idx2 *= 3;\n            idx3 *= 3;\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\n            idx0 *= 5;\n            idx1 *= 5;\n            idx2 *= 5;\n            idx3 *= 5;\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\n            idx0 *= 6;\n            idx1 *= 6;\n            idx2 *= 6;\n            idx3 *= 6;\n        }\n\n        v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\n        v1.set(data[idx1], data[idx1 + 1], data[idx1 + 2]);\n        v2.set(data[idx2], data[idx2 + 1], data[idx2 + 2]);\n        v3.set(data[idx3], data[idx3 + 1], data[idx3 + 2]);\n\n        v4.copy(v1);\n        v5.copy(v2);\n        v6.copy(v3);\n\n        v4.sub(v0);\n        v5.sub(v0);\n        v6.sub(v0);\n\n        n1.crossVectors(v4, v5);\n        n2.crossVectors(v5, v6);\n\n        //Check if convex\n        if (n1.dot(n2) > 0) {\n            geometry.indices[counters.index_count] = counters.vertex_count;\n            geometry.indices[counters.index_count + 1] = counters.vertex_count + 1;\n            geometry.indices[counters.index_count + 2] = counters.vertex_count + 3;\n\n            geometry.indices[counters.index_count + 3] = counters.vertex_count + 3;\n            geometry.indices[counters.index_count + 4] = counters.vertex_count + 1;\n            geometry.indices[counters.index_count + 5] = counters.vertex_count + 2;\n\n            counters.index_count += 6;\n\n            geometry.positions[counters.vertex_length     ] = v0.x;\n            geometry.positions[counters.vertex_length +  1] = v0.y;\n            geometry.positions[counters.vertex_length +  2] = v0.z;\n            geometry.positions[counters.vertex_length +  3] = v1.x;\n            geometry.positions[counters.vertex_length +  4] = v1.y;\n            geometry.positions[counters.vertex_length +  5] = v1.z;\n            geometry.positions[counters.vertex_length +  6] = v2.x;\n            geometry.positions[counters.vertex_length +  7] = v2.y;\n            geometry.positions[counters.vertex_length +  8] = v2.z;\n            geometry.positions[counters.vertex_length +  9] = v3.x;\n            geometry.positions[counters.vertex_length + 10] = v3.y;\n            geometry.positions[counters.vertex_length + 11] = v3.z;\n\n            counters.vertex_count += 4;\n            counters.vertex_length += 12;\n\n            if (type === TrimbimGeometryType.BRepWithUV) {\n                geometry.uvs[counters.uv_length    ] = data[idx0 + 3];\n                geometry.uvs[counters.uv_length + 1] = data[idx0 + 4];\n                geometry.uvs[counters.uv_length + 2] = data[idx1 + 3];\n                geometry.uvs[counters.uv_length + 3] = data[idx1 + 4];\n                geometry.uvs[counters.uv_length + 4] = data[idx2 + 3];\n                geometry.uvs[counters.uv_length + 5] = data[idx2 + 4];\n                geometry.uvs[counters.uv_length + 6] = data[idx3 + 3];\n                geometry.uvs[counters.uv_length + 7] = data[idx3 + 4];\n                counters.uv_length += 8;\n            } else if (type === TrimbimGeometryType.BRepWithNormals) {\n                geometry.normals[counters.normal_length     ] = data[idx0 + 3] * normalLength;\n                geometry.normals[counters.normal_length +  1] = data[idx0 + 4] * normalLength;\n                geometry.normals[counters.normal_length +  2] = data[idx0 + 5] * normalLength;\n                geometry.normals[counters.normal_length +  3] = data[idx1 + 3] * normalLength;\n                geometry.normals[counters.normal_length +  4] = data[idx1 + 4] * normalLength;\n                geometry.normals[counters.normal_length +  5] = data[idx1 + 5] * normalLength;\n                geometry.normals[counters.normal_length +  6] = data[idx2 + 3] * normalLength;\n                geometry.normals[counters.normal_length +  7] = data[idx2 + 4] * normalLength;\n                geometry.normals[counters.normal_length +  8] = data[idx2 + 5] * normalLength;\n                geometry.normals[counters.normal_length +  9] = data[idx3 + 3] * normalLength;\n                geometry.normals[counters.normal_length + 10] = data[idx3 + 4] * normalLength;\n                geometry.normals[counters.normal_length + 11] = data[idx3 + 5] * normalLength;\n                counters.normal_length += 12;\n            }\n        } else {\n            buildPoly(vertexIndices, data, i, type, geometry, undefined, counters);\n        }\n    };\n})();\n\nconst buildTriangle = (() => {\n    return (\n        vertexIndices: Uint16Array,\n        data: Float32Array,\n        type: TrimbimGeometryType,\n        geometry: GeometryData,\n        counters: ICounters\n    ) => {\n        let idx0 = vertexIndices[0];\n        let idx1 = vertexIndices[1];\n        let idx2 = vertexIndices[2];\n\n        if (type === TrimbimGeometryType.BRep) {\n            idx0 *= 3;\n            idx1 *= 3;\n            idx2 *= 3;\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\n            idx0 *= 5;\n            idx1 *= 5;\n            idx2 *= 5;\n\n            geometry.uvs[counters.uv_length    ] = data[idx0 + 3];\n            geometry.uvs[counters.uv_length + 1] = data[idx0 + 4];\n            geometry.uvs[counters.uv_length + 2] = data[idx1 + 3];\n            geometry.uvs[counters.uv_length + 3] = data[idx1 + 4];\n            geometry.uvs[counters.uv_length + 4] = data[idx2 + 3];\n            geometry.uvs[counters.uv_length + 5] = data[idx2 + 4];\n\n            counters.uv_length += 6;\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\n            idx0 *= 6;\n            idx1 *= 6;\n            idx2 *= 6;\n\n            geometry.normals.set(\n                [\n                    geometry.normals[counters.normal_length    ] = data[idx0 + 3] * normalLength,\n                    geometry.normals[counters.normal_length + 1] = data[idx0 + 4] * normalLength,\n                    geometry.normals[counters.normal_length + 2] = data[idx0 + 5] * normalLength,\n                    geometry.normals[counters.normal_length + 3] = data[idx1 + 3] * normalLength,\n                    geometry.normals[counters.normal_length + 4] = data[idx1 + 4] * normalLength,\n                    geometry.normals[counters.normal_length + 5] = data[idx1 + 5] * normalLength,\n                    geometry.normals[counters.normal_length + 6] = data[idx2 + 3] * normalLength,\n                    geometry.normals[counters.normal_length + 7] = data[idx2 + 4] * normalLength,\n                    geometry.normals[counters.normal_length + 8] = data[idx2 + 5] * normalLength\n                ],\n                counters.normal_length\n            );\n\n            counters.normal_length += 9;\n        }\n\n        geometry.indices[counters.index_count] = counters.vertex_count;\n        geometry.indices[counters.index_count + 1] = counters.vertex_count + 1;\n        geometry.indices[counters.index_count + 2] = counters.vertex_count + 2;\n\n        counters.index_count += 3;\n\n        geometry.positions[counters.vertex_length] = data[idx0 + 0];\n        geometry.positions[counters.vertex_length + 1] = data[idx0 + 1];\n        geometry.positions[counters.vertex_length + 2] = data[idx0 + 2];\n\n        geometry.positions[counters.vertex_length + 3] = data[idx1 + 0];\n        geometry.positions[counters.vertex_length + 4] = data[idx1 + 1];\n        geometry.positions[counters.vertex_length + 5] = data[idx1 + 2];\n\n        geometry.positions[counters.vertex_length + 6] = data[idx2 + 0];\n        geometry.positions[counters.vertex_length + 7] = data[idx2 + 1];\n        geometry.positions[counters.vertex_length + 8] = data[idx2 + 2];\n\n        counters.vertex_count += 3;\n        counters.vertex_length += 9;\n    };\n})();\n\nconst buildPoly = (() => {\n    const n1 = new Vector3();\n\n    return (\n        vertexIndices: Uint16Array,\n        data: Float32Array,\n        i: number,\n        type: TrimbimGeometryType,\n        geometry: GeometryData,\n        holes: Map<number, BRepHole>,\n        counters: ICounters\n    ) => {\n        const outer_length = vertexIndices.length;\n        const offset = counters.vertex_length;\n\n        if (type === TrimbimGeometryType.BRep) {\n            for (let j = 0; j < outer_length; j++) {\n                const index = vertexIndices[j] * 3;\n\n                geometry.positions[counters.vertex_length] = data[index];\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\n\n                counters.vertex_count += 1;\n                counters.vertex_length += 3;\n            }\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\n            for (let j = 0; j < outer_length; j++) {\n                const index = vertexIndices[j] * 5;\n\n                geometry.positions[counters.vertex_length] = data[index];\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\n\n                counters.vertex_count += 1;\n                counters.vertex_length += 3;\n\n                geometry.uvs[counters.uv_length] = data[index + 3];\n                geometry.uvs[counters.uv_length + 1] = data[index + 4];\n\n                counters.uv_length += 2;\n            }\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\n            for (let j = 0; j < outer_length; j++) {\n                const index = vertexIndices[j] * 6;\n\n                geometry.positions[counters.vertex_length] = data[index];\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\n\n                counters.vertex_count += 1;\n                counters.vertex_length += 3;\n\n                geometry.normals[counters.normal_length] = data[index + 3] * normalLength;\n                geometry.normals[counters.normal_length + 1] = data[index + 4] * normalLength;\n                geometry.normals[counters.normal_length + 2] = data[index + 5] * normalLength;\n\n                counters.normal_length += 3;\n            }\n        }\n\n        getNormal(geometry.positions, n1, (counters.vertex_length - offset) / 3, offset);\n\n        let holes_idx: number[];\n        if (holes && holes.has(i)) {\n            const hole = holes.get(i);\n\n            holes_idx = hole.indices.map(x => x + outer_length);\n            geometry.positions.set(hole.vertices, counters.vertex_length);\n            counters.vertex_length += hole.vertices.length;\n            counters.vertex_count += hole.vertices.length / 3;\n\n            if (type === TrimbimGeometryType.BRepWithNormals) {\n                geometry.normals.set(hole.normals, counters.normal_length);\n                counters.normal_length += hole.vertices.length;\n            } else if (type === TrimbimGeometryType.BRepWithUV) {\n                geometry.uvs.set(hole.uvs, counters.uv_length);\n                counters.uv_length += (hole.vertices.length / 3) * 2;\n            }\n        }\n\n        const twoD = projectPoints(geometry.positions, n1, counters.vertex_length - offset, offset);\n        const indices = Earcut.triangulate(twoD, holes_idx, 2);\n\n        for (let j = 0, length = indices.length; j < length; j++) {\n            indices[j] = indices[j] + offset / 3;\n        }\n\n        geometry.indices.set(indices, counters.index_count);\n\n        counters.index_count += indices.length;\n    };\n})();\n\nconst getNormal = (points: Float32Array | Float64Array, target: Vector3, count: number, offset = 0) => {\n    target.set(0, 0, 0);\n    let j = 0;\n\n    for (let i = 0, length = count; i < length; i++) {\n        j = (i + 1) % count;\n\n        target.x +=\n            (points[offset + i * 3 + 1] - points[offset + j * 3 + 1]) *\n            (points[offset + i * 3 + 2] + points[offset + j * 3 + 2]);\n        target.y +=\n            (points[offset + i * 3 + 2] - points[offset + j * 3 + 2]) *\n            (points[offset + i * 3    ] + points[offset + j * 3    ]);\n        target.z +=\n            (points[offset + i * 3    ] - points[offset + j * 3    ]) *\n            (points[offset + i * 3 + 1] + points[offset + j * 3 + 1]);\n    }\n\n    target.normalize();\n};\n\nconst getNormalFromTrimBIM = (\n    target: Vector3,\n    data: Float32Array,\n    vertexIndices: Uint16Array,\n    indexOffset: number\n) => {\n    target.set(0, 0, 0);\n\n    for (let i = 0, length = vertexIndices.length; i < length; i++) {\n        const j = (i + 1) % length;\n        const iIndex = vertexIndices[i] * indexOffset;\n        const jIndex = vertexIndices[j] * indexOffset;\n\n        target.x += (data[iIndex + 1] - data[jIndex + 1]) * (data[iIndex + 2] + data[jIndex + 2]);\n        target.y += (data[iIndex + 2] - data[jIndex + 2]) * (data[iIndex    ] + data[jIndex    ]);\n        target.z += (data[iIndex    ] - data[jIndex    ]) * (data[iIndex + 1] + data[jIndex + 1]);\n    }\n\n    target.normalize();\n};\n\n/*\n * Convert 3d points to 2d\n */\nconst projectPoints = (() => {\n    const locx = new Vector3();\n    const locy = new Vector3();\n\n    const tmp0 = new Vector3();\n    const tmp1 = new Vector3();\n\n    const v0 = new Vector3();\n    const v1 = new Vector3();\n\n    // Defining one buffer to be reused by multiple Float32Array views, to avoid allocating memory\n    // on each function call.\n    // The parameter below should correspond to the theoretical maximum size of this buffer:\n    const coordsBuffer = new ArrayBuffer(\n        ~~(                  // floor\n            MAX_16BIT_SIZE * // vertexIndices is a ushort in the TrimBIM schema; count should never exceed this value\n            4 *              // bytes per Float32 element\n            2                // coordinates in the plane\n            / 3              // coordinates in 3D space\n        )\n    );\n\n    return (points: Float32Array | Float64Array, normal: Vector3, count: number, offset = 0) => {\n        const planeCoords = new Float32Array(coordsBuffer, 0, count * 2 / 3);\n\n        v0.set(points[offset    ], points[offset + 1], points[offset + 2]);\n        v1.set(points[offset + 3], points[offset + 4], points[offset + 5]);\n\n        locx.subVectors(v0, v1);\n        locy.crossVectors(normal, locx);\n\n        locx.normalize();\n        locy.normalize();\n\n        for (let i = 0, l = count / 3; i < l; i++) {\n            tmp0.set(\n                points[offset + i * 3],\n                points[offset + i * 3 + 1],\n                points[offset + i * 3 + 2]\n            );\n            tmp1.set(\n                points[offset + i * 3],\n                points[offset + i * 3 + 1],\n                points[offset + i * 3 + 2]\n            );\n\n            planeCoords[i * 2] = tmp0.sub(v0).dot(locx);\n            planeCoords[i * 2 + 1] = tmp1.sub(v0).dot(locy);\n        }\n\n        return planeCoords;\n    };\n})();\n","import {GeometryBuilder, GeometryData, GeometryDataPrototype, normalLength} from \"./GeometryBuilder\";\n\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {Frustum, Plane, Ray, Triangle, Vector3} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {HitPoint} from \"../HitPoint\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class MeshGeometryBuilder extends GeometryBuilder {\n    geometryType = TrimbimGeometryType.TriangleMesh;\n    readonly snapGeometryType = GeometryType.MESH;\n\n    triangleMeshes: (n: number) => Fbs.TriangleMesh | Fbs.TriangleMesh8 | Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 = this.geometry.triangleMeshes.bind(this.geometry);\n\n    public getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            const mesh = this.triangleMeshes(geometryIndex);\n            this.build(mesh, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.triangleMeshesLength());\n        const mesh = new Fbs.TriangleMesh();\n        for (let i = 0, l = this.geometry.triangleMeshesLength(); i < l; i++) {\n            this.geometry.triangleMeshes(i, mesh);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(mesh));\n        }\n    }\n\n    createGeometryPrototype(\n        mesh:\n            | Fbs.TriangleMesh\n            | Fbs.TriangleMesh8\n            | Fbs.TexturedTriangleMesh\n            | Fbs.TexturedTriangleMesh8\n    ): GeometryDataPrototype {\n        const indicesLength = mesh.indicesLength();\n        const verticesLength = mesh.verticesLength();\n\n        if (mesh instanceof Fbs.TriangleMesh || mesh instanceof Fbs.TriangleMesh8) {\n            return {\n                objectType: ObjectType.MESH,\n                indicesLength: indicesLength,\n                positionsLength: verticesLength * 3,\n                normalsLength: verticesLength * 3\n            };\n        } else if (\n            mesh instanceof Fbs.TexturedTriangleMesh ||\n            mesh instanceof Fbs.TexturedTriangleMesh8\n        ) {\n            return {\n                objectType: ObjectType.MESH,\n                indicesLength: indicesLength,\n                positionsLength: verticesLength * 3,\n                normalsLength: verticesLength * 3,\n                uvsLength: verticesLength * 2\n            };\n        }\n    }\n\n    /*\n     * Build base meshes from meshes\n     */\n    build(\n        mesh:\n            Fbs.TriangleMesh\n            | Fbs.TriangleMesh8,\n        bufferGeometry: GeometryData\n    ): void {\n        const pos = new Fbs.Vec3f();\n        const normal = new Fbs.Vec3f();\n        const vertex = createIndexedVertex(this.geometryType);\n\n        const verticesLength = mesh.verticesLength();\n        const indices = mesh.indicesArray();\n        const vertices = new Float32Array(mesh.verticesLength() * 3);\n        const normals = new Int16Array(mesh.verticesLength() * 3);\n\n        for (let i = 0; i < verticesLength; i++) {\n            mesh.vertices(i, vertex);\n            mesh.positions(vertex.positionIndex(), pos);\n            mesh.normals(vertex.normalIndex(), normal);\n\n            vertices[i * 3] = pos.x();\n            vertices[i * 3 + 1] = pos.y();\n            vertices[i * 3 + 2] = pos.z();\n\n            normals[i * 3] = normal.x() * normalLength;\n            normals[i * 3 + 1] = normal.y() * normalLength;\n            normals[i * 3 + 2] = normal.z() * normalLength;\n        }\n\n        bufferGeometry.indices = indices;\n        bufferGeometry.positions = vertices;\n        bufferGeometry.normals = normals;\n        bufferGeometry.uvs = new Float32Array(0);\n    }\n\n    buildTexured(\n        mesh: Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8,\n        type: TrimbimGeometryType,\n        bufferGeometry: GeometryData\n    ): void {\n        const pos = new Fbs.Vec3f();\n        const normal = new Fbs.Vec3f();\n        const uv = new Fbs.UV();\n        const vertex = createIndexedVertex(type);\n\n        const verticesLength = mesh.verticesLength();\n        const indices = mesh.indicesArray();\n        const vertices = new Float32Array(mesh.verticesLength() * 3);\n        const normals = new Int16Array(mesh.verticesLength() * 3);\n        const uvs = new Float32Array(mesh.verticesLength() * 2);\n\n        for (let i = 0; i < verticesLength; i++) {\n            mesh.vertices(i, vertex);\n            mesh.positions(vertex.positionIndex(), pos);\n            mesh.normals(vertex.normalIndex(), normal);\n            mesh.uvs(vertex.positionIndex(), uv);\n\n            vertices[i * 3] = pos.x();\n            vertices[i * 3 + 1] = pos.y();\n            vertices[i * 3 + 2] = pos.z();\n\n            normals[i * 3] = normal.x() * normalLength;\n            normals[i * 3 + 1] = normal.y() * normalLength;\n            normals[i * 3 + 2] = normal.z() * normalLength;\n\n            uvs[i * 2] = uv.u();\n            uvs[i * 2 + 1] = uv.v();\n        }\n\n        bufferGeometry.indices = indices;\n        bufferGeometry.positions = vertices;\n        bufferGeometry.normals = normals;\n        bufferGeometry.uvs = uvs;\n    }\n\n    getVertex = (() => {\n        const pos = new Fbs.Vec3f();\n        let vertex: Fbs.IndexedVertex;\n\n        return (mesh: Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 | Fbs.TriangleMesh | Fbs.TriangleMesh8, type: TrimbimGeometryType, i: number, out: Vector3): void => {\n            const index = mesh.indices(i);\n            if (!vertex) vertex = createIndexedVertex(type);\n            mesh.vertices(index, vertex);\n            mesh.positions(vertex.positionIndex(), pos);\n            out.set(pos.x(), pos.y(), pos.z());\n        };\n    })();\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickFace(geometryIndex, ray);\n    }\n\n    pickFace = (() => {\n        const vecA = new Vector3();\n        const vecB = new Vector3();\n        const vecC = new Vector3();\n        const triangle = new Triangle();\n\n        const target = new Vector3();\n\n        return (meshIndex: number, ray: Ray): HitPoint[] => {\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\n            const indicesLength = mesh.indicesLength();\n            const result: HitPoint[] = [];\n\n            for (let i = 0; i < indicesLength; i += 3) {\n                this.getVertex(mesh, this.geometryType, i, vecA);\n                this.getVertex(mesh, this.geometryType, i + 1, vecB);\n                this.getVertex(mesh, this.geometryType, i + 2, vecC);\n\n                if (ray.intersectTriangle(vecA, vecB, vecC, false, target)) {\n                    triangle.set(vecA, vecB, vecC);\n                    result.push({\n                        point: target.clone(),\n                        normal: triangle.getNormal(new Vector3())\n                    });\n                }\n            }\n            return result;\n        };\n    })();\n\n    pickLine = (() => {\n        const vecA = new Vector3();\n        const vecB = new Vector3();\n        const vecC = new Vector3();\n        const point = new Vector3();\n        const plane = new Plane();\n\n        return (meshIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\n            const indicesLength = mesh.indicesLength();\n\n            const result: HitPoint[] = [];\n\n            const addPoint = (v1: Vector3, v2: Vector3, normal: Vector3): void => {\n                if (frustum.containsPoint(point))\n                    result.push({ point: point.clone(), normal: normal.clone(), snapLineStart: v1.clone(), snapLineEnd: v2.clone() })\n            };\n\n            for (let i = 0; i < indicesLength; i += 3) {\n                this.getVertex(mesh, this.geometryType, i, vecA);\n                this.getVertex(mesh, this.geometryType, i + 1, vecB);\n                this.getVertex(mesh, this.geometryType, i + 2, vecC);\n                plane.setFromCoplanarPoints(vecA, vecB, vecC);\n\n                ray.distanceSqToSegment(vecA, vecB, undefined, point); addPoint(vecA, vecB, plane.normal);\n                ray.distanceSqToSegment(vecA, vecC, undefined, point); addPoint(vecA, vecC, plane.normal);\n                ray.distanceSqToSegment(vecB, vecC, undefined, point); addPoint(vecB, vecC, plane.normal);\n            }\n\n            return result;\n        };\n    })();\n\n    pickPoint = (() => {\n        const pos = new Fbs.Vec3f();\n        const position = new Vector3();\n\n        return (meshIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            const vertex = createIndexedVertex(this.geometryType);\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\n\n            const result: HitPoint[] = [];\n            for (let i = 0; i < mesh.verticesLength(); i++) {\n                mesh.vertices(i, vertex);\n                mesh.positions(vertex.positionIndex(), pos);\n                position.set(pos.x(), pos.y(), pos.z());\n\n                if (frustum.containsPoint(position))\n                    result.push({ point: position.clone() })\n            }\n\n            return result;\n        };\n    })();\n}\n\nfunction createIndexedVertex(type: TrimbimGeometryType): Fbs.IndexedVertex {\n    if (type === TrimbimGeometryType.TriangleMesh8 || type === TrimbimGeometryType.TexturedTriangleMesh8) {\n        return new Fbs.IndexedVertex8();\n    } else if (type === TrimbimGeometryType.TriangleMesh || type === TrimbimGeometryType.TexturedTriangleMesh) {\n        return new Fbs.IndexedVertex();\n    } else {\n        throw new Error(\"Unkown index type for mesh\");\n    }\n}\n\nexport function getMesh(idx: number, type: TrimbimGeometryType, geometry: Fbs.ModelGeometry): Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 | Fbs.TriangleMesh | Fbs.TriangleMesh8 {\n    if (type === TrimbimGeometryType.TriangleMesh8) {\n        return geometry.triangleMeshes8(idx);\n    } else if (type === TrimbimGeometryType.TriangleMesh) {\n        return geometry.triangleMeshes(idx);\n    } else if (type === TrimbimGeometryType.TexturedTriangleMesh8) {\n        return geometry.texturedTriangleMeshes8(idx);\n    } else if (type === TrimbimGeometryType.TexturedTriangleMesh) {\n        return geometry.texturedTriangleMeshes(idx);\n    } else {\n        throw new Error(`Unknown Mesh type: ${type}`);\n    }\n}\n\nexport class Mesh8GeometryBuilder extends MeshGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.TriangleMesh8;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.triangleMeshes = geometry.triangleMeshes8.bind(geometry);\n        this.createGeometryPrototypes();\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.triangleMeshes8Length());\n        const mesh = new Fbs.TriangleMesh8();\n        for (let i = 0, l = this.geometry.triangleMeshes8Length(); i < l; i++) {\n            this.geometry.triangleMeshes8(i, mesh);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(mesh));\n        }\n    }\n}\n\nexport class MeshTexturedGeometryBuilder extends MeshGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.TexturedTriangleMesh;\n    readonly producedType = ObjectType.MESH;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.triangleMeshes = geometry.texturedTriangleMeshes.bind(geometry);\n        this.createGeometryPrototypes();\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.texturedTriangleMeshesLength());\n        const mesh = new Fbs.TexturedTriangleMesh();\n        for (let i = 0, l = this.geometry.texturedTriangleMeshesLength(); i < l; i++) {\n            this.geometry.texturedTriangleMeshes(i, mesh);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(mesh));\n        }\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            const mesh = this.triangleMeshes(geometryIndex) as Fbs.TexturedTriangleMesh;\n            this.buildTexured(mesh, this.geometryType, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n}\n\nexport class Mesh8TexturedGeometryBuilder extends MeshGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.TexturedTriangleMesh8;\n    readonly producedType = ObjectType.MESH;\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\n        super(modelId, geometry);\n        this.triangleMeshes = geometry.texturedTriangleMeshes8.bind(geometry);\n        this.createGeometryPrototypes();\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.texturedTriangleMeshes8Length());\n        const mesh = new Fbs.TexturedTriangleMesh8();\n        for (let i = 0, l = this.geometry.texturedTriangleMeshes8Length(); i < l; i++) {\n            this.geometry.texturedTriangleMeshes8(i, mesh);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(mesh));\n        }\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            const mesh = this.triangleMeshes(geometryIndex) as Fbs.TexturedTriangleMesh8;\n            this.buildTexured(mesh, this.geometryType, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n}\n","import { Trimble } from \"../TrimBim_generated\";\nimport { HitPoint } from \"./HitPoint\";\nimport { Vector3, Matrix4, Ray} from \"three\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nfunction getArcSectionsCount(arc: Fbs.Arc3f, sectionsPerRadianForUnitRadius: number, min: number): number {\n    // amount of arc sections depends on arc radius, so small arcs are approximated, larger one are more precise\n    // sectionsPerRadianForUnitRadius is used by line graphic geometry, as it can afford to have more vertices\n    const count = Math.round(arc.angle() * arc.radius() * sectionsPerRadianForUnitRadius);\n    return Math.min(Math.max(count, min), 30);\n}\n\nexport function get3DArcSectionsCount(arc: Fbs.Arc3f): number {\n    return getArcSectionsCount(arc, 5, 4);\n}\n\nexport function get2DArcSectionsCount(arc: Fbs.Arc3f): number {\n    // higher min value required for better representation of 2D autocad dwg markups\n    return getArcSectionsCount(arc, 10, 8);\n}\n\nexport const forEachSegment = (() => {\n    const start: Vector3 = new Vector3();\n    const end: Vector3 = new Vector3();\n    const tmp = new Fbs.Vec3f();\n    const segment = new Fbs.Line3f();\n\n    return (\n        lines: Fbs.GraphicsContainer | Fbs.Directrix,\n        f: (start: Vector3, end: Vector3) => void\n    ): void => {\n        const lineSegmentsLength = lines.lineSegmentsLength();\n        for (let i = 0; i < lineSegmentsLength; i++) {\n            lines.lineSegments(i, segment);\n            segment.start(tmp);\n            start.set(tmp.x(), tmp.y(), tmp.z());\n            segment.end(tmp);\n            end.set(tmp.x(), tmp.y(), tmp.z());\n            f(start, end);\n        }\n    };\n})();\n\nexport const forEachArc = (() => {\n    const arcStart = new Vector3();\n    const arcEnd = new Vector3();\n    const arcMids: Vector3[] = [];\n    const arcCenter = new Vector3();\n    const arcAxis = new Vector3();\n    const arc = new Fbs.Arc3f();\n\n    return (\n        directrix: Fbs.Directrix | Fbs.GraphicsContainer,\n        f: (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => void,\n        getArcSectionsCount: (arc: Fbs.Arc3f) => number\n    ): void => {\n        const arcsLength = directrix.arcsLength();\n\n        for (let i = 0; i < arcsLength; i++) {\n            directrix.arcs(i, arc);\n            const arcCrossSectionCount = getArcSectionsCount(arc);\n\n            arcCenter.set(arc.center().x(), arc.center().y(), arc.center().z());\n            arcAxis.set(arc.axis().x(), arc.axis().y(), arc.axis().z());\n            arcStart.set(arc.refDirection().x(), arc.refDirection().y(), arc.refDirection().z());\n\n            arcMids.length = arcCrossSectionCount - 2;\n            for (let j = 0; j < arcMids.length; j++) {\n                arcMids[j] = new Vector3();\n                arcMids[j].copy(arcStart);\n                arcMids[j].applyAxisAngle(arcAxis, arc.angle() * (j + 1) / (arcCrossSectionCount - 1));\n                arcMids[j].multiplyScalar(arc.radius());\n                arcMids[j].add(arcCenter);\n            }\n\n            arcEnd.copy(arcStart);\n            arcEnd.applyAxisAngle(arcAxis, arc.angle());\n            arcEnd.multiplyScalar(arc.radius());\n            arcEnd.add(arcCenter);\n\n            arcStart.multiplyScalar(arc.radius());\n            arcStart.add(arcCenter);\n\n            f(arcStart, arcMids, arcEnd);\n        }\n    };\n})();\n\nexport const forEachPolyline = (() => {\n    const polyPoint = new Vector3();\n    const nextPolyPoint = new Vector3();\n    const polyline = new Fbs.Polyline3f();\n\n    return (\n        directrix: Fbs.Directrix,\n        f: (polyPoint: Vector3, nextPolyPoint: Vector3) => void\n    ): void => {\n        const polylinesLength = directrix.polyLinesLength();\n        for (let i = 0; i < polylinesLength; i++) {\n            directrix.polyLines(i, polyline);\n            for (let j = 0, innerLength = polyline.pointsLength() - 1; j < innerLength; j++) {\n                polyPoint.set(polyline.points(j).x(), polyline.points(j).y(), polyline.points(j).z());\n                nextPolyPoint.set(polyline.points(j + 1).x(), polyline.points(j + 1).y(), polyline.points(j + 1).z());\n                f(polyPoint, nextPolyPoint);\n            }\n        }\n    };\n})();\n\nexport type LineSegmentPickCallback = (pointOnRay: Vector3, pointOnSegment: Vector3, start: Vector3, end: Vector3, rayDistanceSq: number) => void;\n\nexport function pickOnSegment(lines: Fbs.GraphicsContainer | Fbs.Directrix, ray: Ray, callback: LineSegmentPickCallback): void {\n    forEachSegment(lines, (start: Vector3, end: Vector3) => {\n        pickLineSegment(start, end, ray, callback);\n    });\n}\n\nexport function pickOnArc(\n    directrix: Fbs.Directrix | Fbs.GraphicsContainer,\n    ray: Ray,\n    getArcSectionsCount: (arc: Fbs.Arc3f) => number,\n    callback: LineSegmentPickCallback\n): void {\n\n    forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\n        pickLineSegment(arcStart, arcMids[0], ray, callback);\n        arcMids.forEach((mid, index) => {\n            if (index > 0) pickLineSegment(arcMids[index - 1], mid, ray, callback);\n        });\n        pickLineSegment(arcMids[arcMids.length - 1], arcEnd, ray, callback);\n    }, getArcSectionsCount);\n}\n\nexport function pickOnPolyline(directrix: Fbs.Directrix, ray: Ray, callback: LineSegmentPickCallback): void {\n    forEachPolyline(directrix, (start: Vector3, end: Vector3) => {\n        pickLineSegment(start, end, ray, callback);\n    });\n}\n\nexport function pickOnLineGeometry(lineGeometry: Float32Array | Float64Array, ray: Ray, callback: LineSegmentPickCallback): void {\n    forEachLineString(lineGeometry, (start: Vector3, end: Vector3) => {\n        pickLineSegment(start, end, ray, callback);\n    });\n}\n\nexport const forEachLineString = (() => {\n    const start: Vector3 = new Vector3();\n    const end: Vector3 = new Vector3();\n\n    return (\n        lineStringVertices: Float32Array | Float64Array,\n        f: (start: Vector3, end: Vector3) => void\n    ): void => {\n        if (lineStringVertices) {\n            const vertexCount = lineStringVertices.length / 3;\n            for (let i = 1; i < vertexCount; i++) {\n                end.set(\n                    lineStringVertices[i * 3],\n                    lineStringVertices[i * 3 + 1],\n                    lineStringVertices[i * 3 + 2]\n                );\n                start.set(\n                    lineStringVertices[(i - 1) * 3],\n                    lineStringVertices[(i - 1) * 3 + 1],\n                    lineStringVertices[(i - 1) * 3 + 2]\n                );\n                f(start, end);\n            }\n        }\n\n    };\n})();\n\nexport const pickLineSegment = (() => {\n    const pointOnRay = new Vector3();\n    const pointOnSegment = new Vector3();\n\n    return (start: Vector3, end: Vector3, ray: Ray, callback: LineSegmentPickCallback): void => {\n        const distSq = ray.distanceSqToSegment(start, end, pointOnRay, pointOnSegment);\n        callback(pointOnRay, pointOnSegment, start, end, distSq);\n    };\n})();\n\n\n/**\n * Intersects the given ray with a cylinder with its axis from start to end, with the given radius.\n */\nexport const intersectCylinder = (() => {\n    const zAxis = new Vector3();\n    const yAxis = new Vector3();\n    const xAxis = new Vector3();\n    const m = new Matrix4();\n    const mInv = new Matrix4();\n    const rayTr = new Ray();\n    const point = new Vector3();\n    const normal = new Vector3();\n    const scaleFactor = new Vector3();\n    const points: HitPoint[] = [];\n\n    /**\n     * Finds an (arbitrary) unit vector perpendicular to source, and sets it to target.\n     */\n    const getPerpendicular = (() => {\n        const zz = new Vector3(0, 0, 1);\n        const xx = new Vector3(1, 0, 0);\n        return (source: Vector3, target: Vector3) => {\n            if (Math.abs(source.dot(zz)) > 0.9)\n                target.crossVectors(source, xx).normalize();\n            else target.crossVectors(source, zz).normalize();\n        };\n    })();\n\n    const makeHit = (t: number, length: number, radius: number) => {\n        point.copy(rayTr.direction).normalize().multiplyScalar(t).add(rayTr.origin);\n        if (point.z >= 0 && point.z <= length / radius) {\n            normal.set(point.x, point.y, 0).applyMatrix4(mInv).normalize();\n            point.applyMatrix4(m);\n            points.push({\n                point: point.clone(),\n                normal: normal.clone(),\n            } as HitPoint);\n        }\n    };\n\n    return (start: Vector3, end: Vector3, ray: Ray, radius: number): HitPoint[] => {\n        const length = end.distanceTo(start);\n        zAxis.copy(end).sub(start).normalize();\n        getPerpendicular(zAxis, xAxis);\n        yAxis.crossVectors(zAxis, xAxis);\n        m.identity().makeBasis(xAxis, yAxis, zAxis);\n        m.setPosition(start);\n        m.scale(scaleFactor.set(radius, radius, radius));\n        mInv.copy(m).invert();\n        rayTr.copy(ray).applyMatrix4(mInv);\n\n        const a = rayTr.direction.x * rayTr.direction.x + rayTr.direction.y * rayTr.direction.y;\n        const b = 2 * rayTr.origin.x * rayTr.direction.x + 2 * rayTr.origin.y * rayTr.direction.y;\n        const c = rayTr.origin.x * rayTr.origin.x + rayTr.origin.y * rayTr.origin.y - 1;\n        if (4 * a * c > b * b) return [];                // No intersection\n\n        const t1 = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);\n        const t2 = (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a);\n\n        points.length = 0;\n        mInv.transpose();\n        makeHit(t1, length, radius);\n        makeHit(t2, length, radius);\n        return points;\n    };\n})();\n","import { Trimble } from \"../../TrimBim_generated\";\nimport { GeometryData } from \"./GeometryBuilder\";\nimport { Vector3 } from \"three\";\n\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport { get2DArcSectionsCount } from \"../pick-utils\";\n\nexport class LinePrimitiveBuilder {\n    public static buildSegments(lines: Fbs.GraphicsContainer | Fbs.Directrix, buffer: GeometryData, positionPointer: number): number {\n        const segment = new Fbs.Line3f();\n        for (let i = 0, l = lines.lineSegmentsLength(); i < l; i++) {\n            lines.lineSegments(i, segment);\n            positionPointer = LinePrimitiveBuilder.buildLine(segment, buffer, positionPointer);\n        }\n        return positionPointer;\n    }\n\n    public static buildLine(segment: Fbs.Line3d | Fbs.Line3f, buffer: GeometryData, positionPointer: number): number {\n        const start = segment.start();\n        const end = segment.end();\n\n        buffer.positions[positionPointer++] = start.x();\n        buffer.positions[positionPointer++] = start.y();\n        buffer.positions[positionPointer++] = start.z();\n\n        buffer.positions[positionPointer++] = end.x();\n        buffer.positions[positionPointer++] = end.y();\n        buffer.positions[positionPointer++] = end.z();\n\n        return positionPointer;\n    }\n\n    public static getTotalArcSectionsCount(lines: Fbs.GraphicsContainer | Fbs.Directrix): number {\n        let crossSectionCount = 0;\n        const arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\n        for (let i = 0; i < lines.arcsLength(); i++) {\n            lines.arcs(i, arc);\n            crossSectionCount += get2DArcSectionsCount(arc);\n        }\n        return crossSectionCount;\n    }\n\n    public static buildArcs(lines: Fbs.GraphicsContainer | Fbs.Directrix, buffer: GeometryData, positionPointer: number): number {\n        const arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\n        let arcCrossSections: Vector3[] = [];\n\n        for (let i = 0, l = lines.arcsLength(); i < l; i++) {\n            lines.arcs(i, arc);\n            const crossSectionCount = get2DArcSectionsCount(arc);\n            arcCrossSections = createCrossSections(arc, crossSectionCount);\n\n            buffer.positions[positionPointer++] = arcCrossSections[0].x;\n            buffer.positions[positionPointer++] = arcCrossSections[0].y;\n            buffer.positions[positionPointer++] = arcCrossSections[0].z;\n\n            for (let j = 1; j < crossSectionCount - 1; j++) {\n                buffer.positions[positionPointer++] = arcCrossSections[j].x;\n                buffer.positions[positionPointer++] = arcCrossSections[j].y;\n                buffer.positions[positionPointer++] = arcCrossSections[j].z;\n                buffer.positions[positionPointer++] = arcCrossSections[j].x;\n                buffer.positions[positionPointer++] = arcCrossSections[j].y;\n                buffer.positions[positionPointer++] = arcCrossSections[j].z;\n            }\n\n            buffer.positions[positionPointer++] = arcCrossSections[crossSectionCount - 1].x;\n            buffer.positions[positionPointer++] = arcCrossSections[crossSectionCount - 1].y;\n            buffer.positions[positionPointer++] = arcCrossSections[crossSectionCount - 1].z;\n        }\n        return positionPointer;\n    }\n}\n\nexport function createCrossSections(arc: Fbs.Arc3f, arcCrossSectionCount: number): Vector3[] {\n    const arcCenter = new Vector3();\n    const arcAxis = new Vector3();\n    const arcStart = new Vector3();\n    const arcEnd = new Vector3();\n    const arcMids: Vector3[] = [];\n    const arcCrossSections: Vector3[] = [];\n\n    arcCenter.set(arc.center().x(), arc.center().y(), arc.center().z());\n    arcAxis.set(arc.axis().x(), arc.axis().y(), arc.axis().z());\n    arcStart.set(arc.refDirection().x(), arc.refDirection().y(), arc.refDirection().z());\n\n    for (let j = 0; j < arcCrossSectionCount - 2; j++) {\n        arcMids[j] = new Vector3();\n        arcMids[j].copy(arcStart);\n        arcMids[j].applyAxisAngle(arcAxis, arc.angle() * (j + 1) / (arcCrossSectionCount - 1));\n        arcMids[j].multiplyScalar(arc.radius());\n        arcMids[j].add(arcCenter);\n\n    }\n\n    arcEnd.copy(arcStart);\n    arcEnd.applyAxisAngle(arcAxis, arc.angle());\n    arcEnd.multiplyScalar(arc.radius());\n    arcEnd.add(arcCenter);\n\n    arcStart.multiplyScalar(arc.radius());\n    arcStart.add(arcCenter);\n\n    arcCrossSections.push(arcStart);\n    arcCrossSections.push(...arcMids);\n    arcCrossSections.push(arcEnd);\n\n    return arcCrossSections;\n}\n\n","import {GeometryBuilder} from \"./GeometryBuilder\";\nimport {HitPoint} from \"../HitPoint\";\nimport {Frustum, Ray, Vector3} from \"three\";\nimport {LineSegmentPickCallback} from \"../pick-utils\";\n\nexport abstract class LineGeometryBuilder extends GeometryBuilder {\n    pickLine = (() => {\n        const hits: HitPoint[] = [];\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum, rayPoint: boolean = false): HitPoint[] => {\n            hits.length = 0;\n\n            const callback = ((pointOnRay: Vector3, pointOnSegment: Vector3, start: Vector3, end: Vector3, rayDistanceSq: number) => {\n                if (!frustum.containsPoint(pointOnSegment)) return;\n\n                hits.push({\n                    point: rayPoint ? pointOnRay.clone() : pointOnSegment.clone(),\n                    distanceSqToRay: rayDistanceSq,\n                    snapLineStart: start.clone(),\n                    snapLineEnd: end.clone()\n                } as HitPoint);\n            }) as LineSegmentPickCallback;\n            this.pickLineWithCallback(geometryIndex, ray, callback);\n\n            return hits;\n        };\n    })();\n\n    abstract pickLineWithCallback(geometryIndex: number, ray: Ray, callback: LineSegmentPickCallback): void\n}\n","import {GeometryData, GeometryDataPrototype} from \"./GeometryBuilder\";\nimport {LinePrimitiveBuilder} from \"./LinePrimitiveBuilder\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {HitPoint} from \"../HitPoint\";\nimport {Frustum, Ray, Vector3} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {\n    forEachArc,\n    forEachSegment,\n    get2DArcSectionsCount,\n    get3DArcSectionsCount,\n    LineSegmentPickCallback,\n    pickOnArc,\n    pickOnSegment\n} from \"../pick-utils\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {LineGeometryBuilder} from \"./LineGeometryBuilder\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class GraphicsGeometryBuilder extends LineGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.GraphicsContainer;\n    readonly snapGeometryType = GeometryType.LINE;\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            const line = this.geometry.graphicsContainers(geometryIndex);\n            this.build(line, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.graphicsContainersLength());\n        const line = new Fbs.GraphicsContainer();\n        for (let i = 0, l = this.geometry.graphicsContainersLength(); i < l; i++) {\n            this.geometry.graphicsContainers(i, line);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(line));\n        }\n    }\n\n    createGeometryPrototype(lines: Fbs.GraphicsContainer): GeometryDataPrototype {\n        const lineSegmentsLength = lines.lineSegmentsLength();\n        const arcsLength = lines.arcsLength();\n        const totalLength = lineSegmentsLength * 6 + (LinePrimitiveBuilder.getTotalArcSectionsCount(lines) - 2 * arcsLength) * 6 + 6 * arcsLength;\n\n        return {\n            objectType: ObjectType.LINE,\n            positionsLength: totalLength\n        };\n    }\n\n    build(\n        lines: Fbs.GraphicsContainer,\n        buffer: GeometryData\n    ): void {\n        buffer.positions = new Float32Array(buffer.positionsLength);\n        const positionPointer = LinePrimitiveBuilder.buildSegments(lines, buffer, 0);\n        LinePrimitiveBuilder.buildArcs(lines, buffer, positionPointer);\n    }\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickLine(geometryIndex, ray, frustum, true);\n    }\n\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\n        return;\n    }\n\n    pickLineWithCallback = (() => {\n        const graphics = new Fbs.GraphicsContainer();\n\n        return (geometryIndex: number, ray: Ray, callback: LineSegmentPickCallback): void => {\n            this.geometry.graphicsContainers(geometryIndex, graphics);\n            pickOnSegment(graphics, ray, callback);\n            pickOnArc(graphics, ray, get2DArcSectionsCount, callback);\n        };\n    })();\n\n    pickPoint = (() => {\n        const hits: HitPoint[] = [];\n        const graphics = new Fbs.GraphicsContainer();\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            hits.length = 0;\n            this.geometry.graphicsContainers(geometryIndex, graphics);\n\n            forEachSegment(graphics, (start: Vector3, end: Vector3) => {\n                if (frustum.containsPoint(start))\n                    hits.push({ point: start.clone() } as HitPoint);\n                if (frustum.containsPoint(end))\n                    hits.push({ point: end.clone() } as HitPoint);\n            });\n\n            forEachArc(graphics, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\n                if (frustum.containsPoint(arcStart))\n                    hits.push({ point: arcStart.clone() } as HitPoint);\n                if (frustum.containsPoint(arcEnd))\n                    hits.push({ point: arcEnd.clone() } as HitPoint);\n            }, get3DArcSectionsCount);\n\n            return hits;\n        };\n    })();\n}\n","import {GeometryBuilder, GeometryData, GeometryDataPrototype, normalLength} from \"./GeometryBuilder\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {\n    forEachArc,\n    forEachPolyline,\n    forEachSegment,\n    get3DArcSectionsCount,\n    intersectCylinder,\n    pickOnArc,\n    pickOnSegment,\n    pickOnPolyline, LineSegmentPickCallback\n} from \"../pick-utils\";\nimport {Frustum, Quaternion, Ray, Vector3} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {HitPoint} from \"../HitPoint\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {createCrossSections} from \"./LinePrimitiveBuilder\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {MAX_16BIT_SIZE, Vector3Const} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport Directrix = Trimble.Technology.TrimBim.Fbs.Directrix;\n\ninterface InterConnectionDetail {\n    position: Vector3;\n    type: Fbs.SegmentType;\n    isStartSegment?: boolean;\n    isEndSegment?: boolean;\n}\n\nexport class SweptDiskSolidGeometryBuilder extends GeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.SweptDiskSolid;\n    readonly snapGeometryType = GeometryType.MESH;\n\n    private sds = new Fbs.SweptDiskSolidContainer();\n    private directrix = new Directrix();\n    private arc = new Fbs.Arc3f();\n    private polyline = new Fbs.Polyline3f();\n\n    private positionPointer: number;\n    private indexPointer: number;\n\n    private getCrossSectionsPointCount(radius: number, amplifier: number = 200): number {\n        // Cross sections point depends on cross section radius\n        const count = Math.round(radius * amplifier);\n        return Math.min(Math.max(count, 5), 30);\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\n        const geometries = this.getCachedGeometryDatas(geometryIndex);\n        if (buildIfEmpty && geometries.length && !geometries[0].positions) {\n            this.build(this.geometry.sweptDiskSolids(geometryIndex, this.sds), geometries);\n            this.calculateMemSizeAndCache(geometryIndex, geometries);\n        }\n        return geometries;\n    }\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.sweptDiskSolidsLength());\n        for (let i = 0, l = this.geometry.sweptDiskSolidsLength(); i < l; i++) {\n            this.geometry.sweptDiskSolids(i, this.sds);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(this.sds));\n        }\n    }\n\n    private createDirectrixPrototypes(\n        sds: Fbs.SweptDiskSolidContainer,\n        i: number,\n        prototypes: GeometryDataPrototype[],\n    ): void {\n        const radius = sds.radius(i);\n        const directrix = sds.directrices(i, this.directrix);\n        const crossSectionPointCount = this.getCrossSectionsPointCount(radius);\n\n        let curr: GeometryDataPrototype | undefined = prototypes[prototypes.length - 1];\n\n        for (let j = 0; j < directrix.indexesLength(); j++) {\n            const segmentSize = this.calculateSegmentSize(directrix, j, crossSectionPointCount);\n            const firstComponent = !curr;   // Whether this is the very first directrix component for this instance\n\n            // If this directrix does not fit in current geometry object, create a new object and make it the current one:\n            if (firstComponent || !fitsIn16BitBuffer(curr.positionsLength / 3, segmentSize.verticesLength, crossSectionPointCount)) {\n\n                curr = {\n                    objectType: ObjectType.MESH,\n                    indicesLength: 0,\n                    positionsLength: 0,\n                    normalsLength: 0,\n                };\n                prototypes.push(curr);\n\n                // If a split has occurred within a directrix, the last cross section need to be copied to the new geometry buffer:\n                if (!firstComponent && j !== 0) {\n                    curr.positionsLength += crossSectionPointCount * 3;\n                    curr.normalsLength += crossSectionPointCount * 3;\n                    curr.indicesLength += (crossSectionPointCount - 2) * 3; // buildCrossSectionIndices() for previous section (isPreviousCrossSection = true)\n                }\n\n            }\n\n            curr.positionsLength += segmentSize.verticesLength * 3;\n            curr.normalsLength += segmentSize.verticesLength * 3;\n            curr.indicesLength += segmentSize.indicesLength;\n        }\n\n    }\n\n    private calculateSegmentSize = (() => {\n        const size = { verticesLength: 0, indicesLength: 0};\n\n        return (directrix: Fbs.Directrix, i: number, crossSectionPointCount: number): {verticesLength: number, indicesLength: number} => {\n            const type = directrix.types(i);\n            const index = directrix.indexes(i);\n\n            let segmentVertices = 0;\n            let segmentIndices = 0;\n            let crossSectionFaces = 0;\n            let interconnections = 0;\n\n            switch (type) {\n                case Fbs.SegmentType.LineSegment: {\n                    segmentVertices = 2 * crossSectionPointCount;\n                    segmentIndices = 6 * crossSectionPointCount;\n                    crossSectionFaces = 2;\n                } break;\n                case Fbs.SegmentType.PolyLine: {\n                    const polyline = directrix.polyLines(index, this.polyline);\n                    const lines = polyline.pointsLength() - 1;\n                    segmentVertices = 2 * lines * crossSectionPointCount;\n                    segmentIndices = 6 * lines * crossSectionPointCount;\n                    crossSectionFaces = 2 * lines;\n                } break;\n                case Fbs.SegmentType.Arc: {\n                    const arc = directrix.arcs(index, this.arc);\n                    const corners = get3DArcSectionsCount(arc);    // The number of corners in the discretisation of the arc\n                    segmentVertices = crossSectionPointCount * corners;\n                    segmentIndices = 6 * crossSectionPointCount * (corners - 1);\n                    crossSectionFaces = 2;\n                    interconnections = 2;   // Upper bound\n                } break;\n            }\n\n            // Each cross section face is a regular n-gon, divided into n-2 triangles:\n            const crossSectionIndices = crossSectionFaces * (crossSectionPointCount - 2) * 3;\n\n            // Each interconnection consists of as many quads as points in the cross sections; each quad consists of two triangles:\n            const interConnectionIndices = interconnections * crossSectionPointCount * 6;\n\n            size.verticesLength = segmentVertices;\n            size.indicesLength = segmentIndices + crossSectionIndices + interConnectionIndices;\n            return size;\n        }\n    })();\n\n    createGeometryPrototype(sds: Fbs.SweptDiskSolidContainer): GeometryDataPrototype[] {\n        const prototypes: GeometryDataPrototype[] = [];\n        for (let i = 0, l = sds.directricesLength(); i < l; i++) {\n            this.createDirectrixPrototypes(sds, i, prototypes);\n        }\n        return prototypes;\n    }\n\n    build(\n        sds: Fbs.SweptDiskSolidContainer,\n        buffers: GeometryData[]\n    ): void {\n        let bufferIndex = 0;\n        let prototypeVerticesLength = 0;   // Upper bound of the number of vertices, for buffer split.\n        let curr: GeometryData;\n        const interConnectionDetail = {} as InterConnectionDetail;\n\n        for (let i = 0, l = sds.directricesLength(); i < l; i++) {\n            const radius = sds.radius(i);\n            const directrix = sds.directrices(i, this.directrix);\n            const crossSectionPointCount = this.getCrossSectionsPointCount(radius);\n\n            // Build directrix into current buffer:\n            for (let j = 0; j < directrix.indexesLength(); j++) {\n                const segmentSize = this.calculateSegmentSize(directrix, j, crossSectionPointCount);\n                const firstComponent = !curr;   // Whether this is the very first directrix component for this instance\n\n                // Segments within the directrix are interconnected:\n                if (j === 0) interConnectionDetail.isStartSegment = true;\n                if (j === directrix.indexesLength() - 1) interConnectionDetail.isEndSegment = true;\n\n                if (firstComponent || !fitsIn16BitBuffer(prototypeVerticesLength, segmentSize.verticesLength, crossSectionPointCount)) {\n                    curr = buffers[bufferIndex++];\n                    curr.positions = new Float32Array(curr.positionsLength);\n                    curr.normals = new Int16Array(curr.normalsLength);\n                    curr.indices = new Uint16Array(curr.indicesLength);\n\n                    // Resetting pointers:\n                    const prevPositionPointer = this.positionPointer;\n                    this.positionPointer = 0;\n                    this.indexPointer = 0;\n                    prototypeVerticesLength = 0;\n\n                    // If a split has occurred within a directrix, the last cross section need to be copied to the new geometry buffer:\n                    if (!firstComponent && j !== 0) {\n                        const prevBuffer = buffers[bufferIndex - 2];\n                        this.copyLastCrossSection(prevBuffer, curr, prevPositionPointer, crossSectionPointCount);\n                        prototypeVerticesLength += crossSectionPointCount;\n                    }\n                }\n\n                this.buildDirectrixSegment(directrix, j, curr, radius, crossSectionPointCount, interConnectionDetail);\n                prototypeVerticesLength += segmentSize.verticesLength; // Update upper bound of the number of vertices\n            }\n        }\n    }\n\n    private copyLastCrossSection(\n        src: GeometryData,\n        dst: GeometryData,\n        srcPositionPointer: number,     // Pointer to the end of the last cross section in src\n        crossSectionPointCount: number\n    ): void {\n        for (let k=-crossSectionPointCount * 3; k<0; ++k) {\n            dst.positions[this.positionPointer] = src.positions[srcPositionPointer + k];\n            dst.normals[this.positionPointer] = src.normals[srcPositionPointer + k];\n            this.positionPointer++;\n        }\n    }\n\n    private buildDirectrixSegment(\n        directrix: Fbs.Directrix, segmentIndex: number, buffer: GeometryData, radius: number,\n        crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail\n    ): void {\n        const type = directrix.types(segmentIndex);\n        const index = directrix.indexes(segmentIndex);\n        switch (type) {\n            case Fbs.SegmentType.LineSegment:\n                this.buildLineSegment(directrix.lineSegments(index), radius, buffer, crossSectionPointCount, interConnectionDetail);\n                break;\n            case Fbs.SegmentType.PolyLine:\n                this.buildPolyLine(directrix.polyLines(index), radius, buffer, crossSectionPointCount, interConnectionDetail);\n                break;\n            case Fbs.SegmentType.Arc:\n                this.buildArc(directrix.arcs(index), radius, buffer, crossSectionPointCount, interConnectionDetail);\n                break;\n        }\n\n        interConnectionDetail.isStartSegment = false;\n        interConnectionDetail.isEndSegment = false;\n    }\n\n    private buildPolyLine(polyline: Fbs.Polyline3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\n        for (let j = 1, length = polyline.pointsLength(); j < length; j++) {\n            this.lineStart.set(polyline.points(j - 1).x(), polyline.points(j - 1).y(), polyline.points(j - 1).z());\n            this.lineEnd.set(polyline.points(j).x(), polyline.points(j).y(), polyline.points(j).z());\n            this.tmp.copy(this.lineEnd).sub(this.lineStart).normalize();\n            this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\n\n            this.buildCrossSection(this.lineStart, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n            //first line part\n            j === 1 ? this.connectFirstCrossSection(buffer, crossSectionPointCount, interConnectionDetail, this.lineStart, Fbs.SegmentType.PolyLine) : this.buildCrossSectionIndices(buffer, crossSectionPointCount);\n            this.buildCrossSection(this.lineEnd, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n            if (j !== (length - 1) || interConnectionDetail.isEndSegment)\n                this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\n            else {\n                interConnectionDetail.position = this.lineEnd;\n                interConnectionDetail.type = Fbs.SegmentType.PolyLine;\n            }\n            this.connectCrossSections(buffer, crossSectionPointCount);\n        }\n    }\n\n    /**\n     * Builds triangles for the first cross section in a directrix segment. Depending on its\n     * position in the directrix, it can connect it to previous segment, or close off both itself\n     * and the end of the previous segment by building their cylinder bases.\n     */\n    private connectFirstCrossSection(buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail, firstCrossSectionPosition: Vector3, type: Fbs.SegmentType): void {\n        if (interConnectionDetail.isStartSegment) this.buildCrossSectionIndices(buffer, crossSectionPointCount);\n        else if (!isMatchType(interConnectionDetail.type, type) || (!IsConnected(interConnectionDetail.position, firstCrossSectionPosition))) {\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true, true);\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount);\n        }\n        else {\n            this.connectCrossSections(buffer, crossSectionPointCount);\n        }\n    }\n\n    private buildStartCrossSection(point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\n        this.tmp.copy(nextPoint).sub(point).normalize();\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\n        this.buildCrossSection(point, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n    }\n\n    private buildMidCrossSection(prevPoint: Vector3, point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\n        this.tmp.copy(nextPoint).sub(prevPoint).normalize();\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\n        this.buildCrossSection(point, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n        this.connectCrossSections(buffer, crossSectionPointCount);\n    }\n\n    private buildEndCrossSection(point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\n        this.tmp.copy(nextPoint).sub(point).normalize();\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\n        this.buildCrossSection(nextPoint, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n    }\n\n    private arcCrossSections: Vector3[] = [];\n    private buildArc(arc: Fbs.Arc3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\n        const arcCrossSectionCount = get3DArcSectionsCount(arc);\n        this.arcCrossSections = createCrossSections(arc, arcCrossSectionCount);\n\n        this.buildStartCrossSection(this.arcCrossSections[0], this.arcCrossSections[1], radius, buffer, crossSectionPointCount);\n        this.connectFirstCrossSection(buffer, crossSectionPointCount, interConnectionDetail, this.arcCrossSections[0], Fbs.SegmentType.Arc);\n        for (let j = 0; j < arcCrossSectionCount - 2; j++) {\n            this.buildMidCrossSection(this.arcCrossSections[j], this.arcCrossSections[j + 1], this.arcCrossSections[j + 2], radius, buffer, crossSectionPointCount);\n        }\n        this.buildEndCrossSection(this.arcCrossSections[arcCrossSectionCount - 2], this.arcCrossSections[arcCrossSectionCount - 1], radius, buffer, crossSectionPointCount);\n        if (interConnectionDetail.isEndSegment)\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\n        else {\n            interConnectionDetail.position = this.arcCrossSections[arcCrossSectionCount - 1];\n            interConnectionDetail.type = Fbs.SegmentType.Arc;\n        }\n        this.connectCrossSections(buffer, crossSectionPointCount);\n    }\n\n    private lineStart = new Vector3();\n    private lineEnd = new Vector3();\n    private lineQuaternion = new Quaternion();\n    private buildLineSegment(segment: Fbs.Line3d | Fbs.Line3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\n        const start = segment.start();\n        const end = segment.end();\n        this.lineStart.set(start.x(), start.y(), start.z());\n        this.lineEnd.set(end.x(), end.y(), end.z());\n        this.tmp.copy(this.lineEnd).sub(this.lineStart).normalize();\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\n\n        this.buildCrossSection(this.lineStart, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n        this.connectFirstCrossSection(buffer, crossSectionPointCount, interConnectionDetail, this.lineStart, Fbs.SegmentType.LineSegment);\n\n        this.buildCrossSection(this.lineEnd, radius, this.lineQuaternion, buffer, crossSectionPointCount);\n        if (interConnectionDetail.isEndSegment)\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\n        else {\n            interConnectionDetail.position = this.lineEnd;\n            interConnectionDetail.type = Fbs.SegmentType.LineSegment;\n        }\n        this.connectCrossSections(buffer, crossSectionPointCount);\n    }\n\n    private crossSectionPoints: Vector3[];\n    private tmp = new Vector3();\n    private buildCrossSection(position: Vector3, radius: number, quaternion: Quaternion, buffer: GeometryData, crossSectionPointCount: number): void {\n        this.updateCrossSectionsPoints(crossSectionPointCount);\n\n        for (let i = 0; i < crossSectionPointCount; i++) {\n            this.tmp.copy(this.crossSectionPoints[i]).multiplyScalar(radius).applyQuaternion(quaternion).add(position);\n            buffer.positions[this.positionPointer] = this.tmp.x;\n            buffer.positions[this.positionPointer + 1] = this.tmp.y;\n            buffer.positions[this.positionPointer + 2] = this.tmp.z;\n\n            this.tmp.copy(this.crossSectionPoints[i]).applyQuaternion(quaternion);\n            buffer.normals[this.positionPointer] = this.tmp.x * normalLength;\n            buffer.normals[this.positionPointer + 1] = this.tmp.y * normalLength;\n            buffer.normals[this.positionPointer + 2] = this.tmp.z * normalLength;\n\n            this.positionPointer += 3;\n        }\n    }\n\n    private updateCrossSectionsPoints(crossSectionPointCount: number): void {\n        if (!this.crossSectionPoints || this.crossSectionPoints.length !== crossSectionPointCount) {\n            this.crossSectionPoints = [];\n            for (let i = 0; i < crossSectionPointCount; i++) {\n                const a = 2 * Math.PI * i / crossSectionPointCount;\n                this.crossSectionPoints.push(new Vector3(Math.sin(a), Math.cos(a), 0));\n            }\n        }\n    }\n\n    /**\n     * Builds the triangles for the inside of a cross section (the base of the cylinder)\n     */\n    private buildCrossSectionIndices(buffer: GeometryData, crossSectionPointCount: number, invertFaces: boolean = false, isPreviousCrossSection: boolean = false): void {\n        for (let i = 0; i < crossSectionPointCount - 2; i++) {\n            buffer.indices[this.indexPointer++] = this.positionPointer / 3 - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\n            buffer.indices[this.indexPointer++] = this.positionPointer / 3 + i + (invertFaces ? 2 : 1) - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\n            buffer.indices[this.indexPointer++] = this.positionPointer / 3 + i + (invertFaces ? 1 : 2) - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\n        }\n    }\n\n    /**\n     * Builds the triangles connecting one cross section with another (the mantle of the cylinder).\n     */\n    private connectCrossSections(buffer: GeometryData, crossSectionPointCount: number): void {\n        const vertexPointer1 = this.positionPointer / 3 - crossSectionPointCount;\n        const vertexPointer2 = vertexPointer1 - crossSectionPointCount;\n        for (let i = 0; i < crossSectionPointCount; i++) {\n            const nexti = (i + 1) % crossSectionPointCount;\n\n            buffer.indices[this.indexPointer++] = vertexPointer1 + i;\n            buffer.indices[this.indexPointer++] = vertexPointer1 + nexti;\n            buffer.indices[this.indexPointer++] = vertexPointer2 + i;\n\n            buffer.indices[this.indexPointer++] = vertexPointer2 + i;\n            buffer.indices[this.indexPointer++] = vertexPointer1 + nexti;\n            buffer.indices[this.indexPointer++] = vertexPointer2 + nexti;\n        }\n    }\n\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\n        return;\n    }\n\n    pick = (() => {\n        const hits: HitPoint[] = [];\n        const sds = new Fbs.SweptDiskSolidContainer();\n        const directrix = new Fbs.Directrix();\n\n        return (geometryIndex: number, ray: Ray): HitPoint[] => {\n            hits.length = 0;\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\n\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\n                sds.directrices(i, directrix);\n                const radius = sds.radius(i);\n\n                forEachSegment(directrix, (start: Vector3, end: Vector3) => {\n                    hits.push(...intersectCylinder(start, end, ray, radius));\n                });\n\n                forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\n                    hits.push(...intersectCylinder(arcStart, arcMids[0], ray, radius));\n                    arcMids.forEach((mid, index) => {\n                        if (index > 0) hits.push(...intersectCylinder(arcMids[index - 1], mid, ray, radius));\n                    });\n                    hits.push(...intersectCylinder(arcMids[arcMids.length - 1], arcEnd, ray, radius));\n                }, get3DArcSectionsCount);\n\n                forEachPolyline(directrix, (polyPoint: Vector3, nextPolyPoint: Vector3) => {\n                    hits.push(...intersectCylinder(polyPoint, nextPolyPoint, ray, radius));\n                });\n            }\n\n            return hits;\n        };\n    })();\n\n    pickLine = (() => {\n        const hits: HitPoint[] = [];\n        const sds = new Fbs.SweptDiskSolidContainer();\n        const directrix = new Fbs.Directrix();\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            hits.length = 0;\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\n\n            const callback = ((pointOnRay: Vector3, pointOnSegment: Vector3, start: Vector3, end: Vector3) => {\n                if (!frustum.containsPoint(pointOnSegment)) return;\n\n                hits.push({\n                    point: pointOnSegment.clone(),\n                    snapLineStart: start.clone(),\n                    snapLineEnd: end.clone()\n                });\n            }) as LineSegmentPickCallback;\n\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\n                sds.directrices(i, directrix);\n                pickOnSegment(directrix, ray, callback);\n                pickOnArc(directrix, ray, get3DArcSectionsCount, callback);\n                pickOnPolyline(directrix, ray, callback);\n            }\n\n            return hits;\n        };\n    })();\n\n    pickPoint = (() => {\n        const hits: HitPoint[] = [];\n        const sds = new Fbs.SweptDiskSolidContainer();\n        const directrix = new Fbs.Directrix();\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\n            hits.length = 0;\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\n\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\n                sds.directrices(i, directrix);\n\n                forEachSegment(directrix, (start: Vector3, end: Vector3) => {\n                    hits.push({ point: start.clone() } as HitPoint);\n                    hits.push({ point: end.clone() } as HitPoint);\n                });\n\n                forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\n                    hits.push({ point: arcStart.clone() } as HitPoint);\n                    hits.push({ point: arcEnd.clone() } as HitPoint);\n                }, get3DArcSectionsCount);\n\n                forEachPolyline(directrix, (polyPoint: Vector3, nextPolyPoint: Vector3) => {\n                    hits.push({ point: polyPoint.clone() } as HitPoint);\n                    hits.push({ point: nextPolyPoint.clone() } as HitPoint);\n                });\n            }\n\n            return hits.filter(h => frustum.containsPoint(h.point));\n        };\n    })();\n}\n\nconst IsConnected = (section1: Vector3, section2: Vector3) => {\n    return section1.distanceToSquared(section2) < 0.0001 * 0.0001;\n};\n\nconst isMatchType = (crossSectionType: Fbs.SegmentType, nextCrossSectionType: Fbs.SegmentType) =>\n    crossSectionType === Fbs.SegmentType.Arc || nextCrossSectionType === Fbs.SegmentType.Arc;\n\n/**\n * Calculates whether the given number of new vertices fit in a 16-bit GeometryData object.\n * Room is left for an additional SweptDiskSolid cross section, required for connections between\n * geometry splits.\n */\nconst fitsIn16BitBuffer = (verticesLength: number, newVertices: number, crossSectionPointCount: number): boolean =>\n    verticesLength + newVertices + crossSectionPointCount <= MAX_16BIT_SIZE;\n","import {LinePrimitiveBuilder} from \"./LinePrimitiveBuilder\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {GeometryBuilder, GeometryData, GeometryDataPrototype} from \"./GeometryBuilder\";\nimport {HitPoint} from \"../HitPoint\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {Frustum, Ray, Vector3} from \"three\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {LineSegmentPickCallback, pickLineSegment} from \"../pick-utils\";\nimport {FontStyle, TextTextureDescription} from \"../WorkerMessages\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {TextureManager} from \"../TextureManager\";\nimport {LineGeometryBuilder} from \"./LineGeometryBuilder\";\n\nexport class GridGeometryBuilder extends LineGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.GridLineContainer;\n    readonly snapGeometryType = GeometryType.LINE;\n\n    private intersections: Vector3[][] = [];\n    private surfaceNormals = new Array<Vector3>();\n    private textureDescs: TextTextureDescription[][];\n\n    private readonly fontStyle = {\n        size: 16,\n        font: \"sans-serif\"\n    } as FontStyle;\n\n    // Text offset of labels, equivalent to TrimBIM TextStyle.horizontalAlign and verticalAlign:\n    private labelOffset = {\n        x: 0,\n        y: -1.2,\n    };\n\n    constructor(modelId: string, geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry, private textureManager: TextureManager) {\n        super(modelId, geometry);\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData | GeometryData[] {\n        const geometries = this.getCachedGeometryDatas(geometryIndex);\n        const lineGeometry = geometries ? geometries[0] : undefined;\n        const labelGeometry = geometries ? geometries[1] : undefined;\n\n        if (lineGeometry && !lineGeometry.positions && buildIfEmpty) {\n            const grid = this.geometry.gridLineContainers(geometryIndex);\n\n            this.buildGridLines(grid, lineGeometry);\n            if (labelGeometry)\n                this.buildGridLabels(grid, labelGeometry, this.textureDescs[geometryIndex]);\n\n            this.surfaceNormals[geometryIndex] = new Vector3();\n            this.intersections[geometryIndex] = this.buildIntersections(lineGeometry.positions, grid.gridLineSegmentsLength(), this.surfaceNormals[geometryIndex]);\n            this.calculateMemSizeAndCache(geometryIndex, geometries);\n        }\n\n        return geometries;\n    }\n\n    async createGeometryPrototypes(): Promise<void> {\n        this.initGeometryCache(this.geometry.gridLineContainersLength());\n        this.textureDescs = new Array(this.geometry.gridLineContainersLength());\n        const grid = new Fbs.GridLineContainer();\n        const lineSegment = new Fbs.GridLineSegment();\n\n        for (let i = 0, l = this.geometry.gridLineContainersLength(); i < l; i++) {\n            this.geometry.gridLineContainers(i, grid);\n\n            const prototypes = [this.createGeometryPrototype(grid, ObjectType.LINE),\n                this.createGeometryPrototype(grid, ObjectType.POINT)];\n\n            if (grid.gridLineSegmentsLength() > 0) {\n                const texts = new Array<string>(grid.gridLineSegmentsLength());\n                const styles = new Array(grid.gridLineSegmentsLength()).fill(this.fontStyle);\n                for (let j = 0; j < grid.gridLineSegmentsLength(); ++j) {\n                    grid.gridLineSegments(j, lineSegment);\n                    texts[j] = lineSegment.axisTag();\n                }\n                this.textureDescs[i] = await this.textureManager.sendTexts(texts, styles);\n                prototypes[1].textureId = this.textureDescs[i][0].textureId; // All labels of a grid must fit in the same atlas\n            }\n            this.setGeometryPrototype(i, prototypes);\n        }\n    }\n\n    build(grid: Fbs.GridLineContainer, buffer: GeometryData, lineIndex?: number): void { }\n\n    private buildGridLines(grid: Fbs.GridLineContainer, buffer: GeometryData): void {\n        buffer.positions = new Float32Array(buffer.positionsLength);\n        buffer.normals = new Int16Array(buffer.normalsLength);\n        let positionPointer = 0;\n\n        const segment = new Fbs.GridLineSegment();\n        const line = new Fbs.Line3d();\n        for (let i = 0, l = grid.gridLineSegmentsLength(); i < l; i++) {\n            grid.gridLineSegments(i, segment);\n            segment.lineSegment(line);\n            positionPointer = LinePrimitiveBuilder.buildLine(line, buffer, positionPointer);\n        }\n    }\n\n    private buildGridLabels(grid: Fbs.GridLineContainer, buffer: GeometryData, textureDescs: TextTextureDescription[]): void {\n        buffer.positions = new Float32Array(buffer.positionsLength);\n        buffer.pointUvs = new Float32Array(buffer.pointUvsLength);\n        buffer.pointSizes = new Float32Array(buffer.pointSizesLength);\n\n        const segment = new Fbs.GridLineSegment();\n        const line = new Fbs.Line3d();\n        const start = new Fbs.Vec3d();\n        const end = new Fbs.Vec3d();\n\n        for (let i = 0, l = grid.gridLineSegmentsLength(); i < l; i++) {\n            grid.gridLineSegments(i, segment);\n            segment.lineSegment(line);\n            segment.lineSegment().start(start);\n            segment.lineSegment().end(end);\n\n            const desc = textureDescs[i];\n            const offsetX = this.labelOffset.x * desc.width / 2;\n            const offsetY = this.labelOffset.y * desc.height / 2;\n\n            buffer.positions[i * 6 + 0] = start.x();\n            buffer.positions[i * 6 + 1] = start.y();\n            buffer.positions[i * 6 + 2] = start.z();\n            buffer.positions[i * 6 + 3] = end.x();\n            buffer.positions[i * 6 + 4] = end.y();\n            buffer.positions[i * 6 + 5] = end.z();\n\n            buffer.pointUvs.set(desc.pointUvs, i*8);\n            buffer.pointUvs.set(desc.pointUvs, i*8+4);\n\n            buffer.pointSizes[i * 8 + 0] = buffer.pointSizes[i * 8 + 4] = -desc.width / 2 + offsetX;\n            buffer.pointSizes[i * 8 + 1] = buffer.pointSizes[i * 8 + 5] = -desc.height / 2 + offsetY;\n            buffer.pointSizes[i * 8 + 2] = buffer.pointSizes[i * 8 + 6] = desc.width / 2 + offsetX;\n            buffer.pointSizes[i * 8 + 3] = buffer.pointSizes[i * 8 + 7] = desc.height / 2 + offsetY;\n        }\n\n    }\n\n    private buildIntersections = (() => {\n        const starts: Vector3[] = [];\n        const ends: Vector3[] = [];\n        const intersections: Vector3[] = [];\n        const EPSILON = 0.0001;\n        const start = new Vector3();\n        const end = new Vector3();\n        const v = new Vector3();\n        const dir = new Vector3();\n        const ray = new Ray();\n        const point = new Vector3();\n        const startToPoint = new Vector3();\n        const endToPoint = new Vector3();\n\n        return (vertices: Float32Array | Float64Array, length: number, outSurfaceNormal: Vector3): Vector3[] => {\n            starts.length = 0;\n            ends.length = 0;\n            intersections.length = 0;\n            for (let i = 0; i < length; ++i) {\n                start.set(vertices[i * 6], vertices[i * 6 + 1], vertices[i * 6 + 2]);\n                end.set(vertices[i * 6 + 3], vertices[i * 6 + 4], vertices[i * 6 + 5]);\n                v.copy(end).sub(start);\n                dir.copy(v).normalize();\n                ray.set(start, dir);\n                for (let j = 0; j < starts.length; ++j) {\n                    const dist = ray.distanceSqToSegment(starts[j], ends[j], null, point);\n                    if (dist < EPSILON) {\n                        startToPoint.copy(point).sub(start);\n                        endToPoint.copy(point).sub(end);\n                        if (v.dot(startToPoint) >= -EPSILON && v.dot(endToPoint) <= EPSILON) {\n                            intersections.push(point.clone());\n\n                            // calculate grid surface normal, later will be used for surface picking\n                            if (outSurfaceNormal.lengthSq() === 0)\n                                outSurfaceNormal.crossVectors(dir, point.sub(starts[j]));\n                        }\n                    }\n                }\n                starts.push(start.clone());\n                ends.push(end.clone());\n            }\n            return intersections.slice();\n        };\n    })();\n\n    createGeometryPrototype(\n        grid: Fbs.GridLineContainer,\n        objectType?: ObjectType,\n    ): GeometryDataPrototype {\n        const n = grid.gridLineSegmentsLength();\n\n        if (objectType === ObjectType.POINT)\n            // Two labels per line segment:\n            return {\n                objectType: ObjectType.POINT,\n                positionsLength: 2 * n * 3,\n                pointUvsLength: 2 * n * 4,\n                pointSizesLength: 2 * n * 4,\n            };\n\n        else\n            return {\n                objectType: ObjectType.LINE,\n                positionsLength: 2 * n * 3,\n            };\n    }\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickLine(geometryIndex, ray, frustum, true);\n    }\n\n    pickFace(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        if (this.surfaceNormals[geometryIndex].lengthSq() === 0) return;\n\n        const points = this.pickLine(geometryIndex, ray, frustum);\n        for (const p of points) p.normal = this.surfaceNormals[geometryIndex];\n        return points;\n    }\n\n    pickLineWithCallback = (() => {\n        const glc = new Fbs.GridLineContainer();\n        const start = new Vector3();\n        const end = new Vector3();\n\n        return (geometryIndex: number, ray: Ray, callback: LineSegmentPickCallback): void => {\n            this.geometry.gridLineContainers(geometryIndex, glc);\n            const geometries = this.getGeometries(geometryIndex, true);\n            const lineGeometry = Array.isArray(geometries) ? geometries[0] : geometries;\n            const vs = lineGeometry.positions;\n            for (let i = 0, l = glc.gridLineSegmentsLength(); i < l; ++i) {\n                start.set(vs[i * 6], vs[i * 6 + 1], vs[i * 6 + 2]);\n                end.set(vs[i * 6 + 3], vs[i * 6 + 4], vs[i * 6 + 5]);\n                pickLineSegment(start, end, ray, callback);\n            }\n        };\n    })();\n\n    pickLine = (() => {\n        const glc = new Fbs.GridLineContainer();\n        const start = new Vector3();\n        const end = new Vector3();\n        const hits: HitPoint[] = [];\n\n        return (geometryIndex: number, ray: Ray, frustum: Frustum, rayPoint: boolean = false): HitPoint[] => {\n            hits.length = 0;\n            this.geometry.gridLineContainers(geometryIndex, glc);\n            const geometries = this.getGeometries(geometryIndex, true);\n            const lineGeometry = Array.isArray(geometries) ? geometries[0] : geometries;\n            const vs = lineGeometry.positions;\n            for (let i = 0, l = glc.gridLineSegmentsLength(); i < l; ++i) {\n                start.set(vs[i * 6], vs[i * 6 + 1], vs[i * 6 + 2]);\n                end.set(vs[i * 6 + 3], vs[i * 6 + 4], vs[i * 6 + 5]);\n                pickLineSegment(start, end, ray, (pointOnRay, pointOnSegment) => {\n                    if (frustum.containsPoint(pointOnSegment))\n                        hits.push({\n                            point: rayPoint ? pointOnRay.clone() : pointOnSegment.clone(),\n                            snapLineStart: start.clone(),\n                            snapLineEnd: end.clone()\n                        });\n                });\n            }\n            return hits;\n        };\n    })();\n\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        if (!this.intersections[geometryIndex])\n            this.getGeometries(geometryIndex, true);\n        return this.intersections[geometryIndex]\n            .filter(p => frustum.containsPoint(p))\n            .map(p => ({ point: p.clone() }) as HitPoint);\n    }\n}\n","import {GeometryBuilder, GeometryData, GeometryDataPrototype,} from \"./GeometryBuilder\";\nimport {HitPoint} from \"../HitPoint\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {Frustum, Ray} from \"three\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {FontStyle, TextTextureDescription} from \"../WorkerMessages\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {TextureManager} from \"../TextureManager\";\nimport {Vector3Const} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\n\nabstract class BillboardGeometryBuilder extends GeometryBuilder {\n    abstract readonly geometryType: TrimbimGeometryType;\n\n    createGeometryPrototype(mesh: any, objectType: ObjectType): GeometryDataPrototype {\n        return {\n            objectType: objectType,\n            positionsLength: 3,\n            pointUvsLength: 4,\n            pointSizesLength: 4\n        };\n    }\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickPoint(geometryIndex, ray, frustum);\n    }\n\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\n        return;\n    }\n\n    pickLine(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return;\n    }\n\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return frustum.containsPoint(Vector3Const.zero) ? [{point: Vector3Const.zero.clone()}] : undefined;\n    }\n}\n\nexport class TexturedBillboardGeometryBuilder extends BillboardGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.TexturedBillboard;\n    readonly snapGeometryType = GeometryType.POINT;\n\n    private texturedBillboard = new Fbs.TexturedBillboard();\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.texturedBillboardsLength());\n        for (let i = 0, l = this.geometry.texturedBillboardsLength(); i < l; i++) {\n            this.geometry.texturedBillboards(i, this.texturedBillboard);\n            const producedType = this.texturedBillboard.IsInWorldUnits() ? ObjectType.ATTENUATED_POINT : ObjectType.POINT;\n            this.setGeometryPrototype(i, this.createGeometryPrototype(this.texturedBillboard, producedType));\n        }\n    }\n\n    build(\n        point: Fbs.TexturedBillboard,\n        bufferGeometry: GeometryData\n    ): void {\n        bufferGeometry.positions = new Float32Array(bufferGeometry.positionsLength);\n        bufferGeometry.pointUvs = new Float32Array(bufferGeometry.pointUvsLength);\n        bufferGeometry.pointSizes = new Float32Array(bufferGeometry.pointSizesLength);\n\n        // There is a precedent that TrimBIM textured billboards have a flipped y axis in uv space:\n        bufferGeometry.pointUvs[0] = point.leftUpUV().x();\n        bufferGeometry.pointUvs[1] = point.rightDownUV().y();\n        bufferGeometry.pointUvs[2] = point.rightDownUV().x();\n        bufferGeometry.pointUvs[3] = point.leftUpUV().y();\n\n        bufferGeometry.pointSizes[0] = point.leftUpXY().x();\n        bufferGeometry.pointSizes[1] = point.leftUpXY().y();\n        bufferGeometry.pointSizes[2] = point.rightDownXY().x();\n        bufferGeometry.pointSizes[3] = point.rightDownXY().y();\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            this.geometry.texturedBillboards(geometryIndex, this.texturedBillboard);\n            this.build(this.texturedBillboard, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n}\n\nconst MIN_ATTENUATED_FONT_SIZE = 32;\n\nexport class BillboardTextGeometryBuilder extends BillboardGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.BillboardText;\n    readonly snapGeometryType = GeometryType.POINT;\n\n    private textureDescs: TextTextureDescription[];\n    private billboardText = new Fbs.BillboardText();\n    private textStyle = new Fbs.TextStyle();\n\n    constructor(modelId: string, geometry: Fbs.ModelGeometry, private textureManager: TextureManager) {\n        super(modelId, geometry);\n    }\n\n    async createGeometryPrototypes(): Promise<void> {\n        this.initGeometryCache(this.geometry.billboardTextsLength());\n\n        const texts = new Array<string>(this.geometry.billboardTextsLength());\n        const fontStyles = new Array(this.geometry.billboardTextsLength());\n        for (let i = 0, l = this.geometry.billboardTextsLength(); i < l; i++) {\n            this.geometry.billboardTexts(i, this.billboardText);\n            this.geometry.textStyles(this.billboardText.textStyleId(), this.textStyle);\n            const isInWorldUnits = !!(this.textStyle.options() & 0x1);\n\n            texts[i] = this.billboardText.text();\n            fontStyles[i] = {\n                font: this.textStyle.font(),\n                size: isInWorldUnits ? Math.max(this.textStyle.size(), MIN_ATTENUATED_FONT_SIZE) : this.textStyle.size(),\n                underlined: !!(this.textStyle.options() & 0x2),\n            } as FontStyle;\n        }\n        this.textureDescs = await this.textureManager.sendTexts(texts, fontStyles);\n\n        for (let i = 0, l = this.geometry.billboardTextsLength(); i < l; i++) {\n            this.geometry.billboardTexts(i, this.billboardText);\n            this.geometry.textStyles(this.billboardText.textStyleId(), this.textStyle);\n            const isInWorldUnits = !!(this.textStyle.options() & 0x1);\n            const producedType = isInWorldUnits ? ObjectType.ATTENUATED_POINT : ObjectType.POINT;\n            const geometry = this.createGeometryPrototype(this.billboardText, producedType);\n\n            const desc = this.textureDescs[i];\n            if (isInWorldUnits) {\n                // For attenuated billboard texts, if the font size is small, then it has been scaled up\n                // to make the text visible, and thus the point must be scaled down again by the same\n                // amount:\n                const sizeCoefficient = this.textStyle.size() / MIN_ATTENUATED_FONT_SIZE;\n                desc.width *= sizeCoefficient;\n                desc.height *= sizeCoefficient;\n            }\n\n            geometry.textureId = desc.textureId;\n            this.setGeometryPrototype(i, geometry);\n        }\n    }\n\n    protected build(billboardText: Trimble.Technology.TrimBim.Fbs.BillboardText, geometry: GeometryData): GeometryData {\n        geometry.positions = new Float32Array(geometry.positionsLength);\n        geometry.pointUvs = new Float32Array(geometry.pointUvsLength);\n        geometry.pointSizes = new Float32Array(geometry.pointSizesLength);\n        return geometry;\n    }\n\n    protected buildText(billboardText: Fbs.BillboardText, textStyle: Fbs.TextStyle, textIndex: number, geometry: GeometryData): void {\n        this.build(billboardText, geometry);\n\n        const desc = this.textureDescs[textIndex];\n\n        // Currently only supporting the 9 principal alignments. Defaulting to top-left.\n        const alignment = (1 <= this.textStyle.alignment() && this.textStyle.alignment() <= 9) ?\n            this.textStyle.alignment() : Fbs.AlignmentType.LeftTop;\n        const hAlign = ~~((alignment - 1) / 3) - 1;\n        const vAlign = ~~((alignment - 1) % 3) - 1;\n\n        const hOffset = hAlign - 2 * this.textStyle.horizontalAlign();\n        const vOffset = vAlign - 2 * this.textStyle.verticalAlign();\n\n        geometry.pointUvs.set(desc.pointUvs);\n\n        geometry.pointSizes[0] = -0.5   * (desc.width     + desc.width    * hOffset);\n        geometry.pointSizes[1] = -0.5   * (desc.height    + desc.height   * vOffset);\n        geometry.pointSizes[2] = 0.5    * (desc.width     - desc.width    * hOffset);\n        geometry.pointSizes[3] = 0.5    * (desc.height    - desc.height   * vOffset);\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n        if (!geometry.positions && buildIfEmpty) {\n            this.geometry.billboardTexts(geometryIndex, this.billboardText);\n            this.geometry.textStyles(this.billboardText.textStyleId(), this.textStyle);\n            this.buildText(this.billboardText, this.textStyle, geometryIndex, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n        return geometry;\n    }\n}\n","import {\n    ActionType,\n    AddGeometryBatchAction,\n    IUpdateFinished,\n    RemoveGeometryBatchAction,\n    SetBatchStateAction\n} from \"../Model/ModelBuilderTypes\";\nimport {MessageType, UpdateGeometryMessage} from \"./WorkerMessages\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\n\nexport class GeometryUpdateMessenger {\n    private actions: Array<AddGeometryBatchAction | RemoveGeometryBatchAction | SetBatchStateAction | IUpdateFinished> = [];\n    private intervalId: any;\n\n    constructor(private modelId: string, private messenger: AbstractWorkerMessenger) {\n        this.intervalId = setInterval(() => this.update(), 50);\n    }\n\n    send(action: AddGeometryBatchAction | RemoveGeometryBatchAction | SetBatchStateAction | IUpdateFinished): void {\n        this.actions.push(action);\n        if (this.actions.length > 20) this.update();\n    }\n\n    private update(): void {\n        if (this.actions.length === 0) return;\n\n        const message = {\n            type: MessageType.UPDATE_GEOMETRY,\n            modelId: this.modelId,\n            actions: this.actions\n        } as UpdateGeometryMessage;\n        this.actions = [];\n\n        this.messenger.request(message, GeometryUpdateMessenger.getTransferables(message));\n    }\n\n    static getTransferables(message: UpdateGeometryMessage): Transferable[] {\n        const transfer: Transferable[] = [];\n        for (const action of message.actions) {\n            if (action.actionType === ActionType.ADD_BATCH) {\n                const a = action as AddGeometryBatchAction;\n                if (a.positions) transfer.push(a.positions.buffer);\n                if (a.indices) transfer.push(a.indices.buffer);\n                if (a.normals) transfer.push(a.normals.buffer);\n                if (a.uvs) transfer.push(a.uvs.buffer);\n                if (a.pointUvs) transfer.push(a.pointUvs.buffer);\n                if (a.pointSizes) transfer.push(a.pointSizes.buffer);\n                if (a.ids) transfer.push(a.ids.buffer);\n            }\n        }\n        return transfer;\n    }\n\n    removePendingUpdateFinishedAction(): void {\n        this.actions = this.actions.filter(a => a.actionType !== ActionType.UPDATE_FINISHED);\n    }\n\n    dispose(): void {\n        clearInterval(this.intervalId);\n    }\n}\n","import { Trimble } from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {Box3, Matrix4, Vector3} from \"three\";\n\nexport class TrimbimUtils {\n\n    static getTransform = (() => {\n        const entity = new Fbs.Entity();\n        const placement = new Fbs.Placement3();\n        const instanceTransform = new Matrix4();\n        const entityTransform = new Matrix4();\n\n        return (instance: Fbs.GeometryInstance, entities: Fbs.ModelEntities, geometry: Fbs.ModelGeometry, transform: Matrix4) => {\n            entities.entities(instance.entityId(), entity);\n            TrimbimUtils.placementToMatrix4(geometry.localPlacements(instance.localPlacementId(), placement), instanceTransform);\n            TrimbimUtils.placementToMatrix4(entity.globalPlacement(placement), entityTransform);\n            transform.multiplyMatrices(entityTransform, instanceTransform);\n        };\n    })();\n\n    static setTransform(entityId: number, entities: Fbs.ModelEntities, transform: Matrix4): void {\n        // TODO: memory\n        const entity = entities.entities(entityId);\n        TrimbimUtils.matrix4ToPlacement(transform, entity.globalPlacement());\n    }\n\n    static getBoundingBox = (() => {\n        const aabb = new Fbs.AABB3f();\n\n        return (definition: Fbs.GeometryDefinition, box: Box3) => {\n            definition.boundingBox(aabb);\n            TrimbimUtils.aabbToBox(aabb, box);\n        };\n    })();\n\n    static aabbToBox = (() => {\n        const vec3 = new Fbs.Vec3f();\n\n        return (aabb: Fbs.AABB3f, box: Box3) => {\n            aabb.min(vec3);\n            box.min.set(unNaN(vec3.x()), unNaN(vec3.y()), unNaN(vec3.z()));\n            aabb.max(vec3);\n            box.max.set(unNaN(vec3.x()), unNaN(vec3.y()), unNaN(vec3.z()));\n        };\n    })();\n\n    static placementToMatrix4 = (() => {\n        const origin = new Vector3();\n        const xAxis = new Vector3();\n        const yAxis = new Vector3();\n        const zAxis = new Vector3();\n\n        const vec3d = new Fbs.Vec3d();\n        const vec3f = new Fbs.Vec3f();\n\n        return (localPlacement: Fbs.Placement3, out: Matrix4) => {\n            localPlacement.origin(vec3d);\n            origin.set(unNaN(vec3d.x()), unNaN(vec3d.y()), unNaN(vec3d.z()));\n            localPlacement.xAxis(vec3f);\n            xAxis.set(unNaN(vec3f.x()), unNaN(vec3f.y()), unNaN(vec3f.z()));\n            localPlacement.yAxis(vec3f);\n            yAxis.set(unNaN(vec3f.x()), unNaN(vec3f.y()), unNaN(vec3f.z()));\n            zAxis.crossVectors(xAxis, yAxis);\n\n            out.set(\n                xAxis.x, yAxis.x, zAxis.x, origin.x,\n                xAxis.y, yAxis.y, zAxis.y, origin.y,\n                xAxis.z, yAxis.z, zAxis.z, origin.z,\n                0, 0, 0, 1\n            );\n            return out;\n        };\n    })();\n\n    static matrix4ToPlacement = (() => {\n        const vec3d = new Fbs.Vec3d();\n        const vec3f = new Fbs.Vec3f();\n\n        return (matrix: Matrix4, placement: Fbs.Placement3) => {\n            // TODO: use flatbuffers builtin mutate functions when fixed: https://github.com/google/flatbuffers/issues/5927\n            // TODO: scaling saved incorrectly :(\n            const origin = placement.origin(vec3d);\n            mutate_xd(origin, matrix.elements[12]);\n            mutate_yd(origin, matrix.elements[13]);\n            mutate_zd(origin, matrix.elements[14]);\n\n            const xAxis = placement.xAxis(vec3f);\n            mutate_x(xAxis, matrix.elements[0]);\n            mutate_y(xAxis, matrix.elements[1]);\n            mutate_z(xAxis, matrix.elements[2]);\n\n            const yAxis = placement.yAxis(vec3f);\n            mutate_x(yAxis, matrix.elements[4]);\n            mutate_y(yAxis, matrix.elements[5]);\n            mutate_z(yAxis, matrix.elements[6]);\n        };\n    })();\n}\n\nfunction unNaN(n: number): number {\n    return Number.isNaN(n) || !Number.isFinite(n) ? 0 : n;\n}\n\nfunction mutate_xd(vec3: Fbs.Vec3d, value:number): void {\n    vec3.bb!.writeFloat64(vec3.bb_pos, value);\n}\n\nfunction mutate_yd(vec3: Fbs.Vec3d, value:number): void {\n    vec3.bb!.writeFloat64(vec3.bb_pos + 8, value);\n}\n\nfunction mutate_zd(vec3: Fbs.Vec3d, value:number): void {\n    vec3.bb!.writeFloat64(vec3.bb_pos + 16, value);\n}\n\nfunction mutate_x(vec3: Fbs.Vec3f, value:number): void {\n    vec3.bb!.writeFloat32(vec3.bb_pos, value);\n}\n\nfunction mutate_y(vec3: Fbs.Vec3f, value:number): void {\n    vec3.bb!.writeFloat32(vec3.bb_pos + 4, value);\n}\n\nfunction mutate_z(vec3: Fbs.Vec3f, value:number): void {\n    vec3.bb!.writeFloat32(vec3.bb_pos + 8, value);\n}\n","import {StateType} from \"./WorkerMessages\";\nimport {TrimbimPickPriority} from \"../common\";\n\nexport class ModelState {\n    protected readonly pickPriorityMask = 3 << StateType.PICK_PRIORITY;\n\n    protected state: Uint8Array;\n    private customMaterialIds: Uint8Array;\n\n    constructor(public length: number) {\n        this.state = new Uint8Array(length);\n        this.customMaterialIds = new Uint8Array(length);\n    }\n\n    isVisible(id: number): boolean {\n        return this.is(id, StateType.VISIBILITY);\n    }\n\n    isSelected(id: number): boolean {\n        return this.is(id, StateType.SELECTION);\n    }\n\n    isHovered(id: number): boolean {\n        return this.is(id, StateType.HOVER);\n    }\n\n    private is(id: number, stateType: StateType): boolean {\n        const mask = 1 << stateType;\n        return !!(this.state[id] & mask);\n    }\n\n    private set(id: number, stateType: StateType, value: boolean): void {\n        const mask = 1 << stateType;\n        this.state[id] = value ? this.state[id] | mask : this.state[id] & ~mask;\n    }\n\n    getPickPriority(id: number): TrimbimPickPriority {\n        return (this.state[id] & this.pickPriorityMask) >> StateType.PICK_PRIORITY;\n    }\n\n    resetVisibility(): void {\n        for (let i = 0, l = this.state.length; i < l; i++) {\n            this.setVisible(i, true);\n        }\n    }\n\n    setPickPriority(id: number, pickPriority: TrimbimPickPriority): void {\n        const priorityValue = pickPriority << StateType.PICK_PRIORITY;\n        const mask = this.state[id];\n        this.state[id] = mask & ~this.pickPriorityMask | priorityValue;\n    }\n\n    resetPickPriority(): void {\n        for (let i = 0, l = this.state.length; i < l; i++) {\n            this.setPickPriority(i, TrimbimPickPriority.NORMAL);\n        }\n    }\n\n    setVisible(id: number, visible: boolean): void {\n        this.set(id, StateType.VISIBILITY, visible);\n    }\n\n    setSelected(id: number, selected: boolean): void {\n        this.set(id, StateType.SELECTION, selected);\n    }\n\n    setHovered(id: number, hovered: boolean): void {\n        this.set(id, StateType.HOVER, hovered);\n    }\n\n    clearSelection(): void {\n        for (let i = 0, l = this.state.length; i < l; i++) {\n            this.setSelected(i, false);\n        }\n    }\n\n    resetHovered(): void {\n        for (let i = 0, l = this.state.length; i < l; i++) {\n            this.setHovered(i, false);\n        }\n    }\n\n    resetMaterialIds(): void {\n        this.customMaterialIds.fill(0);\n    }\n\n    setCustomMaterialId(id: number, materialId: number): void {\n        this.customMaterialIds[id] = materialId;\n    }\n\n    getCustomMaterialId(id: number): number {\n        return this.customMaterialIds[id];\n    }\n}\n","import {GeometryData, GeometryDataPrototype} from \"./GeometryBuilder\";\nimport {Trimble} from \"../../TrimBim_generated\";\nimport {HitPoint} from \"../HitPoint\";\nimport {Frustum, Ray, Vector2, Vector3} from \"three\";\nimport {ObjectType} from \"../../Model/ModelBuilderTypes\";\nimport {TrimbimGeometryType} from \"../../common\";\nimport {LineSegmentPickCallback, pickOnLineGeometry} from \"../pick-utils\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {LineGeometryBuilder} from \"./LineGeometryBuilder\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class AlignmentGeometryBuilder extends LineGeometryBuilder {\n    readonly geometryType = TrimbimGeometryType.AlignmentCurve;\n    readonly snapGeometryType = GeometryType.LINE;\n\n    createGeometryPrototypes(): void {\n        this.initGeometryCache(this.geometry.alignmentCurvesLength());\n        for (let i = 0, l = this.geometry.alignmentCurvesLength(); i < l; i++) {\n            const alignment = this.geometry.alignmentCurves(i);\n            this.setGeometryPrototype(i, this.createGeometryPrototype(alignment));\n        }\n    }\n\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData {\n        const geometry = this.getCachedGeometryData(geometryIndex);\n\n        if (geometry && !geometry.positions && buildIfEmpty) {\n            const alignment = this.geometry.alignmentCurves(geometryIndex);\n            this.build(alignment, geometry);\n            this.calculateMemSizeAndCache(geometryIndex, geometry);\n        }\n\n        return geometry;\n    }\n\n    createGeometryPrototype(alignment: Fbs.AlignmentCurve): GeometryDataPrototype {\n        const tolerance = 0.1; // to say something (TODO)\n        const totalLength = AlignmentGeometryBuilder.computeTesselationCount(alignment, tolerance) * 6;\n\n        return {\n            objectType: ObjectType.LINE,\n            positionsLength: totalLength\n        };\n    }\n\n    build(\n        alignment: Fbs.AlignmentCurve,\n        buffer: GeometryData\n    ): void {\n        buffer.positions = new Float64Array(buffer.positionsLength);\n        buffer.normals = new Int16Array(buffer.normalsLength);\n        const tolerance = 0.1; // to say something (TODO)\n        AlignmentGeometryBuilder.buildSegments(alignment, tolerance, buffer);\n    }\n\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return this.pickLine(geometryIndex, ray, frustum, true);\n    }\n\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\n        return;\n    }\n\n    pickLineWithCallback(geometryIndex: number, ray: Ray, callback: LineSegmentPickCallback): void {\n        pickOnLineGeometry(this.getGeometries(geometryIndex).positions, ray, callback);\n    }\n\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\n        return;\n    }\n\n    public static computeTesselationCount(\n        alignment: Fbs.AlignmentCurve,\n        tolerance: number\n    ): number {\n        let totalTesselationCount = 0;\n        const spans = AlignmentGeometryBuilder.buildSpans(alignment, tolerance);\n        if (!spans)\n            return 0; // TODO: why? alignment zero vertex size!?\n\n        const horCurve = alignment.horizontalCurve();\n        const horizontalDistance = horCurve.startAlongDistance();\n        const horizontSegmentOffsets = [];\n\n        let distance = horizontalDistance;\n        for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\n            horizontSegmentOffsets.push(distance);\n            const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\n            distance += segment.segmentLength();\n        }\n\n        const verCurve = alignment.verticalCurve();\n        for (const span of spans) {\n            if (span.hasHorizontalCurve && span.hasVerticalCurve) {\n                const hSegType = horCurve.segmentTypes(span.horizontalCurveIndex);\n                const vSegType = verCurve.segmentTypes(span.verticalCurveIndex);\n                const horizontalCount = AlignmentGeometryBuilder.getTessellationCountHorizontal(hSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\n                const verticalCount = AlignmentGeometryBuilder.getTessellationCountVertical(vSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\n\n                const tessellationCount = Math.max(horizontalCount, verticalCount);\n\n                totalTesselationCount += tessellationCount;\n            }\n        }\n        return totalTesselationCount;\n    }\n\n    public static buildSegments = (() => {\n        const previousXy = new Vector2();\n        const xy = new Vector2();\n        const point = new Vector3();\n        const previous = new Vector3();\n\n        return (\n            alignment: Trimble.Technology.TrimBim.Fbs.AlignmentCurve,\n            tolerance: number,\n            buffer: GeometryData\n        ) => {\n            let positionPointer = 0;\n            const spans = AlignmentGeometryBuilder.buildSpans(alignment, tolerance);\n\n            if (null === spans) {\n                return;\n            }\n\n            const horCurve = alignment.horizontalCurve();\n            let horizontalDistance = horCurve.startAlongDistance();\n            const horizontSegmentOffsets = [];\n\n            for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\n                horizontSegmentOffsets.push(horizontalDistance);\n                const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\n                horizontalDistance += segment.segmentLength();\n            }\n\n            const verCurve = alignment.verticalCurve();\n            for (const span of spans) {\n                if (span.hasHorizontalCurve && span.hasVerticalCurve) {\n                    const hSegType = horCurve.segmentTypes(span.horizontalCurveIndex);\n                    const horizontalSegment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(\n                        horCurve,\n                        span.horizontalCurveIndex\n                    );\n\n                    const vSegType = verCurve.segmentTypes(span.verticalCurveIndex);\n                    const verticalSegment = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(\n                        verCurve,\n                        span.verticalCurveIndex\n                    );\n                    const horizontalCount = AlignmentGeometryBuilder.getTessellationCountHorizontal(\n                        hSegType\n                    ); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\n                    const verticalCount = AlignmentGeometryBuilder.getTessellationCountVertical(vSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\n\n                    const tessellationCount = Math.max(horizontalCount, verticalCount);\n\n                    const horizontalSegmentOffset =\n                        horizontSegmentOffsets[span.horizontalCurveIndex];\n\n                    AlignmentGeometryBuilder.horizontalSegmentGetPointAt(\n                        hSegType,\n                        horizontalSegment,\n                        span.startDistance - horizontalSegmentOffset,\n                        previousXy\n                    );\n                    previous.set(\n                        previousXy.x,\n                        previousXy.y,\n                        AlignmentGeometryBuilder.segmentGetElevationAt(\n                            vSegType,\n                            verticalSegment,\n                            span.startDistance\n                        )\n                    );\n\n                    let previousDistance = span.startDistance;\n\n                    for (let i = 1; i <= tessellationCount; i++) {\n                        const distanceStart = span.startDistance;\n                        const distanceLength = span.horizontalLength;\n                        const scale = i / tessellationCount;\n                        const distance = distanceStart + scale * distanceLength;\n\n                        AlignmentGeometryBuilder.horizontalSegmentGetPointAt(\n                            hSegType,\n                            horizontalSegment,\n                            distance - horizontalSegmentOffset,\n                            xy\n                        );\n                        point.set(\n                            xy.x,\n                            xy.y,\n                            AlignmentGeometryBuilder.segmentGetElevationAt(\n                                vSegType,\n                                verticalSegment,\n                                distance\n                            )\n                        );\n\n                        buffer.positions[positionPointer] = previous.x;\n                        buffer.positions[positionPointer + 1] = previous.y;\n                        buffer.positions[positionPointer + 2] = previous.z;\n\n                        buffer.positions[positionPointer + 3] = point.x;\n                        buffer.positions[positionPointer + 4] = point.y;\n                        buffer.positions[positionPointer + 5] = point.z;\n                        positionPointer += 6;\n\n                        previous.copy(point);\n                        previousDistance = distance;\n                    }\n                }\n            }\n        };\n    })();\n\n    static horizontalCurveGetSegmentAt(horCurve: Trimble.Technology.TrimBim.Fbs.HorizontalCurve, index: number): Fbs.HorizontalLineSegment | Fbs.HorizontalCircularArcSegment | Fbs.HorizontalClothoidalArcSegment | Fbs.HorizontalTransitionArcSegment {\n        let counter = 0;\n        const segType = horCurve.segmentTypes(index);\n\n        for (let i = 0; i < index; i++) {\n            if (horCurve.segmentTypes(i) === segType) {\n                counter = counter + 1;\n            }\n        }\n\n        switch (segType) {\n            case Fbs.HorizontalSegmentType.LineSegment:\n                return horCurve.lineSegments(counter);\n            case Fbs.HorizontalSegmentType.CircularArcSegment:\n                return horCurve.circularArcSegments(counter);\n            case Fbs.HorizontalSegmentType.ClothoidalArcSegment:\n                return horCurve.clothoidalArcSegments(counter);\n            case Fbs.HorizontalSegmentType.TransientCurveSegment:\n                return horCurve.transitionArcSegments(counter);\n        }\n    }\n\n    static verticalCurveGetSegmentAt(verCurve: Fbs.VerticalCurve, index: number): Fbs.VerticalLineSegment | Fbs.VerticalCircularArcSegment | Fbs.VerticalParabolicArcSegment {\n        let counter = 0;\n        const segType = verCurve.segmentTypes(index);\n\n        for (let i = 0; i < index; i++) {\n            if (verCurve.segmentTypes(i) === segType) {\n                counter = counter + 1;\n            }\n        }\n\n        switch (segType) {\n            case Fbs.VerticalSegmentType.LineSegment:\n                return verCurve.lineSegments(counter);\n            case Fbs.VerticalSegmentType.CircularArcSegment:\n                return verCurve.circularArcSegments(counter);\n            case Fbs.VerticalSegmentType.ParabolicArcSegment:\n                return verCurve.parabolicArcSegments(counter);\n        }\n    }\n\n    static horizontalSegmentGetPointAt = (() => {\n        const direction = new Vector2();\n        const startPoint = new Vector2();\n        const angleVec2 = new Vector2();\n\n        return (\n            horizontalSegmentType: Fbs.HorizontalSegmentType,\n            horizontalSegment: any,\n            distance: number,\n            target: Vector2\n        ) => {\n            switch (horizontalSegmentType) {\n                case Fbs.HorizontalSegmentType.LineSegment: {\n                    if (distance < 0) {\n                        distance = 0;\n                    } else if (distance > horizontalSegment.segmentLength()) {\n                        distance = horizontalSegment.segmentLength();\n                    }\n\n                    target.setX(\n                        horizontalSegment.startPoint().x() +\n                        distance * Math.cos(horizontalSegment.startDirection())\n                    );\n                    target.setY(\n                        horizontalSegment.startPoint().y() +\n                        distance * Math.sin(horizontalSegment.startDirection())\n                    );\n                    break;\n                }\n                case Fbs.HorizontalSegmentType.CircularArcSegment: {\n                    const radius = horizontalSegment.radius();\n                    const isCCW = horizontalSegment.isCCW();\n                    const deltaAngle = distance / radius;\n                    const startAngle =\n                        horizontalSegment.startDirection() + (isCCW ? -Math.PI : Math.PI) / 2;\n\n                    const angle = startAngle + (isCCW ? deltaAngle : -deltaAngle);\n                    const originDirection =\n                        horizontalSegment.startDirection() + (isCCW ? Math.PI : -Math.PI) / 2;\n                    direction.set(\n                        Math.cos(originDirection) * radius,\n                        Math.sin(originDirection) * radius\n                    );\n\n                    startPoint.set(\n                        horizontalSegment.startPoint().x(),\n                        horizontalSegment.startPoint().y()\n                    );\n                    startPoint.add(direction);\n\n                    target.addVectors(\n                        startPoint,\n                        angleVec2.set(Math.cos(angle) * radius, Math.sin(angle) * radius)\n                    );\n                    break;\n                }\n                case Fbs.HorizontalSegmentType.ClothoidalArcSegment: {\n                    break;\n                }\n                case Fbs.HorizontalSegmentType.TransientCurveSegment: {\n                    switch (horizontalSegment.type()) {\n                        case Fbs.HorizontalTransitionCurveType.ClothoidCurve:\n                            if (\n                                horizontalSegment.isStartRadiusCCW() ===\n                                horizontalSegment.isEndRadiusCCW()\n                            ) {\n                                return AlignmentGeometryBuilder.segmentClothoidGetPointAt(\n                                    horizontalSegment,\n                                    distance,\n                                    target\n                                );\n                            }\n\n                            break;\n                        case Fbs.HorizontalTransitionCurveType.BiquadraticParabola:\n                        case Fbs.HorizontalTransitionCurveType.BlossCurve:\n                        case Fbs.HorizontalTransitionCurveType.CosineCurve:\n                        case Fbs.HorizontalTransitionCurveType.SineCurve:\n                            console.error(\n                                \"horizontal segment of type \" +\n                                horizontalSegment.type() +\n                                \" not yet implemented\"\n                            );\n                            break;\n                    }\n                    break;\n                }\n            }\n\n            return new Vector2();\n        };\n    })();\n\n    static segmentClothoidGetPointAt = (() => {\n        const tmp = new Vector2();\n\n        return (\n            clothoid: Fbs.HorizontalTransitionArcSegment,\n            distance: number,\n            target: Vector2\n        ) => {\n            const clothoidSpaceLocation = AlignmentGeometryBuilder.segmentClothoidSpaceLocation(\n                clothoid,\n                distance\n            );\n            const u = clothoidSpaceLocation.x;\n            const v = clothoidSpaceLocation.y;\n            const directionCos = Math.cos(clothoid.startDirection());\n            const directionSin = Math.sin(clothoid.startDirection());\n            // TODO; replace with vector dot-product...\n\n            target.set(clothoid.startPoint().x(), clothoid.startPoint().y());\n\n            if (clothoid.isStartRadiusCCW()) {\n                target.add(\n                    tmp.set(\n                        directionCos * u - directionSin * v,\n                        directionSin * u + directionCos * v\n                    )\n                );\n            } else {\n                target.add(\n                    tmp.set(\n                        directionCos * u + directionSin * v,\n                        directionSin * u - directionCos * v\n                    )\n                );\n            }\n        };\n    })();\n\n    static segmentClothoidSpaceLocation(\n        clothoid: Fbs.HorizontalTransitionArcSegment,\n        distance: number\n    ): Vector2 {\n        if (clothoid.startRadius() === clothoid.endRadius()) {\n            const resultPoint = new Vector2();\n            resultPoint.setX(distance);\n            return resultPoint;\n        }\n\n        let aa: number; // b == clothoid parameter squared.\n        if (clothoid.startRadius() === 0.0) {\n            aa = Math.abs(clothoid.endRadius() * clothoid.segmentLength());\n        } else if (clothoid.endRadius() === 0.0) {\n            aa = Math.abs(clothoid.startRadius() * clothoid.segmentLength());\n        } else {\n            aa = Math.abs(\n                (clothoid.segmentLength() * clothoid.startRadius() * clothoid.endRadius()) /\n                (clothoid.startRadius() - clothoid.endRadius())\n            );\n        }\n        if (aa === 0) {\n            return new Vector2();\n        }\n        const t1 = clothoid.startRadius() !== 0.0 ? Math.abs(aa / clothoid.startRadius()) : 0.0;\n        const t2 = clothoid.endRadius() !== 0.0 ? Math.abs(aa / clothoid.endRadius()) : 0.0;\n        const s1 = Math.sign(t2 - t1) * t1;\n        const s2 = s1 + distance;\n        const e = Math.sign(s1 + s2) * Math.sign(clothoid.startRadius() + clothoid.endRadius());\n        const f1 = (e * s1 * s1) / aa / 2.0;\n        const f2 = (e * s2 * s2) / aa / 2.0;\n        const x1 = s1 * AlignmentGeometryBuilder.cloCos(f1);\n        const y1 = s1 * AlignmentGeometryBuilder.cloSin(f1);\n        const x2 = s2 * AlignmentGeometryBuilder.cloCos(f2);\n        const y2 = s2 * AlignmentGeometryBuilder.cloSin(f2);\n        const sf = Math.sin(f1);\n        const cf = Math.cos(f1);\n        return new Vector2(+cf * (x2 - x1) + sf * (y2 - y1), -sf * (x2 - x1) + cf * (y2 - y1));\n    }\n\n    static cloCos(t: number): number {\n        const tt = t * t;\n        return (\n            1.0 -\n            tt *\n            (0.1 -\n                tt *\n                (1.0 / 216.0 -\n                    tt *\n                    (1.0 / 9360.0 -\n                        tt *\n                        (1.0 / 685440.0 -\n                            tt *\n                            (1.0 / 76204800.0 -\n                                tt *\n                                (1.0 / 11975040000.0 -\n                                    tt / 2528170444800.0))))))\n        );\n    }\n\n    static cloSin(t: number): number {\n        const tt = t * t;\n        return (\n            t *\n            (1.0 / 3.0 -\n                tt *\n                (1.0 / 42.0 -\n                    tt *\n                    (1.0 / 1320.0 -\n                        tt *\n                        (1.0 / 75600.0 -\n                            tt *\n                            (1.0 / 6894720.0 -\n                                tt *\n                                (1.0 / 918086400.0 -\n                                    tt *\n                                    (1.0 / 168129561600.0 -\n                                        tt / 40537905408000.0)))))))\n        );\n    }\n\n    static segmentGetElevationAt(\n        vertSegmentType: Fbs.VerticalSegmentType,\n        verticalSegment: Fbs.VerticalLineSegment | Fbs.VerticalCircularArcSegment | Fbs.VerticalParabolicArcSegment,\n        distance: number\n    ): number {\n        const distanceDelta = distance - verticalSegment.startDistAlong();\n        if (distanceDelta < 0) {\n            distance = 0;\n        } else if (distanceDelta > verticalSegment.horizontalLength()) {\n            distance = verticalSegment.horizontalLength();\n        } else {\n            distance = distanceDelta;\n        }\n\n        switch (vertSegmentType) {\n            case Fbs.VerticalSegmentType.LineSegment: {\n                return verticalSegment.startHeight() + verticalSegment.startGradient() * distance;\n            }\n            case Fbs.VerticalSegmentType.CircularArcSegment: {\n                const segment = verticalSegment as Fbs.VerticalCircularArcSegment;\n                const z0 = verticalSegment.startHeight();\n                const g1 = verticalSegment.startGradient();\n                const r = segment.radius();\n                const x = distance;\n\n                const gx = Math.sqrt(1 + g1 * g1);\n                const zc = r / gx;\n                if (segment.isConvex()) {\n                    let ds = x - r * (g1 / gx);\n                    if (ds > r) ds = r; // return only valid values, crop segment length to the provided circle.\n                    return z0 + Math.sqrt(r * r - ds * ds) - zc;\n                } else {\n                    let ds = x + r * (g1 / gx);\n                    if (ds > r) ds = r; // return only valid values, crop segment length to the provided circle.\n                    return z0 - Math.sqrt(r * r - ds * ds) + zc;\n                }\n            }\n            case Fbs.VerticalSegmentType.ParabolicArcSegment: {\n                const segment = verticalSegment as Fbs.VerticalParabolicArcSegment;\n                const R = !segment.isConvex()\n                    ? segment.parabolaConstant()\n                    : -segment.parabolaConstant();\n                const z0 = verticalSegment.startHeight();\n                const g0 = verticalSegment.startGradient();\n                const g1 = distance / R + g0 + g0;\n                return (distance * g1) / 2.0 + z0;\n            }\n        }\n    }\n\n    static getTessellationCountHorizontal(horizontalSegmentType: Fbs.HorizontalSegmentType, lodLevel: number = 1): number {\n        switch (horizontalSegmentType) {\n            case Fbs.HorizontalSegmentType.LineSegment: {\n                return 1;\n            }\n            case Fbs.HorizontalSegmentType.CircularArcSegment: {\n                return lodLevel * 24;\n            }\n            case Fbs.HorizontalSegmentType.TransientCurveSegment: {\n                return lodLevel * 24;\n            }\n        }\n\n        return 1;\n    }\n\n    static getTessellationCountVertical(verticalSegmentType: Fbs.VerticalSegmentType, lodLevel: number = 1): number {\n        switch (verticalSegmentType) {\n            case Fbs.VerticalSegmentType.LineSegment: {\n                return 1;\n            }\n            case Fbs.VerticalSegmentType.CircularArcSegment: {\n                return lodLevel * 24;\n            }\n            case Fbs.VerticalSegmentType.ParabolicArcSegment: {\n                return lodLevel * 24;\n            }\n        }\n        return 1;\n    }\n\n    static buildSpans(alignmentCurve: Fbs.AlignmentCurve, distanceTolerance: number): Span[] {\n        const breaks = AlignmentGeometryBuilder.buildVerticalBreaks(\n            alignmentCurve.verticalCurve(),\n            distanceTolerance\n        );\n        if (null === breaks) {\n            return null;\n        }\n\n        const spans: Span[] = [];\n\n        {\n            const horCurve = alignmentCurve.horizontalCurve();\n            let horizontalDistance = horCurve.startAlongDistance();\n            for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\n                breaks.push(new AlignmentBreak(horizontalDistance, false, false, index));\n                const curve = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\n                const segLength = curve.segmentLength();\n                horizontalDistance = horizontalDistance + segLength;\n            }\n\n            // end the horizontal too.\n            breaks.push(new AlignmentBreak(horizontalDistance, false, false, -1));\n\n            breaks.sort((a, b) => {\n                if (a.Distance < b.Distance) {\n                    return -1;\n                }\n\n                if (a.Distance > b.Distance) {\n                    return 1;\n                }\n\n                return 0;\n            });\n        }\n\n        {\n            let verticalIndex = -1;\n            let horizontalIndex = -1;\n            let hasStart = false;\n            let horizontalDistance = Number.MIN_VALUE;\n\n            for (let i = 0, l = breaks.length; i < l; i++) {\n                const b = breaks[i];\n                if (hasStart) {\n                    if (horizontalIndex !== -1 || verticalIndex !== -1) {\n                        if (b.Distance - horizontalDistance > distanceTolerance) {\n                            spans.push(\n                                new Span(\n                                    horizontalIndex !== -1,\n                                    verticalIndex !== -1,\n                                    horizontalIndex,\n                                    verticalIndex,\n                                    horizontalDistance,\n                                    b.Distance - horizontalDistance\n                                )\n                            );\n                        }\n                    }\n                }\n\n                if (b.IsVertical) {\n                    verticalIndex = b.CurveIndex;\n                } else {\n                    horizontalIndex = b.CurveIndex;\n                }\n\n                hasStart = true;\n                horizontalDistance = b.Distance;\n            }\n        }\n        return spans;\n    }\n\n    static buildVerticalBreaks(\n        verticalCurve: Fbs.VerticalCurve,\n        distanceTolerance: number\n    ): AlignmentBreak[] {\n        if (verticalCurve.segmentTypesLength() === 0) {\n            return null;\n        }\n\n        const alignmentBreaks: AlignmentBreak[] = [];\n\n        let previousEnd = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(\n            verticalCurve,\n            0\n        ).startDistAlong();\n\n        for (let i = 0, l = verticalCurve.segmentTypesLength(); i < l; i++) {\n            const curve = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(verticalCurve, i);\n\n            const overlap = previousEnd - curve.startDistAlong();\n\n            if (overlap > distanceTolerance) {\n                // fit values, use previousEnd as the position for this.\n                // is any of this valid anymore?\n                const usableSegmentLength = curve.horizontalLength() - overlap;\n                if (usableSegmentLength > distanceTolerance) {\n                    alignmentBreaks.push(new AlignmentBreak(previousEnd, true, true, i));\n                    previousEnd += usableSegmentLength;\n                }\n            } else if (overlap < -distanceTolerance) {\n                // add gap\n                alignmentBreaks.push(new AlignmentBreak(previousEnd, true, false, -1));\n\n                // add segment.\n                alignmentBreaks.push(new AlignmentBreak(curve.startDistAlong(), true, true, i));\n                previousEnd = curve.startDistAlong() + curve.horizontalLength();\n            } else {\n                // use as it is.\n                alignmentBreaks.push(new AlignmentBreak(curve.startDistAlong(), true, true, i));\n                previousEnd = curve.startDistAlong() + curve.horizontalLength();\n            }\n        }\n\n        alignmentBreaks.push(new AlignmentBreak(previousEnd, true, false, -1));\n\n        return alignmentBreaks;\n    }\n}\n\nexport class AlignmentBreak {\n    constructor(distance: number, isVertical: boolean, hasCurve: boolean, curveIndex: number) {\n        this.Distance = distance;\n        this.IsVertical = isVertical;\n        this.HasCurve = hasCurve;\n        this.CurveIndex = curveIndex;\n    }\n\n    Distance: number;\n    IsVertical: boolean;\n    HasCurve: boolean;\n    CurveIndex: number;\n}\n\nexport class Span {\n    instanceId: number;\n    first: boolean;\n    last: boolean;\n\n    constructor(\n        public hasHorizontalCurve: boolean,\n        public hasVerticalCurve: boolean,\n        public horizontalCurveIndex: number,\n        public verticalCurveIndex: number,\n        public startDistance: number,\n        public horizontalLength: number\n    ) { }\n}\n","import {Box3, Frustum, Matrix4, Plane, Vector3} from \"three\";\n\nexport class FrustumHelper {\n    static transformFrustum(frustum: Frustum, matrix: Matrix4, out: Frustum = new Frustum()): Frustum {\n        for (let i = 0; i < out.planes.length; i++)\n            out.planes[i].copy(frustum.planes[i]).applyMatrix4(matrix);\n        return out;\n    }\n\n    static planesIntersectBoxInternal = (() => {\n        const point = new Vector3();\n\n        return (planes: Plane[], box: Box3, contain: boolean) => {\n            for (let i = 0, length = planes.length; i < length; i++) {\n                const normal = planes[i].normal;\n                point.set(\n                    (normal.x >= 0.0) !== contain ? box.max.x : box.min.x,\n                    (normal.y >= 0.0) !== contain ? box.max.y : box.min.y,\n                    (normal.z >= 0.0) !== contain ? box.max.z : box.min.z\n                );\n                if (planes[i].distanceToPoint(point) < 0)\n                    return false;\n            }\n            return true;\n        };\n    })();\n\n    static planesIntersectBox(planes: Plane[], box: Box3): boolean {\n        return FrustumHelper.planesIntersectBoxInternal(planes, box, false);\n    }\n\n    static planesContainBox(planes: Plane[], box: Box3): boolean {\n        return FrustumHelper.planesIntersectBoxInternal(planes, box, true);\n    }\n\n    public static insideNonIntersectingPlanes(point: Vector3, clipPlanes: Plane[]): boolean {\n        let insideClipPlanes = true;\n        for (const clipPlane of clipPlanes)\n            insideClipPlanes = insideClipPlanes && clipPlane.distanceToPoint(point) > 0;\n        return insideClipPlanes;\n    }\n}\n","import {Trimble} from \"../TrimBim_generated\";\nimport {TrimbimGeometryType, WorkerCamera} from \"../common\";\nimport {GeometryBuilder, GeometryData} from \"./GeometryBuilders/GeometryBuilder\";\nimport {\n    BRepGeometryBuilder,\n    BRepWithNormalsGeometryBuilder,\n    BRepWithUVGeometryBuilder\n} from \"./GeometryBuilders/BRepGeometryBuilder\";\nimport {\n    Mesh8GeometryBuilder,\n    Mesh8TexturedGeometryBuilder,\n    MeshGeometryBuilder,\n    MeshTexturedGeometryBuilder\n} from \"./GeometryBuilders/MeshGeometryBuilder\";\nimport {GraphicsGeometryBuilder} from \"./GeometryBuilders/GraphicsGeometryBuilder\";\nimport {SweptDiskSolidGeometryBuilder} from \"./GeometryBuilders/SweptDiskSolidGeometryBuilder\";\nimport {GridGeometryBuilder} from \"./GeometryBuilders/GridGeometryBuilder\";\nimport {\n    BillboardTextGeometryBuilder,\n    TexturedBillboardGeometryBuilder\n} from \"./GeometryBuilders/BillboardGeometryBuilder\";\nimport {GeometryUpdateMessenger} from \"./GeometryUpdateMessenger\";\nimport {ActionType, BatchState, AddGeometryBatchAction, RemoveGeometryBatchAction, SetBatchStateAction, IUserData, ObjectType} from \"../Model/ModelBuilderTypes\";\nimport {Box3, Frustum, MathUtils, Matrix4, Plane, Ray, Vector3} from \"three\";\nimport {TrimbimUtils} from \"./TrimbimUtils\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {Checksum} from \"@technology/webgl-viewer/dist/esnext/Helpers/Checksum\";\nimport {HitPoint} from \"./HitPoint\";\nimport {LayerManager} from \"./LayerManager\";\nimport {EntityHierarchyState} from \"./EntityHierarchyState\";\nimport {ModelState} from \"./ModelState\";\nimport {AlignmentGeometryBuilder} from \"./GeometryBuilders/AlignmentGeometryBuilder\";\nimport {GeometryType, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {getPerspectiveViewWorldSize, iterate} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\nimport {LineGeometryBuilder} from \"./GeometryBuilders/LineGeometryBuilder\";\nimport {TextureManager} from \"./TextureManager\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {FrustumHelper} from \"@technology/webgl-viewer/dist/esnext/Helpers/FrustumHelper\";\n\nexport interface InstanceGeometry {\n    instanceId: number;\n    geometries: GeometryData | GeometryData[];\n    materialId: number;\n    transform: Matrix4;\n    boundingBox: Box3;\n}\n\nexport class GeometryManager {\n    protected geometryBuilders = new Map<TrimbimGeometryType, GeometryBuilder>();\n    protected geometry: Fbs.ModelGeometry;\n    protected entities: Fbs.ModelEntities;\n    private messenger: GeometryUpdateMessenger;\n\n    protected camera: WorkerCamera;\n    private visibilityPlanes: Plane[];\n    private previousCameraDirection = new Vector3();\n    private previousCameraPosition = new Vector3();\n    private instancesProcessedForCurrentCamera = 0;\n    private instanceIndex = 0;\n    updateFinished = false;\n\n    protected instanceState: ModelState;\n    protected instance = new Fbs.GeometryInstance();\n    protected definition = new Fbs.GeometryDefinition();\n    protected readonly instancesLength: number;\n    protected instanceIdsSortedBySize: Int32Array;\n    private readonly geometryStateFull = [{ start: 0, count: Infinity }];\n    protected checksum = new Checksum();\n\n    constructor(\n        private modelId: string,\n        messenger: AbstractWorkerMessenger,\n        private model: Fbs.Model,\n        protected boundingBoxManager: BoundingBoxManager,\n        protected entityState: EntityHierarchyState,\n        private layerManager: LayerManager,\n        protected textureManager: TextureManager,\n        protected materialIdMap: number[]\n    ) {\n        this.messenger = new GeometryUpdateMessenger(modelId, messenger);\n        this.geometry = model.geometry();\n        this.entities = model.entities();\n        this.instancesLength = this.geometry.instancesLength();\n        this.instanceState = new ModelState(this.instancesLength);\n        this.instanceIdsSortedBySize = new Int32Array(this.instancesLength);\n\n        this.registerGeometryBuilders();\n        this.sortInstancesBySize();\n    }\n\n    private registerGeometryBuilders(): void {\n        this.registerGeometryBuilder(new BRepGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new BRepWithNormalsGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new BRepWithUVGeometryBuilder(this.modelId, this.geometry));\n\n        this.registerGeometryBuilder(new MeshGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new Mesh8GeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new MeshTexturedGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new Mesh8TexturedGeometryBuilder(this.modelId, this.geometry));\n\n        this.registerGeometryBuilder(new GraphicsGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new SweptDiskSolidGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new GridGeometryBuilder(this.modelId, this.geometry, this.textureManager));\n        this.registerGeometryBuilder(new TexturedBillboardGeometryBuilder(this.modelId, this.geometry));\n        this.registerGeometryBuilder(new BillboardTextGeometryBuilder(this.modelId, this.geometry, this.textureManager));\n        this.registerGeometryBuilder(new AlignmentGeometryBuilder(this.modelId, this.geometry));\n    }\n\n    async createGeometryPrototypes(): Promise<void> {\n        for (const gb of this.geometryBuilders.values())\n            await gb.createGeometryPrototypes();\n    }\n\n    private registerGeometryBuilder(handler: GeometryBuilder): void {\n        this.geometryBuilders.set(handler.geometryType, handler);\n    }\n\n    private sortInstancesBySize(): void {\n        for (let i = 0; i < this.instancesLength; i++)\n            this.instanceIdsSortedBySize[i] = i;\n        this.instanceIdsSortedBySize.sort((a, b) => this.boundingBoxManager.getSize(b) - this.boundingBoxManager.getSize(a));\n    }\n\n    updateLoop(timestamp: number): void {\n        if (this.instancesProcessedForCurrentCamera < this.instancesLength && this.camera) {\n            // process X or more instances during Y ms\n            for (let i = 0; i < this.instancesLength && (performance.now() - timestamp < 10 || i < 50); i++) {\n                // update larger instances first (index is restarted on camera update)\n                this.updateInstanceGeometry(this.instanceIdsSortedBySize[this.instanceIndex]);\n                this.instanceIndex++;\n                if (this.instanceIndex >= this.instancesLength) this.instanceIndex = 0;\n                this.instancesProcessedForCurrentCamera++;\n            }\n        }\n        if (this.instancesProcessedForCurrentCamera >= this.instancesLength && !this.updateFinished) {\n            this.messenger.send({ actionType: ActionType.UPDATE_FINISHED, modelId: this.modelId });\n            this.updateFinished = true;\n        }\n    }\n\n    protected updateInstanceState(instanceId: number, lodLevel: number, force: boolean = false): void {\n        const entityId = this.getEntityId(instanceId);\n\n        const visible = this.entityState.isVisibleByHierarchy(entityId);\n        const shownVisibilityState = this.instanceState.isVisible(instanceId);\n        const selected = this.entityState.isSelectedByHierarchy(entityId);\n        const shownSelectionState = this.instanceState.isSelected(instanceId);\n        const hovered = this.entityState.isHoveredByHierarchy(entityId);\n        const shownHoverState = this.instanceState.isHovered(instanceId);\n        const customMaterialId = this.entityState.getCustomMaterialIdByHierarchy(entityId);\n        const shownCustomMaterialId = this.instanceState.getCustomMaterialId(instanceId);\n\n        if (visible !== shownVisibilityState ||\n            selected !== shownSelectionState ||\n            hovered !== shownHoverState ||\n            customMaterialId !== shownCustomMaterialId ||\n            force\n        ) this.setInstanceState(instanceId, visible, selected, hovered, customMaterialId, lodLevel);\n    }\n\n    private isVisible(instanceId: number): boolean {\n        return this.isVisibleByCamera(instanceId) &&\n            this.isVisibleByState(instanceId);\n    }\n\n    private isVisibleByCamera(instanceId: number): boolean {\n        const transformedBox = this.boundingBoxManager.getTransformedBoundingBox(instanceId);\n        return this.isVisibleByClipPlanes(transformedBox) &&\n            this.isVisibleByCameraDistance(instanceId, transformedBox);\n    }\n\n    protected isVisibleByClipPlanes(transformedBox: Box3): boolean {\n        return FrustumHelper.planesIntersectBox(this.visibilityPlanes, transformedBox);\n    }\n\n    protected isVisibleByCameraDistance(instanceId: number, transformedBox: Box3): boolean {\n        const diagonal = this.boundingBoxManager.getSize(instanceId);\n\n        // billboards\n        if (diagonal === 0) return true;\n\n        const distance = transformedBox.distanceToPoint(this.camera.position);\n        const pixelSize = this.getApproxPixelSize(diagonal, distance);\n\n        if (diagonal > 2) return pixelSize > 5;\n        return pixelSize > 20;\n    }\n\n    protected isVisibleByState(instanceId: number): boolean {\n        this.geometry.instances(instanceId, this.instance);\n        return this.entityState.isVisibleByHierarchy(this.instance.entityId()) &&\n            this.layerManager.isVisible(this.instance.layerId());\n    }\n\n    protected getApproxPixelSize = (() => {\n        let perspectiveViewWorldSize: number\n        let prevCameraFov: number;\n\n        return (size: number, distance: number): number => {\n            if (this.camera.fieldOfView !== prevCameraFov) {\n                perspectiveViewWorldSize = getPerspectiveViewWorldSize(this.camera.fieldOfView, 1);\n                prevCameraFov = this.camera.fieldOfView;\n            }\n\n            const screenSize = size / (perspectiveViewWorldSize * distance);\n            return screenSize * this.camera.resolution;\n        }\n    })();\n\n    setCamera(camera: WorkerCamera): void {\n        this.camera = camera;\n        if (camera.trimbimSettings.geometryCacheSize !== undefined)\n            GeometryBuilder.maxCacheSize = camera.trimbimSettings.geometryCacheSize;\n        this.forceUpdate();\n        this.restartInstanceIndex();\n        if (this.camera.clipPlanes) {\n            this.visibilityPlanes = [...this.camera.frustum.planes];\n            this.visibilityPlanes.push(...this.camera.clipPlanes);\n        }\n        else {\n            this.visibilityPlanes = this.camera.frustum.planes;\n        }\n    }\n\n    private restartInstanceIndex(): void {\n        // restart instance index to process large instances first\n        // in case if camera is changed significantly\n        const direction = this.camera.frustum.planes[4].normal;\n        if (direction.angleTo(this.previousCameraDirection) > 10 * MathUtils.DEG2RAD) {\n            this.instanceIndex = 0;\n            this.previousCameraDirection.copy(direction);\n        }\n        if (this.camera.position.distanceToSquared(this.previousCameraPosition) > 20 * 20) {\n            this.instanceIndex = 0;\n            this.previousCameraPosition.copy(this.camera.position);\n        }\n    }\n\n    forceUpdate(): void {\n        this.updateFinished = false;\n        this.instancesProcessedForCurrentCamera = 0;\n        this.messenger.removePendingUpdateFinishedAction();\n    }\n\n    forceStateUpdate(entityIds: number[]): void {\n        if (entityIds && this.camera) {\n            for (const entityId of entityIds) {\n                const instanceIds = this.boundingBoxManager.getEntityInstanceIds(entityId);\n                if (instanceIds) {\n                    for (const instanceId of instanceIds)\n                        this.updateInstanceGeometry(instanceId);\n                }\n            }\n        }\n        this.forceUpdate();\n    }\n\n    /**\n     * Creates an InstanceGeometry object for the given instance, and populates it with meta data.\n     * Does not build the geometry.\n     */\n    protected getEmptyInstanceGeometry = (() => {\n        const transform = new Matrix4();\n        const boundingBox = new Box3();\n        const instanceGeometry = {} as InstanceGeometry;\n\n        return (\n            instanceId: number,\n            trbInstance: Fbs.GeometryInstance,\n            trbDefinition: Fbs.GeometryDefinition\n        ): InstanceGeometry => {\n            TrimbimUtils.getTransform(trbInstance, this.entities, this.geometry, transform);\n            TrimbimUtils.getBoundingBox(trbDefinition, boundingBox);\n\n            instanceGeometry.instanceId = instanceId;\n            instanceGeometry.materialId = this.materialIdMap[trbInstance.surfaceMaterialId()];\n            instanceGeometry.transform = transform;\n            instanceGeometry.boundingBox = boundingBox;\n            delete instanceGeometry.geometries;\n\n            return instanceGeometry;\n        }\n    })();\n\n    setEntityTransform(entityId: number, firstInstanceGlobalTransform: Matrix4): void {\n        // TODO: make this method to take entity global transform as a parameter, instead of instance transform\n\n        // find first instance\n        for (let i = 0; i < this.instancesLength; i++) {\n            this.geometry.instances(i, this.instance);\n            if (this.instance.entityId() === entityId) break;\n        }\n        const instancePlacement = this.geometry.localPlacements(this.instance.localPlacementId())\n        const instanceTransform = TrimbimUtils.placementToMatrix4(instancePlacement, new Matrix4());\n        firstInstanceGlobalTransform.multiply(instanceTransform.invert());\n        TrimbimUtils.setTransform(entityId, this.entities, firstInstanceGlobalTransform);\n\n        // update cached bounding boxes\n        for (let i = 0; i < this.instancesLength; i++) {\n            if (this.instance.entityId() === entityId) {\n                this.boundingBoxManager.calculateTransformedBoundingBox(i);\n            }\n        }\n    }\n\n    protected getGeometryId(instanceId: number, geometryIndex: number, lodLevel: number): number {\n        return this.checksum.clear().add(instanceId).add(geometryIndex).add(lodLevel).get();\n    }\n\n    protected updateInstanceGeometry(instanceId: number): void {\n        if (this.isVisible(instanceId)) {\n            if (this.instanceState.isVisible(instanceId))\n                this.updateInstanceState(instanceId, 0);\n            else\n                this.showInstanceGeometry(instanceId, 0);\n        }\n        else if (this.instanceState.isVisible(instanceId)) {\n            this.hideInstanceGeometry(instanceId, 0);\n        }\n    }\n\n    /**\n     * Shows the given instance, building it if necessary and requests the main thread to add it to\n     * the scene, with its corresponding state.\n     */\n    protected showInstanceGeometry(instanceId: number, lodLevel: number): void {\n        const ig = this.getInstanceGeometry(instanceId, lodLevel);\n        if (ig.geometries) {\n            const entityId = this.getEntityId(instanceId);\n            const isVisible = this.entityState.isVisibleByHierarchy(entityId);\n            const isSelected = this.entityState.isSelectedByHierarchy(entityId);\n            const isHovered = this.entityState.isHoveredByHierarchy(entityId);\n            const customMaterialId = this.entityState.getCustomMaterialIdByHierarchy(entityId);\n\n            const state = this.createBatchState(instanceId, isVisible, isSelected, isHovered, customMaterialId);\n            iterate(ig.geometries, (g, i) => {\n                this.addGeometry(this.getGeometryId(instanceId, i, lodLevel), g, undefined, ig.materialId, ig.transform, ig.boundingBox, state, entityId, true);\n            });\n        }\n    }\n\n    protected getInstanceGeometry(instanceId: number, lodLevel: number): InstanceGeometry {\n        this.geometry.instances(instanceId, this.instance);\n        this.geometry.definitions(this.instance.definitionId(), this.definition);\n        const instanceGeometry = this.getEmptyInstanceGeometry(instanceId, this.instance, this.definition);\n\n        const geometryBuilder = this.geometryBuilders.get(this.definition.type());\n        if (geometryBuilder)\n            instanceGeometry.geometries = geometryBuilder.getGeometries(this.definition.index(), true);\n\n        return instanceGeometry;\n    }\n\n    protected setInstanceState(\n        instanceId: number,\n        visible: boolean, selected: boolean, hovered: boolean,\n        customMaterialId: number,\n        lodLevel: number\n    ): void {\n        const state = this.createBatchState(instanceId, visible, selected, hovered, customMaterialId);\n\n        const definitionId = this.geometry.instances(instanceId, this.instance).definitionId();\n        this.geometry.definitions(definitionId, this.definition);\n        const geometries = this.geometryBuilders.get(this.definition.type()).getGeometries(this.definition.index(), false);\n        iterate(geometries, (geometry, i) => {\n            this.sendGeometryState(this.getGeometryId(instanceId, i, lodLevel), geometry.objectType, this.materialIdMap[this.instance.surfaceMaterialId()], geometry.textureId, state);\n        });\n    }\n\n    private createBatchState(instanceId: number, isVisible: boolean, isSelected: boolean, isHovered: boolean, customMaterialId: number): BatchState {\n        this.instanceState.setVisible(instanceId, isVisible);\n        this.instanceState.setSelected(instanceId, isSelected);\n        this.instanceState.setHovered(instanceId, isHovered);\n        this.instanceState.setCustomMaterialId(instanceId, customMaterialId);\n        return {\n            visible: isVisible && customMaterialId === 0 ? this.geometryStateFull : undefined,\n            selected: isSelected ? this.geometryStateFull : undefined,\n            hovered: isHovered ? this.geometryStateFull : undefined,\n            customMaterialIds: customMaterialId !== 0 ? new Map([[customMaterialId, this.geometryStateFull]]) : undefined\n        } as BatchState;\n    }\n\n    protected getEntityId(instanceId: number): number {\n        return this.geometry.instances(instanceId, this.instance).entityId();\n    }\n\n    protected sendGeometryState(batchId: number, objectType: ObjectType, materialId: number, textureId: number, state: BatchState): void {\n        this.messenger.send({\n            actionType: ActionType.SET_BATCH_STATE,\n            modelId: this.modelId,\n            batchId: batchId,\n            objectType: objectType,\n            materialId: materialId,\n            textureId: textureId,\n            state: state\n        } as SetBatchStateAction);\n    }\n\n    protected addGeometry(batchId: number, geometry: GeometryData, instanceIds: Float32Array, materialId: number, transform: Matrix4, boundingBox: Box3, state: BatchState, entityId?: number, cloneBuffers: boolean = false): void {\n        const positions = cloneBuffers && geometry.positions ? new Float32Array(geometry.positions) : geometry.positions; // only 32 bit arrays supported by WebGL\n        const normals = cloneBuffers && geometry.normals ? new Int16Array(geometry.normals) : geometry.normals;\n        const indices = cloneBuffers && geometry.indices ? geometry.indices.slice() : geometry.indices; // using slice to be same type array\n        const uvs = cloneBuffers && geometry.uvs ? new Float32Array(geometry.uvs) : geometry.uvs;\n        const pointUvs = cloneBuffers && geometry.pointUvs ? new Float32Array(geometry.pointUvs) : geometry.pointUvs;\n        const pointSizes = cloneBuffers && geometry.pointSizes ? new Float32Array(geometry.pointSizes) : geometry.pointSizes;\n        const ids = cloneBuffers && instanceIds ? new Float32Array(instanceIds) : instanceIds;\n\n        this.messenger.send({\n            actionType: ActionType.ADD_BATCH,\n            modelId: this.modelId,\n            objectType: geometry.objectType,\n            batchId: batchId,\n            userData: { id: batchId, entityId: entityId } as IUserData,\n            state: state,\n            indices: indices,\n            positions: positions,\n            normals: normals,\n            uvs: uvs,\n            pointUvs: pointUvs,\n            pointSizes: pointSizes,\n            ids: ids,\n            materialId: materialId,\n            textureId: geometry.textureId,\n            transform: transform.clone(),\n            boundingBox: boundingBox.clone()\n        } as AddGeometryBatchAction)\n    }\n\n    protected hideInstanceGeometry(instanceId: number, lodLevel: number): void {\n        this.instanceState.setVisible(instanceId, false);\n        const definitionId = this.geometry.instances(instanceId, this.instance).definitionId();\n        this.geometry.definitions(definitionId, this.definition);\n        const geometries = this.geometryBuilders.get(this.definition.type()).getGeometries(this.definition.index(), false);\n        iterate(geometries, (g, i) => {\n            this.removeGeometry(this.getGeometryId(instanceId, i, lodLevel));\n        });\n    }\n\n    protected removeGeometry(batchId: number): void {\n        this.messenger.send({\n            actionType: ActionType.REMOVE_BATCH,\n            modelId: this.modelId,\n            batchId: batchId,\n            userData: { id: batchId } as IUserData,\n        } as RemoveGeometryBatchAction);\n    }\n\n    getIsMesh(geometryType: TrimbimGeometryType): boolean {\n        return this.geometryBuilders.has(geometryType) && this.geometryBuilders.get(geometryType).snapGeometryType === GeometryType.MESH;\n    }\n\n    public pick(definition: Fbs.GeometryDefinition, snapType: SnapType, ray: Ray, frustum: Frustum): HitPoint[] {\n        const type: number = definition.type();\n        const geometryIndex: number = definition.index();\n\n        const gb = this.geometryBuilders.get(type);\n        if (gb === undefined) return [];\n        const points = snapType === SnapType.POINT ? gb.pickPoint(geometryIndex, ray, frustum) :\n            snapType === SnapType.LINE ? gb.pickLine(geometryIndex, ray, frustum) :\n            snapType === SnapType.FACE ? gb.pickFace(geometryIndex, ray, frustum) :\n            gb.pick(geometryIndex, ray, frustum);\n        if (points) {\n            for (const p of points)\n                p.snapGeometryType = gb.snapGeometryType;\n        }\n        return points;\n    }\n\n    pickOnLine(instanceId: number, ray: Ray): HitPoint {\n        this.geometry.instances(instanceId, this.instance);\n        this.geometry.definitions(this.instance.definitionId(), this.definition);\n\n        let hit: HitPoint = undefined;\n        const gb = this.geometryBuilders.get(this.definition.type());\n        if (gb instanceof LineGeometryBuilder) {\n            let minRayDistSq = Infinity;\n            gb.pickLineWithCallback(this.definition.index(), ray, (pointOnRay, pointOnSegment, start, end, rayDistanceSq) => {\n                if (!hit) hit = {point: undefined};\n                if (rayDistanceSq < minRayDistSq) {\n                    minRayDistSq = rayDistanceSq;\n                    hit.point = pointOnSegment.clone();\n                    hit.snapLineStart = start.clone();\n                    hit.snapLineEnd = end.clone();\n                }\n            })\n        }\n        else {\n            throw new Error(\"Unable to pick on line of non line geometry\");\n        }\n        return hit;\n    }\n\n    getEntityIdsWithGeometry(): number[] {\n        const entityIds = new Set<number>();\n        for (let instanceId = 0; instanceId < this.instancesLength; instanceId++) {\n            this.geometry.instances(instanceId, this.instance);\n            entityIds.add(this.instance.entityId());\n        }\n        return Array.from(entityIds);\n    }\n\n    dispose(): void {\n        this.messenger.dispose();\n        for (const gb of this.geometryBuilders.values()) gb.dispose();\n    }\n}\n","import {Trimble} from \"../TrimBim_generated\";\nimport {Box3, Frustum, Matrix4, Plane, Ray, Vector3} from \"three\";\nimport {TrimbimUtils} from \"./TrimbimUtils\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {FrustumHelper} from \"@technology/webgl-viewer/dist/esnext/Helpers/FrustumHelper\";\n\nexport class BoundingBoxManager {\n    modelBoundingBox = new Box3();\n\n    private geometry: Fbs.ModelGeometry;\n    private entities: Fbs.ModelEntities;\n    private instanceTransformedBoxes: Float64Array;\n    private instanceSizes: Float32Array;\n    private instanceWidths: Float32Array;\n    private box = new Box3();\n    private instance = new Fbs.GeometryInstance();\n    private definition = new Fbs.GeometryDefinition();\n    private vector3 = new Vector3();\n    private transform = new Matrix4();\n    private entityToInstance: number[][];\n\n    constructor(model: Fbs.Model) {\n        this.geometry = model.geometry();\n        this.entities = model.entities();\n        this.instanceTransformedBoxes = new Float64Array(this.geometry.instancesLength() * 6);\n        this.instanceSizes = new Float32Array(this.geometry.instancesLength());\n        this.instanceWidths = new Float32Array(this.geometry.instancesLength());\n        this.calculateBoxes();\n        this.analyzeInstances();\n    }\n\n    private analyzeInstances(): void {\n        this.entityToInstance = new Array(this.entities.entitiesLength());\n\n        const instancesLength = this.geometry.instancesLength();\n        const instance = new Fbs.GeometryInstance();\n        const definition = new Fbs.GeometryDefinition();\n\n        for (let i = 0; i < instancesLength; i++) {\n            this.geometry.instances(i, instance);\n            this.geometry.definitions(instance.definitionId(), definition);\n\n            const entityId = instance.entityId();\n            let instanceIds = this.entityToInstance[entityId];\n            if (!instanceIds) {\n                instanceIds = [];\n                this.entityToInstance[entityId] = instanceIds;\n            }\n            instanceIds.push(i);\n        }\n    }\n\n    private calculateBoxes(): void {\n        for (let instanceId = 0; instanceId < this.geometry.instancesLength(); instanceId++) {\n            this.geometry.instances(instanceId, this.instance);\n            this.geometry.definitions(this.instance.definitionId(), this.definition);\n            TrimbimUtils.getBoundingBox(this.definition, this.box);\n\n            const size = this.box.getSize(this.vector3);\n            this.instanceSizes[instanceId] = size.length();\n\n            // Sorting the size vector to find the second largest dimension (width):\n            if (size.x > size.y) size.set(size.y, size.x, size.z);\n            if (size.y > size.z) size.set(size.x, size.z, size.y);\n            if (size.x > size.y) size.set(size.y, size.x, size.z);\n            this.instanceWidths[instanceId] = size.y;\n\n            this.calculateTransformedBoundingBox(instanceId);\n        }\n    }\n\n    getEntityInstanceIds(entityId: number): number[] {\n        return this.entityToInstance[entityId];\n    }\n\n    calculateTransformedBoundingBox(instanceId: number): void {\n        this.geometry.instances(instanceId, this.instance);\n        this.geometry.definitions(this.instance.definitionId(), this.definition);\n\n        TrimbimUtils.getTransform(this.instance, this.entities, this.geometry, this.transform);\n        TrimbimUtils.getBoundingBox(this.definition, this.box);\n        this.box.applyMatrix4(this.transform);\n        this.modelBoundingBox.union(this.box);\n        this.setTransformedBoundingBox(instanceId, this.box);\n    }\n\n    private setTransformedBoundingBox(instanceId: number, box: Box3): void {\n        box.min.toArray(this.instanceTransformedBoxes, instanceId * 6);\n        box.max.toArray(this.instanceTransformedBoxes, instanceId * 6 + 3);\n    }\n\n    getTransformedBoundingBox(instanceId: number): Box3 {\n        this.box.min.fromArray(this.instanceTransformedBoxes, instanceId * 6);\n        this.box.max.fromArray(this.instanceTransformedBoxes, instanceId * 6 + 3);\n        return this.box;\n    }\n\n    /**\n     * Returns the size (diagonal) of an instance's local bounding box, which is an estimate for\n     * the size of the instance.\n     * @param instanceId The instance ID\n     */\n    getSize(instanceId: number): number {\n        return this.instanceSizes[instanceId];\n    }\n\n    /**\n     * Returns the width of an instance's local bounding box.\n     * The width here is defined as the second largest dimension of the box.\n     * @param instanceId The instance ID\n     */\n    getWidth(instanceId: number): number {\n        return this.instanceWidths[instanceId];\n    }\n\n    QueryRay(ray: Ray, clipPlanes: Plane[]): number[] {\n        const intersect = (box: Box3) => ray.intersectsBox(box);\n        const visible = clipPlanes && clipPlanes.length > 0 ?\n            (box: Box3) => FrustumHelper.planesIntersectBox(clipPlanes, box) : () => true;\n        return this.Query(intersect, visible);\n    }\n\n    QueryFrustum(frustum: Frustum, clipPlanes: Plane[], containedOnly: boolean = false): number[] {\n        const planes = [...frustum.planes];\n        if (clipPlanes) planes.push(...clipPlanes);\n        const intersect = containedOnly ?\n            (box: Box3) => FrustumHelper.planesContainBox(planes, box) :\n            (box: Box3) => FrustumHelper.planesIntersectBox(planes, box);\n        return this.Query(intersect, () => true);\n    }\n\n    private Query(intersectBox: (box: Box3) => boolean, visibleBox: (box: Box3) => boolean): number[] {\n        const result: number[] = [];\n        for (let i = 0; i < this.length; i++) {\n            const box = this.getTransformedBoundingBox(i);\n            if (intersectBox(box) && visibleBox(box)) result.push(i);\n        }\n        return result;\n    }\n\n    get length(): number {\n        return this.instanceTransformedBoxes.length / 6;\n    }\n}\n","import {Box3, Frustum, Matrix4, Plane, Ray, Vector3} from \"three\";\nimport { Trimble } from \"../TrimBim_generated\";\nimport { TrimbimPickPriority } from \"../common\";\nimport { Hit } from \"./HitPoint\";\nimport { LayerManager } from \"./LayerManager\";\nimport { BoundingBoxManager } from \"./BoundingBoxManager\";\nimport { GeometryManager } from \"./GeometryManager\";\nimport { TrimbimUtils } from \"./TrimbimUtils\";\nimport { EntityHierarchyState } from \"./EntityHierarchyState\";\nimport {GeometryType, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {FrustumHelper} from \"@technology/webgl-viewer/dist/esnext/Helpers/FrustumHelper\";\n\nexport class PickManager {\n    private _geometry: Fbs.ModelGeometry;\n    private entities: Fbs.ModelEntities;\n\n    private instance = new Fbs.GeometryInstance();\n    private definition = new Fbs.GeometryDefinition();\n    private backClipPlanePosition = new Vector3();\n    private backClipPlane = new Plane();\n\n    constructor(\n        model: Fbs.Model,\n        private boundingBoxManager: BoundingBoxManager,\n        private geometryManager: GeometryManager,\n        private entityState: EntityHierarchyState,\n        private layerManager: LayerManager,\n    ) {\n        this._geometry = model.geometry();\n        this.entities = model.entities();\n    }\n\n    private filterPickableInstances(instanceIds: number[], ignorePriority: boolean = false): number[] {\n        return instanceIds.filter(instanceId => {\n            this._geometry.instances(instanceId, this.instance);\n            return this.entityState.isVisibleByHierarchy(this.instance.entityId()) &&\n                (ignorePriority || this.entityState.getPickPriorityByHierarchy(this.instance.entityId()) !== TrimbimPickPriority.NO_PICK) &&\n                this.layerManager.isVisible(this.instance.layerId());\n        });\n    }\n\n    areaPick(frustum: Frustum, clipPlanes: Plane[], containedOnly: boolean): number[] {\n        const instanceIds = this.filterPickableInstances(this.boundingBoxManager.QueryFrustum(frustum, clipPlanes, containedOnly));\n        return instanceIds.map(id => {\n            this._geometry.instances(id, this.instance);\n            return this.instance.entityId();\n        });\n    }\n\n    pick(ray: Ray, frustum: Frustum, clipPlanes: Plane[], navigation: boolean = false): Hit {\n        let frustumPickIds = this.pickBoundingBoxes(frustum, clipPlanes, navigation);\n        if (frustumPickIds.length === 0)\n            return;\n\n        const rayPickIds = this.pickBoundingBoxes(ray, clipPlanes, navigation);\n\n        if (frustumPickIds.length > 500) {\n            frustumPickIds = rayPickIds.length > 0 ? rayPickIds : this.orderBoundingBoxesByRayOrigin(ray, frustumPickIds, 500);\n        }\n\n        const hits: Hit[] = [];\n        for (const instanceId of frustumPickIds) {\n            this._geometry.instances(instanceId, this.instance);\n            this._geometry.definitions(this.instance.definitionId(), this.definition);\n            const isMesh = this.geometryManager.getIsMesh(this.definition.type());\n\n            // do not perform geometry picking if mesh bounds are not ray picked (early optimization)\n            if (isMesh && !rayPickIds.includes(instanceId))\n                continue;\n\n            hits.push(...this.pickGeometry(instanceId, this.definition, this.instance, ray, frustum, undefined, clipPlanes));\n        }\n\n        // pick bounding boxes for navigation\n        if (navigation && hits.length === 0) {\n            for (const instanceId of frustumPickIds) {\n                const hit = this.pickBoundingBox(instanceId, ray);\n                if (hit) hits.push(hit);\n            }\n        }\n\n        if (hits.length === 0)\n            return;\n\n        const highPriorityHits = hits.filter(h => this.entityState.getPickPriorityByHierarchy(h.entityId) === TrimbimPickPriority.HIGH);\n        return highPriorityHits.length > 0 ? this.findClosestHit(highPriorityHits) : this.findClosestHit(hits);\n    }\n\n    pickSnapped(ray: Ray, frustum: Frustum, snapTypes: SnapType[], clipPlanes: Plane[]): Hit[] {\n        const tolerance = 0.001;\n        const hits: Hit[] = [];\n        const planes: Plane[] = [];\n        if (clipPlanes) planes.push(...clipPlanes);\n        const mainHit = this.pick(ray, frustum, clipPlanes);\n\n        if (!mainHit) {\n            return this.pickSnappedEdges(ray, frustum, snapTypes, clipPlanes);\n        }\n\n        this._geometry.instances(mainHit.instanceId, this.instance);\n        this._geometry.definitions(this.instance.definitionId(), this.definition);\n\n        // TODO: this code is very similar to Picker.pickSnapped, unify?\n        // use mainHit to create a clip plane that will prevent edges or points behind it from being selected\n        if (mainHit && mainHit.normal && this.definition.type() !== Fbs.GeometryType.SweptDiskSolid) {\n            this.backClipPlanePosition = mainHit.point.clone().sub(mainHit.normal.clone().multiplyScalar(tolerance));\n            this.backClipPlane.setFromNormalAndCoplanarPoint(mainHit.normal, this.backClipPlanePosition);\n            planes.push(this.backClipPlane);\n        }\n\n        for (const snapType of snapTypes) {\n            hits.push(...this.pickGeometry(mainHit.instanceId, this.definition, this.instance, ray, frustum, snapType, planes));\n        }\n\n        const nonFaceHits = this.pickSnappedEdges(ray, frustum, snapTypes, planes);\n\n        if (!nonFaceHits)\n            return hits;\n\n        return hits.concat(nonFaceHits);\n    }\n\n    pickOnLine = (() => {\n        const instance = new Fbs.GeometryInstance();\n        const localRay = new Ray();\n        const transform = new Matrix4();\n        const inverseTransform = new Matrix4();\n\n        return (entityId: number, ray: Ray): Hit => {\n            let hit: Hit = undefined;\n            let minRayDistSq = Infinity;\n            for (const instanceId of this.boundingBoxManager.getEntityInstanceIds(entityId)) {\n                this._geometry.instances(instanceId, instance)\n                TrimbimUtils.getTransform(instance, this.entities, this._geometry, transform);\n                inverseTransform.copy(transform).invert();\n                localRay.copy(ray).applyMatrix4(inverseTransform);\n\n                const hitPoint = this.geometryManager.pickOnLine(instanceId, localRay);\n                if (!hitPoint) continue;\n\n                const rayDistSq = localRay.distanceSqToPoint(hitPoint.point);\n                if (rayDistSq < minRayDistSq) {\n                    minRayDistSq = rayDistSq;\n                    hit = hitPoint as Hit;\n                    hit.instanceId = instanceId;\n                    hit.entityId = entityId;\n                    hit.point.applyMatrix4(transform);\n                    hit.snapLineStart.applyMatrix4(transform);\n                    hit.snapLineEnd.applyMatrix4(transform);\n                }\n            }\n            return hit;\n        };\n    })();\n\n    private pickSnappedEdges(ray: Ray, frustum: Frustum, snapTypes: SnapType[], clipPlanes: Plane[]): Hit[] {\n        const hits: Hit[] = [];\n        if (snapTypes.includes(SnapType.LINE) || snapTypes.includes(SnapType.POINT)) {\n            let frustumPickIds = this.pickBoundingBoxes(frustum, clipPlanes);\n\n            if (frustumPickIds.length > 200) { // if 200+ take only the closest 200 bounding boxes.\n                frustumPickIds = this.orderBoundingBoxesByRayOrigin(ray, frustumPickIds, 200);\n            }\n\n            for (const instanceId of frustumPickIds) {\n                this._geometry.instances(instanceId, this.instance);\n                this._geometry.definitions(this.instance.definitionId(), this.definition);\n                for (const snapType of snapTypes) {\n                    if (snapType !== SnapType.FACE)\n                        hits.push(...this.pickGeometry(instanceId, this.definition, this.instance, ray, frustum, snapType, clipPlanes));\n                }\n            }\n        }\n\n        if (hits.length === 0)\n            return;\n\n        for (const hit of hits) {\n            hit.distanceSqToRay = ray.distanceSqToPoint(hit.point);\n        }\n\n        return hits;\n    }\n\n    private pickBoundingBoxes(shape: Ray | Frustum, clipPlanes: Plane[], ignorePriority: boolean = false): number[] {\n        const instanceIds = shape instanceof Ray ?\n            this.boundingBoxManager.QueryRay(shape, clipPlanes) :\n            this.boundingBoxManager.QueryFrustum(shape, clipPlanes);\n        return this.filterPickableInstances(instanceIds, ignorePriority);\n    }\n\n    private orderBoundingBoxesByRayOrigin(ray: Ray, boundingBoxIds: number[], maxLength?: number): number[] {\n        const distances = [];\n        for (const id of boundingBoxIds) {\n            const bb = this.boundingBoxManager.getTransformedBoundingBox(id);\n            distances.push(bb.distanceToPoint(ray.origin));\n        }\n        const orderedIds = this.orderIdsByAssociatedValues(boundingBoxIds, distances);\n        if (maxLength && orderedIds.length > maxLength)\n            orderedIds.splice(maxLength);\n        return orderedIds;\n    }\n\n    private orderIdsByAssociatedValues(ids: number[], values: number[]): number[] {\n        return [...ids.keys()]                          // Indices 0,1,...,ids.length-1\n            .sort((a, b) => values[a] - values[b])      // Sorted by value\n            .map(i => ids[i]);                          // Mapped to id of index\n    }\n\n    private findClosestHit(hits: Hit[]): Hit {\n        return hits.reduce((h1, h2) => {\n            return (h1.distanceSqToRay && h2.distanceSqToRay) ?\n                (h1.distanceSqToRay / h1.cameraDistanceSq) < (h2.distanceSqToRay / h2.cameraDistanceSq) ? h1 : h2 :\n                h1.cameraDistanceSq < h2.cameraDistanceSq ? h1 : h2;\n        });\n    }\n\n    private pickBoundingBox(instanceId: number, ray: Ray): Hit {\n        const box = this.boundingBoxManager.getTransformedBoundingBox(instanceId);\n        this._geometry.instances(instanceId, this.instance);\n        const entityId = this.instance.entityId();\n\n        const point = new Vector3();\n        const rayDistSq = distanceSqRayToBox(ray, box, point);\n\n        // return empty if ray intersects box or box is behind ray origin, geometry pick will be used instead\n        if (rayDistSq === 0 || point.equals(ray.origin)) return;\n\n        return {\n            point: point,\n            instanceId: instanceId,\n            entityId: entityId,\n            snapGeometryType: GeometryType.MESH,\n            pickPriority: this.entityState.getPickPriorityByHierarchy(entityId),\n            distanceSqToRay: rayDistSq,\n            cameraDistanceSq: ray.origin.distanceToSquared(point)\n        } as Hit;\n    }\n\n    private pickGeometry = (() => {\n        const localRay = new Ray();\n        const localFrustum = new Frustum();\n        const transform = new Matrix4();\n        const inverseTransform = new Matrix4();\n\n        return (instanceId: number, definition: Fbs.GeometryDefinition, instance: Fbs.GeometryInstance, ray: Ray, frustum: Frustum, snapType: SnapType, clipPlanes: Plane[]): Hit[] => {\n            TrimbimUtils.getTransform(instance, this.entities, this._geometry, transform);\n            inverseTransform.copy(transform).invert();\n\n            localRay.copy(ray).applyMatrix4(inverseTransform);\n            FrustumHelper.transformFrustum(frustum, inverseTransform, localFrustum);\n            let hitsPoints = this.geometryManager.pick(definition, snapType, localRay, localFrustum);\n\n            if (hitsPoints && clipPlanes && clipPlanes.length > 0) {\n                const transformedPlanes = this.transformClipPlanes(clipPlanes, inverseTransform);\n                hitsPoints = hitsPoints.filter(hit => FrustumHelper.insideNonIntersectingPlanes(hit.point, transformedPlanes));\n            }\n\n            const hits: Hit[] = [];\n            if (hitsPoints) {\n                hitsPoints.forEach(h => {\n                    const hit = h as Hit;\n                    hit.point.applyMatrix4(transform);\n                    if (hit.normal) hit.normal.transformDirection(transform);\n                    hit.instanceId = instanceId;\n                    hit.entityId = instance.entityId();\n                    hit.pickPriority = this.entityState.getPickPriorityByHierarchy(hit.entityId);\n                    hit.cameraDistanceSq = ray.origin.distanceToSquared(hit.point);\n                    hit.snapType = snapType;\n                    if (hit.snapLineStart) hit.snapLineStart.applyMatrix4(transform);\n                    if (hit.snapLineEnd) hit.snapLineEnd.applyMatrix4(transform);\n                    hits.push(hit);\n                });\n            }\n            return hits;\n        };\n    })();\n\n    private transformClipPlanes(clipPlanes: Plane[], m: Matrix4): Plane[] {\n        if (clipPlanes) {\n            return clipPlanes.map(plane => {\n                const newPlane = new Plane().copy(plane);\n                return newPlane.applyMatrix4(m);\n            });\n        } else {\n            return [];\n        }\n    }\n}\n\nconst seg1 = new Vector3();\nconst seg2 = new Vector3();\nconst segHit = new Vector3();\n\nexport function distanceSqRayToBox(ray: Ray, box: Box3, point: Vector3): number {\n    if (ray.intersectBox(box, point))\n        return 0;\n\n    let distSq = Infinity;\n\n    const calcClosest = (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number) => {\n        seg1.set(x1, y1, z1);\n        seg2.set(x2, y2, z2);\n        const dSq = ray.distanceSqToSegment(seg1, seg2, segHit);\n        if (dSq < distSq) {\n            distSq = dSq;\n            point.copy(segHit);\n        }\n    };\n\n    /*\n      5____4\n    1/___0/|\n    | 6__|_7\n    2/___3/\n\n    0: max.x, max.y, max.z\n    1: min.x, max.y, max.z\n    2: min.x, min.y, max.z\n    3: max.x, min.y, max.z\n    4: max.x, max.y, min.z\n    5: min.x, max.y, min.z\n    6: min.x, min.y, min.z\n    7: max.x, min.y, min.z\n    */\n    const max = box.max;\n    const min = box.min;\n\n    calcClosest(max.x, max.y, max.z,   min.x, max.y, max.z); // 0-1\n    calcClosest(min.x, max.y, max.z,   min.x, min.y, max.z); // 1-2\n    calcClosest(min.x, min.y, max.z,   max.x, min.y, max.z); // 2-3\n    calcClosest(max.x, min.y, max.z,   max.x, max.y, max.z); // 3-0\n\n    calcClosest(max.x, max.y, min.z,   min.x, max.y, min.z); // 4-5\n    calcClosest(min.x, max.y, min.z,   min.x, min.y, min.z); // 5-6\n    calcClosest(min.x, min.y, min.z,   max.x, min.y, min.z); // 6-7\n    calcClosest(max.x, min.y, min.z,   max.x, max.y, min.z); // 7-4\n\n    calcClosest(max.x, max.y, max.z,   max.x, max.y, min.z); // 0-4\n    calcClosest(min.x, max.y, max.z,   min.x, max.y, min.z); // 1-5\n    calcClosest(min.x, min.y, max.z,   min.x, min.y, min.z); // 2-6\n    calcClosest(max.x, min.y, max.z,   max.x, min.y, min.z); // 3-7\n\n    return distSq;\n}\n\n","import {ModelState} from \"./ModelState\";\nimport { Trimble } from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {TrimbimPickPriority} from \"../common\";\nimport {HierarchyManager} from \"./HierarchyManager\";\nimport {StateType} from \"./WorkerMessages\";\n\nexport class EntityHierarchyState extends ModelState {\n    private hierarchyManager: HierarchyManager;\n\n    constructor(model: Fbs.Model, hierarchyManager: HierarchyManager) {\n        super(model.entities().entitiesLength());\n        this.state.fill(1 << StateType.VISIBILITY);\n        this.hierarchyManager = hierarchyManager;\n    }\n\n    getPickPriorityByHierarchy(entityId: number): TrimbimPickPriority {\n        return this.getValueByHierarchy(entityId,\n            id => this.getPickPriority(id),\n            id => this.getPickPriorityByHierarchy(id));\n    }\n\n    isSelectedByHierarchy(entityId: number): boolean {\n        return !!this.getValueByHierarchy(entityId,\n            id => this.isSelected(id),\n            id => this.isSelectedByHierarchy(id));\n    }\n\n    isVisibleByHierarchy(entityId: number): boolean {\n        return !this.getValueByHierarchy(entityId,\n            id => !this.isVisible(id),\n            id => !this.isVisibleByHierarchy(id));\n    }\n\n    isHoveredByHierarchy(entityId: number): boolean {\n        return !!this.getValueByHierarchy(entityId,\n            id => this.isHovered(id),\n            id => this.isHoveredByHierarchy(id));\n    }\n\n    getCustomMaterialIdByHierarchy(entityId: number): number {\n        // own material has priority\n        let value = this.getCustomMaterialId(entityId);\n        if (value) return value;\n\n        const parents = this.hierarchyManager.getDirectParents(entityId);\n        if (parents === undefined) return value;\n        else if (typeof parents === \"number\") return this.getCustomMaterialIdByHierarchy(parents);\n\n        for (const parentId of parents) {\n            value = this.getCustomMaterialIdByHierarchy(parentId);\n            if (value) return value;\n        }\n    }\n\n    private getValueByHierarchy(entityId: number, getValue: (entityId: number) => any, getValueByHierarchy:  (entityId: number) => any): any {\n        let value = getValue(entityId);\n        const parents = this.hierarchyManager.getDirectParents(entityId);\n        if (parents === undefined) return value;\n        else if (typeof parents === \"number\") return Math.max(value, getValueByHierarchy(parents));\n\n        for (const parentId of parents)\n            value = Math.max(value, getValueByHierarchy(parentId));\n        return value;\n    }\n}\n","import {HierarchyType} from \"../common\";\nimport { Trimble } from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {iterate} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\n\nexport class HierarchyManager {\n    private entities: Fbs.ModelEntities;\n    private node = new Fbs.HierarchyNode();\n    protected childToParents: Array<number[] | number>; // single number to avoid memory allocations and GC\n    protected childToParentsTypes: Array<HierarchyType[] | HierarchyType>;\n    protected parentToChildren: number[][];\n\n    constructor(model: Fbs.Model) {\n        this.entities = model.entities();\n        this.createCache();\n    }\n\n    protected createCache(): void {\n        this.childToParents = new Array(this.entities.entitiesLength());\n        this.childToParentsTypes = new Array(this.entities.entitiesLength());\n        this.parentToChildren = new Array(this.entities.entitiesLength());\n        for (let i = 0, l = this.entities.hierarchiesLength(); i < l; i++) {\n            this.entities.hierarchies(i, this.node);\n            const parents = this.childToParents[this.node.childElementId()] as number[];\n            const parentsTypes = this.childToParentsTypes[this.node.childElementId()] as number[];\n            if (parents === undefined && parentsTypes === undefined) {\n                this.childToParents[this.node.childElementId()] = this.node.parentElementId();\n                this.childToParentsTypes[this.node.childElementId()] = this.node.type();\n            }\n            else if (typeof parents === \"number\" && typeof parentsTypes === \"number\") {\n                this.childToParents[this.node.childElementId()] = [parents, this.node.parentElementId()];\n                this.childToParentsTypes[this.node.childElementId()] = [parentsTypes, this.node.type()];\n            }\n            else {\n                parents.push(this.node.parentElementId());\n                parentsTypes.push(this.node.type());\n            }\n\n            const children = this.parentToChildren[this.node.parentElementId()];\n            if (!children)\n                this.parentToChildren[this.node.parentElementId()] = [this.node.childElementId()];\n            else\n                children.push(this.node.childElementId());\n        }\n    }\n\n    getDirectParents(entityId: number): number[] | number {\n        return this.childToParents[entityId];\n    }\n\n    getDirectChildren(entityId: number): number[] {\n        return this.parentToChildren[entityId];\n    }\n\n    getRoots(type?: HierarchyType): number[] {\n        const rootIds = new Set<number>();\n        const childIds = new Set<number>();\n        for (let i = 0, l = this.entities.hierarchiesLength(); i < l; i++) {\n            this.entities.hierarchies(i, this.node);\n            if (type !== undefined && this.node.type() !== type) continue;\n\n            rootIds.add(this.node.parentElementId());\n            childIds.add(this.node.childElementId());\n        }\n        return Array.from(rootIds).filter(id => !childIds.has(id));\n    }\n\n    getParents(entityIds: number[], type?: HierarchyType, recursive?: boolean): number[] {\n        const result: number[] = [];\n        let ids = new Set<number>(entityIds);\n        let nextIds = new Set<number>();\n        let parentFound = true;\n\n        while (parentFound) {\n            parentFound = false;\n\n            for (const entityId of ids) {\n                const parents = this.childToParents[entityId];\n                if (parents) {\n                    const types = this.childToParentsTypes[entityId];\n                    iterate(parents, (parentId, i) => {\n                        const ht = Array.isArray(types) ? types[i] : types;\n                        if (type === undefined || ht === type) {\n                            result.push(parentId);\n                            nextIds.add(parentId);\n                            parentFound = true;\n                        }\n                    });\n                }\n            }\n\n            const tmp = ids;\n            ids = nextIds;\n            nextIds = tmp;\n            nextIds.clear();\n            if (!recursive) break;\n        }\n\n        return result;\n    }\n\n    getChildren(entityIds: number[], recursive: boolean): number[] {\n        const result = new Set<number>();\n\n        const addChildren = (entityId: number) => {\n            const children = this.parentToChildren[entityId];\n            if (children) {\n                children.forEach(c => {\n                    if (!result.has(c)) {\n                        result.add(c);\n                        if (recursive) addChildren(c);\n                    }\n                });\n            }\n        };\n        for (const entityId of entityIds)\n            addChildren(entityId);\n\n        return Array.from(result);\n    }\n}\n","import {GeometryManager, InstanceGeometry} from \"./GeometryManager\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {EntityHierarchyState} from \"./EntityHierarchyState\";\nimport {LayerManager} from \"./LayerManager\";\nimport {Trimble} from \"../TrimBim_generated\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\nimport {Box3, Vector3} from \"three\";\nimport {ObjectType} from \"../Model/ModelBuilderTypes\";\nimport {GeometryData} from \"./GeometryBuilders/GeometryBuilder\";\nimport {TextureManager} from \"./TextureManager\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\n\nexport enum LODLevel {\n    Full,\n    Line,\n    Hidden,\n}\n\nexport class LODingGeometryManager extends GeometryManager {\n    protected instanceIdToLODCapability: Uint8Array;    // A lookup table for instance ids to their LOD capability (1 = supports line LOD, 0 = does not support line LOD)\n    protected instanceIdToLODLevel: Uint8Array;  // A lookup table for instance ids to their current LOD level\n\n    constructor(\n        modelId: string,\n        messenger: AbstractWorkerMessenger,\n        model: Fbs.Model,\n        boundingBoxManager: BoundingBoxManager,\n        entityState: EntityHierarchyState,\n        layerManager: LayerManager,\n        textureManager: TextureManager,\n        materialIdMap: number[]\n    ) {\n        super(modelId, messenger, model, boundingBoxManager, entityState, layerManager, textureManager, materialIdMap);\n\n        this.instanceIdToLODCapability = new Uint8Array(this.instancesLength);\n        this.instanceIdToLODLevel = new Uint8Array(this.instancesLength);\n\n        for (let i = 0; i < this.instancesLength; i++) {\n            this.geometry.instances(i, this.instance);\n            this.geometry.definitions(this.instance.definitionId(), this.definition);\n            this.instanceIdToLODCapability[i] = +this.getIsMesh(this.definition.type());   // Current algorithm: All meshes are eligible for approximation by line LOD. No other types are.\n            this.instanceIdToLODLevel[i] = LODLevel.Hidden;\n        }\n    }\n\n    /**\n     * Returns an InstanceGeometry corresponding to the given instance ID and builds the geometry of\n     * the instance based on the given LOD level.\n     * NB: The InstanceGeometry object that this method returns is reused.\n     * @param instanceId The instance ID\n     * @param lodLevel The LOD level to build for\n     * @returns A (reused) InstanceGeometry object\n     */\n    protected getInstanceGeometry(instanceId: number, lodLevel: LODLevel): InstanceGeometry {\n        if (lodLevel === LODLevel.Full) {\n            return super.getInstanceGeometry(instanceId, LODLevel.Full);\n        } else if (lodLevel === LODLevel.Line) {\n            this.geometry.instances(instanceId, this.instance);\n            this.geometry.definitions(this.instance.definitionId(), this.definition);\n            const instanceGeometry = this.getEmptyInstanceGeometry(instanceId, this.instance, this.definition);\n            instanceGeometry.geometries = this.buildLineLOD(instanceGeometry.boundingBox);\n            return instanceGeometry;\n        }\n    }\n\n    protected updateInstanceGeometry(instanceId: number): void {\n        const lodLevel = this.getLodLevel(instanceId);\n        const prevLodLevel = this.instanceIdToLODLevel[instanceId];\n\n        if (lodLevel === prevLodLevel) {\n            // instance is already shown with the same LOD level, maybe state has changed?\n            if (lodLevel !== LODLevel.Hidden) this.updateInstanceState(instanceId, lodLevel);\n            return;\n        }\n\n        if (prevLodLevel !== LODLevel.Hidden) this.hideInstanceGeometry(instanceId, prevLodLevel);\n        const visible = lodLevel !== LODLevel.Hidden;\n        if (visible) this.showInstanceGeometry(instanceId, lodLevel);\n        this.instanceState.setVisible(instanceId, visible);\n        this.instanceIdToLODLevel[instanceId] = lodLevel;\n    }\n\n    protected updateInstanceState(instanceId: number, lodLevel: LODLevel): void {\n        const shownLodLevel = this.instanceIdToLODLevel[instanceId];\n        super.updateInstanceState(instanceId, lodLevel, lodLevel !== shownLodLevel);\n    }\n\n    protected getLodLevel(instanceId: number): LODLevel {\n        const transformedBox = this.boundingBoxManager.getTransformedBoundingBox(instanceId);\n        if (!this.isVisibleByClipPlanes(transformedBox)) return LODLevel.Hidden;\n        const lodLevel = this.getLodLevelByCameraDistance(instanceId, transformedBox);\n        if (lodLevel === LODLevel.Hidden || !this.isVisibleByState(instanceId)) return LODLevel.Hidden;\n        return lodLevel;\n    }\n\n    private getLodLevelByCameraDistance(instanceId: number, transformedBox: Box3): LODLevel {\n        const lodSetting = this.camera.trimbimSettings.lodSetting;\n        const diagonal = this.boundingBoxManager.getSize(instanceId);\n\n        // billboards\n        if (diagonal === 0) return LODLevel.Full;\n\n        const distance = transformedBox.distanceToPoint(this.camera.position);\n        const pixelSize = this.getApproxPixelSize(diagonal, distance);\n\n        // Skip line LODs in VR, because it increases amount of draw calls (bottleneck)\n        if (this.camera.vr) {\n            // hide instances that are too small\n            if (diagonal < 2 && pixelSize < 40) return LODLevel.Hidden;\n            if (diagonal >= 2 && pixelSize < 2) return LODLevel.Hidden;\n\n            return LODLevel.Full;\n        }\n\n        // hide instances that are too small\n        if (diagonal < 2 && pixelSize < 5 * lodSetting) return LODLevel.Hidden;\n        // if can not be approximated with lines, hide earlier\n        if (diagonal < 2 && pixelSize < 15 * lodSetting && !this.instanceIdToLODCapability[instanceId]) return LODLevel.Hidden;\n        if (diagonal >= 2 && pixelSize < 2 * lodSetting) return LODLevel.Hidden;\n\n        // full lod if can not be approximated with lines\n        if (!this.instanceIdToLODCapability[instanceId]) return LODLevel.Full;\n\n        // show line lod if instance is still small enough\n        if (diagonal < 2 && pixelSize < 40 * lodSetting) return LODLevel.Line;\n        if (diagonal >= 2 && pixelSize < 5 * lodSetting) return LODLevel.Line;\n\n        const width = this.boundingBoxManager.getWidth(instanceId);\n        const pixelWidth = this.getApproxPixelSize(width, distance);\n\n        // if instance is large but thin, we can still approximate with line\n        return pixelWidth < Math.max(4 * lodSetting, 4) // avoid rendering full lod for very thin geometry, looks bad\n            ? LODLevel.Line : LODLevel.Full;\n    }\n\n    /**\n     * Builds the geometry of a line LOD representation of an instance.\n     * The representation approximates the geometry using only one line, and with only information\n     * about its local bounding box. This implementation creates a line that goes through the box\n     * along its longest dimension. For geometry that is narrow and axis-aligned in its local\n     * representation, this approximation can be very descriptive.\n     * NB: Reuses the same GeometryData object.\n     * @param boundingBox A local bounding box of an object\n     * @returns A (reused) GeometryData object describing this line\n     */\n    private buildLineLOD = (() => {\n        const start = new Vector3();\n        const end = new Vector3();\n        const mid = new Vector3();\n        const size = new Vector3();\n\n        const geometry = {\n            objectType: ObjectType.LINE,\n            positionsLength: 6,\n            positions: new Float32Array(6),\n        } as GeometryData;\n\n        return (boundingBox: Box3): GeometryData => {\n            start.copy(boundingBox.min);\n            end.copy(boundingBox.max);\n            mid.addVectors(start, end).multiplyScalar(0.5);\n            boundingBox.getSize(size);\n\n            // Setting start and end to represent the longest axis of the box:\n            if (size.x >= size.y && size.x >= size.z) {\n                start.set(start.x, mid.y, mid.z);\n                end.set(end.x, mid.y, mid.z);\n            } else if (size.y >= size.z) {\n                start.set(mid.x, start.y, mid.z);\n                end.set(mid.x, end.y, mid.z);\n            } else {\n                start.set(mid.x, mid.y, start.z);\n                end.set(mid.x, mid.y, end.z);\n            }\n\n            start.toArray(geometry.positions, 0);\n            end.toArray(geometry.positions, 3);\n            return geometry;\n        }\n    })();\n}\n","export class QuantizedAxisAlignedBox3 {\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"QuantizedAxisAlignedBox3\"/> struct.\n    /// </summary>\n    /// <param name=\"minX\">The min X.</param>\n    /// <param name=\"maxX\">The max X.</param>\n    /// <param name=\"minY\">The min Y.</param>\n    /// <param name=\"maxY\">The max Y.</param>\n    /// <param name=\"minZ\">The min Z.</param>\n    /// <param name=\"maxZ\">The max Z.</param>\n    constructor(public aabb: Float64Array = new Float64Array(6), public offset: number = 0) {}\n\n    public get MinX(): number {\n        return this.aabb[this.offset];\n    }\n\n    public get MaxX(): number {\n        return this.aabb[this.offset + 1];\n    }\n\n    public get MinY(): number {\n        return this.aabb[this.offset + 2];\n    }\n\n    public get MaxY(): number {\n        return this.aabb[this.offset + 3];\n    }\n\n    public get MinZ(): number {\n        return this.aabb[this.offset + 4];\n    }\n\n    public get MaxZ(): number {\n        return this.aabb[this.offset + 5];\n    }\n\n    copy(other: QuantizedAxisAlignedBox3): void {\n        this.aabb[this.offset] = other.MinX;\n        this.aabb[this.offset + 1] = other.MaxX;\n        this.aabb[this.offset + 2] = other.MinY;\n        this.aabb[this.offset + 3] = other.MaxY;\n        this.aabb[this.offset + 4] = other.MinZ;\n        this.aabb[this.offset + 5] = other.MaxZ;\n    }\n\n    /// <summary>\n    /// Creates the merged QuantizedAabb with the other QuantizedAabb.\n    /// </summary>\n    /// <param name=\"other\">The other QuantizedAabb.</param>\n    /// <returns>The merged QuantizedAabb.</returns>\n    public CreateMergedWith(first: QuantizedAxisAlignedBox3, second: QuantizedAxisAlignedBox3): void {\n        (this.aabb[this.offset] = Math.min(first.MinX, second.MinX)),\n            (this.aabb[this.offset + 1] = Math.max(first.MaxX, second.MaxX)),\n            (this.aabb[this.offset + 2] = Math.min(first.MinY, second.MinY)),\n            (this.aabb[this.offset + 3] = Math.max(first.MaxY, second.MaxY)),\n            (this.aabb[this.offset + 4] = Math.min(first.MinZ, second.MinZ)),\n            (this.aabb[this.offset + 5] = Math.max(first.MaxZ, second.MaxZ));\n    }\n}\n","import { QuantizedAxisAlignedBox3 } from \"./QuantizedAxisAlignedBox3\";\n\n// --------------------------------------------------------------------------------------------------------------------\n// <copyright file=\"QuantizedAxisAlignedBox3TreeNode.cs\" company=\"Tekla Corporation\">\n//   All rights reserved.\n// </copyright>\n// <summary>\n//   The quantized axis aligned bounding box node with data id.\n// </summary>\n// --------------------------------------------------------------------------------------------------------------------\n\n/// <summary>\n/// The quantized axis aligned bounding box node with data id.\n/// </summary>\nexport class QuantizedAxisAlignedBox3TreeNode {\n    constructor(array: Float64Array, offset: number) {\n        this.quantizedAabb = new QuantizedAxisAlignedBox3(array, offset);\n    }\n\n    /// <summary>\n    /// The quantized axis aligned bounding box.\n    /// </summary>\n    private quantizedAabb: QuantizedAxisAlignedBox3;\n\n    /// <summary>\n    /// If negative, containing the escape width.\n    /// If positive, the data provided.\n    /// </summary>\n    private widthOrValue: number;\n\n    /// <summary>\n    /// Determines whether this is data node.\n    /// </summary>\n    /// <returns>\n    ///   <c>true</c> if this node contains data; otherwise, <c>false</c> and contains a branch.\n    /// </returns>\n    public IsDataNode(): boolean {\n        return this.widthOrValue >= 0;\n    }\n\n    /// <summary>\n    /// Gets the quantized axis aligned bounding box.\n    /// </summary>\n    /// <returns>the quantized axis aligned bounding box</returns>\n    public GetQuantizedAabb(): QuantizedAxisAlignedBox3 {\n        return this.quantizedAabb;\n    }\n\n    /// <summary>\n    /// Gets the width of the branch. (The count of nodes inside this branches subtree).\n    /// </summary>\n    /// <returns>The count of nodes inside this branch.</returns>\n    public GetBranchNodeWidth(): number {\n        // if (this.widthOrValue > 0)\n        // {\n        //     debugger;\n        //     return 0;\n        // }\n        return -this.widthOrValue;\n    }\n\n    /// <summary>\n    /// Gets the data value.\n    /// </summary>\n    /// <returns>Returns the id for the node.</returns>\n    public GetDataNodeValue(): number {\n        // if (this.widthOrValue < 0)\n        // {\n        //     debugger;\n        //     return 0;\n        // }\n        return this.widthOrValue;\n    }\n\n    /// <summary>\n    /// Sets the node to be a branch node.\n    /// </summary>\n    /// <param name=\"width\">The width of the branch.</param>\n    /// <param name=\"aabb\">The quantized axis aligned bounding box for the brach</param>\n    public SetAsBranch(width: number, aabb: QuantizedAxisAlignedBox3): void {\n        this.widthOrValue = -width;\n        this.quantizedAabb.copy(aabb);\n    }\n\n    public SetBranch(width: number): void {\n        this.widthOrValue = -width;\n    }\n\n    /// <summary>\n    /// Sets the data value.\n    /// </summary>\n    /// <param name=\"dataValue\">The data value.</param>\n    /// <param name=\"aabb\">The quantized axis aligned bounding box for the brach</param>\n    public SetAsDataValue(dataValue: number, aabb: QuantizedAxisAlignedBox3): void {\n        this.widthOrValue = dataValue;\n        this.quantizedAabb.copy(aabb);\n    }\n\n    public SetDataValue(dataValue: number): void {\n        this.widthOrValue = dataValue;\n    }\n\n    /// <summary>\n    /// Tests the quantized box overlap.\n    /// </summary>\n    /// <param name=\"aabb\">The quantized axis aligned bounding box to compare with.</param>\n    /// <returns>\n    /// Returns true, is boxes overlap.\n    /// </returns>\n    public TestQuantizedBoxOverlap(aabb: QuantizedAxisAlignedBox3): boolean {\n        if (\n            this.quantizedAabb.MinX > aabb.MaxX ||\n            this.quantizedAabb.MaxX < aabb.MinX ||\n            this.quantizedAabb.MinY > aabb.MaxY ||\n            this.quantizedAabb.MaxY < aabb.MinY ||\n            this.quantizedAabb.MinZ > aabb.MaxZ ||\n            this.quantizedAabb.MaxZ < aabb.MinZ\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","import {Box3, Frustum, Plane, Ray, TypedArray, Vector3} from \"three\";\nimport {QuantizedAxisAlignedBox3TreeNode} from \"./QuantizedAxisAlignedBox3TreeNode\";\nimport {QuantizedAxisAlignedBox3} from \"./QuantizedAxisAlignedBox3\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {FrustumHelper} from \"@technology/webgl-viewer/dist/esnext/Helpers/FrustumHelper\";\n\n/// Quantized axis aligned bounding box tree\nexport class AxisAlignedBox3Tree {\n    /// The quantized nodes presenting the tree.\n    private quantizedAabbTreeNodes: QuantizedAxisAlignedBox3TreeNode[];\n\n    private leftBoundingBoxes: QuantizedAxisAlignedBox3[];\n    private rightBoundingBoxes: QuantizedAxisAlignedBox3[];\n\n    /// Initializes a new instance of the <see cref=\"QuantizedAxisAlignedBox3Tree\"/> class.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    constructor(private boundingBoxManager: BoundingBoxManager) {\n        const inputBoxes = new Uint32Array(boundingBoxManager.length);\n        for (let i = 0; i < inputBoxes.length; i++) inputBoxes[i] = i;\n\n        const nodeCount = inputBoxes.length * 2 - 1;\n        this.quantizedAabbTreeNodes = [];\n\n        const buffer = new Float64Array(nodeCount * 6);\n        for (let i = 0; i < nodeCount; i++) {\n            this.quantizedAabbTreeNodes.push(new QuantizedAxisAlignedBox3TreeNode(buffer, i * 6));\n        }\n\n        const subTreeBoundingBox = new QuantizedAxisAlignedBox3();\n\n        this.leftBoundingBoxes = [];\n        this.rightBoundingBoxes = [];\n\n        for (let i = 0; i < 32; i++) {\n            this.leftBoundingBoxes.push(new QuantizedAxisAlignedBox3());\n            this.rightBoundingBoxes.push(new QuantizedAxisAlignedBox3());\n        }\n\n        this.BuildSubTree(0, 0, inputBoxes, 0, inputBoxes.length, subTreeBoundingBox);\n    }\n\n    /// Gets the total count of data (leaf) nodes.\n    public DataNodeCount(): number {\n        return (this.quantizedAabbTreeNodes.length + 1) / 2;\n    }\n\n    /// Query items inside the given box.\n    /// <param name=\"box\">The box.</param>\n    /// <returns>Results the list of entities that are possible inside the given box.</returns>\n    public BoxQuery(box: Box3): number[] {\n        const collidedResults: number[] = [];\n        const quantizedAabb = new QuantizedAxisAlignedBox3();\n\n        this.Quantize(box, quantizedAabb);\n        let currentIndex = 0;\n\n        while (currentIndex < this.quantizedAabbTreeNodes.length) {\n            const overlaps: boolean = this.TestQuantizedBoxOverlap(currentIndex, quantizedAabb);\n            const isDataNode: boolean = this.IsDataNode(currentIndex);\n\n            if (isDataNode && overlaps) {\n                // is overlapped data (leaf) node\n                collidedResults.push(this.GetNodeDataValue(currentIndex));\n                currentIndex++;\n            } else if (isDataNode || overlaps) {\n                // is data (leaf) node or overlapping branch node.\n                currentIndex++;\n            } else {\n                // branch node does not overlap -> skip\n                currentIndex += this.GetBranchNodeWidth(currentIndex);\n            }\n        }\n\n        return collidedResults;\n    }\n\n    public QueryRay(ray: Ray, clipPlanes: Plane[]): number[] {\n        const intersect = (box: Box3) => ray.intersectsBox(box);\n        const visible = clipPlanes && clipPlanes.length > 0 ?\n            (box: Box3) => FrustumHelper.planesIntersectBox(clipPlanes, box) : () => true;\n        return this.Query(intersect, () => false, visible);\n    }\n\n    public QueryFrustum(frustum: Frustum, clipPlanes: Plane[], containedOnly: boolean): number[] {\n        const planes = [...frustum.planes];\n        if (clipPlanes) planes.push(...clipPlanes);\n        const intersect = (box: Box3) => FrustumHelper.planesIntersectBox(planes, box);\n        const contain = (box: Box3) => FrustumHelper.planesContainBox(planes, box);\n        return this.Query(intersect, contain, () => true, containedOnly);\n    }\n\n    private Query(intersectBox: (box: Box3) => boolean, containBox: (box: Box3) => boolean, visibleBox: (box: Box3) => boolean, excludeIntersected: boolean = false): number[] {\n        const collidedResults: number[] = [];\n        let curIndex = 0;\n        const numNodes = this.quantizedAabbTreeNodes.length;\n\n        while (curIndex < numNodes) {\n            const bound = this.GetAabb(curIndex);\n            const isDataNode = this.IsDataNode(curIndex);\n            const contains = containBox(bound);\n            const intersects = contains || intersectBox(bound);\n\n            if (isDataNode && intersects && visibleBox(bound)) {\n                // is overlapped data (leaf) node\n                if (!excludeIntersected) {\n                    collidedResults.push(this.GetNodeDataValue(curIndex));\n                } else {\n                    if (contains) { // if excludeIntersected is true only push boxes fully contained inside frustum\n                        collidedResults.push(this.GetNodeDataValue(curIndex));\n                    }\n                }\n            }\n\n            if (intersects || isDataNode) {\n                // is data (leaf) node or overlapping branch node.\n                curIndex++;\n\n                if (contains && !isDataNode) {\n                    // contain whole branch -> add all data nodes\n                    const endIndex = curIndex + this.GetBranchNodeWidth(curIndex);\n                    for (; curIndex < endIndex; curIndex++) {\n                        if (this.IsDataNode(curIndex) && visibleBox(bound))\n                            if (!excludeIntersected) {\n                                collidedResults.push(this.GetNodeDataValue(curIndex));\n                            } else {\n                                if (contains) { // if excludeIntersected is true only push boxes fully contained inside frustum\n                                    collidedResults.push(this.GetNodeDataValue(curIndex));\n                                }\n                            }\n                    }\n                }\n            } else {\n                // branch node does not overlap -> skip\n                curIndex += this.GetBranchNodeWidth(curIndex);\n            }\n        }\n\n        return collidedResults;\n    }\n\n    /// QSort like in-place split by pivot using X component.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left.</param>\n    /// <param name=\"right\">The right.</param>\n    /// <param name=\"pivotValue\">The pivot value.</param>\n    /// <returns>The split index, for which the split is effective.</returns>\n    private InPlaceSplitX = (() => {\n        const vec3 = new Vector3();\n\n        return (\n            inputBoxes: TypedArray,\n            left: number,\n            right: number,\n            pivotValue: number\n        ): number => {\n            let pivotIndex = left;\n\n            // only larger than pivotValue are stored before the pivotIndex..\n            for (let i = left; i < right; i++) {\n                const box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[i])\n                if (box.getCenter(vec3).x > pivotValue) {\n                    this.Swapnumberes(inputBoxes, i, pivotIndex);\n                    pivotIndex++;\n                }\n            }\n\n            return pivotIndex;\n        };\n    })();\n\n    /// QSort like in-place split by pivot using Y component.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left.</param>\n    /// <param name=\"right\">The right.</param>\n    /// <param name=\"pivotValue\">The pivot value.</param>\n    /// <returns>The split index, for which the split is effective.</returns>\n    private InPlaceSplitY = (() => {\n        const vec3 = new Vector3();\n\n        return (\n            inputBoxes: TypedArray,\n            left: number,\n            right: number,\n            pivotValue: number\n        ): number => {\n            let pivotIndex = left;\n\n            // only larger than pivotValue are stored before the pivotIndex..\n            for (let i = left; i < right; i++) {\n                const box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[i]);\n                if (box.getCenter(vec3).y > pivotValue) {\n                    this.Swapnumberes(inputBoxes, i, pivotIndex);\n                    pivotIndex++;\n                }\n            }\n\n            return pivotIndex;\n        };\n    })();\n\n    /// QSort like in-place split by pivot using Z component.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left.</param>\n    /// <param name=\"right\">The right.</param>\n    /// <param name=\"pivotValue\">The pivot value.</param>\n    /// <returns>The split index, for which the split is effective.</returns>\n    private InPlaceSplitZ = (() => {\n        const vec3 = new Vector3();\n\n        return (\n            inputBoxes: TypedArray,\n            left: number,\n            right: number,\n            pivotValue: number\n        ): number => {\n            let pivotIndex = left;\n\n            // only larger than pivotValue are stored before the pivotIndex..\n            for (let i = left; i < right; i++) {\n                const box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[i]);\n                if (box.getCenter(vec3).z > pivotValue) {\n                    this.Swapnumberes(inputBoxes, i, pivotIndex);\n                    pivotIndex++;\n                }\n            }\n\n            return pivotIndex;\n        };\n    })();\n\n    /// Calculates the mean the of center points in the given range.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left.</param>\n    /// <param name=\"right\">The right.</param>\n    /// <returns>Returns the mean of the center boxes in the given range.</returns>\n    private CalculateMeanOfCenterPoints = (() => {\n        const vec3 = new Vector3();\n\n        return (inputBoxes: TypedArray, left: number, right: number, target: Vector3) => {\n            let box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[left]);\n            box.getCenter(target);\n            for (let i = left + 1; i < right; i++) {\n                box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[i]);\n                target.add(box.getCenter(vec3));\n            }\n\n            const numIndices = right - left;\n            return target.divideScalar(numIndices);\n        };\n    })();\n\n    /// Swaps the boxes.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"itemA\">The itemA.</param>\n    /// <param name=\"itemB\">Index of the store.</param>\n    private Swapnumberes(inputBoxes: TypedArray, itemA: number, itemB: number): void {\n        const tmp = inputBoxes[itemA];\n        inputBoxes[itemA] = inputBoxes[itemB];\n        inputBoxes[itemB] = tmp;\n    }\n\n    /// Tests if the quantized box overlap.\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box to compare to.</param>\n    /// <returns>\n    /// Returns true, if the quantized boxes do overlap.\n    /// </returns>\n    private TestQuantizedBoxOverlap(\n        nodeIndex: number,\n        quantizedAabb: QuantizedAxisAlignedBox3\n    ): boolean {\n        return this.quantizedAabbTreeNodes[nodeIndex].TestQuantizedBoxOverlap(quantizedAabb);\n    }\n\n    /// Determines whether the specified nodeIndex is data (leaf) node.\n    /// <param name=\"nodeIndex\">The nodeIndex.</param>\n    /// <returns>\n    ///   <c>true</c> if the specified nodeIndex is data node; otherwise, <c>false</c>.\n    /// </returns>\n    private IsDataNode(nodeIndex: number): boolean {\n        return this.quantizedAabbTreeNodes[nodeIndex].IsDataNode();\n    }\n\n    /// Gets the axis aligned bounding box.\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <returns>the axis aligned bounding box</returns>\n    public GetAabb(nodeIndex: number): Box3 {\n        const quantizedAabb = this.quantizedAabbTreeNodes[nodeIndex].GetQuantizedAabb();\n        return this.Unquantize(quantizedAabb);\n    }\n\n    /// Creates the data (leaf) node.\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box.</param>\n    /// <param name=\"dataValue\">The dataValue.</param>\n    private CreateDataNode(\n        nodeIndex: number,\n        quantizedAabb: QuantizedAxisAlignedBox3,\n        dataValue: number\n    ): void {\n        this.quantizedAabbTreeNodes[nodeIndex].SetAsDataValue(dataValue, quantizedAabb);\n    }\n\n    private setAsDataNode(nodeIndex: number, dataValue: number): void {\n        this.quantizedAabbTreeNodes[nodeIndex].SetDataValue(dataValue);\n    }\n\n    /// Creates the branch node.\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box.</param>\n    /// <param name=\"width\">The width (count of subnodes) of the branch.</param>\n    private CreateBranchNode(\n        nodeIndex: number,\n        quantizedAabb: QuantizedAxisAlignedBox3,\n        width: number\n    ): void {\n        this.quantizedAabbTreeNodes[nodeIndex].SetAsBranch(width, quantizedAabb);\n    }\n\n    /// Gets the value from a data node.\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <returns>The data value for the node.</returns>\n    private GetNodeDataValue(nodeIndex: number): number {\n        return this.quantizedAabbTreeNodes[nodeIndex].GetDataNodeValue();\n    }\n\n    /// Gets the width of the branch node (count of subnodes).\n    /// <param name=\"nodeIndex\">Index of the node.</param>\n    /// <returns>The width for the node (nodeCount of nodes in the subtree)</returns>\n    private GetBranchNodeWidth(nodeIndex: number): number {\n        return this.quantizedAabbTreeNodes[nodeIndex].GetBranchNodeWidth();\n    }\n\n    /// Quantizes the specified axis aligned bounding box.\n    /// <param name=\"aabb\">The axis aligned box.</param>\n    /// <returns>\n    /// The quantized axis aligned bounding box.\n    /// </returns>\n    private Quantize = (() => {\n        const minClampedPoint = new Vector3();\n        const maxClampedPoint = new Vector3();\n\n        return (aabb: Box3, target: QuantizedAxisAlignedBox3): void => {\n            minClampedPoint.subVectors(aabb.min, this.boundingBoxManager.modelBoundingBox.min);\n            maxClampedPoint.subVectors(aabb.max, this.boundingBoxManager.modelBoundingBox.min);\n\n            target.aabb[target.offset] = minClampedPoint.x;\n            target.aabb[target.offset + 1] = maxClampedPoint.x;\n            target.aabb[target.offset + 2] = minClampedPoint.y;\n            target.aabb[target.offset + 3] = maxClampedPoint.y;\n            target.aabb[target.offset + 4] = minClampedPoint.z;\n            target.aabb[target.offset + 5] = maxClampedPoint.z;\n        };\n    })();\n\n    /// Inverse quantizes the specified value.\n    /// <param name=\"value\">The quantized value.</param>\n    /// <returns>Returns the unquantized value.</returns>\n    private Unquantize(value: QuantizedAxisAlignedBox3): Box3 {\n        const globalAabb = this.boundingBoxManager.modelBoundingBox;\n        const min = new Vector3(\n            value.MinX + globalAabb.min.x,\n            value.MinY + globalAabb.min.y,\n            value.MinZ + globalAabb.min.z\n        );\n        const max = new Vector3(\n            value.MaxX + globalAabb.min.x,\n            value.MaxY + globalAabb.min.y,\n            value.MaxZ + globalAabb.min.z\n        );\n\n        // const center = new Vector3().addVectors(max, min).divideScalar(2.0);\n        // const extent = new Vector3().subVectors(, min).divideScalar(2.0);\n        return new Box3(min, max);\n    }\n\n    /// Builds the sub tree.\n    /// <param name=\"outputIndex\">The next (free) index.</param>\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left index.</param>\n    /// <param name=\"right\">The right index.</param>\n    /// <param name=\"subTreeBoundingBox\">The calculated sub tree bounding box.</param>\n    /// <returns>\n    /// Returns the count of nodes in the subtree (both data (leaf) and branch nodes).\n    /// </returns>\n    private BuildSubTree = (() => {\n        return (\n            treeDepth: number,\n            outputIndex: number,\n            inputBoxes: TypedArray,\n            left: number,\n            right: number,\n            subTreeBoundingBox: QuantizedAxisAlignedBox3\n        ): number => {\n            if (right - left === 1) {\n                // if only one then it's data (leaf) node.\n                const box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[left]);\n                this.Quantize(box, subTreeBoundingBox);\n                this.CreateDataNode(outputIndex, subTreeBoundingBox, inputBoxes[left]);\n                return 1;\n            }\n\n            if (right - left === 2) {\n                // create one branch node and two data (leaf) nodes.\n                const quantizedAabb1 = this.quantizedAabbTreeNodes[outputIndex + 1].GetQuantizedAabb();\n                let box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[left]);\n                this.Quantize(box, quantizedAabb1);\n                this.setAsDataNode(outputIndex + 1, inputBoxes[left]);\n\n                const quantizedAabb2 = this.quantizedAabbTreeNodes[outputIndex + 2].GetQuantizedAabb();\n                box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[left + 1]);\n                this.Quantize(box, quantizedAabb2);\n                this.setAsDataNode(outputIndex + 2, inputBoxes[left + 1]);\n\n                subTreeBoundingBox.CreateMergedWith(quantizedAabb1, quantizedAabb2);\n                this.CreateBranchNode(outputIndex, subTreeBoundingBox, 3);\n                return 3;\n            }\n\n            const splitIndex = this.SplitByOneAxis(inputBoxes, left, right);\n            const leftWidth = this.BuildSubTree(\n                treeDepth + 1,\n                outputIndex + 1,\n                inputBoxes,\n                left,\n                splitIndex,\n                this.leftBoundingBoxes[treeDepth]\n            );\n            const rightWidth = this.BuildSubTree(\n                treeDepth + 1,\n                outputIndex + leftWidth + 1,\n                inputBoxes,\n                splitIndex,\n                right,\n                this.rightBoundingBoxes[treeDepth]\n            );\n\n            subTreeBoundingBox.CreateMergedWith(\n                this.leftBoundingBoxes[treeDepth],\n                this.rightBoundingBoxes[treeDepth]\n            );\n            const branchWidth = leftWidth + rightWidth + 1;\n            this.CreateBranchNode(outputIndex, subTreeBoundingBox, branchWidth);\n            return branchWidth;\n        };\n    })();\n\n    /// Splits the input primitives by one axis.\n    /// Variance is used to detect which axis to split by,\n    /// The mean (average) center point by that axis is used as pivot to split.\n    /// Always: right > left.\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\n    /// <param name=\"left\">The left index.</param>\n    /// <param name=\"right\">The right index.</param>\n    /// <returns>Returns the index where the split was done.</returns>\n    SplitByOneAxis = (() => {\n        const varianceSum = new Vector3();\n        const delta = new Vector3();\n        const meanOfCenterPoints = new Vector3();\n\n        return (inputBoxes: TypedArray, left: number, right: number): number => {\n            this.CalculateMeanOfCenterPoints(inputBoxes, left, right, meanOfCenterPoints);\n            varianceSum.set(0, 0, 0);\n\n            for (let i = left; i < right; i++) {\n                const box = this.boundingBoxManager.getTransformedBoundingBox(inputBoxes[i]);\n                box.getCenter(delta).sub(meanOfCenterPoints);\n                const deltaSquared = delta.multiply(delta);\n                varianceSum.add(deltaSquared);\n            }\n\n            // split by axis with largest variance.\n            let splitIndex;\n            if (varianceSum.x > varianceSum.y) {\n                if (varianceSum.x > varianceSum.z) {\n                    // Y is not largest.\n                    splitIndex = this.InPlaceSplitX(inputBoxes, left, right, meanOfCenterPoints.x);\n                } else {\n                    splitIndex = this.InPlaceSplitZ(inputBoxes, left, right, meanOfCenterPoints.z);\n                }\n            } else if (varianceSum.y > varianceSum.z) {\n                splitIndex = this.InPlaceSplitY(inputBoxes, left, right, meanOfCenterPoints.y);\n            } else {\n                splitIndex = this.InPlaceSplitZ(inputBoxes, left, right, meanOfCenterPoints.z);\n            }\n\n            const numIndices = right - left;\n            const rangeBalancedIndices = numIndices / 3;\n\n            if (splitIndex <= left + rangeBalancedIndices) {\n                // if split index is too close to left, use middle position.\n                splitIndex = (left + right) / 2;\n            } else if (splitIndex >= right - 1 - rangeBalancedIndices) {\n                // if split index is too close to right, use middle position.\n                splitIndex = (left + right) / 2;\n            }\n\n            return Math.round(splitIndex);\n        };\n    })();\n}\n","import {Trimble} from \"../TrimBim_generated\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {AxisAlignedBox3Tree} from \"./AxisAlignedBox3Tree\";\nimport {Frustum, Plane, Ray} from \"three\";\n\nexport class StaticBoundingBoxManager extends BoundingBoxManager {\n    private searchTree: AxisAlignedBox3Tree;\n\n    constructor(model: Trimble.Technology.TrimBim.Fbs.Model) {\n        super(model);\n        this.searchTree = new AxisAlignedBox3Tree(this);\n    }\n\n    calculateTransformedBoundingBox(instanceId: number): void {\n        if (this.searchTree) throw new Error(\"Unable to recalculate bounding box when tree has already been built\");\n        super.calculateTransformedBoundingBox(instanceId);\n    }\n\n    QueryRay(ray: Ray, clipPlanes: Plane[]): number[] {\n        return this.searchTree.QueryRay(ray, clipPlanes);\n    }\n\n    QueryFrustum(frustum: Frustum, clipPlanes: Plane[], containedOnly: boolean = false): number[] {\n        return this.searchTree.QueryFrustum(frustum, clipPlanes, containedOnly);\n    }\n}\n","import { DisplayGroup } from \"@technology/webgl-viewer/dist/esnext/Rendering/DisplayGroup\";\n\n/**\n * The DisplayRanges Range, representing a range in an array, with a payload (data) of type T.\n */\nexport interface Range<T> extends DisplayGroup {\n    value: T;\n}\n\n/**\n * A DisplayRanges Range as a DisplayGroup serving a double purpose as a linked list node, with\n * payload data of type T.\n */\ninterface RangeNode<T> extends Range<T> {\n    prev: RangeNode<T>|null;\n    next: RangeNode<T>|null;\n}\n\n/**\n * A self-updating data structure that keeps track of ranges of a one-dimensional array of arbitrary\n * elements represented by their index and with a payload of type T representing its state.\n * As the payload is updated for individual elements, the range representation is updated and\n * reduced. When collected, the ranges are given in a minimum representation, i.e., such that no\n * neighbours can be merged.\n * The type T must be comparable using ===.\n *\n * Implementation:\n *      This implementation represents its ranges as a linked list (based on object reference),\n *      which is self-reducing. On set(), the payload of the given element is updated, and if\n *      possible merged with its neighbours. Collecting the ranges simply converts the linked list\n *      into an array referencing the same objects.\n *      Note that the same interface can easily be used with a different implementation, as\n *      performance is impacted by many factors, such as size, fragmentation and frequency of\n *      setting and collecting.\n */\nexport class DisplayRanges<T> {\n    startRange: RangeNode<T>;\n\n    /**\n     * Constructs instance which corresponds to a one-dimensional array of arbitrary\n     * elements and its division into ranges, with respect to a payload (value).\n     * @param n The size of the array. Must be greater than 0.\n     * @param startValue A payload assigned to all elements at first\n     */\n    constructor(n: number, startValue: T) {\n        this.startRange = {start: 0, count: n, prev: null, next: null, value: startValue} as RangeNode<T>;\n    }\n\n    /**\n     * Returns the range object containing index i.\n     * @param i The index of the element\n     */\n    private getRange(i: number): RangeNode<T> {\n        let range = this.startRange;\n        while (true) {\n            if (range === null || range.start <= i && i < range.start + range.count) return range;\n            range = range.next;\n        }\n    }\n\n    private static rangeNodeCache: Array<RangeNode<any>> = [];\n\n    private createRangeNode(start: number, count: number, value: T): RangeNode<T> {\n        if (!DisplayRanges.rangeNodeCache.length) {\n            return {start: start, count: count, prev: null, next: null, value: value} as RangeNode<T>;\n        }\n        else {\n            const node = DisplayRanges.rangeNodeCache.pop();\n            node.start = start;\n            node.count = count;\n            node.value = value;\n            return node;\n        }\n    }\n\n    private disposeRangeNode(node: RangeNode<T>): void {\n        if (!node) return;\n\n        node.next = null;\n        node.prev = null;\n        DisplayRanges.rangeNodeCache.push(node);\n    }\n\n\n    /**\n     * Updates the value of an element.\n     * @param i The index of the element\n     * @param value The new value of the element\n     */\n    set(i: number, value: T): void {\n        const r = this.getRange(i);\n        if (r.value === value) return;\n\n        // Split r up in 3 ranges:\n        const r0 = this.createRangeNode(r.start, i - r.start, r.value);\n        const r1 = this.createRangeNode(i,       1,           value);\n        const r2 = this.createRangeNode(i+1,r.count - r0.count - 1, r.value);\n\n        // Insert r0 in the linked list, left of r:\n        if (r.prev) {\n            r.prev.next = r0;\n            r0.prev = r.prev;\n        } else {\n            this.startRange = r0;\n        }\n\n        // Insert r2 in the linked list, right of r:\n        if (r.next) {\n            r.next.prev = r2;\n            r2.next = r.next;\n        }\n\n        this.disposeRangeNode(r);\n\n        // Insert r1 in the linked list, between r0 and r2:\n        r0.next = r1;\n        r1.prev = r0;\n        r1.next = r2;\n        r2.prev = r1;\n\n        // If r0 is empty, remove it:\n        if (!r0.count) {\n            if (r0.prev) r0.prev.next = r1;\n            else this.startRange = r1;\n            r1.prev = r0.prev;\n            this.disposeRangeNode(r0);\n        }\n\n        // If r2 is empty, remove it:\n        if (!r2.count) {\n            if (r2.next) r2.next.prev = r1;\n            r1.next = r2.next;\n            this.disposeRangeNode(r2);\n        }\n\n        // Merge neighbours with the same value:\n        if (r1.prev && r1.prev.value === r1.value) {\n            r1.count = r1.prev.count + r1.count;\n            r1.start = r1.prev.start;\n            const prev = r1.prev.prev;\n            this.disposeRangeNode(r1.prev);\n            r1.prev = prev;\n            if (r1.prev) r1.prev.next = r1;\n            else this.startRange = r1;\n        }\n        if (r1.next && r1.next.value === r1.value) {\n            r1.count = r1.next.count + r1.count;\n            const next = r1.next.next;\n            this.disposeRangeNode(r1.next);\n            r1.next = next;\n            if (r1.next) r1.next.prev = r1;\n        }\n    }\n\n    /**\n     * Collects a minimal range representation.\n     * @param condition An optional condition on the value. If it is given, then only those ranges whose value fulfil this condition will be collected.\n     */\n    collect(condition?: (value: T) => boolean): Array<Range<T>> {\n        const res = [];\n        let range: RangeNode<T>|null = this.startRange;\n        while (true) {\n            if (range === null) break;\n            if (!condition || condition(range.value)) res.push(range);\n            range = range.next;\n        }\n        return res;\n    }\n\n    /**\n     * Checks whether all ranges have the given value.\n     * @param value The value to check for\n     */\n    all(value: T): boolean {\n        return this.startRange.next === null && this.startRange.value === value;\n    }\n\n}\n\n\n\n// Helpers:\n\n/**\n * Maps the given range according to the given offsets. If the offsets array is too small, the count\n * is set to Infinity.\n * @param range A range\n * @param offsets An offset array\n */\nfunction mapRange(range: DisplayGroup, offsets: number[]): DisplayGroup {\n    const last = range.start + range.count === offsets.length;\n    const start = offsets[range.start];\n    const count = last ? Infinity : offsets[range.start + range.count] - start;\n    return { start, count } as DisplayGroup;\n}\n\n/**\n * Collects the ranges of the given DisplayRanges instance and maps them according to the given\n * offsets, skipping those ranges not fulfilling the given condition. If the offsets array is too\n * small, the count is set to Infinity.\n * @param displayRanges A DisplayRanges instance\n * @param offsets Offsets to map to\n * @param condition A condition. Ranges not fulfilling this condition are not included in the result. If no condition is given, all ranges are included.\n */\nexport function getRanges<T>(displayRanges: DisplayRanges<T>, offsets: number[], condition?: (value: T) => boolean): DisplayGroup[] {\n    return displayRanges.collect(condition).map(r => mapRange(r, offsets));\n}\n\n/**\n * Collects the ranges of the given DisplayRanges instance, maps them according to the given\n * offsets, skipping those ranges not fulfilling the given condition, and creating a map from value\n * to mapped range. If the offsets array is too small, the count is set to Infinity.\n * @param displayRanges A DisplayRanges instance\n * @param offsets Offsets to map to\n * @param condition A condition. Ranges not fulfilling this condition are not included in the result. If no condition is given, all ranges are included.\n */\nexport function getRangeMap<T>(displayRanges: DisplayRanges<T>, offsets: number[], condition?: (value: T) => boolean): Map<T, DisplayGroup[]> {\n    const ranges = displayRanges.collect(condition);\n    const res = new Map<T, DisplayGroup[]>();\n    for (const r of ranges) {\n        let groups = res.get(r.value);\n        if (!groups) {\n            groups = [];\n            res.set(r.value, groups);\n        }\n        groups.push(mapRange(r, offsets));\n    }\n    return res;\n}\n","import {InstanceGeometry} from \"./GeometryManager\";\nimport {GeometryData, normalLength} from \"./GeometryBuilders/GeometryBuilder\";\nimport {Trimble} from \"../TrimBim_generated\";\nimport {BatchState, ObjectType} from \"../Model/ModelBuilderTypes\";\nimport {Box3, Matrix4, TypedArray, Vector3} from \"three\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {LayerManager} from \"./LayerManager\";\nimport {EntityHierarchyState} from \"./EntityHierarchyState\";\nimport {DisplayRanges, getRangeMap, getRanges} from \"./DisplayRanges\";\nimport {iterate, MAX_16BIT_SIZE} from \"@technology/webgl-viewer/dist/esnext/Helpers/common-utils\";\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {LODingGeometryManager, LODLevel} from \"./LODingGeometryManager\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\nimport {TextureManager} from \"./TextureManager\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\ninterface BatchGeometry extends GeometryData {\n    lodLevel: LODLevel;\n    ids?: Float32Array;\n    position: Vector3;\n    inMainThread: boolean;\n    boundingBox: Box3;\n    instancesLength: number;\n    instanceIdToIndex: Map<number, number>;\n    geometryIndices: number[];\n    indexOffsets: number[];\n    vertexOffsets: number[];\n    visibilityRanges: DisplayRanges<boolean>;\n    hoverRanges: DisplayRanges<boolean>;\n    selectionRanges: DisplayRanges<boolean>;\n    materialRanges: DisplayRanges<number>;\n}\n\nlet usedGpuGeometryMemory = 0;\n\nexport class BatchingGeometryManager extends LODingGeometryManager {\n    private readonly gridSize: number;                          // The grid size of the batches\n    private batches = new Map<number, BatchGeometry>();         // All batches for this model, from batch id to batch object\n    private readonly instanceIdToBatchIds: Array<number|number[]>;      // A lookup table for instance ids to their batch ID(s)\n    private readonly instanceIdToLODBatchId: number[]                   // A lookup table for instance ids to their line-based LOD batch ID\n    private updatedBatches = new Set<number>();                 // Batches marked for update\n    private batchHashToBucketSize = new Map<number, number>();  // Generated batch ID (checksum) to number of batches with that checksum (to allow splitting)\n    private vec3 = new Vector3();\n    private matrix = new Matrix4();\n\n    constructor(\n        modelId: string,\n        messenger: AbstractWorkerMessenger,\n        model: Fbs.Model,\n        boundingBoxManager: BoundingBoxManager,\n        entityState: EntityHierarchyState,\n        layerManager: LayerManager,\n        textureManager: TextureManager,\n        materialIds: number[]\n    ) {\n        super(modelId, messenger, model, boundingBoxManager, entityState, layerManager, textureManager, materialIds);\n        this.gridSize = this.calculateGridSize();\n        this.instanceIdToBatchIds = new Array(this.instancesLength);\n        this.instanceIdToLODBatchId = new Array(this.instancesLength);\n    }\n\n    async createGeometryPrototypes(): Promise<void> {\n        await super.createGeometryPrototypes();\n        await this.createBatches();\n    }\n\n    async updateLoop(timestamp: number): Promise<void> {\n        await super.updateLoop(timestamp);\n        this.sendUpdatedBatchStates();\n    }\n\n    /**\n     * Shows the given instance, building it if necessary and requests the main thread to add it to\n     * the scene, with its corresponding state.\n     */\n    protected showInstanceGeometry(instanceId: number, lodLevel: LODLevel): void {\n        // NB: Since the BatchingGeometryManager's state change functionality by necessity also\n        // builds the geometry as needed, all that needs to be done here is call this method:\n        this.updateInstanceState(instanceId, lodLevel);\n    }\n\n    protected hideInstanceGeometry(instanceId: number, lodLevel: LODLevel): void {\n        const batchIds = this.getBatchIds(instanceId, lodLevel);\n        if (batchIds !== undefined)\n            iterate(batchIds, batchId => this.hideFromBatch(batchId, instanceId));\n    }\n\n    private getBatchIds(instanceId: number, lodLevel: number): number|number[] {\n        // TODO: unify instanceIdToBatchIds and instanceIdToLODBatchId maybe?\n        return lodLevel === LODLevel.Full ? this.instanceIdToBatchIds[instanceId] : this.instanceIdToLODBatchId[instanceId];\n    }\n\n    protected setInstanceState(\n        instanceId: number,\n        visible: boolean, selected: boolean, hovered: boolean,\n        customMaterialId: number,\n        lodLevel: LODLevel\n    ): void {\n\n        // Update instance states:\n        this.instanceState.setVisible(instanceId, true);\n        this.instanceState.setHovered(instanceId, hovered);\n        this.instanceState.setSelected(instanceId, selected);\n        this.instanceState.setCustomMaterialId(instanceId, customMaterialId);\n\n        // Calculate display range states of the batch for this instance:\n        const hoveredInRange = hovered;\n        const materialInRange = customMaterialId;\n        const visibleInRange = customMaterialId === 0;\n        const selectedInRange = selected;\n\n        // Update batch(es) of this instance with the states:\n        const batchIds = this.getBatchIds(instanceId, lodLevel);\n        if (batchIds !== undefined) iterate(batchIds, batchId => {\n            this.updateBatch(batchId, instanceId, materialInRange, visibleInRange, hoveredInRange, selectedInRange)\n        });\n    }\n\n    /**\n     * Sets the specified states for a batch.\n     * If batch wasn't already built, builds it and adds it.\n     */\n    private updateBatch(\n        batchId: number, instanceId: number, materialId: number,\n        visible: boolean, hovered: boolean, selected: boolean,\n    ): void {\n        const batch = this.batches.get(batchId);\n        const localIndex = batch.instanceIdToIndex.get(instanceId);\n        batch.visibilityRanges.set(localIndex, visible);\n        batch.hoverRanges.set(localIndex, hovered);\n        batch.selectionRanges.set(localIndex, selected);\n        batch.materialRanges.set(localIndex, materialId);\n        if (batch.inMainThread) {\n            // Batch is already built and sent to main thread. Mark it for update:\n            this.updatedBatches.add(batchId);\n        } else {\n            // Build and add batch:\n            this.buildBatch(batch);\n            this.addBatch(batchId, batch);\n            batch.inMainThread = true;\n            BatchingGeometryManager.freeBatch(batch);\n        }\n    }\n\n    /**\n     * Sets states for a batch such that the specified instance is hidden.\n     * If all instances in batch are now invisible, unloads batch.\n     */\n    private hideFromBatch(batchId: number, instanceId: number): void {\n        const batch = this.batches.get(batchId);\n        const localIndex = batch.instanceIdToIndex.get(instanceId);\n        batch.visibilityRanges.set(localIndex, false);\n        batch.hoverRanges.set(localIndex, false);\n        batch.selectionRanges.set(localIndex, false);\n        batch.materialRanges.set(localIndex, 0);\n\n        if (batch.visibilityRanges.all(false) && batch.materialRanges.all(0)\n            && usedGpuGeometryMemory > this.camera.trimbimSettings.gpuMemoryUsage) {\n            // Every instance is hidden. Unload batch if tight on memory:\n            this.removeGeometry(batchId);\n            batch.inMainThread = false;\n            usedGpuGeometryMemory -= batch.memSize;\n        } else {\n            // Mark batch for update:\n            this.updatedBatches.add(batchId);\n        }\n    }\n\n    /**\n     * The space is split into a uniform 3D grid for batching.\n     * This method decides the size of these grid cells dynamically based on the bounding box of the\n     * model. Note that only the longest side of the model bounding box is considered. In the case\n     * of a very flat or elongated model, only a small part of the cells will therefore be\n     * populated.\n     */\n    private calculateGridSize(): number {\n        const n = this.geometry.instancesLength();\n\n        // The number of desired cells per dimension (simpler models benefit from fewer batches):\n        const gridCellsPerDim = n < 1000 ? 2 : n < 10000 ? 4 : n < 100000 ? 8 : 16;\n\n        const bbSize = this.boundingBoxManager.modelBoundingBox.getSize(this.vec3);\n\n        return Math.ceil(                               // Ceil result into an integer at least 1\n            Math.max(1, bbSize.x, bbSize.y, bbSize.z)   // Pick the longest side of the model bounding box (but at least 1, because some geometry, such as points, can have a zero bounding box)\n            / gridCellsPerDim                           // Divide by the number of cells\n        );\n    }\n\n    /**\n     * Sends a state update request to main thread for all the batches marked for update.\n     * It is in general much more performant to accumulate state changes on the worker-side first\n     * (handled by the DisplayRanges), and only then send one state update per affected batch to the\n     * main thread.\n     */\n    private sendUpdatedBatchStates(): void {\n        for (const batchId of this.updatedBatches) {\n            const batch = this.batches.get(batchId);\n            const state = BatchingGeometryManager.getState(batch);\n            this.sendGeometryState(batchId, batch.objectType, batch.materialId, batch.textureId, state);\n        }\n        this.updatedBatches.clear();\n    }\n\n    /**\n     * Generates a batch ID. Must be called only once for each instance/geometry combination.\n     * The batch ID defines permanently which batch this instance-geometry combination belongs.\n     * NB: This implementation considers a batch to be full as soon as a geometry doesn't fit in it.\n     * It does not check if future (smaller) geometries might fit, to avoid worst case O(n^2)\n     * iteration, but at the cost of potentially leaving some batches quite small.\n     */\n    private generateBatchId(instanceId: number, materialId: number, geometry: GeometryData): number {\n\n        if (geometry.positionsLength / 3 > MAX_16BIT_SIZE)\n            console.warn(`Geometry of instance ${instanceId} does not fit in 16-bit index (position size ${ geometry.positionsLength }), and will be truncated.`);\n\n        const hash = this.getBatchHash(instanceId, materialId, geometry, LODLevel.Full);\n        const bucketSize = this.batchHashToBucketSize.get(hash) || 1;\n\n        // Batches in the same bucket are given batch IDs incrementally: (This assumes an approximately uniform hash function.)\n        let batchId = hash + bucketSize - 1;\n        const batch = this.batches.get(batchId);\n        const size = batch ? batch.positionsLength : 0;\n\n        // If geometry doesn't fit in current batch, expand bucket and define a new batch:\n        if (size + geometry.positionsLength > MAX_16BIT_SIZE) {\n            batchId++;\n            this.batchHashToBucketSize.set(hash, bucketSize + 1);\n        }\n\n        return batchId;\n    }\n\n    /**\n     * Calculates a batch hash for the given instance-materialId-geometry combination.\n     * One batch hash refers to a bucket of batches. The batch hash is identical to the batch id of\n     * the first batch in a bucket.\n     */\n    private getBatchHash = (() => {\n        const center = new Vector3();\n\n        return (instanceId: number, materialId: number, geometry: GeometryData, lodLevel: LODLevel): number => {\n            const bb = this.boundingBoxManager.getTransformedBoundingBox(instanceId);\n            bb.getCenter(center);\n\n            const gridSize = lodLevel === LODLevel.Full ? this.gridSize : this.gridSize * 10;\n            const sizeCategory = BatchingGeometryManager.getSizeCategory(bb);\n\n            // Calculate a checksum using the following keys:\n            this.checksum.clear()\n                .add(geometry.objectType)\n                .add(materialId)\n                .add(center.x - center.x % gridSize)       // These three values...\n                .add(center.y - center.y % gridSize)       // together can be viewed...\n                .add(center.z - center.z % gridSize)       // as a spatial hash.\n                .add(sizeCategory)\n                .add(lodLevel)\n                .add(geometry.textureId);\n\n            return this.checksum.get();\n        };\n    })();\n\n    /**\n     * Create a new empty batch object.\n     * @param objectType The object type of the batch\n     * @param materialId The default material id of the batch (can be overridden by internal batch state)\n     * @param lodLevel The LOD level of the batch (default value, 0, indicates full geometry representation)\n     */\n    private createBatch(objectType: ObjectType, materialId: number, lodLevel: LODLevel): BatchGeometry {\n        return {\n            lodLevel: lodLevel,\n            objectType: objectType,\n            materialId: materialId,\n            indicesLength: 0,\n            positionsLength: 0,\n            normalsLength: 0,\n            uvsLength: 0,\n            pointUvsLength: 0,\n            pointSizesLength: 0,\n            inMainThread: false,\n            boundingBox: new Box3(),\n            instancesLength: 0,\n            instanceIdToIndex: new Map(),\n            geometryIndices: [],\n            indexOffsets: [],\n            vertexOffsets: []\n        } as BatchGeometry;\n    }\n\n    /**\n     * Adds the geometry prototype of an instance to a batch.\n     * The batch is expanded to include the instance and is populated with its meta data, such as\n     * recording the offsets for the geometry buffers.\n     * No geometry data is loaded into the batch yet.\n     * @param batch The batch to be expanded\n     * @param geometry The geometry prototype to be added\n     * @param instanceId The instance ID of the geometry prototype\n     * @param geometryIndex The geometry index of the prototype for this instance\n     */\n    private static addToBatch(batch: BatchGeometry, geometry: GeometryData, instanceId: number, geometryIndex: number): void {\n        batch.instanceIdToIndex.set(instanceId, batch.instancesLength);\n        batch.instancesLength++;\n        batch.geometryIndices.push(geometryIndex);\n        batch.indexOffsets.push(batch.indicesLength || 0);\n        batch.vertexOffsets.push((batch.positionsLength || 0) / 3);\n\n        if (geometry.indicesLength)     batch.indicesLength += geometry.indicesLength;\n        if (geometry.positionsLength)   batch.positionsLength += geometry.positionsLength;\n        if (geometry.normalsLength)     batch.normalsLength += geometry.normalsLength;\n        if (geometry.uvsLength)         batch.uvsLength += geometry.uvsLength;\n        if (geometry.pointUvsLength)    batch.pointUvsLength += geometry.pointUvsLength;\n        if (geometry.pointSizesLength)  batch.pointSizesLength += geometry.pointSizesLength;\n\n        if (geometry.materialId !== undefined) batch.materialId = geometry.materialId;\n        if (geometry.textureId !== undefined) batch.textureId = geometry.textureId;\n    }\n\n    /**\n     * Assigns the given instance to its batch or batches, creating them if necessary.\n     * This concerns only the full geometry of the instance, LOD versions are handled separately.\n     * @param instanceId The instance id to be assigned\n     * @param materialId The (default) material ID of the instance\n     * @param geometries The geometry or geometries corresponding to this instance\n     * @returns The batch ID(s) that this instance was assigned to\n     */\n    private assignInstanceToBatches(\n        instanceId: number,\n        materialId: number,\n        geometries: GeometryData | GeometryData[]\n    ): number | number[] {\n        let batchIds: number | number[] = undefined;\n\n        iterate(geometries, (geometry, geometryIndex) => {\n            const batchId = this.generateBatchId(instanceId, materialId, geometry);\n            if (batchIds === undefined) {\n                batchIds = batchId;\n            } else if (typeof batchIds === \"number\") {\n                if (batchIds !== batchId) batchIds = [batchIds, batchId];\n            } else {\n                // avoiding using Set to reduce allocations\n                if (!batchIds.includes(batchId)) batchIds.push(batchId);\n            }\n\n            let batch = this.batches.get(batchId);\n            if (!batch) {\n                batch = this.createBatch(geometry.objectType, materialId, LODLevel.Full);\n                this.batches.set(batchId, batch);\n            }\n            BatchingGeometryManager.addToBatch(batch, geometry, instanceId, geometryIndex);\n        });\n\n        return batchIds;\n    }\n\n    /**\n     * Assigns the given instance to its line-based LOD representation (LOD level 1).\n     * Since only two LOD levels are currently in use, it should be more efficient to treat them\n     * differently in this fashion.\n     */\n    private assignInstanceToLODBatch = (() => {\n        const placeholderGeometry = {\n            objectType: ObjectType.LINE,\n            positionsLength: 6,\n        } as GeometryData;\n\n        return (instanceId: number, materialId: number): number => {\n            const batchId = this.getBatchHash(instanceId, materialId, placeholderGeometry, LODLevel.Line);\n\n            let batch = this.batches.get(batchId);\n            if (!batch) {\n                batch = this.createBatch(placeholderGeometry.objectType, materialId, LODLevel.Line);\n                this.batches.set(batchId, batch);\n            }\n            BatchingGeometryManager.addToBatch(batch, placeholderGeometry, instanceId, 0);\n            return batchId;\n        }\n    })();\n\n    /**\n     * Divides the entire model into batches and creates the prototypes for all batches.\n     */\n    private createBatches(): void {\n\n        // Assign every instance to a batch:\n        for (let instanceId = 0; instanceId < this.instancesLength; ++instanceId) {\n            this.geometry.instances(instanceId, this.instance);\n            this.geometry.definitions(this.instance.definitionId(), this.definition);\n            const materialId = this.materialIdMap[this.instance.surfaceMaterialId()];\n\n            const geometryBuilder = this.geometryBuilders.get(this.definition.type());\n            if (!geometryBuilder) continue;\n            const geometries = geometryBuilder.getGeometries(this.definition.index(), false);\n            this.instanceIdToBatchIds[instanceId] = this.assignInstanceToBatches(instanceId, materialId, geometries);\n\n            // If instance is of mesh type, it can be approximated by a line LOD version:\n            if (geometryBuilder.snapGeometryType === GeometryType.MESH)\n                this.instanceIdToLODBatchId[instanceId] = this.assignInstanceToLODBatch(instanceId, materialId);\n        }\n\n        // Initialize DisplayRanges for every batch that was created:\n        for (const batch of this.batches.values()) {\n            batch.visibilityRanges = new DisplayRanges<boolean>(batch.instancesLength, false);\n            batch.hoverRanges = new DisplayRanges<boolean>(batch.instancesLength, false);\n            batch.selectionRanges = new DisplayRanges<boolean>(batch.instancesLength, false);\n            batch.materialRanges = new DisplayRanges<number>(batch.instancesLength, 0);\n        }\n    }\n\n    /**\n     * Builds all the geometry of a batch.\n     * @param batch The batch to be built\n     */\n    private buildBatch(batch: BatchGeometry): void {\n        if (!batch.positions) BatchingGeometryManager.allocateBatch(batch);\n        const firstBuild = !batch.position;\n        for (const [instanceId, localIndex] of batch.instanceIdToIndex) {\n            const ig = this.getInstanceGeometry(instanceId, batch.lodLevel);\n            if (!ig || !ig.geometries) continue;\n            this.loadInstanceIntoBatch(batch, ig, batch.geometryIndices[localIndex]);\n            if (firstBuild) this.expandBoundingBox(batch, instanceId);  // Bounding box is retained, so only needs to be calculated once\n        }\n    }\n\n    /**\n     * Loads the geometry of an instance into a batch.\n     * @param batch The batch being built\n     * @param instanceGeometry The instance geometry to be added. This geometry must be built.\n     * @param geometryIndex The index of the geometry (within the instance) to be added\n     */\n    private loadInstanceIntoBatch(\n        batch: BatchGeometry,\n        instanceGeometry: InstanceGeometry,\n        geometryIndex: number,\n    ): void {\n        const localIndex = batch.instanceIdToIndex.get(instanceGeometry.instanceId);\n        const geometry = Array.isArray(instanceGeometry.geometries) ? instanceGeometry.geometries[geometryIndex] : instanceGeometry.geometries;\n\n        // Set batch position and calculate transformation matrix:\n        if (!batch.position)\n            batch.position = new Vector3().fromArray(geometry.positions).applyMatrix4(instanceGeometry.transform);\n        const batchPosInv = this.vec3.copy(batch.position).negate();\n        this.matrix.identity()\n            .setPosition(batchPosInv)\n            .multiply(instanceGeometry.transform);\n\n        // Transform the positions of the instance by their TrimBIM transformation and batch-space\n        // translation, and write them into the batch's positions buffer:\n        this.transformPositions(\n            this.matrix,\n            geometry.positions, batch.positions,\n            batch.vertexOffsets[localIndex] * 3, geometry.positions.length\n        );\n\n        // Transform the normals of the instance by their TrimBIM transformation and write them into\n        // the batch's positions buffer:\n        if (batch.normals) {\n            this.transformNormals(\n                this.matrix,\n                geometry.normals, batch.normals,\n                batch.vertexOffsets[localIndex] * 3, geometry.normals.length\n            );\n        }\n\n        // Write the indices of the instance into the buffer and add an offset:\n        if (batch.indices) {\n            const indexOffset = batch.indexOffsets[localIndex];\n            const offset = batch.vertexOffsets[localIndex];\n            for (let i = 0; i < geometry.indicesLength; i++)\n                batch.indices[i + indexOffset] = geometry.indices[i] + offset;\n        }\n\n        // Write the rest of the instance's geometry data into the buffer:\n\n        if (batch.uvs)\n            batch.uvs.set(geometry.uvs, batch.vertexOffsets[localIndex] * 2);\n\n        if (batch.pointUvs)\n            batch.pointUvs.set(geometry.pointUvs, batch.vertexOffsets[localIndex] * 4);\n\n        if (batch.pointSizes)\n            batch.pointSizes.set(geometry.pointSizes, batch.vertexOffsets[localIndex] * 4);\n\n        if (geometry.objectType === ObjectType.MESH)\n            batch.ids.fill(this.getEntityId(instanceGeometry.instanceId), batch.vertexOffsets[localIndex], batch.vertexOffsets[localIndex] + geometry.positionsLength / 3);\n    }\n\n    /**\n     * Expands the bounding box of a batch by the bounding box of an instance.\n     * @param batch The batch\n     * @param instanceId The instance ID\n     */\n    private expandBoundingBox(batch: BatchGeometry, instanceId: number): void {\n        const bb = this.boundingBoxManager.getTransformedBoundingBox(instanceId);\n        const batchPosInv = this.vec3.copy(batch.position).negate();\n        bb.translate(batchPosInv);\n        batch.boundingBox.union(bb);\n    }\n\n    /**\n     * Reads positions from a source buffer, transforms them by the given matrix, and writes them\n     * into a destination buffer.\n     * @param matrix The matrix to transform by\n     * @param src The source buffer\n     * @param dst The destination buffer\n     * @param dstOffset The offset to start writing to in the destination buffer\n     * @param length The length to read, in terms of scalar values\n     */\n    private transformPositions(matrix: Matrix4, src: TypedArray, dst: TypedArray, dstOffset: number = 0, length: number): void {\n        for (let i = 0; i < length; i += 3) {\n            this.vec3.fromArray(src, i);\n            this.vec3.applyMatrix4(matrix);\n            this.vec3.toArray(dst, dstOffset + i);\n        }\n    }\n\n    /**\n     * Reads normals from a source buffer, transforms them by the given matrix, and writes them\n     * into a destination buffer.\n     * @param matrix The matrix to transform by\n     * @param src The source buffer\n     * @param dst The destination buffer\n     * @param dstOffset The offset to start writing to in the destination buffer\n     * @param length The length to read, in terms of scalar values\n     */\n    private transformNormals(matrix: Matrix4, src: TypedArray, dst: TypedArray, dstOffset: number = 0, length: number): void {\n        for (let i = 0; i < length; i += 3) {\n            this.vec3.fromArray(src, i);\n            this.vec3.transformDirection(matrix);\n            this.vec3.multiplyScalar(normalLength);\n            this.vec3.toArray(dst, dstOffset + i);\n        }\n    }\n\n    /**\n     * Loads a batch into main thread to be rendered.\n     * @param batchId The batch ID\n     * @param batch The batch object\n     */\n    private addBatch(batchId: number, batch: BatchGeometry): void {\n        const state = BatchingGeometryManager.getState(batch);\n        this.matrix.identity().setPosition(batch.position);\n        this.addGeometry(batchId, batch, batch.ids, batch.materialId, this.matrix, batch.boundingBox, state);\n        usedGpuGeometryMemory += batch.memSize;\n    }\n\n    /**\n     * Decides the size category of an object based on its bounding box, from a discrete set of\n     * possible categories. This is done to separate tiny details from larger features and gives the\n     * option to batch them separately.\n     * @param bb The bounding box\n     */\n    private static getSizeCategory(bb: Box3): number {\n        const sizeSq = bb.min.distanceToSquared(bb.max);\n        if (sizeSq < 0.5 * 0.5) return 0;\n        if (sizeSq < 2 * 2) return 1;\n        return 2;\n    }\n\n    /**\n     * Allocates all geometry buffers for a batch.\n     * @param batch A batch prototype\n     */\n    private static allocateBatch(batch: BatchGeometry): void {\n        batch.positions = new Float32Array(batch.positionsLength);\n        batch.memSize = batch.positions.byteLength;\n        if (batch.indicesLength > 0) {\n            batch.indices = new Uint16Array(batch.indicesLength);\n            batch.memSize += batch.indices.byteLength;\n        }\n        if (batch.normalsLength > 0) {\n            batch.normals = new Int16Array(batch.normalsLength);\n            batch.memSize += batch.normals.byteLength;\n        }\n        if (batch.uvsLength > 0) {\n            batch.uvs = new Float32Array(batch.uvsLength);\n            batch.memSize += batch.uvs.byteLength;\n        }\n        if (batch.pointUvsLength > 0) {\n            batch.pointUvs = new Float32Array(batch.pointUvsLength);\n            batch.memSize += batch.pointUvs.byteLength;\n        }\n        if (batch.pointSizesLength > 0) {\n            batch.pointSizes = new Float32Array(batch.pointSizesLength);\n            batch.memSize += batch.pointSizes.byteLength;\n        }\n        if (batch.objectType === ObjectType.MESH) {\n            batch.ids = new Float32Array(batch.positionsLength / 3);\n            batch.memSize += batch.ids.byteLength;\n        }\n    }\n\n    /**\n     * Frees the geometry data in a batch.\n     * NB: If the batch has been added with the geometry data transferred, this method does not\n     * technically free any memory, but it is required for consistency.\n     * @param batch The batch to be freed\n     */\n    private static freeBatch(batch: BatchGeometry): void {\n        delete batch.indices;\n        delete batch.positions;\n        delete batch.normals;\n        delete batch.uvs;\n        delete batch.pointUvs;\n        delete batch.pointSizes;\n        delete batch.ids;\n    }\n\n    /**\n     * Gets the BatchState of the given batch.\n     * @param batch The batch\n     */\n    private static getState = (() => {\n        return (batch: BatchGeometry): BatchState => {\n\n            // For indexed geometry, ranges are defined by index.\n            // For non-indexed geometry, ranges are defined by position index.\n            const offsets = batch.indicesLength ? batch.indexOffsets : batch.vertexOffsets;\n\n            // Collect and map the ranges from the range manager.\n            // If every instance has the default value, return undefined instead.\n            const visible = batch.visibilityRanges.all(false) ? undefined :\n                getRanges(batch.visibilityRanges, offsets, data => data);\n            const hovered = batch.hoverRanges.all(false) ? undefined :\n                getRanges(batch.hoverRanges, offsets, data => data);\n            const selected = batch.selectionRanges.all(false) ? undefined :\n                getRanges(batch.selectionRanges, offsets, data => data);\n            const customMaterialIds = batch.materialRanges.all(0) ? undefined :\n                getRangeMap(batch.materialRanges, offsets, data => data !== 0);\n\n            return { visible, hovered, selected, customMaterialIds } as BatchState;\n        }\n    })();\n\n}\n","export const Base64ConversionTable = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\",\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\",\n    \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\",\n    \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\",\n    \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\",\n    \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\",\n    \"y\", \"z\", \"_\", \"$\"\n];\n\nexport class UUID {\n    data: Uint8Array;\n    public type = \"UUID\";\n\n    constructor({\n        data,\n        ifcGuid,\n        msGuid\n    }: {\n        data?: Uint8Array;\n        ifcGuid?: string;\n        msGuid?: string;\n    }) {\n        if (data) {\n            this.data = data;\n        } else if (ifcGuid) {\n            this.setIfcGuid(ifcGuid);\n        } else if (msGuid) {\n            this.setMsGuid(msGuid);\n        } else {\n            this.data = new Uint8Array(16);\n        }\n    }\n\n    fromJSON({ type, data }: { type: string; data: string }) {\n        if (type === \"UUID\") {\n            this.data = new Uint8Array(JSON.parse(\"[\" + data + \"]\"));\n        } else {\n            throw TypeError(\"Incorrect type, type needs to be UUID\");\n        }\n    }\n\n    equals(uuid2: UUID) {\n        for (let i = 0; i < 16; i++) {\n            if (this.data[i] !== uuid2.data[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    toString() {\n        return this.msGuid;\n    }\n\n    get msGuid() {\n        const offset = this.data.byteOffset;\n        const view = new DataView(this.data.buffer, offset, 16);\n        const b1 = view\n            .getUint32(0, true)\n            .toString(16)\n            .padStart(8, \"0\");\n        const b2 = view\n            .getUint16(4, true)\n            .toString(16)\n            .padStart(4, \"0\");\n        const b3 = view\n            .getUint16(6, true)\n            .toString(16)\n            .padStart(4, \"0\");\n        const b4 = view\n            .getUint8(8)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b5 = view\n            .getUint8(9)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b6 = view\n            .getUint8(10)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b44 = view\n            .getUint8(11)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b45 = view\n            .getUint8(12)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b46 = view\n            .getUint8(13)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b47 = view\n            .getUint8(14)\n            .toString(16)\n            .padStart(2, \"0\");\n        const b48 = view\n            .getUint8(15)\n            .toString(16)\n            .padStart(2, \"0\");\n        return `${b1}-${b2}-${b3}-${b4}${b5}-${b6}${b44}${b45}${b46}${b47}${b48}`;\n    }\n\n    setMsGuid(guid: string) {\n        this.data = this.data || new Uint8Array(16);\n        const offset = this.data.byteOffset;\n        const view = new DataView(this.data.buffer, offset, 16);\n        const getValue = (offset: number, size: number) => parseInt(guid.slice(offset, offset + size), 16);\n        view.setUint32(0, getValue(0, 8), true);\n        view.setUint16(4, getValue(9, 4), true);\n        view.setUint16(6, getValue(14, 4), true);\n        view.setUint8(8, getValue(19, 2));\n        view.setUint8(9, getValue(21, 2));\n        view.setUint8(10, getValue(24, 2));\n        view.setUint8(11, getValue(26, 2));\n        view.setUint8(12, getValue(28, 2));\n        view.setUint8(13, getValue(30, 2));\n        view.setUint8(14, getValue(32, 2));\n        view.setUint8(15, getValue(34, 2));\n    }\n\n    get ifcGuid() {\n        const guid16 = new Uint8Array(24);\n        const data = this.data;\n        /* no convert 24bit so  append 0's and use ToUInt32 */\n        guid16[0] = data[15];\n        guid16[1] = data[14];\n        guid16[2] = data[13];\n        guid16[3] = 0;\n        guid16[4] = data[12];\n        guid16[5] = data[11];\n        guid16[6] = data[10];\n        guid16[7] = 0;\n        guid16[8] = data[9];\n        guid16[9] = data[8];\n        guid16[10] = data[6];\n        guid16[11] = 0;\n        guid16[12] = data[7];\n        guid16[13] = data[4];\n        guid16[14] = data[5];\n        guid16[15] = 0;\n        guid16[16] = data[0];\n        guid16[17] = data[1];\n        guid16[18] = data[2];\n        guid16[19] = 0;\n        guid16[20] = data[3];\n        guid16[21] = 0;\n        guid16[22] = 0;\n        guid16[23] = 0;\n\n        const b32 = new Uint32Array(guid16.buffer);\n\n        return (\n            this.toBase64(b32[5], 8) +\n            this.toBase64(b32[4], 24) +\n            this.toBase64(b32[3], 24) +\n            this.toBase64(b32[2], 24) +\n            this.toBase64(b32[1], 24) +\n            this.toBase64(b32[0], 24)\n        );\n    }\n\n    setIfcGuid(ifcGuid: string) {\n        this.data = new Uint8Array(16);\n        const b5 = this.fromBase64(ifcGuid[0], 6) + this.fromBase64(ifcGuid[1], 0);\n        const b4 =\n            this.fromBase64(ifcGuid[2], 18) +\n            this.fromBase64(ifcGuid[3], 12) +\n            this.fromBase64(ifcGuid[4], 6) +\n            this.fromBase64(ifcGuid[5], 0);\n        const b3 =\n            this.fromBase64(ifcGuid[6], 18) +\n            this.fromBase64(ifcGuid[7], 12) +\n            this.fromBase64(ifcGuid[8], 6) +\n            this.fromBase64(ifcGuid[9], 0);\n        const b2 =\n            this.fromBase64(ifcGuid[10], 18) +\n            this.fromBase64(ifcGuid[11], 12) +\n            this.fromBase64(ifcGuid[12], 6) +\n            this.fromBase64(ifcGuid[13], 0);\n        const b1 =\n            this.fromBase64(ifcGuid[14], 18) +\n            this.fromBase64(ifcGuid[15], 12) +\n            this.fromBase64(ifcGuid[16], 6) +\n            this.fromBase64(ifcGuid[17], 0);\n        const b0 =\n            this.fromBase64(ifcGuid[18], 18) +\n            this.fromBase64(ifcGuid[19], 12) +\n            this.fromBase64(ifcGuid[20], 6) +\n            this.fromBase64(ifcGuid[21], 0);\n\n        const guid0103 = this.getBytes(b0);\n        const guid0406 = this.getBytes(b1);\n        const guid0709 = this.getBytes(b2);\n        const guid1012 = this.getBytes(b3);\n        const guid1315 = this.getBytes(b4);\n        const guid1616 = this.getBytes(b5);\n\n        this.data[15] = guid0103[0]; // char: 33\n        this.data[14] = guid0103[1]; // char: 37\n        this.data[13] = guid0103[2]; // char: 39\n        this.data[12] = guid0406[0]; // char: 37\n        this.data[11] = guid0406[1]; // char: 35\n        this.data[10] = guid0406[2]; // char: 32\n        this.data[9] = guid0709[0]; // short: 32\n        this.data[8] = guid0709[1]; // short: 31\n        this.data[6] = guid0709[2];\n        this.data[7] = guid1012[0]; // int: 0021\n        this.data[4] = guid1012[1];\n        this.data[5] = guid1012[2]; // int: 0000\n        this.data[0] = guid1315[0];\n        this.data[1] = guid1315[1];\n        this.data[2] = guid1315[2];\n        this.data[3] = guid1616[0]; // long: 490F2F93\n    }\n\n    setFromBufferData(buffer: ArrayBuffer | SharedArrayBuffer, offset: number) {\n        this.data = new Uint8Array(buffer, offset, 16);\n    }\n\n    private toBase64(base10Bit24: number, bitsLeft: number) {\n        let reV = \"\";\n        if (bitsLeft > 0) {\n            let a64 = base10Bit24 & 0x3f;\n            reV += Base64ConversionTable[a64];\n            reV = this.toBase64(base10Bit24 >> 6, bitsLeft - 6) + reV;\n        }\n\n        return reV;\n    }\n\n    private fromBase64(a: string, padBits: number) {\n        // base64 encoding table for IFC base64 encoding, differs from the .NET base64!\n\n        let value = 0;\n        while (value < 64) {\n            if (Base64ConversionTable[value] == a) {\n                break;\n            }\n\n            value++;\n        }\n\n        return value << padBits; // val == 64 error..\n    }\n\n    private getBytes(long: number) {\n        const buf = new ArrayBuffer(8);\n        const representation = new Int32Array(buf);\n        representation[0] = long;\n\n        return new Uint8Array(buf);\n    }\n}\n\nexport const uuidBufferAsString = ({ data }: UUID) => {\n    return `${data[0]}${data[1]}${data[2]}${data[3]}${data[4]}${data[5]}${data[6]}${data[7]}${\n        data[8]\n    }${data[9]}${data[10]}${data[11]}${data[12]}${data[13]}${data[14]}${data[15]}`;\n};\n","import {\n    AggregationOperator,\n    Entity,\n    HierarchyType,\n    IdentifierType,\n    Product,\n    Property,\n    PropertyAggregation,\n    PropertyDefinition,\n    PropertySet,\n    PropertyType,\n    TrimbimGeometryType\n} from \"../common\";\nimport {Trimble} from \"../TrimBim_generated\";\nimport {UUID} from \"../UUID\";\nimport {flatbuffers} from \"flatbuffers\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {Box3} from \"three\";\nimport {HierarchyManager} from \"./HierarchyManager\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class QueryManager {\n    private modelEntities: Fbs.ModelEntities;\n    private properties: Fbs.ModelProperties;\n    private geometry: Fbs.ModelGeometry;\n\n    private productIndex: number[];\n    private propertyIndex: Array<Set<number>>;\n\n    constructor(model: Fbs.Model, private boundingBoxManager: BoundingBoxManager, private hierarchyManager: HierarchyManager) {\n        this.modelEntities = model.entities();\n        this.properties = model.properties();\n        this.geometry = model.geometry();\n    }\n\n    findByClass(entityClass: string): number[] {\n        const entity = new Fbs.Entity();\n        const result: number[] = [];\n        for (let entityId = 0, l = this.modelEntities.entitiesLength(); entityId < l; entityId++) {\n            this.modelEntities.entities(entityId, entity);\n            if (this.modelEntities.entityClasses(entity.classIndex()) === entityClass)\n                result.push(entityId);\n        }\n        return result;\n    }\n\n    findByProperty(nameMatch: string | RegExp, valueMatch: string | RegExp | number): number[] {\n        const result: number[] = [];\n        entityLoop: for (let entityId = 0, l = this.modelEntities.entitiesLength(); entityId < l; entityId++) {\n            const propertySetIds = this.getPropertySetIdsFromEntity(entityId);\n            for (const propertySetId of propertySetIds) {\n                const propSet = this.getPropertySet(propertySetId);\n                for (const prop of propSet.properties) {\n                    const name = `${propSet.name}.${prop.name}`;\n                    const nameMatches = nameMatch === undefined ||\n                        typeof nameMatch === \"string\" && nameMatch === name ||\n                        nameMatch instanceof RegExp && name.match(nameMatch);\n\n                    const valueMatches = valueMatch === undefined ||\n                        valueMatch instanceof RegExp && typeof prop.value === \"string\" && prop.value.match(valueMatch) ||\n                        valueMatch === prop.value;\n\n                    if (nameMatches && valueMatches) {\n                        result.push(entityId);\n                        continue entityLoop;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    getProperties(entityId: number): PropertySet[] {\n        const propertySetIds = this.getPropertySetIdsFromEntity(entityId);\n        const properties = [];\n        for (const propertySetId of propertySetIds) {\n            properties.push(this.getPropertySet(propertySetId));\n        }\n        return properties;\n    }\n\n    aggregateProperties(entityIds: number[], aggregations: PropertyAggregation[]): void {\n        for (const entityId of entityIds) {\n            const propSets = this.getProperties(entityId);\n            for (const a of aggregations) this.aggregate(a, propSets);\n        }\n    }\n\n    private getProperty(propSets: PropertySet[], propertySetName: string, propertyName: string): Property {\n        const set = propSets.find(s => s.name === propertySetName);\n        return set ? set.properties.find(p => p.name === propertyName) : undefined;\n    }\n\n    private aggregate(aggregation: PropertyAggregation, propSets: PropertySet[]): void {\n        if (aggregation.operator === AggregationOperator.SHARED) {\n            if (aggregation.value === null) return; // value varies\n\n            const property = this.getProperty(propSets, aggregation.propertySetName, aggregation.propertyName);\n            if (property) {\n                if (aggregation.value === undefined) {\n                    aggregation.value = property.value;\n                    aggregation.type = property.type;\n                }\n                else if (aggregation.value !== property.value) aggregation.value = null;\n            } else {\n                aggregation.value = null;\n                aggregation.type = undefined; // not a shared value\n            }\n        }\n        else if (aggregation.operator === AggregationOperator.SUM) {\n            const property = this.getProperty(propSets, aggregation.propertySetName, aggregation.propertyName);\n            if (property) {\n                if (aggregation.value === undefined) {\n                    aggregation.value = 0;\n                    aggregation.type = property.type;\n                }\n                (aggregation.value as number) += typeof property.value === \"string\" ? Number.parseFloat(property.value as string) : property.value as number;\n            }\n        }\n    }\n\n    findByGeometryType(geometryType: TrimbimGeometryType): number[] {\n        const instance = new Fbs.GeometryInstance();\n        const definition = new Fbs.GeometryDefinition();\n        const result: number[] = [];\n\n        entityLoop: for (let entityId = 0, l = this.modelEntities.entitiesLength(); entityId < l; entityId++) {\n            const instanceIds = this.boundingBoxManager.getEntityInstanceIds(entityId);\n            if (!instanceIds) continue;\n\n            for (const instanceId of instanceIds) {\n                this.geometry.instances(instanceId, instance);\n                this.geometry.definitions(instance.definitionId(), definition);\n                if (definition.type() === geometryType) {\n                    result.push(entityId);\n                    continue entityLoop;\n                }\n            }\n        }\n        return result;\n    }\n\n    findEntitiesByLayer(layerIndex: number): number[] {\n        const instance = new Fbs.GeometryInstance();\n        const result: number[] = [];\n\n        entityLoop: for (let entityId = 0, l = this.modelEntities.entitiesLength(); entityId < l; entityId++) {\n            const instanceIds = this.boundingBoxManager.getEntityInstanceIds(entityId);\n            if (!instanceIds) continue;\n\n            for (const instanceId of instanceIds) {\n                this.geometry.instances(instanceId, instance);\n                if (instance.layerId() === layerIndex) {\n                    result.push(entityId);\n                    continue entityLoop;\n                }\n            }\n        }\n        return result;\n    }\n\n    getAABBFromIds(entityIds: number[], box: Box3): void {\n        const unionAABB = (entityId: number) => {\n            const instanceIds = this.boundingBoxManager.getEntityInstanceIds(entityId);\n            if (instanceIds) {\n                instanceIds.forEach(instanceId => {\n                    box.union(this.boundingBoxManager.getTransformedBoundingBox(instanceId));\n                });\n            }\n            const children = this.hierarchyManager.getDirectChildren(entityId);\n            if (children) {\n                for (const childId of children)\n                    unionAABB(childId);\n            }\n        };\n        entityIds.forEach(unionAABB);\n    }\n\n    getParents(entityIds: number[], type: HierarchyType): number[] {\n        const node = new Fbs.HierarchyNode();\n\n        let input = new Map<number, number>();\n        entityIds.forEach((v, i) => input.set(v, i));\n        let input2 = new Map<number, number>();\n        const parentIds = new Set<number>();\n\n        while (input.size > 0) {\n            for (let i = 0, l = this.modelEntities.hierarchiesLength(); i < l; i++) {\n                this.modelEntities.hierarchies(i, node);\n                if (node.type() !== type) continue;\n\n                const index = input.get(node.childElementId());\n                if (index !== undefined) {\n                    const parentId = node.parentElementId();\n                    parentIds.delete(index);\n                    parentIds.add(parentId);\n                    input2.set(parentId, index);\n                }\n            }\n            input.clear();\n            const tmp = input2;\n            input2 = input;\n            input = tmp;\n        }\n\n        return Array.from(parentIds);\n    }\n\n    getEntity(entityId: number): Entity {\n        if (entityId < 0 || entityId > this.modelEntities.entitiesLength())\n            return;\n\n        const entity = new Entity();\n\n        const e = this.modelEntities.entities(entityId);\n        const identifierType = e.type();\n\n        entity.id = entityId;\n        entity.identifierType = identifierType;\n        entity.identifier = this.getIdentifier(entity.identifierType, e);\n\n        entity.class = this.modelEntities.entityClasses(e.classIndex());\n\n        return entity;\n    }\n\n    private getIdentifier = (() => {\n        const tmpGuid = new Fbs.Guid();\n        return (identifierType: IdentifierType, e: Fbs.Entity) => {\n            switch (identifierType) {\n                case IdentifierType.Guid:\n                    const guid = this.modelEntities.guidIdentifiers(e.identifierIndex(), tmpGuid);\n                    return createUUID(guid);\n                case IdentifierType.String:\n                    return this.modelEntities.stringIdentifiers(e.identifierIndex());\n                case IdentifierType.SpatialHash:\n                    return [\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).x(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).y(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).z(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d0(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d1(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d2(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d3(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d4(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d5(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d6(),\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d7()\n                    ];\n                case IdentifierType.DwgHandle:\n                    return [\n                        this.modelEntities.dwgHandleIdentifiers(e.identifierIndex()).high,\n                        this.modelEntities.dwgHandleIdentifiers(e.identifierIndex()).low\n                    ];\n                case IdentifierType.None:\n                    return;\n                default:\n                    console.warn(\"Unknown identifier\", identifierType);\n                    return;\n            }\n        };\n    })();\n\n    getProductId(entityId: number): number {\n        const index = this.loadProductIndex();\n        return index[entityId];\n    }\n\n    private loadProductIndex(): number[] {\n        if (this.productIndex === undefined) {\n            const entitiesLength = this.modelEntities.entitiesLength();\n            this.productIndex = new Array<number>(entitiesLength);\n\n            const b = new Fbs.ProductBinding();\n            for (let i = 0, l = this.properties.productBindingsLength(); i < l; i++) {\n                this.properties.productBindings(i, b);\n                this.productIndex[b.entityId()] = b.productId();\n            }\n        }\n\n        return this.productIndex;\n    }\n\n    getProduct(productId: number): Product {\n        if (productId === undefined) return undefined;\n\n        const p = this.properties.products(productId);\n        return {\n            name: this.properties.names(p.name()),\n            description: this.properties.descriptions(p.description()),\n            objectType: this.properties.objectTypes(p.objectType())\n        };\n    }\n\n    getPropertySetIdsFromEntity(entityId: number): Set<number> {\n        const index = this.loadPropertyIndex();\n        return index[entityId];\n    }\n\n    private loadPropertyIndex(): Array<Set<number>> {\n        if (this.propertyIndex === undefined) {\n            const entitiesLength = this.modelEntities.entitiesLength();\n            const index: Map<number, Set<number>> = new Map();\n\n            const b = new Fbs.PropertySet();\n            for (let i = 0, l = this.properties.propertySetBindingsLength(); i < l; i++) {\n                this.properties.propertySetBindings(i, b);\n\n                for (let j = 0, l = b.entitiesLength(); j < l; j++) {\n                    const entityId = b.entities(j);\n\n                    if (index.has(entityId)) {\n                        index.get(entityId).add(i);\n                    } else {\n                        index.set(entityId, new Set([i]));\n                    }\n                }\n            }\n\n            this.propertyIndex = new Array<Set<number>>(entitiesLength);\n            for (let i = 0; i < entitiesLength; i++) {\n                if (index.has(i)) {\n                    this.propertyIndex[i] = index.get(i);\n                } else {\n                    this.propertyIndex[i] = new Set();\n                }\n            }\n        }\n\n        return this.propertyIndex;\n    }\n\n    getPropertySet(propSetId: number): PropertySet {\n        if (propSetId === undefined)\n            throw new RangeError(\"Must provide propSetId\");\n\n        const bindings = this.properties.propertySetBindings(propSetId);\n        const definition = this.properties.definitions(bindings.definition());\n        const properties = this.getSinglePropertyDefinitions(definition, bindings);\n\n        return { name: this.properties.propertySetNames(definition.name()), properties } as PropertySet;\n    }\n\n    private getSinglePropertyDefinitions(\n        def: Fbs.PropertySetDefinition,\n        bindings: Fbs.PropertySet\n    ): Property[] {\n        const properties = new Array<Property>(def.propertiesLength());\n\n        for (let i = 0, l = def.propertiesLength(); i < l; i++) {\n            const singlePropertyDefinition = def.properties(i);\n\n            const name = this.properties.propertyNames(singlePropertyDefinition.name());\n            const value = this.getValue(singlePropertyDefinition.type(), bindings.values(i));\n            const type = <number>singlePropertyDefinition.type();\n\n            properties[i] = { name: name, value: value as number, type: type };\n        }\n\n        return properties;\n    }\n\n    private getValue(type: any, index: number): string | number | flatbuffers.Long {\n        switch (type) {\n            case PropertyType.LengthMeasure:\n                return this.properties.lengthMeasures(index);\n\n            case PropertyType.AreaMeasure:\n                return this.properties.areaMeasures(index);\n\n            case PropertyType.VolumeMeasure:\n                return this.properties.volumeMeasures(index);\n\n            case PropertyType.MassMeasure:\n                return this.properties.massMeasures(index);\n\n            case PropertyType.AngleMeasure:\n                return this.properties.angleMeasures(index);\n\n            case PropertyType.StringValue:\n                return this.properties.stringValues(index);\n\n            case PropertyType.IntValue:\n                return index;\n\n            case PropertyType.DoubleValue:\n                return this.properties.doubleValues(index);\n\n            case PropertyType.DateTime:\n                return this.properties.dateTimeValues(index);\n\n            case PropertyType.Logical:\n                return index;\n\n            case PropertyType.Boolean:\n                return index;\n        }\n    }\n\n    getPropertySetNames(): string[] {\n        const result = new Array<string>(this.properties.propertySetNamesLength());\n\n        for (let i = 0; i < result.length; i++) {\n            result[i] = this.properties.propertySetNames(i);\n        }\n\n        return result;\n    }\n\n    getPropertyDefinitions(propertySetName: string): PropertyDefinition[] {\n        if (propertySetName === undefined) {\n            throw new Error(\"Must provide propSetName\");\n        }\n        const propSetIds = this.getDefinitionIdsFromNames(propertySetName);\n        if (propSetIds.size === 0) {\n            throw new Error(`No property set name found matching ${propertySetName} `);\n        }\n\n        const result = new Map<string, PropertyDefinition>();\n        for (const setId of propSetIds.keys()) {\n            const setDefinition = this.properties.definitions(setId);\n            for (let i = 0, l = setDefinition.propertiesLength(); i < l; i++) {\n                const name = this.properties.propertyNames(setDefinition.properties(i).name());\n                if (!result.has(name))\n                    result.set(name, {\n                        name: name,\n                        type: setDefinition.properties(i).type() as unknown as PropertyType\n                    });\n            }\n        }\n        return Array.from(result.values());\n    }\n\n    private getDefinitionIdsFromNames(setName: string, propertyName?: string): Map<number, number> {\n        const setNameId = this.getSetNameId(setName);\n        const propertyNameIds = propertyName ? this.getPropertyNameIds(propertyName) : undefined;\n\n        const length = this.properties.definitionsLength();\n        const definitionIds = new Map();\n\n        for (let i = 0; i < length; i++) {\n            const definition = this.properties.definitions(i);\n\n            if (setNameId === definition.name()) {\n                if (propertyNameIds !== undefined) {\n                    const l = definition.propertiesLength();\n                    for (let j = 0; j < l; j++) {\n                        const property = definition.properties(j);\n                        if (propertyNameIds.has(property.name())) {\n                            definitionIds.set(i, j);\n                        }\n                    }\n                } else {\n                    definitionIds.set(i, undefined);\n                }\n            }\n        }\n\n        return definitionIds;\n    }\n\n    private getSetNameId(name: string): number {\n        const length = this.properties.propertySetNamesLength();\n\n        for (let i = 0; i < length; i++) {\n            if (this.properties.propertySetNames(i) === name) {\n                return i;\n            }\n        }\n    }\n\n    getPropertyNameIds(name: string): Set<number> {\n        const length = this.properties.propertyNamesLength();\n        const indices = new Set<number>();\n        for (let i = 0; i < length; i++) {\n            if (name === this.properties.propertyNames(i)) {\n                indices.add(i);\n            }\n        }\n\n        return indices;\n    }\n\n    getPropertyValues(propertyName: string): Array<string | number | flatbuffers.Long> {\n        if (propertyName === undefined) {\n            throw new Error(\"Must provide propertyName\");\n        }\n\n        const propertyIds = this.getPropertyNameIds(propertyName);\n\n        if (propertyIds === undefined) {\n            throw new Error(`PropertyName ${propertyName} does not exist`);\n        }\n\n        const result = new Set<string | number | flatbuffers.Long>();\n\n        const bindingsCount = this.properties.propertySetBindingsLength();\n        for (let i = 0; i < bindingsCount; i++) {\n            const setBinding = this.properties.propertySetBindings(i);\n            const setDefinition = this.properties.definitions(setBinding.definition());\n            const propertyCount = setDefinition.propertiesLength();\n\n            for (let propertyIdx = 0; propertyIdx < propertyCount; propertyIdx++) {\n                const nameIndex = setDefinition.properties(propertyIdx).name();\n                if (propertyIds.has(nameIndex)) {\n                    const type = setDefinition.properties(propertyIdx).type();\n                    result.add(this.getValue(type, setBinding.values(propertyIdx)));\n                }\n            }\n        }\n\n        return [...result];\n    }\n\n    /**\n     * Converts static ids to runtime ids that are used for modifying the model.\n     * @param  {string[]} guids\n     * @returns {number[]}\n     */\n    getEntityIdsFromGuids(guids: string[]): number[] {\n        const uuids = new Map();\n        const tmpUuid = new UUID({});\n        let index = 0;\n        for (const id of guids) {\n            if (id.length === 22) {\n                uuids.set(id, index);\n            } else if (id.length === 36) {\n                // This is probably not good enough...\n                tmpUuid.setMsGuid(id);\n                uuids.set(tmpUuid.ifcGuid, index);\n            } else {\n                console.warn(\"Only IFC GUID and MS GUID is currently supported\");\n            }\n\n            index++;\n        }\n\n        const tmpGuid = new Fbs.Guid();\n        const tmpEntity = new Fbs.Entity();\n        const matchingEntityIds = new Array(guids.length);\n        let foundIds = 0;\n\n        for (let i = 0, l = this.modelEntities.entitiesLength(); i < l; i++) {\n            this.modelEntities.entities(i, tmpEntity);\n            if (tmpEntity.type() === Fbs.IdentifierType.Guid) {\n                this.modelEntities.guidIdentifiers(tmpEntity.identifierIndex(), tmpGuid);\n                tmpUuid.setFromBufferData(tmpGuid.bb.bytes().buffer, tmpGuid.bb_pos);\n                const id = tmpUuid.ifcGuid;\n                if (uuids.has(id)) {\n                    matchingEntityIds[uuids.get(id)] = i;\n                    foundIds++;\n                    if (foundIds === guids.length) return matchingEntityIds;\n                }\n            }\n        }\n\n        if (matchingEntityIds.length !== guids.length) {\n            console.warn(\"Not all ids could be converted\");\n        }\n\n        return matchingEntityIds;\n    }\n\n    /**\n     * Find identifiers of entities which satisfy conditions by checking property set definitions directly.\n     */\n    getAllEntityIds(): Set<number> {\n        const l = this.modelEntities.entitiesLength();\n        const allEntities = new Set<number>();\n\n        for (let i = 0; i < l; i++) {\n            allEntities.add(i);\n        }\n\n        return allEntities;\n    }\n\n    getEntitiesFromIds(entityIds?: number[]): Entity[] {\n        if (entityIds) {\n            const entities: Entity[] = Array(entityIds.length);\n            for (let i = 0, l = entityIds.length; i < l; i++)\n                entities[i] = this.getEntity(entityIds[i]);\n            return entities;\n        }\n        else {\n            const entitiesLength = this.modelEntities.entitiesLength();\n            const entities: Entity[] = Array(entitiesLength);\n            for (let entityId = 0; entityId < entitiesLength; entityId++)\n                entities[entityId] = this.getEntity(entityId);\n            return entities;\n        }\n    }\n}\n\nconst createUUID = (guid: Fbs.Guid) =>\n    new UUID({data: guid.bb.bytes().slice(guid.bb_pos, guid.bb_pos + 16)});\n","import {Trimble} from \"../TrimBim_generated\";\nimport {FontStyle, ITextTextureMessage, ITextureMessage, MessageType, TextTextureDescription} from \"./WorkerMessages\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\n\nexport class TextureManager {\n    private texture = new Trimble.Technology.TrimBim.Fbs.Texture();\n    private transparency: boolean[];\n\n    constructor(private modelId: string, private messenger: AbstractWorkerMessenger) {\n    }\n\n    async sendModelTextures(model: Trimble.Technology.TrimBim.Fbs.Model): Promise<void> {\n        const geometry = model.geometry();\n        this.transparency = new Array(geometry.texturesLength());\n        for (let i = 0; i < geometry.texturesLength(); i++) {\n            const tex = geometry.textures(i, this.texture);\n            const image = new Int8Array(tex.bytesLength());\n            image.set(tex.bytesArray());\n            const response = await this.messenger.request({ type: MessageType.ADD_TEXTURE, modelId: this.modelId, textureId: i, image: image, imageFormat: tex.type() } as ITextureMessage, [image.buffer]);\n            this.transparency[i] = response.transparent;\n        }\n    }\n\n    isTransparent(textureId: number): boolean {\n        return this.transparency[textureId];\n    }\n\n    async sendTexts(texts: string[], styles: FontStyle[]): Promise<TextTextureDescription[]> {\n        const response = await this.messenger.request({\n            type: MessageType.ADD_TEXT_TEXTURES,\n            modelId: this.modelId,\n            texts: texts,\n            styles: styles\n        } as ITextTextureMessage);\n        return response.textureDesc;\n    }\n\n}\n","import {Hit} from \"./HitPoint\";\nimport {MaterialManager} from \"./MaterialManager\";\nimport {\n    Entity,\n    HierarchyType,\n    IMetaMaterial,\n    Product,\n    PropertyAggregation,\n    PropertyDefinition,\n    PropertySet,\n    TrimbimGeometryType,\n    TrimbimPickPriority,\n    WorkerCamera\n} from \"../common\";\nimport {flatbuffers} from \"flatbuffers\";\nimport {Trimble} from \"../TrimBim_generated\";\nimport {Box3, Frustum, Matrix4, Plane, Ray} from \"three\";\nimport {LayerManager} from \"./LayerManager\";\nimport {TrimbimWorkerProtocol} from \"../Model/TrimbimWorkerProtocol\";\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\nimport {GeometryManager} from \"./GeometryManager\";\nimport {BoundingBoxManager} from \"./BoundingBoxManager\";\nimport {PickManager} from \"./PickManager\";\nimport {EntityHierarchyState} from \"./EntityHierarchyState\";\nimport {HierarchyManager} from \"./HierarchyManager\";\nimport {StaticBoundingBoxManager} from \"./StaticBoundingBoxManager\";\nimport {BatchingGeometryManager} from \"./BatchingGeometryManager\";\nimport {QueryManager} from \"./QueryManager\";\nimport {TextureManager} from \"./TextureManager\";\nimport {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\n\nexport class WorkerTrimbimModel implements TrimbimWorkerProtocol {\n    private model: Fbs.Model;\n    private geometryManager: GeometryManager;\n    private materialManager: MaterialManager;\n    private textureManager: TextureManager;\n    private boundingBoxManager: BoundingBoxManager;\n    private pickManager: PickManager;\n    private layerManager: LayerManager;\n    private entityState: EntityHierarchyState;\n    private hierarchyManager: HierarchyManager;\n    private queryManager: QueryManager;\n    private camera: WorkerCamera;\n\n    constructor(private modelId: string, buffer: ArrayBuffer, private messenger: AbstractWorkerMessenger, private editing: boolean) {\n        const buf = new flatbuffers.ByteBuffer(new Uint8Array(buffer));\n        this.model = Fbs.Model.getRootAsModel(buf);\n\n        this.layerManager = new LayerManager(this.model);\n        this.boundingBoxManager = editing ? new BoundingBoxManager(this.model) : new StaticBoundingBoxManager(this.model);\n        this.textureManager = new TextureManager(modelId, messenger);\n        this.materialManager = new MaterialManager(modelId, this.textureManager, (m, t) => messenger.request(m, t));\n        this.hierarchyManager = new HierarchyManager(this.model);\n        this.entityState = new EntityHierarchyState(this.model, this.hierarchyManager);\n    }\n\n    async createCaches(): Promise<void> {\n        await this.textureManager.sendModelTextures(this.model);\n        const materialIdMap = this.materialManager.sendModelMaterials(this.model);\n\n        // model editing requires batching to be disabled\n        this.geometryManager = this.editing ? new GeometryManager(this.modelId, this.messenger, this.model, this.boundingBoxManager, this.entityState, this.layerManager, this.textureManager, materialIdMap) :\n            new BatchingGeometryManager(this.modelId, this.messenger, this.model, this.boundingBoxManager, this.entityState, this.layerManager, this.textureManager, materialIdMap);\n        this.pickManager = new PickManager(this.model, this.boundingBoxManager, this.geometryManager, this.entityState, this.layerManager);\n        this.queryManager = new QueryManager(this.model, this.boundingBoxManager, this.hierarchyManager);\n        await this.geometryManager.createGeometryPrototypes();\n    }\n\n    updateLoop(timestamp: number): boolean {\n        this.geometryManager.updateLoop(timestamp);\n        return this.geometryManager.updateFinished;\n    }\n\n    pick(ray: Ray, frustum: Frustum, navigation: boolean): Hit {\n        if (!this.camera) return; // geometry update paused\n        return this.pickManager.pick(ray, frustum, this.camera.clipPlanes, navigation);\n    }\n\n    pickSnapped(ray: Ray, frustum: Frustum, snapTypes: SnapType[]): Hit[] {\n        if (!this.camera) return; // geometry update paused\n        return this.pickManager.pickSnapped(ray, frustum, snapTypes, this.camera.clipPlanes);\n    }\n\n    pickOnLine(entityId: number, ray: Ray): Hit {\n        return this.pickManager.pickOnLine(entityId, ray);\n    }\n\n    getHierarchyRoots(hierarchyType?: HierarchyType): number[] {\n        return this.hierarchyManager.getRoots(hierarchyType);\n    }\n\n    getEntityIdsWithGeometry(): number[] {\n        return this.geometryManager.getEntityIdsWithGeometry();\n    }\n\n    getHierarchyParents(entityIds: number[], hierarchyType?: HierarchyType, recursive?: boolean): number[] {\n        return this.hierarchyManager.getParents(entityIds, hierarchyType, recursive);\n    }\n\n    getHierarchyChildren(entityIds: number[], recursive: boolean): number[] {\n        return this.hierarchyManager.getChildren(entityIds, recursive);\n    }\n\n    areaPick(frustum: Frustum, containedOnly: boolean): number[] {\n        if (!this.camera) return; // geometry update paused\n        return this.pickManager.areaPick(frustum, this.camera.clipPlanes, containedOnly);\n    }\n\n    setSelection(entityIds: number[]): void {\n        this.entityState.clearSelection();\n        this.forEachEntity(entityIds, entityId => this.entityState.setSelected(entityId, true));\n        this.geometryManager.forceStateUpdate(entityIds);\n    }\n\n    private forEachEntity(entityIds: number[], loop: (entityId: number, i: number) => void): void {\n        if (entityIds)\n            for (let i = 0; i < entityIds.length; i++) loop(entityIds[i], i);\n        else\n            for (let entityId = 0; entityId < this.entityState.length; entityId++) loop(entityId, entityId);\n    }\n\n    setHovered(entityIds: number[]): void {\n        this.entityState.resetHovered();\n        this.forEachEntity(entityIds, entityId => this.entityState.setHovered(entityId, true));\n        this.geometryManager.forceStateUpdate(entityIds);\n    }\n\n    setCustomMaterial(entityIds: number[], material: IMetaMaterial): void {\n        // copy some parameters from old materials\n        const newMaterials: IMetaMaterial[] = [];\n        this.forEachEntity(entityIds, entityId => {\n            const oldMatId = this.entityState.getCustomMaterialId(entityId);\n\n            if (oldMatId) {\n                const oldMat = this.materialManager.getMaterial(oldMatId);\n                const newMat = Object.assign({}, material) as IMetaMaterial;\n\n                if (newMat.color === undefined && oldMat.color !== undefined) newMat.color = oldMat.color;\n                if (newMat.opacity === undefined && oldMat.opacity !== undefined) newMat.opacity = oldMat.opacity;\n                if (newMat.transparent === undefined && oldMat.transparent !== undefined) newMat.transparent = oldMat.transparent;\n                if (newMat.side === undefined && oldMat.side !== undefined) newMat.side = oldMat.side;\n                if (newMat.textureId === undefined && oldMat.textureId !== undefined) newMat.textureId = oldMat.textureId;\n                newMaterials.push(newMat);\n            }\n            else {\n                newMaterials.push(material);\n            }\n        });\n\n        const materialIds = this.materialManager.sendMaterials(newMaterials);\n        this.forEachEntity(entityIds, (entityId, i) => {\n            this.entityState.setCustomMaterialId(entityId, materialIds[i]);\n        });\n        this.geometryManager.forceStateUpdate(entityIds);\n    }\n\n    getCustomMaterials(entityIds: number[]): IMetaMaterial[] {\n        const result: IMetaMaterial[] = [];\n        this.forEachEntity(entityIds, entityId => {\n            const materialId = this.entityState.getCustomMaterialId(entityId);\n            result.push(materialId ? this.materialManager.getMaterial(materialId) : undefined);\n        });\n        return result;\n    }\n\n    getCustomMaterialEntityIds(): number[] {\n        const result: number[] = [];\n        for (let entityId = 0; entityId < this.entityState.length; entityId++)\n            if (this.entityState.getCustomMaterialId(entityId)) result.push(entityId);\n        return result;\n    }\n\n    setVisibility(entityIds: number[], visible: boolean): void {\n        this.forEachEntity(entityIds, entityId => this.entityState.setVisible(entityId, visible));\n        this.geometryManager.forceStateUpdate(entityIds);\n    }\n\n    setPickPriority(entityIds: number[], pickPriority: TrimbimPickPriority): void {\n        this.forEachEntity(entityIds, entityId => this.entityState.setPickPriority(entityId, pickPriority));\n    }\n\n    getEntitiesLength(): number {\n        return this.model.entities().entitiesLength();\n    }\n\n    getEntities(entityIds?: number[]): Entity[] {\n        return this.queryManager.getEntitiesFromIds(entityIds);\n    }\n\n    getProducts(entityIds: number[]): Product[] {\n        const products = new Array<Product>(entityIds.length);\n        for (let i = 0; i < entityIds.length; i++) {\n            products[i] = this.getEntityProduct(entityIds[i]);\n        }\n        return products;\n    }\n\n    getLayers(): string[] {\n        return this.layerManager.getLayers();\n    }\n\n    findLayersByEntities(entityIds: number[]): string[] {\n        entityIds = entityIds.concat(this.hierarchyManager.getChildren(entityIds, true));\n        return this.layerManager.findLayersByEntities(entityIds);\n    }\n\n    getLayerVisibility(layer: string): boolean {\n        return this.layerManager.getLayerVisibility(layer);\n    }\n\n    setLayerVisibility(layer: string, visible: boolean): void {\n        this.layerManager.setLayerVisibility(layer, visible);\n        this.geometryManager.forceUpdate();\n    }\n\n    getEntityParentId(entityId: number, hierarchyType: HierarchyType): number {\n        if (hierarchyType === undefined) return entityId;\n\n        const parentId = this.queryManager.getParents([entityId], hierarchyType)[0];\n        return parentId !== undefined ? parentId : entityId;\n    }\n\n    getEntity(entityId: number): Entity {\n        return this.queryManager.getEntity(entityId);\n    }\n\n    getEntityProduct(entityId: number): Product {\n        return this.queryManager.getProduct(this.queryManager.getProductId(entityId));\n    }\n\n    getProperties(entityId: number): PropertySet[] {\n        return this.queryManager.getProperties(entityId);\n    }\n\n    aggregateProperties(entityIds: number[], aggregations: PropertyAggregation[]): void {\n        return this.queryManager.aggregateProperties(entityIds, aggregations);\n    }\n\n    findEntitiesByClass(entityClass: string): number[] | Promise<number[]> {\n        return this.queryManager.findByClass(entityClass);\n    }\n\n    findEntitiesByProperty(nameMatch: string | RegExp, valueMatch: string | RegExp | number): number[] {\n        return this.queryManager.findByProperty(nameMatch, valueMatch);\n    }\n\n    findEntitiesByGeometryType(geometryType: TrimbimGeometryType): number[] {\n        return this.queryManager.findByGeometryType(geometryType);\n    }\n\n    findEntitiesByLayer(layerName: string): number[] {\n        return this.queryManager.findEntitiesByLayer(this.layerManager.getLayerIndex(layerName));\n    }\n\n    setCamera(camera: WorkerCamera): void {\n        this.camera = camera;\n        this.geometryManager.setCamera(camera);\n    }\n\n    getBoundingBox(): Box3 {\n        return this.boundingBoxManager.modelBoundingBox;\n    }\n\n    getEntitiesBoundingBox(entityIds: number[]): Box3 {\n        const box = new Box3();\n        this.queryManager.getAABBFromIds(entityIds, box);\n        return box;\n    }\n\n    resetCustomMaterials(entityIds: number[]): void {\n        if (entityIds) {\n            for (const entityId of entityIds)\n                this.entityState.setCustomMaterialId(entityId, 0)\n        }\n        else\n            this.entityState.resetMaterialIds();\n        this.geometryManager.forceUpdate();\n    }\n\n    clearSelection(): void {\n        this.entityState.clearSelection();\n        this.geometryManager.forceUpdate();\n    }\n\n    resetVisibility(): void {\n        this.entityState.resetVisibility();\n        this.geometryManager.forceUpdate();\n    }\n\n    resetPickPriority(): void {\n        this.entityState.resetPickPriority();\n    }\n\n    getPropertySetNames(): string[] {\n        return this.queryManager.getPropertySetNames();\n    }\n\n    getPropertyDefinitions(propertySetName: string): PropertyDefinition[] {\n        return this.queryManager.getPropertyDefinitions(propertySetName);\n    }\n\n    getPropertyValues(propertyName: string): Array<string | number | flatbuffers.Long> {\n        return this.queryManager.getPropertyValues(propertyName);\n    }\n\n    guidsToEntityIds(guids: string[]): number[] {\n        return this.queryManager.getEntityIdsFromGuids(guids);\n    }\n\n    getVisibleEntityIds(visible: boolean, hierarchical?: boolean): number[] {\n        const filter = hierarchical ?\n            (entityId: number) => this.entityState.isVisibleByHierarchy(entityId) === visible :\n            (entityId: number) => this.entityState.isVisible(entityId) === visible;\n        return this.getEntityIdsByState(filter);\n    }\n\n    getEntityIdsByPickPriority(pickPriority: TrimbimPickPriority, hierarchical?: boolean): number[] {\n        const filter = hierarchical ?\n            (entityId: number) => this.entityState.getPickPriorityByHierarchy(entityId) === pickPriority :\n            (entityId: number) => this.entityState.getPickPriority(entityId) === pickPriority;\n        return this.getEntityIdsByState(filter);\n    }\n\n    private getEntityIdsByState(filter: (entityId: number) => boolean): number[] {\n        const result: number[] = [];\n        for (let entityId = 0, len = this.model.entities().entitiesLength(); entityId < len; entityId++) {\n            if (filter(entityId)) result.push(entityId);\n        }\n        return result;\n    }\n\n    setEntityTransform(entityId: number, transform: Matrix4): void {\n        this.geometryManager.setEntityTransform(entityId, transform);\n    }\n\n    getBuffer(): ArrayBuffer {\n        return this.model.bb.bytes().buffer;\n    }\n\n    dispose(): void {\n        this.geometryManager.dispose();\n    }\n}\n","import {AbstractWorkerMessenger} from \"./AbstractWorkerMessenger\";\nimport {IMessage} from \"./WorkerMessages\";\n\nexport class WorkerMessenger extends AbstractWorkerMessenger {\n    constructor(private messagePort: MessagePort, onRequest?: (message: IMessage) => Promise<void>) {\n        super(onRequest);\n        this.setupPort(messagePort);\n    }\n\n    protected async getPort(message: IMessage): Promise<MessagePort> {\n        return this.messagePort;\n    }\n}\n","import {IMessage} from \"./WorkerMessages\";\n\nexport abstract class AbstractWorkerMessenger {\n    protected nextMessageId: number = 0;\n    protected callbacks: Map<number, (response: any) => void> = new Map();\n\n    protected constructor(private onRequest: (message: IMessage) => void) {\n    }\n\n    protected abstract async getPort(message: IMessage): Promise<MessagePort>;\n\n    protected setupPort(port: MessagePort): void {\n        port.onmessage = this.processMessage;\n    }\n\n    request<T>(request: T & IMessage, transfer?: Transferable[]): Promise<T & IMessage> {\n        request.messageId = this.nextMessageId++;\n\n        return new Promise(async (resolve, reject) => {\n            this.callbacks.set(request.messageId, (response: T & IMessage) => {\n                if (response.error)\n                    reject(response.error);\n                else\n                    resolve(response);\n            });\n            const port = await this.getPort(request);\n            port.postMessage(request, transfer);\n        });\n    }\n\n    protected processMessage = (e: MessageEvent) => {\n        if (e.data.isResponse)\n            this.processResponse(e.data);\n        else\n            this.processRequest(e.data);\n    };\n\n    protected processResponse(message: IMessage): void {\n        const callback = this.callbacks.get(message.messageId);\n        this.callbacks.delete(message.messageId);\n        callback(message);\n    }\n\n    protected async processRequest(message: IMessage): Promise<void> {\n        try {\n            await this.onRequest(message);\n        }\n        catch (e) {\n            console.error(e);\n            message.error = e.toString();\n        }\n        message.isResponse = true;\n        (await this.getPort(message)).postMessage(message);\n    }\n}\n","import {\n    AggregatePropertiesMessage,\n    ICallMessage,\n    ICameraUpdateMessage,\n    IGetBoundingBoxesMessage,\n    IGetPropertyDefinitionsMessage,\n    IGetPropertySetNamesMessage,\n    IGetPropertyValuesMessage,\n    IGuidsToEntityIdsMessage,\n    ILoadMessage,\n    IPickMessage,\n    IUnloadMessage,\n    MessageType\n} from \"./WorkerMessages\";\nimport {WorkerTrimbimModel} from \"./WorkerTrimbimModel\";\nimport {Frustum, Matrix4, Plane, Ray, Vector3} from \"three\";\nimport {AbstractWorker} from \"./AbstractWorker\";\n\nclass TrimbimWorker extends AbstractWorker {\n    private models: Map<string, WorkerTrimbimModel> = new Map();\n\n    constructor() {\n        super();\n\n        this.it[MessageType.LOAD] = async (message: ILoadMessage) => {\n            const model = new WorkerTrimbimModel(message.modelId, message.buffer, this.messenger, message.editing);\n            await model.createCaches();\n            this.models.set(message.modelId, model);\n\n            message.buffer = undefined; // remove from response\n            message.boundingBox = model.getBoundingBox();\n        };\n\n        this.it[MessageType.UNLOAD] = (message: IUnloadMessage) => {\n            this.models.get(message.modelId).dispose();\n            this.models.delete(message.modelId);\n        };\n\n        this.it[MessageType.PICK] = (message: IPickMessage) => {\n            // snapped pick\n            if (message.snapTypes) {\n                message.hits = this.models.get(message.modelId).pickSnapped(restoreRay(message.ray), restoreFrustum(message.frustum), message.snapTypes);\n            }\n\n            // ray pick + frustum\n            else if (message.ray) {\n                const hit = this.models.get(message.modelId).pick(restoreRay(message.ray), restoreFrustum(message.frustum), message.navigation);\n                if (hit) message.hits = [hit];\n            }\n\n            // frustum only pick\n            else\n                message.childrenEntityIds = this.models.get(message.modelId).areaPick(restoreFrustum(message.frustum), message.frustumPickContainedOnly);\n        };\n\n        this.it[MessageType.CAMERA_UPDATE] = (message: ICameraUpdateMessage) => {\n            message.camera.frustum = restoreFrustum(message.camera.frustum);\n            message.camera.position = restoreVector(message.camera.position);\n            message.camera.clipPlanes = restorePlanes(message.camera.clipPlanes);\n            const model = this.models.get(message.modelId);\n            // model load might be unfinished\n            if (model) model.setCamera(message.camera);\n        };\n\n        this.it[MessageType.GET_BOUNDINGBOXES] = (message: IGetBoundingBoxesMessage) => {\n            message.boundingBoxes = [];\n            const model = this.models.get(message.modelId);\n            if (message.entityIdGroups) {\n                for (const entityIds of message.entityIdGroups) {\n                    const box = model.getEntitiesBoundingBox(entityIds);\n                    message.boundingBoxes.push(box);\n                }\n            }\n            else {\n                const boxEntityIds = [0];\n                for (let entityId = 0, l = model.getEntitiesLength(); entityId < l; entityId++) {\n                    boxEntityIds[0] = entityId;\n                    const box = model.getEntitiesBoundingBox(boxEntityIds);\n                    message.boundingBoxes.push(box);\n                }\n            }\n            message.entityIdGroups = undefined;\n        };\n\n        this.it[MessageType.PROPERTY_GETSETNAMES] = (message: IGetPropertySetNamesMessage) => {\n            message.names = this.models.get(message.modelId).getPropertySetNames();\n        };\n\n        this.it[MessageType.PROPERTY_GETPROPERTYDEFINITIONS] = (message: IGetPropertyDefinitionsMessage) => {\n            message.properties = this.models.get(message.modelId).getPropertyDefinitions(message.setName);\n        };\n\n        this.it[MessageType.PROPERTY_GETPROPERTYVALUES] = (message: IGetPropertyValuesMessage) => {\n            message.properties = this.models.get(message.modelId).getPropertyValues(message.propertyName);\n        };\n\n        this.it[MessageType.GUIDS_TO_ENTITYIDS] = (message: IGuidsToEntityIdsMessage) => {\n            message.entityIds = this.models.get(message.modelId).guidsToEntityIds(message.guids);\n        };\n\n        this.it[MessageType.AGGREGATE_PROPERTIES] = (message: AggregatePropertiesMessage) => {\n            this.models.get(message.modelId).aggregateProperties(message.entityIds, message.aggregations);\n            message.entityIds = undefined;\n        };\n\n        this.it[MessageType.CALL] = (message: ICallMessage) => {\n            processCallMessage(message, this.models);\n        };\n\n        this.startUpdateLoop();\n    }\n\n    startUpdateLoop(): void {\n        // use setTimeout instead of for loop to allow messages to be received in the middle\n        const loop = () => {\n            let updateFinished = true;\n            const start = performance.now();\n            for (const model of this.models.values()) {\n                updateFinished = updateFinished && model.updateLoop(start);\n                if (performance.now() - start > 15) break;\n            }\n            // timeout is larger when update is idle\n            setTimeout(loop, updateFinished ? 100 : 0);\n        };\n        loop();\n    }\n}\n\nexport function processCallMessage(message: ICallMessage, models: Map<string, any>): void {\n    // restore math objects\n    for (let i = 0; i < message.args.length; i++) {\n        if (message.args[i] && message.args[i].elements) message.args[i] = restoreMatrix4(message.args[i]);\n        if (message.args[i] && message.args[i].origin && message.args[i].direction) message.args[i] = restoreRay(message.args[i]);\n    }\n\n    const model = models.get(message.modelId) as any;\n    message.result = model[message.methodName].apply(model, message.args);\n    message.args = undefined; // save memory (same message is sent back)\n}\n\nexport function restoreVector(v: Vector3): Vector3 {\n    return new Vector3().copy(v);\n}\n\nexport function restorePlanes(planes: Plane[]): Plane[] {\n    if (!planes) return planes;\n    return planes.map(p => new Plane(restoreVector(p.normal), p.constant));\n}\n\nexport function restoreFrustum(frustum: Frustum): Frustum {\n    if (!frustum) return;\n    const p = restorePlanes(frustum.planes);\n    return new Frustum(p[0], p[1], p[2], p[3], p[4], p[5]);\n}\n\nexport function restoreRay(ray: Ray): Ray {\n    return new Ray(restoreVector(ray.origin), restoreVector(ray.direction));\n}\n\nexport function restoreMatrix4(matrix: Matrix4): Matrix4 {\n    return new Matrix4().copy(matrix);\n}\n\n\ndeclare var self: DedicatedWorkerGlobalScope;\nconst worker = new TrimbimWorker();\nself.onmessage = (e: MessageEvent) => worker.setPort(e.data);\n\n","import {\n    IMessage\n} from \"../GeometryEngine/WorkerMessages\";\nimport {WorkerMessenger} from \"./WorkerMessenger\";\n\nexport class AbstractWorker {\n    protected it = this as {[index: number]: any};\n    protected messenger: WorkerMessenger;\n\n    setPort(port: MessagePort): void {\n        this.messenger = new WorkerMessenger(port, async (message: IMessage) => {\n            const handler = this.it[message.type];\n            if (handler)\n                await handler(message);\n            else\n                console.warn(\"Handler not found for worker message type \" + message.type);\n        });\n    }\n}\n"],"names":["Trimble","flatbuffers","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","this","create","ZERO","prototype","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","i","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","set","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","length","vt2","readInt16","j","push","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","charCodeAt","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","a","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Technology","TrimBim","Fbs","SegmentType","HorizontalSegmentType","VerticalSegmentType","HorizontalTransitionCurveType","OwnerHistoryState","OwnerHistoryChangeAction","PropertyType","Logical","Sidedness","LineStyle","IdentifierType","GeometryType","TextureType","LayoutType","AlignmentType","BoltType","HierarchyType","[object Object]","builder","x","y","z","Vec3f","__init","min_x","min_y","min_z","max_x","max_y","max_z","Vec3d","origin_x","origin_y","origin_z","xAxis_x","xAxis_y","xAxis_z","yAxis_x","yAxis_y","yAxis_z","start_x","start_y","start_z","end_x","end_y","end_z","Polyline3f","index","pointsOffset","numElems","startPolyline3f","addPoints","endPolyline3f","center_x","center_y","center_z","axis_x","axis_y","axis_z","refDirection_x","refDirection_y","refDirection_z","radius","angle","data1","data2","data3","data4_1","data4_2","data4_3","data4_4","data4_5","data4_6","data4_7","data4_8","d0","d1","d2","d3","d4","d5","d6","d7","u","v","OuterWire","byteOffset","vertexIndicesOffset","data","startOuterWire","addVertexIndices","endOuterWire","InnerWire","outerWire","startInnerWire","addOuterWire","endInnerWire","BRep","outerWiresOffset","innerWiresOffset","verticesOffset","startBRep","addOuterWires","addInnerWires","addVertices","endBRep","UV","position_x","position_y","position_z","uv_u","uv_v","normal_x","normal_y","normal_z","BRepWithUV","PositionUV","startBRepWithUV","endBRepWithUV","BRepWithNormal","PositionNormal","startBRepWithNormal","endBRepWithNormal","positionIndex","normalIndex","TriangleMesh","IndexedVertex","positionsOffset","normalsOffset","indicesOffset","startTriangleMesh","addPositions","addNormals","addIndices","endTriangleMesh","TriangleMesh8","IndexedVertex8","startTriangleMesh8","endTriangleMesh8","TexturedTriangleMesh","uvsOffset","startTexturedTriangleMesh","addUvs","endTexturedTriangleMesh","TexturedTriangleMesh8","startTexturedTriangleMesh8","endTexturedTriangleMesh8","Directrix","Int8Array","Uint32Array","Line3f","Arc3f","typesOffset","indexesOffset","lineSegmentsOffset","polyLinesOffset","arcsOffset","startDirectrix","addTypes","addIndexes","addLineSegments","addPolyLines","addArcs","endDirectrix","SweptDiskSolidContainer","directricesOffset","radiusOffset","startSweptDiskSolidContainer","addDirectrices","addRadius","endSweptDiskSolidContainer","HorizontalLineSegment","optionalEncoding","Vec2d","startTagOffset","endTagOffset","startPointOffset","startDirection","segmentLength","startHorizontalLineSegment","addStartTag","addEndTag","addStartPoint","addStartDirection","addSegmentLength","endHorizontalLineSegment","HorizontalCircularArcSegment","isCCW","startHorizontalCircularArcSegment","addIsCCW","endHorizontalCircularArcSegment","HorizontalClothoidalArcSegment","startRadius","clothoidConstant","isEntry","startHorizontalClothoidalArcSegment","addStartRadius","addClothoidConstant","addIsEntry","endHorizontalClothoidalArcSegment","HorizontalTransitionArcSegment","Invalid","endRadius","isStartRadiusCCW","isEndRadiusCCW","type","startHorizontalTransitionArcSegment","addEndRadius","addIsStartRadiusCCW","addIsEndRadiusCCW","addType","endHorizontalTransitionArcSegment","VerticalLineSegment","startDistAlong","horizontalLength","startHeight","startGradient","startVerticalLineSegment","addStartDistAlong","addHorizontalLength","addStartHeight","addStartGradient","endVerticalLineSegment","VerticalCircularArcSegment","isConvex","startVerticalCircularArcSegment","addIsConvex","endVerticalCircularArcSegment","VerticalParabolicArcSegment","parabolaConstant","startVerticalParabolicArcSegment","addParabolaConstant","endVerticalParabolicArcSegment","HorizontalCurve","startAlongDistance","segmentTypesOffset","circularArcSegmentsOffset","clothoidalArcSegmentsOffset","transitionArcSegmentsOffset","startHorizontalCurve","addStartAlongDistance","addSegmentTypes","addCircularArcSegments","addClothoidalArcSegments","addTransitionArcSegments","endHorizontalCurve","VerticalCurve","parabolicArcSegmentsOffset","startVerticalCurve","addParabolicArcSegments","endVerticalCurve","AlignmentCurve","horizontalCurveOffset","verticalCurveOffset","nameOffset","startAlignmentCurve","addHorizontalCurve","addVerticalCurve","addName","endAlignmentCurve","GridLineSegment","Line3d","axisTagOffset","lineSegmentOffset","startGridLineSegment","addAxisTag","addLineSegment","endGridLineSegment","GridArc","Arc3d","arcOffset","startGridArc","addArc","endGridArc","GridLineContainer","gridLineSegmentsOffset","gridArcsOffset","startGridLineContainer","addGridLineSegments","addGridArcs","endGridLineContainer","Owner","personIdOffset","personFamilyNameOffset","personGivenNameOffset","personMiddleNamesOffset","personRolesOffset","organizationIdOffset","organizationNameOffset","organizationDescriptionOffset","organizationRolesOffset","applicationVersionOffset","applicationFullNameOffset","applicationIdentifierOffset","startOwner","addPersonId","addPersonFamilyName","addPersonGivenName","addPersonMiddleNames","addPersonRoles","addOrganizationId","addOrganizationName","addOrganizationDescription","addOrganizationRoles","addApplicationVersion","addApplicationFullName","addApplicationIdentifier","endOwner","state","changeAction","creationDate","lastModificationDate","owner","history","name","description","objectType","entityId","productId","PropertySetDefinition","SinglePropertyDefinition","propertiesOffset","startPropertySetDefinition","addProperties","endPropertySetDefinition","PropertySet","definition","valuesOffset","entitiesOffset","startPropertySet","addDefinition","addValues","addEntities","endPropertySet","ModelProperties","ProductBinding","Product","History","productBindingsOffset","productsOffset","ownersOffset","historiesOffset","namesOffset","descriptionsOffset","objectTypesOffset","propertySetBindingsOffset","propertySetNamesOffset","propertyNamesOffset","definitionsOffset","lengthMeasuresOffset","areaMeasuresOffset","volumeMeasuresOffset","massMeasuresOffset","angleMeasuresOffset","stringValuesOffset","doubleValuesOffset","dateTimeValuesOffset","startModelProperties","addProductBindings","addProducts","addOwners","addHistories","addNames","addDescriptions","addObjectTypes","addPropertySetBindings","addPropertySetNames","addPropertyNames","addDefinitions","addLengthMeasures","addAreaMeasures","addVolumeMeasures","addMassMeasures","addAngleMeasures","addStringValues","addDoubleValues","addDateTimeValues","endModelProperties","r","g","textureId","sidedness","lineStyle","metallic","roughness","Placement3","identifierIndex","classIndex","globalPlacement_origin_x","globalPlacement_origin_y","globalPlacement_origin_z","globalPlacement_xAxis_x","globalPlacement_xAxis_y","globalPlacement_xAxis_z","globalPlacement_yAxis_x","globalPlacement_yAxis_y","globalPlacement_yAxis_z","AABB3f","boundingBox_min_x","boundingBox_min_y","boundingBox_min_z","boundingBox_max_x","boundingBox_max_y","boundingBox_max_z","localPlacementId","definitionId","surfaceMaterialId","layerId","Texture","None","bytesOffset","startTexture","addBytes","endTexture","GraphicsContainer","startGraphicsContainer","endGraphicsContainer","CoordinateGeometryPoint","symbolOffset","startCoordinateGeometryPoint","addSymbol","endCoordinateGeometryPoint","BillboardText","textStyleId","textOffset","startBillboardText","addTextStyleId","addText","endBillboardText","TextStyle","fontOffset","options","verticalAlign","horizontalAlign","rotationAngle","layout","maxAutoScale","verticalDistanceToObject","startTextStyle","addFont","addSize","addOptions","addVerticalAlign","addHorizontalAlign","addRotationAngle","addLayout","addAlignment","addMaxAutoScale","addVerticalDistanceToObject","endTextStyle","Billboard","startBillboard","endBillboard","leftUpXY_x","leftUpXY_y","leftUpUV_x","leftUpUV_y","rightDownXY_x","rightDownXY_y","rightDownUV_x","rightDownUV_y","IsInWorldUnits","topDiameter","thickness","diameter","innerDiameter","outerDiameter","xslot","yslot","Bolt","BoltTop","Washer","Nut","Hole","topOffset","washersOffset","nutsOffset","holesOffset","startBolt","addTop","addWashers","addNuts","addHoles","endBolt","MapConversion","eastings","northings","orthogonalHeight","xAxisAbscissa","xAxisOrdinate","scaleToMapProjection","projectionNameOffset","projectionDescriptionOffset","projectionGeodeticDatumOffset","projectionVerticalDatumOffset","projectionProjectionTypeOffset","projectionZoneOffset","projectionUnitNameOffset","projectionScaleToMetric","sourceOriginOffset","startMapConversion","addEastings","addNorthings","addOrthogonalHeight","addXAxisAbscissa","addXAxisOrdinate","addScaleToMapProjection","addProjectionName","addProjectionDescription","addProjectionGeodeticDatum","addProjectionVerticalDatum","addProjectionProjectionType","addProjectionZone","addProjectionUnitName","addProjectionScaleToMetric","addSourceOrigin","endMapConversion","ModelGeometry","SurfaceMaterial","GeometryDefinition","GeometryInstance","TexturedBillboard","localPlacementsOffset","surfaceMaterialsOffset","layersOffset","instancesOffset","texturesOffset","bRepsOffset","triangleMeshesOffset","triangleMeshes8Offset","texturedTriangleMeshesOffset","texturedTriangleMeshes8Offset","sweptDiskSolidsOffset","bRepWithUVsOffset","bRepWithNormalsOffset","graphicsContainersOffset","alignmentCurvesOffset","gridLineContainersOffset","coordinateGeometryPointsOffset","billboardTextsOffset","textStylesOffset","billboardsOffset","texturedBillboardsOffset","boltsOffset","startModelGeometry","addLocalPlacements","addSurfaceMaterials","addLayers","addInstances","addTextures","addBReps","addTriangleMeshes","addTriangleMeshes8","addTexturedTriangleMeshes","addTexturedTriangleMeshes8","addSweptDiskSolids","addBRepWithUVs","addBRepWithNormals","addGraphicsContainers","addAlignmentCurves","addGridLineContainers","addCoordinateGeometryPoints","addBillboardTexts","addTextStyles","addBillboards","addTexturedBillboards","addBolts","endModelGeometry","parentElementId","childElementId","ModelEntities","Entity","HierarchyNode","Guid","SpatialHash","hierarchiesOffset","guidIdentifiersOffset","stringIdentifiersOffset","spatialHashIdentifiersOffset","dwgHandleIdentifiersOffset","entityClassesOffset","startModelEntities","addHierarchies","addGuidIdentifiers","addStringIdentifiers","addSpatialHashIdentifiers","addDwgHandleIdentifiers","addEntityClasses","endModelEntities","MetadataEntry","keyOffset","valueOffset","startMetadataEntry","addKey","addValue","endMetadataEntry","Model","geometryOffset","mapConversionsOffset","metadataOffset","startModel","addGeometry","addMapConversions","addMetadata","endModel","_lut","toString","_seed","MathUtils","DEG2RAD","Math","PI","RAD2DEG","generateUUID","random","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","floor","randFloat","randFloatSpread","range","seededRandom","undefined","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","console","warn","Quaternion","w","Object","defineProperty","_x","_y","_z","_w","qa","qb","qm","copy","slerp","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","sqrt","atan2","tDir","f","_onChangeCallback","constructor","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","vFrom","vTo","dot","normalize","acos","step","angleTo","conjugate","l","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","array","attribute","getX","getY","getZ","getW","callback","Vector3","scalar","addVectors","subVectors","multiplyVectors","error","applyQuaternion","_quaternion","setFromEuler","setFromAxisAngle","e","applyMatrix3","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","multiplyScalar","minVal","maxVal","divideScalar","round","alpha","v1","v2","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector","projectOnVector","sub","normal","theta","distanceToSquared","dx","dy","dz","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindricalCoords","sx","setFromMatrixColumn","sy","sz","fromArray","Matrix3","arguments","n11","n12","n13","n21","n22","n23","n31","n32","n33","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","tx","ty","rotation","cx","cy","matrix","_vector1","_vector2","_normalMatrix","Plane","constant","point","cross","setFromNormalAndCoplanarPoint","plane","inverseNormalLength","negate","sphere","distanceToPoint","center","target","add","line","direction","delta","start","startSign","endSign","end","box","intersectsPlane","optionalNormalMatrix","normalMatrix","getNormalMatrix","referencePoint","coplanarPoint","_v0","_v1","_v2","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getBarycoord","p1","p2","p3","uv1","uv2","uv3","addScaledVector","points","i0","i1","i2","triangle","getNormal","setFromCoplanarPoints","getUV","containsPoint","isFrontFacing","intersectsTriangle","vc","vb","va","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","count","makeEmpty","il","expandByPoint","halfSize","object","expandByObject","isEmpty","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box","union","children","clampPoint","getCenter","_center","_extents","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","getSize","_points","setFromPoints","v0","extents","_testAxis","p0","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","_sphere","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","boundingSphere","computeBoundingSphere","sprite","negRadius","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","isVector3","t14","scaleXSq","scaleYSq","scaleZSq","scale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","determinant","_m1","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","Vector2","width","height","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","isColor","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","setHSL","charAt","setColorName","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","getHex","slice","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","MaterialManager","modelId","textureManager","postMessage","materials","model","surfaceMaterialsLength","matDef","surfaceMaterials","textureTransparent","isTransparent","material","side","opacity","transparent","sendMaterials","ids","newMaterials","mainLoop","equal","m1","m2","eq","Single","Normal","def","id","LayerManager","entities","layerVisibilities","Array","layersLength","layers","entityIds","Set","instanceId","instancesLength","instances","instance","includes","from","layer","getLayerIndex","visible","visibility","Yallist","list","self","tail","head","forEach","item","insert","node","inserted","Node","next","prev","unshift","removeNode","unshiftNode","pushNode","pop","res","shift","fn","thisp","walker","call","forEachReverse","get","getReverse","map","mapReverse","reduce","initial","acc","TypeError","reduceReverse","toArray","arr","toArrayReverse","to","ret","sliceReverse","splice","deleteCount","nodes","reverse","Symbol","iterator","require$$0","er","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","key","doUse","hit","isStale","del","now","Date","maxAge","diff","trim","delete","Entry","forEachStep","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","k","Map","filter","has","expiresAt","Checksum","intPlaceholder","isInteger","MAX_INT32","MIN_INT32","floatPlaceholder","compute","codePointAt","hasOwnProperty","crc","POLY","MAX_16BIT_SIZE","iterate","loop","isArray","Vector3Const","freeze","normalLength","GeometryBuilder","modelIdHash","checksum","maxCacheSize","geometries","geometryPrototypes","geometryIndex","seal","getCacheKey","assign","geometryType","memSize","positions","byteLength","indices","normals","uvs","pointUvs","pointSizes","modelGeometryKeys","LRUCache","navigator","deviceMemory","sum","g2","TrimbimGeometryType","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","again","area","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","an","bp","polyType","AbstractBRepGeometryBuilder","innerWire","indicesLength","verticesLength","brep","innerVertex_length","innerWiresLength","outerWireId","innerWires","vertexIndicesLength","all_outerVertices_length","indices_length","outerLength","outerWiresLength","outerWires","bufferGeometry","positionsLength","normalsLength","uvsLength","counters","vertex_count","index_count","vertex_length","uv_length","normal_length","normal_count","Int16Array","getBrepData","getVertexDataSize","holes","buildHoles","vertexIndices","vertexIndicesArray","rectangle","buildPoly","buildQuad","buildTriangle","BRepWithNormals","BRepGeometryBuilder","computeNormals","vertex","vertexUv","vertexNormal","vertices","innerlength","uv","pointsInside","innerWiresLUT","getBRep","indexOffset","n1","idx0","idx1","idx2","intersectTriangle","getNormalFromTrimBIM","intersectPlane","insideHole","pointInsidePolygon","clone","vecA","vecB","getVertex","distanceSqToSegment","snapLineStart","snapLineEnd","out","axis1","axis0","vector3","createOrthonormalBasis","lastIndex","pj","jx","jy","pi","buildIfEmpty","getCachedGeometryData","poly","build","calculateMemSizeAndCache","vertexDataSize","brepOffset","pickFace","refAxis","invLength","pA","pB","pC","ab","cb","vA","vB","vC","fill","super","bRep","idx","bReps","createGeometryPrototypes","initGeometryCache","bRepsLength","setGeometryPrototype","createGeometryPrototype","BRepWithUVGeometryBuilder","bRepWithUVs","bRepWithUVsLength","BRepWithNormalsGeometryBuilder","bRepWithNormals","bRepWithNormalsLength","v3","v4","v5","v6","n2","idx3","outer_length","holes_idx","twoD","projectPoints","iIndex","jIndex","locx","locy","tmp0","tmp1","coordsBuffer","ArrayBuffer","planeCoords","MeshGeometryBuilder","triangleMeshes","bind","pos","mesh","createIndexedVertex","vecC","meshIndex","getMesh","addPoint","triangleMeshesLength","indicesArray","triangleMeshes8","texturedTriangleMeshes8","texturedTriangleMeshes","Mesh8GeometryBuilder","triangleMeshes8Length","MeshTexturedGeometryBuilder","texturedTriangleMeshesLength","buildTexured","Mesh8TexturedGeometryBuilder","texturedTriangleMeshes8Length","getArcSectionsCount","arc","sectionsPerRadianForUnitRadius","get3DArcSectionsCount","get2DArcSectionsCount","forEachSegment","segment","lines","lineSegmentsLength","lineSegments","forEachArc","arcStart","arcEnd","arcMids","arcCenter","arcAxis","directrix","arcsLength","arcs","arcCrossSectionCount","refDirection","applyAxisAngle","forEachPolyline","polyPoint","nextPolyPoint","polyline","polylinesLength","polyLinesLength","polyLines","innerLength","pointsLength","pickOnSegment","pickLineSegment","pickOnArc","mid","pickOnPolyline","forEachLineString","lineStringVertices","vertexCount","pointOnRay","pointOnSegment","distSq","intersectCylinder","mInv","rayTr","scaleFactor","getPerpendicular","source","makeHit","identity","makeBasis","t2","LinePrimitiveBuilder","positionPointer","buildLine","crossSectionCount","arcCrossSections","createCrossSections","LineGeometryBuilder","hits","rayPoint","pickLineWithCallback","rayDistanceSq","distanceSqToRay","GraphicsGeometryBuilder","graphics","graphicsContainers","graphicsContainersLength","getTotalArcSectionsCount","buildSegments","buildArcs","pickLine","SweptDiskSolidGeometryBuilder","SweptDiskSolid","crossSectionPointCount","types","indexes","segmentVertices","segmentIndices","crossSectionFaces","interconnections","LineSegment","PolyLine","Arc","corners","crossSectionIndices","interConnectionIndices","sds","sweptDiskSolids","directricesLength","directrices","amplifier","getCachedGeometryDatas","sweptDiskSolidsLength","prototypes","getCrossSectionsPointCount","curr","indexesLength","segmentSize","calculateSegmentSize","firstComponent","fitsIn16BitBuffer","createDirectrixPrototypes","buffers","bufferIndex","prototypeVerticesLength","interConnectionDetail","isStartSegment","isEndSegment","prevPositionPointer","indexPointer","prevBuffer","copyLastCrossSection","buildDirectrixSegment","src","srcPositionPointer","segmentIndex","buildLineSegment","buildPolyLine","buildArc","lineStart","lineEnd","lineQuaternion","setFromUnitVectors","buildCrossSection","connectFirstCrossSection","buildCrossSectionIndices","connectCrossSections","firstCrossSectionPosition","isMatchType","IsConnected","nextPoint","prevPoint","buildStartCrossSection","buildMidCrossSection","buildEndCrossSection","updateCrossSectionsPoints","crossSectionPoints","invertFaces","isPreviousCrossSection","vertexPointer1","vertexPointer2","nexti","section1","section2","crossSectionType","nextCrossSectionType","newVertices","GridGeometryBuilder","font","starts","ends","intersections","startToPoint","endToPoint","outSurfaceNormal","glc","gridLineContainers","getGeometries","vs","gridLineSegmentsLength","lineGeometry","labelGeometry","grid","buildGridLines","buildGridLabels","textureDescs","surfaceNormals","buildIntersections","gridLineContainersLength","lineSegment","texts","styles","fontStyle","gridLineSegments","axisTag","sendTexts","lineIndex","pointUvsLength","pointSizesLength","desc","offsetX","labelOffset","offsetY","BillboardGeometryBuilder","pickPoint","zero","TexturedBillboardGeometryBuilder","texturedBillboardsLength","texturedBillboards","texturedBillboard","producedType","leftUpUV","rightDownUV","leftUpXY","rightDownXY","BillboardTextGeometryBuilder","billboardTextsLength","fontStyles","billboardTexts","billboardText","textStyles","textStyle","isInWorldUnits","text","underlined","sizeCoefficient","textIndex","LeftTop","vAlign","hOffset","vOffset","buildText","GeometryUpdateMessenger","messenger","intervalId","setInterval","action","actions","message","request","getTransferables","transfer","actionType","clearInterval","TrimbimUtils","transform","entity","matrix4ToPlacement","globalPlacement","unNaN","isNaN","isFinite","mutate_x","vec3","mutate_y","mutate_z","placement","instanceTransform","entityTransform","placementToMatrix4","localPlacements","aabb","aabbToBox","vec3d","vec3f","localPlacement","mutate_yd","mutate_zd","ModelState","customMaterialIds","is","stateType","mask","pickPriorityMask","setVisible","pickPriority","priorityValue","setPickPriority","selected","hovered","setSelected","setHovered","materialId","AlignmentGeometryBuilder","alignmentCurvesLength","alignmentCurves","computeTesselationCount","pickOnLineGeometry","tolerance","totalTesselationCount","spans","buildSpans","horCurve","horizontalCurve","distance","segmentTypesLength","horizontalCurveGetSegmentAt","verCurve","verticalCurve","span","hasHorizontalCurve","hasVerticalCurve","hSegType","segmentTypes","horizontalCurveIndex","vSegType","verticalCurveIndex","horizontalCount","getTessellationCountHorizontal","verticalCount","getTessellationCountVertical","counter","segType","CircularArcSegment","circularArcSegments","ClothoidalArcSegment","clothoidalArcSegments","TransientCurveSegment","transitionArcSegments","ParabolicArcSegment","parabolicArcSegments","clothoid","resultPoint","setX","aa","f1","f2","cloCos","cloSin","sf","tt","vertSegmentType","verticalSegment","distanceDelta","g1","gx","zc","ds","R","g0","horizontalSegmentType","lodLevel","verticalSegmentType","alignmentCurve","distanceTolerance","breaks","buildVerticalBreaks","horizontalDistance","AlignmentBreak","Distance","verticalIndex","horizontalIndex","hasStart","MIN_VALUE","Span","IsVertical","CurveIndex","alignmentBreaks","previousEnd","verticalCurveGetSegmentAt","curve","overlap","usableSegmentLength","previousXy","previous","horizontSegmentOffsets","horizontalSegment","tessellationCount","horizontalSegmentOffset","horizontalSegmentGetPointAt","startDistance","segmentGetElevationAt","startPoint","angleVec2","setY","deltaAngle","originDirection","ClothoidCurve","segmentClothoidGetPointAt","BiquadraticParabola","BlossCurve","CosineCurve","SineCurve","clothoidSpaceLocation","segmentClothoidSpaceLocation","directionCos","directionSin","isVertical","hasCurve","curveIndex","HasCurve","FrustumHelper","planesIntersectBoxInternal","clipPlanes","insideClipPlanes","clipPlane","contain","GeometryManager","boundingBoxManager","entityState","layerManager","materialIdMap","perspectiveViewWorldSize","prevCameraFov","fieldOfView","fov","getPerspectiveViewWorldSize","resolution","instanceGeometry","trbInstance","trbDefinition","getTransform","getBoundingBox","instanceState","instanceIdsSortedBySize","registerGeometryBuilders","sortInstancesBySize","registerGeometryBuilder","gb","geometryBuilders","values","handler","timestamp","instancesProcessedForCurrentCamera","performance","updateInstanceGeometry","instanceIndex","updateFinished","send","force","getEntityId","isVisibleByHierarchy","shownVisibilityState","isVisible","isSelectedByHierarchy","shownSelectionState","isSelected","isHoveredByHierarchy","shownHoverState","isHovered","customMaterialId","getCustomMaterialIdByHierarchy","shownCustomMaterialId","getCustomMaterialId","setInstanceState","isVisibleByCamera","isVisibleByState","transformedBox","getTransformedBoundingBox","isVisibleByClipPlanes","isVisibleByCameraDistance","planesIntersectBox","visibilityPlanes","diagonal","pixelSize","getApproxPixelSize","trimbimSettings","geometryCacheSize","forceUpdate","restartInstanceIndex","previousCameraDirection","previousCameraPosition","removePendingUpdateFinishedAction","instanceIds","getEntityInstanceIds","firstInstanceGlobalTransform","instancePlacement","multiply","setTransform","calculateTransformedBoundingBox","updateInstanceState","showInstanceGeometry","hideInstanceGeometry","ig","getInstanceGeometry","createBatchState","getGeometryId","definitions","getEmptyInstanceGeometry","geometryBuilder","sendGeometryState","setCustomMaterialId","geometryStateFull","batchId","cloneBuffers","userData","removeGeometry","snapGeometryType","snapType","pick","minRayDistSq","BoundingBoxManager","instanceTransformedBoxes","instanceSizes","instanceWidths","calculateBoxes","analyzeInstances","entityToInstance","entitiesLength","modelBoundingBox","setTransformedBoundingBox","Query","intersectsBox","containedOnly","intersect","planesContainBox","visibleBox","PickManager","geometryManager","localRay","inverseTransform","_geometry","hitPoint","pickOnLine","rayDistSq","localFrustum","transformFrustum","hitsPoints","transformedPlanes","transformClipPlanes","insideNonIntersectingPlanes","getPickPriorityByHierarchy","cameraDistanceSq","ignorePriority","filterPickableInstances","QueryFrustum","navigation","frustumPickIds","pickBoundingBoxes","rayPickIds","orderBoundingBoxesByRayOrigin","getIsMesh","pickGeometry","pickBoundingBox","highPriorityHits","findClosestHit","snapTypes","mainHit","pickSnappedEdges","backClipPlanePosition","backClipPlane","nonFaceHits","concat","shape","QueryRay","boundingBoxIds","maxLength","distances","orderedIds","orderIdsByAssociatedValues","keys","h1","h2","calcClosest","seg1","seg2","dSq","segHit","distanceSqRayToBox","EntityHierarchyState","hierarchyManager","getValueByHierarchy","getPickPriority","parents","getDirectParents","parentId","getValue","LODLevel","HierarchyManager","createCache","childToParents","childToParentsTypes","parentToChildren","hierarchiesLength","hierarchies","parentsTypes","rootIds","childIds","recursive","nextIds","parentFound","ht","addChildren","QuantizedAxisAlignedBox3","MinX","MaxX","MinY","MaxY","MinZ","MaxZ","first","second","QuantizedAxisAlignedBox3TreeNode","quantizedAabb","widthOrValue","dataValue","AxisAlignedBox3Tree","inputBoxes","pivotValue","pivotIndex","Swapnumberes","numIndices","minClampedPoint","maxClampedPoint","treeDepth","outputIndex","subTreeBoundingBox","Quantize","CreateDataNode","quantizedAabb1","quantizedAabbTreeNodes","GetQuantizedAabb","setAsDataNode","quantizedAabb2","CreateMergedWith","CreateBranchNode","splitIndex","SplitByOneAxis","leftWidth","BuildSubTree","leftBoundingBoxes","rightWidth","rightBoundingBoxes","branchWidth","varianceSum","meanOfCenterPoints","CalculateMeanOfCenterPoints","deltaSquared","InPlaceSplitX","InPlaceSplitZ","InPlaceSplitY","rangeBalancedIndices","nodeCount","collidedResults","currentIndex","overlaps","TestQuantizedBoxOverlap","isDataNode","IsDataNode","GetNodeDataValue","GetBranchNodeWidth","containBox","excludeIntersected","curIndex","numNodes","bound","GetAabb","contains","endIndex","itemA","itemB","nodeIndex","Unquantize","SetAsDataValue","SetDataValue","SetAsBranch","GetDataNodeValue","globalAabb","StaticBoundingBoxManager","searchTree","DisplayRanges","startValue","startRange","rangeNodeCache","getRange","r0","createRangeNode","r1","r2","disposeRangeNode","condition","mapRange","offsets","getRanges","displayRanges","collect","LODingGeometryManager","instanceIdToLODCapability","instanceIdToLODLevel","Hidden","Full","Line","buildLineLOD","getLodLevel","prevLodLevel","shownLodLevel","getLodLevelByCameraDistance","lodSetting","vr","getWidth","usedGpuGeometryMemory","BatchingGeometryManager","materialIds","gridSize","sizeCategory","getSizeCategory","placeholderGeometry","getBatchHash","batch","batches","createBatch","addToBatch","calculateGridSize","instanceIdToBatchIds","instanceIdToLODBatchId","createBatches","updateLoop","sendUpdatedBatchStates","batchIds","getBatchIds","hideFromBatch","hoveredInRange","materialInRange","visibleInRange","selectedInRange","updateBatch","localIndex","instanceIdToIndex","visibilityRanges","hoverRanges","selectionRanges","materialRanges","inMainThread","updatedBatches","buildBatch","addBatch","freeBatch","all","gpuMemoryUsage","gridCellsPerDim","bbSize","getState","hash","bucketSize","batchHashToBucketSize","geometryIndices","indexOffsets","vertexOffsets","generateBatchId","assignInstanceToBatches","assignInstanceToLODBatch","allocateBatch","firstBuild","loadInstanceIntoBatch","expandBoundingBox","batchPosInv","transformPositions","transformNormals","translate","sizeSq","ranges","groups","getRangeMap","Base64ConversionTable","UUID","ifcGuid","msGuid","setIfcGuid","setMsGuid","JSON","parse","uuid2","view","DataView","getUint32","padStart","getUint16","getUint8","guid","setUint32","setUint16","setUint8","guid16","toBase64","b5","fromBase64","b4","b3","guid0103","getBytes","guid0406","guid0709","guid1012","guid1315","guid1616","base10Bit24","bitsLeft","reV","padBits","long","buf","QueryManager","tmpGuid","identifierType","modelEntities","guidIdentifiers","createUUID","stringIdentifiers","spatialHashIdentifiers","DwgHandle","dwgHandleIdentifiers","properties","entityClass","entityClasses","nameMatch","valueMatch","entityLoop","propertySetIds","getPropertySetIdsFromEntity","propertySetId","propSet","getPropertySet","prop","nameMatches","RegExp","match","valueMatches","aggregations","propSets","getProperties","aggregate","propertySetName","propertyName","find","aggregation","operator","property","getProperty","layerIndex","unionAABB","getDirectChildren","childId","input","input2","parentIds","identifier","getIdentifier","class","loadProductIndex","productIndex","productBindingsLength","productBindings","products","names","descriptions","objectTypes","loadPropertyIndex","propertyIndex","propertySetBindingsLength","propertySetBindings","propSetId","RangeError","bindings","getSinglePropertyDefinitions","propertySetNames","propertiesLength","singlePropertyDefinition","propertyNames","LengthMeasure","lengthMeasures","AreaMeasure","areaMeasures","VolumeMeasure","volumeMeasures","MassMeasure","massMeasures","AngleMeasure","angleMeasures","StringValue","stringValues","IntValue","DoubleValue","doubleValues","DateTime","dateTimeValues","Boolean","propertySetNamesLength","propSetIds","getDefinitionIdsFromNames","setId","setDefinition","setName","setNameId","getSetNameId","propertyNameIds","getPropertyNameIds","definitionsLength","definitionIds","propertyNamesLength","propertyIds","bindingsCount","setBinding","propertyCount","propertyIdx","nameIndex","guids","uuids","tmpUuid","tmpEntity","matchingEntityIds","foundIds","setFromBufferData","allEntities","getEntity","TextureManager","transparency","texturesLength","tex","textures","texture","image","bytesLength","bytesArray","response","imageFormat","textureDesc","WorkerTrimbimModel","editing","getRootAsModel","materialManager","sendModelTextures","sendModelMaterials","pickManager","queryManager","pickSnapped","hierarchyType","getRoots","getEntityIdsWithGeometry","getParents","getChildren","areaPick","clearSelection","forEachEntity","forceStateUpdate","resetHovered","oldMatId","oldMat","getMaterial","newMat","getEntitiesFromIds","getEntityProduct","getLayers","findLayersByEntities","getLayerVisibility","setLayerVisibility","getProduct","getProductId","aggregateProperties","findByClass","findByProperty","findByGeometryType","layerName","findEntitiesByLayer","setCamera","getAABBFromIds","resetMaterialIds","resetVisibility","resetPickPriority","getPropertySetNames","getPropertyDefinitions","getPropertyValues","getEntityIdsFromGuids","hierarchical","getEntityIdsByState","setEntityTransform","WorkerMessenger","onRequest","isResponse","processResponse","processRequest","port","onmessage","processMessage","messageId","nextMessageId","Promise","async","resolve","reject","callbacks","getPort","messagePort","setupPort","processCallMessage","models","args","restoreMatrix4","restoreRay","methodName","apply","restoreVector","restorePlanes","restoreFrustum","worker","it","createCaches","childrenEntityIds","frustumPickContainedOnly","boundingBoxes","entityIdGroups","getEntitiesBoundingBox","boxEntityIds","getEntitiesLength","guidsToEntityIds","startUpdateLoop","setTimeout","setPort"],"mappings":"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"}