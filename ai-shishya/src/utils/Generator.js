define(["exports","./e465bf89.mjs","three.mjs"],(function(e,t,r){"use strict";function i(e,t){for(let r=e.length-1;r>=0;--r)t(e[r],r)}class n{constructor(){this.index=-1}}var a=t.Trimble.Technology.TrimBim.Fbs;class o extends n{get type(){return a.GeometryType.AlignmentCurve}get boundingBox(){const e=this.calculateHorizontalCurveBoundingBox(),t=this.calculateVerticalHeightRange(),i=new r.Vector3(e.min.x,e.min.y,t[0]),n=new r.Vector3(e.max.x,e.max.y,t[1]);return new r.Box3(i,n)}getHorizontalLineSegmentPointAt(e,t){const i=e.segmentLength,n=e.startPoint.clone(),a=e.startDirection;t<0&&(t=0),t>i&&(t=i);const o=new r.Vector2(t*Math.cos(a),t*Math.sin(a));return n.add(o),n}getHorizontalCircularArcSegmentPointAt(e,t){const i=e.startDirection,n=t/e.radius,a=e.startDirection+(e.isCCW?-Math.PI/2:Math.PI/2)+(e.isCCW?n:-n),o=i+(e.isCCW?Math.PI/2:-Math.PI/2),s=Math.cos(o),d=Math.sin(o),l=new r.Vector2(s,d).multiplyScalar(e.radius),c=e.startPoint.clone().add(l),g=Math.cos(a),m=Math.sin(a),u=new r.Vector2(g,m).multiplyScalar(e.radius);return c.add(u)}calculateHorizontalCircularArcSegmentBoundingBox(e){const t=e.segmentLength/e.radius,i=e.startDirection+(e.isCCW?-Math.PI/2:Math.PI/2);let n=e.isCCW?i:i-t,a=e.isCCW?i+t:i;const o=e.isCCW?e.startDirection+Math.PI/2:e.startDirection-Math.PI/2,s=Math.cos(o)*e.radius,d=Math.sin(o)*e.radius,l=new r.Vector2(s,d),c=e.startPoint.clone().add(l),g=e.radius;n<0&&(n+=2*Math.PI,a+=2*Math.PI);const m=this.getHorizontalCircularArcSegmentPointAt(e,0),u=m.clone();for(let e=0;e<8;e++){const t=Math.PI/2*e;if(n<t&&a>t){const e=Math.cos(t)*g,i=Math.sin(t)*g,n=new r.Vector2(e,i),a=c.clone().add(n);m.min(a),u.max(a)}}const h=this.getHorizontalCircularArcSegmentPointAt(e,e.segmentLength);return m.min(h),u.max(h),new r.Box2(m,u)}calculateHorizontalLineSegmentBoundingBox(e){const t=e.segmentLength,i=this.getHorizontalLineSegmentPointAt(e,0),n=this.getHorizontalLineSegmentPointAt(e,t),a=i.clone(),o=i.clone();return a.min(n),o.max(n),new r.Box2(a,o)}calculateHorizontalTransientCurveSegmentBoundingBox(e){const t=e.startPoint,i=e.startDirection,n=e.segmentLength,a=e.isStartRadiusCCW,o=Math.cos(i)*n,s=Math.sin(i)*n,d=new r.Vector2(o,s),l=t.clone().add(d),c=a?i+Math.PI/4:-Math.PI/4,g=Math.cos(c)*n,m=Math.sin(c)*n,u=new r.Vector2(g,m),h=t.clone().add(u),S=t.clone(),M=t.clone();return S.min(l),S.min(h),M.max(l),M.max(h),new r.Box2(S,M)}mergeBox2(e,t){return e.min.min(t.min),e.max.max(t.max),e}calculateHorizontalCurveBoundingBox(){let e=new r.Box2,t=0,i=0,n=0;for(const r of this.horizontalCurve.segmentTypes)switch(r){case 0:break;case 1:e=this.mergeBox2(this.calculateHorizontalLineSegmentBoundingBox(this.horizontalCurve.lineSegments[t]),e),t++;break;case 2:e=this.mergeBox2(this.calculateHorizontalCircularArcSegmentBoundingBox(this.horizontalCurve.circularArcSegments[i]),e),i++;break;case 3:break;case 4:e=this.mergeBox2(this.calculateHorizontalTransientCurveSegmentBoundingBox(this.horizontalCurve.transitionArcSegments[n]),e),n++}return e}calculateVerticalLineSegmentHeightRange(e){const t=e.horizontalLength,r=e.startHeight,i=r+t*e.startGradient;return[Math.min(r,i),Math.max(r,i)]}calculateVerticalCircularArcSegmentHeightRange(e){const t=e.startHeight,r=e.startDistAlong,i=e.horizontalLength,n=e.startGradient;let a=e.radius;e.isConvex||(a=-a);const o=r+n*a/Math.sqrt(n*n+1),s=t-a/Math.sqrt(n*n+1),d=s+a,l=s+(e.isConvex?Math.sqrt(a*a-Math.pow(i-(o-r),2)):-1*Math.sqrt(a*a-Math.pow(i-(o-r),2)));return[Math.min(l,t,d),Math.max(l,t,d)]}calculateVerticalHeightRange(){let e,t,r=[],i=0,n=0;for(const a of this.verticalCurve.segmentTypes)switch(a){case 0:break;case 1:r=this.calculateVerticalLineSegmentHeightRange(this.verticalCurve.lineSegments[i]),e=void 0!==e?Math.min(r[0],e):r[0],t=void 0!==t?Math.max(r[1],t):r[1],i++;break;case 2:r=this.calculateVerticalCircularArcSegmentHeightRange(this.verticalCurve.circularArcSegments[n]),e=void 0!==e?Math.min(r[0],e):r[0],t=void 0!==t?Math.max(r[1],t):r[1],n++}return[e,t]}generate(e){const t=this.generateHorizontalCurve(e),r=this.generateVerticalCurve(e);return a.AlignmentCurve.startAlignmentCurve(e),a.AlignmentCurve.addHorizontalCurve(e,t),a.AlignmentCurve.addVerticalCurve(e,r),a.AlignmentCurve.endAlignmentCurve(e)}generateHorizontalCurve(e){const t=a.HorizontalCurve.createSegmentTypesVector(e,this.horizontalCurve.segmentTypes),r=a.HorizontalCurve.createLineSegmentsVector(e,this.horizontalCurve.lineSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.HorizontalLineSegment.startHorizontalLineSegment(e),a.HorizontalLineSegment.addStartTag(e,r),a.HorizontalLineSegment.addEndTag(e,i),a.HorizontalLineSegment.addStartPoint(e,a.Vec2d.createVec2d(e,t.startPoint.x,t.startPoint.y)),a.HorizontalLineSegment.addStartDirection(e,t.startDirection),a.HorizontalLineSegment.addSegmentLength(e,t.segmentLength),a.HorizontalLineSegment.endHorizontalLineSegment(e)}))),i=a.HorizontalCurve.createCircularArcSegmentsVector(e,this.horizontalCurve.circularArcSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.HorizontalCircularArcSegment.startHorizontalCircularArcSegment(e),a.HorizontalCircularArcSegment.addStartTag(e,r),a.HorizontalCircularArcSegment.addEndTag(e,i),a.HorizontalCircularArcSegment.addStartPoint(e,a.Vec2d.createVec2d(e,t.startPoint.x,t.startPoint.y)),a.HorizontalCircularArcSegment.addStartDirection(e,t.startDirection),a.HorizontalCircularArcSegment.addSegmentLength(e,t.segmentLength),a.HorizontalCircularArcSegment.addRadius(e,t.radius),a.HorizontalCircularArcSegment.addIsCCW(e,t.isCCW),a.HorizontalCircularArcSegment.endHorizontalCircularArcSegment(e)}))),n=a.HorizontalCurve.createClothoidalArcSegmentsVector(e,this.horizontalCurve.clothoidalArcSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.HorizontalClothoidalArcSegment.startHorizontalClothoidalArcSegment(e),a.HorizontalClothoidalArcSegment.addStartTag(e,r),a.HorizontalClothoidalArcSegment.addEndTag(e,i),a.HorizontalClothoidalArcSegment.addStartPoint(e,a.Vec2d.createVec2d(e,t.startPoint.x,t.startPoint.y)),a.HorizontalClothoidalArcSegment.addStartDirection(e,t.startDirection),a.HorizontalClothoidalArcSegment.addSegmentLength(e,t.segmentLength),a.HorizontalClothoidalArcSegment.addStartRadius(e,t.startRadius),a.HorizontalClothoidalArcSegment.addClothoidConstant(e,t.clothoidConstant),a.HorizontalClothoidalArcSegment.addIsCCW(e,t.isCCW),a.HorizontalClothoidalArcSegment.addIsEntry(e,t.isEntry),a.HorizontalClothoidalArcSegment.endHorizontalClothoidalArcSegment(e)}))),o=a.HorizontalCurve.createTransitionArcSegmentsVector(e,this.horizontalCurve.transitionArcSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.HorizontalTransitionArcSegment.startHorizontalTransitionArcSegment(e),a.HorizontalTransitionArcSegment.addStartTag(e,r),a.HorizontalTransitionArcSegment.addEndTag(e,i),a.HorizontalTransitionArcSegment.addStartPoint(e,a.Vec2d.createVec2d(e,t.startPoint.x,t.startPoint.y)),a.HorizontalTransitionArcSegment.addStartDirection(e,t.startDirection),a.HorizontalTransitionArcSegment.addSegmentLength(e,t.segmentLength),a.HorizontalTransitionArcSegment.addStartRadius(e,t.startRadius),a.HorizontalTransitionArcSegment.addEndRadius(e,t.endRadius),a.HorizontalTransitionArcSegment.addIsStartRadiusCCW(e,t.isStartRadiusCCW),a.HorizontalTransitionArcSegment.addIsEndRadiusCCW(e,t.isEndRadiusCCW),a.HorizontalTransitionArcSegment.addType(e,t.type),a.HorizontalTransitionArcSegment.endHorizontalTransitionArcSegment(e)})));return a.HorizontalCurve.startHorizontalCurve(e),a.HorizontalCurve.addStartAlongDistance(e,this.horizontalCurve.startAlongDistance),a.HorizontalCurve.addSegmentTypes(e,t),a.HorizontalCurve.addLineSegments(e,r),a.HorizontalCurve.addCircularArcSegments(e,i),a.HorizontalCurve.addClothoidalArcSegments(e,n),a.HorizontalCurve.addTransitionArcSegments(e,o),a.HorizontalCurve.endHorizontalCurve(e)}generateVerticalCurve(e){const t=a.VerticalCurve.createSegmentTypesVector(e,this.verticalCurve.segmentTypes),r=a.VerticalCurve.createLineSegmentsVector(e,this.verticalCurve.lineSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.VerticalLineSegment.startVerticalLineSegment(e),a.VerticalLineSegment.addStartTag(e,r),a.VerticalLineSegment.addEndTag(e,i),a.VerticalLineSegment.addStartDistAlong(e,t.startDistAlong),a.VerticalLineSegment.addHorizontalLength(e,t.horizontalLength),a.VerticalLineSegment.addStartHeight(e,t.startHeight),a.VerticalLineSegment.addStartGradient(e,t.startGradient),a.VerticalLineSegment.endVerticalLineSegment(e)}))),i=a.VerticalCurve.createCircularArcSegmentsVector(e,this.verticalCurve.circularArcSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.VerticalCircularArcSegment.startVerticalCircularArcSegment(e),a.VerticalCircularArcSegment.addStartTag(e,r),a.VerticalCircularArcSegment.addEndTag(e,i),a.VerticalCircularArcSegment.addStartDistAlong(e,t.startDistAlong),a.VerticalCircularArcSegment.addHorizontalLength(e,t.horizontalLength),a.VerticalCircularArcSegment.addStartHeight(e,t.startHeight),a.VerticalCircularArcSegment.addStartGradient(e,t.startGradient),a.VerticalCircularArcSegment.addRadius(e,t.radius),a.VerticalCircularArcSegment.addIsConvex(e,t.isConvex),a.VerticalCircularArcSegment.endVerticalCircularArcSegment(e)}))),n=a.VerticalCurve.createParabolicArcSegmentsVector(e,this.verticalCurve.parabolicArcSegments.map((t=>{const r=e.createString(t.startTag),i=e.createString(t.endTag);return a.VerticalParabolicArcSegment.startVerticalParabolicArcSegment(e),a.VerticalParabolicArcSegment.addStartTag(e,r),a.VerticalParabolicArcSegment.addEndTag(e,i),a.VerticalParabolicArcSegment.addStartDistAlong(e,t.startDistAlong),a.VerticalParabolicArcSegment.addHorizontalLength(e,t.horizontalLength),a.VerticalParabolicArcSegment.addStartHeight(e,t.startHeight),a.VerticalParabolicArcSegment.addStartGradient(e,t.startGradient),a.VerticalParabolicArcSegment.addParabolaConstant(e,t.parabolaConstant),a.VerticalParabolicArcSegment.addIsConvex(e,t.isConvex),a.VerticalParabolicArcSegment.endVerticalParabolicArcSegment(e)})));return a.VerticalCurve.startVerticalCurve(e),a.VerticalCurve.addSegmentTypes(e,t),a.VerticalCurve.addLineSegments(e,r),a.VerticalCurve.addCircularArcSegments(e,i),a.VerticalCurve.addParabolicArcSegments(e,n),a.VerticalCurve.endVerticalCurve(e)}}var s=t.Trimble.Technology.TrimBim.Fbs;const d=new r.Box3(new r.Vector3(0,0,0),new r.Vector3(0,0,0));class l extends n{get type(){return s.GeometryType.TexturedBillboard}get boundingBox(){return d}generate(e){return s.TexturedBillboard.createTexturedBillboard(e,this.leftUpXY.x,this.leftUpXY.y,this.leftUpUV.x,this.leftUpUV.y,this.rightDownXY.x,this.rightDownXY.y,this.rightDownUV.x,this.rightDownUV.y,this.IsInWorldUnits)}}class c extends n{get type(){return s.GeometryType.BillboardText}get boundingBox(){return d}generate(e){const t=e.createString(this.text);return s.BillboardText.startBillboardText(e),s.BillboardText.addTextStyleId(e,this.textStyleId),s.BillboardText.addText(e,t),s.BillboardText.endBillboardText(e)}}class g extends n{get type(){return s.GeometryType.TriangleMesh}get boundingBox(){const e=new r.Box3(this.positions[0].clone(),this.positions[0].clone());for(const t of this.positions)e.expandByPoint(t);return e}generate(e){s.TriangleMesh.startPositionsVector(e,this.positions.length),i(this.positions,(t=>{s.Vec3f.createVec3f(e,t.x,t.y,t.z)}));const t=e.endVector();s.TriangleMesh.startNormalsVector(e,this.normals.length),i(this.normals,(t=>{s.Vec3f.createVec3f(e,t.x,t.y,t.z)}));const r=e.endVector();s.TriangleMesh.startVerticesVector(e,this.vertices.length),i(this.vertices,(t=>{s.IndexedVertex.createIndexedVertex(e,t.positionIndex,t.normalIndex)}));const n=e.endVector(),a=s.TriangleMesh.createIndicesVector(e,this.indices);return s.TriangleMesh.startTriangleMesh(e),s.TriangleMesh.addPositions(e,t),s.TriangleMesh.addNormals(e,r),s.TriangleMesh.addVertices(e,n),s.TriangleMesh.addIndices(e,a),s.TriangleMesh.endTriangleMesh(e)}}class m extends n{get type(){return s.GeometryType.GridLineContainer}get boundingBox(){if(0===this.gridLineSegments.length)return d;const e=new r.Vector3(1/0,1/0,1/0),t=new r.Vector3(-1/0,-1/0,-1/0);for(const r of this.gridLineSegments)e.x=Math.min(e.x,r.start.x,r.end.x),e.y=Math.min(e.y,r.start.y,r.end.y),e.z=Math.min(e.z,r.start.z,r.end.z),t.x=Math.max(t.x,r.start.x,r.end.x),t.y=Math.max(t.y,r.start.y,r.end.y),t.z=Math.max(t.z,r.start.z,r.end.z);return new r.Box3(e,t)}generate(e){const t=this.gridLineSegments.map((t=>{const r=e.createString(t.axisTag);return s.GridLineSegment.startGridLineSegment(e),s.GridLineSegment.addAxisTag(e,r),s.GridLineSegment.addLineSegment(e,s.Line3d.createLine3d(e,t.start.x,t.start.y,t.start.z,t.end.x,t.end.y,t.end.z)),s.GridLineSegment.endGridLineSegment(e)})),r=s.GridLineContainer.createGridLineSegmentsVector(e,t),i=s.GridLineContainer.createGridArcsVector(e,[]);return s.GridLineContainer.startGridLineContainer(e),s.GridLineContainer.addGridLineSegments(e,r),s.GridLineContainer.addGridArcs(e,i),s.GridLineContainer.endGridLineContainer(e)}}var u=t.Trimble.Technology.TrimBim.Fbs;e.Generator=class{constructor(){this.b=new t.flatbuffers.Builder(1024),this.geometryDefinitions=[],this.geometryDefinitionsMap=new Map,this.instances=[],this.instancesMap=new Map,this.materials=[],this.textures=[],this.textStyles=[],this.stringIdentifiers=[],this.guidIdentifiers=[],Object.values(u.GeometryType).forEach((e=>{const t=e;isNaN(t)||this.geometryDefinitionsMap.set(t,[])})),Object.values(u.IdentifierType).forEach((e=>{const t=e;isNaN(t)||this.instancesMap.set(t,[])}))}get definitionCount(){return this.geometryDefinitions.length}addMaterial(e){return this.materials.push(Object.assign({textureId:-1},e)),this.materials.length-1}addTexture(e){return this.textures.push(e),this.textures.length-1}addTextStyle(e){return this.textStyles.push(e),this.textStyles.length-1}addInstance(e,t,r,i){if(e>=this.geometryDefinitions.length)throw new Error(`Definition ${e} does not exist.`);let n=u.IdentifierType.None;if(i&&"string"==typeof i){if(n=u.IdentifierType.String,this.stringIdentifiers.indexOf(i)>=0)throw new Error(`String ID '${i}' has already been defined.`);this.stringIdentifiers.push(i)}if(i&&"UUID"===i.type){if(n=u.IdentifierType.Guid,this.guidIdentifiers.find((e=>e.equals(i))))throw new Error(`GUID '${i.toString()}' has already been defined.`);this.guidIdentifiers.push(i)}return this.instances.push({idIndex:this.instancesMap.get(n).length,idType:n,definitionId:e,materialId:t,globalPlacement:r}),this.instancesMap.get(n).push(this.instances.length-1),n===u.IdentifierType.String||n===u.IdentifierType.Guid?i:this.instancesMap.get(n).length-1}addDefinition(e){const t=this.geometryDefinitionsMap.get(e.type).length,r=this.geometryDefinitions.length;return e.index=t,this.geometryDefinitions.push(e),this.geometryDefinitionsMap.get(e.type).push(r),r}addTriangleMeshDefinition(e,t,r,i){const n=new g;return n.positions=e,n.normals=t,n.vertices=r,n.indices=i,this.addDefinition(n)}addTriangleDefinition(e,t,i){const n=new g;n.positions=[e,t,i];const a=t.clone().sub(e).cross(i.clone().sub(e)).normalize();return n.normals=[new r.Vector3(a.x,a.y,a.z)],n.vertices=[{positionIndex:0,normalIndex:0},{positionIndex:1,normalIndex:0},{positionIndex:2,normalIndex:0}],n.indices=[0,1,2],this.addDefinition(n)}addBillboardDefinition(e=64,t=64,i=!1){const n=new l;return n.leftUpXY=new r.Vector2(-e/2,-t/2),n.leftUpUV=new r.Vector2(0,1),n.rightDownXY=new r.Vector2(e/2,t/2),n.rightDownUV=new r.Vector2(1,0),n.IsInWorldUnits=i,this.addDefinition(n)}addBillboardTextDefinition(e,t){const r=new c;return r.text=e,r.textStyleId=t,this.addDefinition(r)}addGridLineContainerDefinition(e){const t=new m;return t.gridLineSegments=e,this.addDefinition(t)}addAlignmentCurveDefinition(e,t,r){const i=new o;return i.horizontalCurve=e,i.verticalCurve=t,i.name=r,this.addDefinition(i)}generate(){if(0===this.instances.length)throw new Error("At least one valid instance needs to be defined.");const e=this.b;let t,r;{const r={angleMeasures:u.ModelProperties.createAngleMeasuresVector(e,[]),areaMeasures:u.ModelProperties.createAreaMeasuresVector(e,[]),dateTimeValues:u.ModelProperties.createDateTimeValuesVector(e,[]),definitions:u.ModelProperties.createDefinitionsVector(e,[]),descriptions:u.ModelProperties.createDescriptionsVector(e,[]),doubleValues:u.ModelProperties.createDoubleValuesVector(e,[]),histories:null,lengthMeasures:u.ModelProperties.createLengthMeasuresVector(e,[]),massMeasures:u.ModelProperties.createMassMeasuresVector(e,[]),names:u.ModelProperties.createNamesVector(e,[]),objectTypes:u.ModelProperties.createObjectTypesVector(e,[]),owners:u.ModelProperties.createOwnersVector(e,[]),productBindings:null,products:null,propertyNames:u.ModelProperties.createPropertyNamesVector(e,[]),propertySetBindings:u.ModelProperties.createPropertySetBindingsVector(e,[]),propertySetNames:u.ModelProperties.createPropertySetNamesVector(e,[]),stringValues:u.ModelProperties.createStringValuesVector(e,[]),volumeMeasures:u.ModelProperties.createVolumeMeasuresVector(e,[])};u.ModelProperties.startHistoriesVector(e,0),r.histories=e.endVector(),u.ModelProperties.startProductBindingsVector(e,0),r.productBindings=e.endVector(),u.ModelProperties.startProductsVector(e,0),r.products=e.endVector(),u.ModelProperties.startModelProperties(e),u.ModelProperties.addAngleMeasures(e,r.angleMeasures),u.ModelProperties.addAreaMeasures(e,r.areaMeasures),u.ModelProperties.addDateTimeValues(e,r.dateTimeValues),u.ModelProperties.addDefinitions(e,r.definitions),u.ModelProperties.addDescriptions(e,r.descriptions),u.ModelProperties.addDoubleValues(e,r.doubleValues),u.ModelProperties.addHistories(e,r.histories),u.ModelProperties.addLengthMeasures(e,r.lengthMeasures),u.ModelProperties.addMassMeasures(e,r.massMeasures),u.ModelProperties.addNames(e,r.names),u.ModelProperties.addObjectTypes(e,r.objectTypes),u.ModelProperties.addOwners(e,r.owners),u.ModelProperties.addProductBindings(e,r.productBindings),u.ModelProperties.addProducts(e,r.products),u.ModelProperties.addPropertyNames(e,r.propertyNames),u.ModelProperties.addPropertySetBindings(e,r.propertySetBindings),u.ModelProperties.addPropertySetNames(e,r.propertySetNames),u.ModelProperties.addStringValues(e,r.stringValues),u.ModelProperties.addVolumeMeasures(e,r.volumeMeasures),t=u.ModelProperties.endModelProperties(e)}{const t={entities:null,hierarchies:null,guidIdentifiers:null,stringIdentifiers:u.ModelEntities.createStringIdentifiersVector(e,this.stringIdentifiers.map((t=>e.createString(t)))),spatialHashIdentifiers:null,dwgHandleIdentifiers:u.ModelEntities.createDwgHandleIdentifiersVector(e,[]),entityClasses:u.ModelEntities.createEntityClassesVector(e,[e.createString("Class")])};u.ModelEntities.startHierarchiesVector(e,0),t.hierarchies=e.endVector(),u.ModelEntities.startSpatialHashIdentifiersVector(e,0),t.spatialHashIdentifiers=e.endVector(),u.ModelEntities.startEntitiesVector(e,this.instances.length),i(this.instances,((t,r)=>{u.Entity.createEntity(e,t.idType,t.idIndex,0,t.globalPlacement.x,t.globalPlacement.y,t.globalPlacement.z,1,0,0,0,1,0)})),t.entities=e.endVector(),u.ModelEntities.startGuidIdentifiersVector(e,this.guidIdentifiers.length),this.guidIdentifiers.forEach((e=>this.generateGuid(e))),t.guidIdentifiers=e.endVector(),u.ModelEntities.startModelEntities(e),u.ModelEntities.addEntities(e,t.entities),u.ModelEntities.addHierarchies(e,t.hierarchies),u.ModelEntities.addGuidIdentifiers(e,t.guidIdentifiers),u.ModelEntities.addStringIdentifiers(e,t.stringIdentifiers),u.ModelEntities.addSpatialHashIdentifiers(e,t.spatialHashIdentifiers),u.ModelEntities.addDwgHandleIdentifiers(e,t.dwgHandleIdentifiers),u.ModelEntities.addEntityClasses(e,t.entityClasses),r=u.ModelEntities.endModelEntities(e)}const n=this.generateModelGeometries(),a=u.Model.createMapConversionsVector(e,[]),o=u.Model.createMetadataVector(e,[]);u.Model.startModel(e),u.Model.addEntities(e,r),u.Model.addProperties(e,t),u.Model.addMapConversions(e,a),u.Model.addMetadata(e,o),u.Model.addGeometry(e,n);const s=u.Model.endModel(e);u.Model.finishModelBuffer(e,s);return e.asUint8Array().slice().buffer}generateModelGeometries(){const e=this.b,t={alignmentCurves:u.ModelGeometry.createAlignmentCurvesVector(e,this.generateGeometries(u.GeometryType.AlignmentCurve)),billboards:u.ModelGeometry.createBillboardsVector(e,[]),billboardTexts:u.ModelGeometry.createBillboardTextsVector(e,this.generateGeometries(u.GeometryType.BillboardText)),bolts:u.ModelGeometry.createBoltsVector(e,[]),bReps:u.ModelGeometry.createBRepsVector(e,[]),bRepWithNormals:u.ModelGeometry.createBRepWithNormalsVector(e,[]),bRepWithUVs:u.ModelGeometry.createBRepWithUVsVector(e,[]),coordinateGeometryPoints:u.ModelGeometry.createCoordinateGeometryPointsVector(e,[]),definitions:null,graphicsContainers:u.ModelGeometry.createGraphicsContainersVector(e,[]),gridLineContainers:u.ModelGeometry.createGridLineContainersVector(e,this.generateGeometries(u.GeometryType.GridLineContainer)),instances:null,layers:null,localPlacements:null,surfaceMaterials:null,sweptDiskSolids:u.ModelGeometry.createSweptDiskSolidsVector(e,[]),textStyles:null,texturedBillboards:this.generateTexturedBillboards(),texturedTriangleMeshes:u.ModelGeometry.createTexturedTriangleMeshesVector(e,[]),texturedTriangleMeshes8:u.ModelGeometry.createTexturedTriangleMeshes8Vector(e,[]),textures:null,triangleMeshes:u.ModelGeometry.createTriangleMeshesVector(e,this.generateGeometries(u.GeometryType.TriangleMesh)),triangleMeshes8:u.ModelGeometry.createTriangleMeshes8Vector(e,[])};u.ModelGeometry.startLocalPlacementsVector(e,1),u.Placement3.createPlacement3(e,0,0,0,1,0,0,0,1,0),t.localPlacements=e.endVector(),u.ModelGeometry.startSurfaceMaterialsVector(e,this.materials.length),i(this.materials,((t,r)=>{const i=e=>void 0!==e?255*e:255,n=(e,t)=>void 0!==e?i(e[t]):255;u.SurfaceMaterial.createSurfaceMaterial(e,n(t.color,"r"),n(t.color,"g"),n(t.color,"b"),i(t.opacity),t.textureId,u.Sidedness.Double,u.LineStyle.Normal,0,0)})),t.surfaceMaterials=e.endVector();{const r=e.createString("Layer");t.layers=u.ModelGeometry.createLayersVector(e,[r])}u.ModelGeometry.startInstancesVector(e,this.instances.length),i(this.instances,((t,r)=>{u.GeometryInstance.createGeometryInstance(e,0,r,t.definitionId,t.materialId,0)})),t.instances=e.endVector(),u.ModelGeometry.startDefinitionsVector(e,this.definitionCount),i(this.geometryDefinitions,((t,r)=>{const i=t.boundingBox;u.GeometryDefinition.createGeometryDefinition(e,t.type,t.index,i.min.x,i.min.y,i.min.z,i.max.x,i.max.y,i.max.z)})),t.definitions=e.endVector();{const r=this.textStyles.map((t=>e.createString(t.font||""))),i=this.textStyles.map(((t,i)=>(u.TextStyle.startTextStyle(e),u.TextStyle.addFont(e,r[i]),u.TextStyle.addSize(e,t.size||0),u.TextStyle.addOptions(e,t.attenuated?1:0),u.TextStyle.addVerticalAlign(e,t.verticalAlign||0),u.TextStyle.addHorizontalAlign(e,t.horizontalAlign||0),u.TextStyle.addRotationAngle(e,0),u.TextStyle.addLayout(e,u.LayoutType.LeftToRight),u.TextStyle.addAlignment(e,t.alignment||u.AlignmentType.LeftTop),u.TextStyle.addMaxAutoScale(e,0),u.TextStyle.addVerticalDistanceToObject(e,0),u.TextStyle.endTextStyle(e))));t.textStyles=u.ModelGeometry.createTextStylesVector(e,i)}{const r=[];this.textures.forEach(((t,i)=>{const n=u.Texture.createBytesVector(e,t.bytes);u.Texture.startTexture(e),u.Texture.addType(e,t.type),u.Texture.addBytes(e,n),r.push(u.Texture.endTexture(e))})),t.textures=u.ModelGeometry.createTexturesVector(e,r)}return u.ModelGeometry.startModelGeometry(e),u.ModelGeometry.addAlignmentCurves(e,t.alignmentCurves),u.ModelGeometry.addBillboards(e,t.billboards),u.ModelGeometry.addBillboardTexts(e,t.billboardTexts),u.ModelGeometry.addBolts(e,t.bolts),u.ModelGeometry.addBReps(e,t.bReps),u.ModelGeometry.addBRepWithNormals(e,t.bRepWithNormals),u.ModelGeometry.addBRepWithUVs(e,t.bRepWithUVs),u.ModelGeometry.addCoordinateGeometryPoints(e,t.coordinateGeometryPoints),u.ModelGeometry.addDefinitions(e,t.definitions),u.ModelGeometry.addGraphicsContainers(e,t.graphicsContainers),u.ModelGeometry.addGridLineContainers(e,t.gridLineContainers),u.ModelGeometry.addInstances(e,t.instances),u.ModelGeometry.addLayers(e,t.layers),u.ModelGeometry.addLocalPlacements(e,t.localPlacements),u.ModelGeometry.addSurfaceMaterials(e,t.surfaceMaterials),u.ModelGeometry.addSweptDiskSolids(e,t.sweptDiskSolids),u.ModelGeometry.addTextStyles(e,t.textStyles),u.ModelGeometry.addTexturedBillboards(e,t.texturedBillboards),u.ModelGeometry.addTexturedTriangleMeshes(e,t.texturedTriangleMeshes),u.ModelGeometry.addTexturedTriangleMeshes8(e,t.texturedTriangleMeshes8),u.ModelGeometry.addTextures(e,t.textures),u.ModelGeometry.addTriangleMeshes(e,t.triangleMeshes),u.ModelGeometry.addTriangleMeshes8(e,t.triangleMeshes8),u.ModelGeometry.endModelGeometry(e)}generateGeometries(e){return this.geometryDefinitionsMap.get(e).map((e=>this.geometryDefinitions[e].generate(this.b)))}generateTexturedBillboards(){const e=this.b,t=this.geometryDefinitionsMap.get(u.GeometryType.TexturedBillboard);return u.ModelGeometry.startTexturedBillboardsVector(e,t.length),i(t,(t=>{this.geometryDefinitions[t].generate(e)})),e.endVector()}generateGuid(e){const t=this.b;return u.Guid.createGuid(t,e.data[3]<<24|e.data[2]<<16|e.data[1]<<8|e.data[0],e.data[5]<<8|e.data[4],e.data[7]<<8|e.data[6],e.data[8],e.data[9],e.data[10],e.data[11],e.data[12],e.data[13],e.data[14],e.data[15])}},e.loadBinaryFile=async function(e){return new Promise(((t,r)=>{const i=new XMLHttpRequest;i.open("GET",e,!0),i.withCredentials=!0,i.responseType="arraybuffer",i.onload=()=>{const e=i.response;if(e){const r=new Uint8Array(e);t(r)}else r("Error loading file")},i.send(null)}))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=Generator.js.map
