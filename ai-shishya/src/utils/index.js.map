{"version":3,"file":"index.js","sources":["../../../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","../../../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/animationFrame.ts","../../../../node_modules/rxjs/src/internal/observable/defer.ts","../../../../node_modules/rxjs/src/internal/observable/interval.ts","../../../../node_modules/rxjs/src/internal/operators/pairwise.ts","../../../../node_modules/rxjs/src/internal/operators/takeWhile.ts","../../src/Helpers/Checksum.ts","../../src/Picker/PickerCache.ts","../../src/Picker/Picker.ts","../../src/Helpers/common-utils.ts","../../src/Tools/Zoom.ts","../../src/Tools/Pan.ts","../../src/Tools/Orbit.ts","../../src/Animation.ts","../../src/Tools/Fly.ts","../../src/Tools/VRNavigation.ts","../../src/ApiContainer.ts","../../src/Tools/GamepadNavigation.ts","../../src/Tools/ToolManager.ts","../../src/Rendering/VRManager.ts","../../../../node_modules/ismobilejs/src/isMobile.ts","../../../../node_modules/three/src/renderers/webgl/WebGLAnimation.js","../../../../node_modules/three/src/renderers/webxr/WebXRController.js","../../../../node_modules/three/src/renderers/webxr/WebXRManager.js","../../../../node_modules/three/src/constants.js","../../../../node_modules/three/src/renderers/webgl/WebGLUtils.js","../../../../node_modules/three/src/renderers/webgl/WebGLAttributes.js","../../../../node_modules/three/src/renderers/shaders/UniformsLib.js","../../../../node_modules/three/src/renderers/webgl/WebGLLights.js","../../../../node_modules/three/src/renderers/webgl/WebGLRenderStates.js","../../../../node_modules/three/src/renderers/webgl/WebGLUniforms.js","../../../../node_modules/three/src/renderers/webgl/WebGLInfo.js","../../../../node_modules/three/src/renderers/webgl/WebGLState.js","../../../../node_modules/three/src/renderers/webgl/WebGLObjects.js","../../../../node_modules/three/src/renderers/webgl/WebGLClipping.js","../../../../node_modules/three/src/renderers/shaders/UniformsUtils.js","../../../../node_modules/three/src/renderers/WebGLRenderTarget.js","../../../../node_modules/three/src/renderers/WebGLCubeRenderTarget.js","../../../../node_modules/three/src/renderers/webgl/WebGLCubeMaps.js","../../../../node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","../../../../node_modules/three/src/renderers/webgl/WebGLMaterials.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/vsm_vert.glsl.js","../../../../node_modules/three/src/renderers/webgl/WebGLShadowMap.js","../../../../node_modules/three/src/renderers/webgl/WebGLExtensions.js","../../../../node_modules/three/src/utils.js","../../../../node_modules/three/src/renderers/webgl/WebGLGeometries.js","../../../../node_modules/three/src/renderers/webgl/WebGLProperties.js","../../../../node_modules/three/src/renderers/webgl/WebGLRenderLists.js","../../../../node_modules/three/src/renderers/webgl/WebGLCapabilities.js","../../../../node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","../../../../node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/transmissionmap_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/background_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/background_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/cube_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/cube_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/depth_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/depth_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/equirect_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/linedashed_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshbasic_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshlambert_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshtoon_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshphong_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/meshphysical_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/normal_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/normal_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/points_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/points_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/shadow_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_frag.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib/sprite_vert.glsl.js","../../../../node_modules/three/src/renderers/shaders/ShaderChunk.js","../../../../node_modules/three/src/renderers/shaders/ShaderLib.js","../../../../node_modules/three/src/renderers/webgl/WebGLBackground.js","../../../../node_modules/three/src/renderers/webgl/WebGLShader.js","../../src/Rendering/WebGLProgram.js","../../src/Rendering/WebGLPrograms.js","../../src/Rendering/WebGLTextures.js","../../src/Rendering/MultiRenderTarget.ts","../../src/Rendering/WebGLBindingStates.js","../../src/Rendering/WebGLRenderer.js","../../src/Rendering/EquirectangularToCubeGenerator.ts","../../src/Rendering/WVBackground.ts","../../../../node_modules/three/examples/jsm/postprocessing/Pass.js","../../src/Rendering/EffectPass.ts","../../src/Rendering/DepthPeelingRenderPass.ts","../../src/Rendering/EdgesAndSsaoRenderPass.ts","../../../../node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../src/Rendering/OutlineEffectMaterial.ts","../../src/Rendering/SelectionEffectPass.ts","../../../../node_modules/three/examples/jsm/postprocessing/ShaderPass.js","../../../../node_modules/three/examples/jsm/shaders/FXAAShader.js","../../src/Rendering/FXAAPass.ts","../../src/Rendering/PassComposer.ts","../../src/Rendering/RenderingManager.ts","../../src/EventDispatcher.ts","../../src/HtmlElementPositioner.ts","../../src/Models.ts","../../src/Registry.ts","../../src/Selection.ts","../../src/Rendering/WVCamera.ts","../../src/Version.ts","../../../../node_modules/three/examples/jsm/lines/LineMaterial.js","../../../../node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","../../../../node_modules/three/examples/jsm/lines/LineGeometry.js","../../../../node_modules/three/examples/jsm/lines/LineSegments2.js","../../src/CustomObjects/MeshLine.ts","../../src/Picker/Cursor3D.ts","../../src/Analytics.ts","../../src/PublicCamera.ts","../../src/Helpers/TextureGenerator.ts","../../src/SettingsProxyHandler.ts","../../src/WebglViewer.ts","../../src/WebglViewerPlugin.ts","../../src/Model.ts","../../src/index.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated renamed. Use {@link animationFrameScheduler}\n */\nexport const animationFrame = animationFrameScheduler;\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","\n/**\n * Simple incremental checksum builder.\n * Currently based crc32, but could be replaced.\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check\n * https://stackoverflow.com/questions/27939882/fast-crc-algorithm\n */\nexport class Checksum {\n    private static readonly POLY = 0x82f63b78;\n    private static readonly MAX_INT32 = 2147483647;\n    private static readonly MIN_INT32 = -2147483648;\n\n    private intPlaceholder = new Int32Array(1);\n    private floatPlaceholder = new Float32Array(this.intPlaceholder.buffer);\n    private bytes = new Uint8Array(this.intPlaceholder.buffer);\n    private crc = ~0;\n\n    /**\n     * Add a primitive to the checksum.\n     * If the primitive is of an unsupported type during runtime, it is ignored\n     * @param data The primitive to be added\n     * @returns Itself, to allow chaining\n     */\n    add(data: number | boolean | string | object): Checksum {\n        switch (typeof data) {\n            case \"number\":\n                if (\n                    Number.isInteger(data) &&\n                    data < Checksum.MAX_INT32 &&\n                    data > Checksum.MIN_INT32\n                )       // Can it be accurately represented by an int32?\n                    this.intPlaceholder[0] = data;\n                else    // If not, represent by a float32\n                    this.floatPlaceholder[0] = data;\n                this.compute();\n                break;\n            case \"boolean\":\n                this.intPlaceholder[0] = (data ? 1 : 0);\n                this.compute();\n                break;\n            case \"string\":\n                for (let i=0; i<data.length; ++i) {\n                    this.intPlaceholder[0] = data.codePointAt(i);\n                    this.compute();\n                }\n                break;\n            case \"object\":\n                for (const p in data)\n                    if (data.hasOwnProperty(p)) this.add((data as any)[p]);\n                break;\n        }\n        return this;\n    }\n\n    /**\n     * Gives the checksum of all data added since last clear.\n     * @returns A 32-bit checksum as a number\n     */\n    get(): number {\n        return ~this.crc;\n    }\n\n    /**\n     * Resets the builder to initial state.\n     * @returns Itself, to allow chaining\n     */\n    clear(): Checksum {\n        this.crc = ~0;\n        return this;\n    }\n\n    /**\n     * Increments the checksum with the data currently stored in the placeholder.\n     */\n    private compute(): void {\n        for (let i=0; i<4; ++i) {\n            this.crc ^= this.bytes[i];\n            for (let k = 0; k < 8; ++k)\n                this.crc = this.crc & 1 ? (this.crc >> 1) ^ Checksum.POLY : this.crc >> 1;\n        }\n    }\n\n}\n","import { Vector2 } from \"three\";\nimport { IIntersection } from \"./IIntersection\";\nimport { Checksum } from \"../Helpers/Checksum\";\nimport { Model } from \"../Model\";\n\n// pick results with larger complexity are reused for lower complexity pick requests to avoid multiple pick calculations\nexport const enum PickComplexity {\n    NAVIGATION = 0,\n    NORMAL = 1,\n    SNAPPED = 2\n}\n\ninterface CachedPick {\n    listeners: Array<() => void>;\n    intersection: IIntersection;\n}\n\nexport class PickerCache {\n    private cache: Map<number, CachedPick> = new Map();\n    private checksum = new Checksum();\n\n    async execCached(screenPosition: Vector2, models: Model[], complexity: PickComplexity, command: () => Promise<IIntersection>): Promise<IIntersection> {\n        // lets wait for some time in case another pick with larger complexity will be requested, so we could share the result\n        await this.sleep( (2 - complexity) * 10);\n\n        // do not use 'await' here, as it is important to return immediately if no result is cached\n        let result = this._get(screenPosition, models, complexity);\n        if (result instanceof Promise) return await result;\n        if (result !== null) return result;\n\n        this._reportProcessingStart(screenPosition, models, complexity);\n        result = await command();\n        this._reportProcessingEndAndStore(screenPosition, models, complexity, result);\n        return result;\n    }\n\n    /**\n     * returns null if no result was cached\n     * returns undefined if cached result was empty\n     */\n    _get(screenPosition: Vector2, models: Model[], complexity: PickComplexity): Promise<IIntersection> | IIntersection {\n        const cachedPick = this.getCompatibleCache(screenPosition, models, complexity);\n        if (!cachedPick) return null;\n        if (cachedPick.intersection !== null) return cachedPick.intersection;\n\n        return new Promise<IIntersection>(resolve => {\n            if (!cachedPick.listeners) cachedPick.listeners = [];\n            cachedPick.listeners.push(() => resolve(cachedPick.intersection));\n        });\n    }\n\n    _reportProcessingStart(screenPosition: Vector2, models: Model[], complexity: PickComplexity): void {\n        const cachedPick = this.getCache(screenPosition, models, complexity);\n        if (cachedPick) throw new Error(\"reportProcessingStart() is called multiple times\");\n        this.setCache(screenPosition, models, complexity, {intersection: null} as CachedPick);\n    }\n\n    _reportProcessingEndAndStore(screenPosition: Vector2, models: Model[], complexity: PickComplexity, intersection: IIntersection): void {\n        const cachedPick = this.getCache(screenPosition, models, complexity);\n        if (cachedPick.intersection !== null) throw new Error(\"reportProcessingEndAndStore() is called before reportProcessingStart(), or called multiple times\");\n        cachedPick.intersection = intersection;\n        if (cachedPick.listeners)\n            cachedPick.listeners.forEach(l => l());\n    }\n\n    clear(): void {\n        for (const entry of this.cache)\n            if (entry[1].intersection !== null) this.cache.delete(entry[0]);\n    }\n\n    private getCompatibleCache(screenPosition: Vector2, models: Model[], compatibility: PickComplexity): CachedPick {\n        const checksum = this._toChecksum(screenPosition, models);\n        // navigation picks can not be replaced by higher complexity cache\n        if (compatibility === PickComplexity.NAVIGATION) return this.cache.get(checksum + compatibility);\n\n        // pick with larger complexity are reused for lower complexity pick requests\n        for (let i = PickComplexity.SNAPPED; i >= compatibility; i--) {\n            const r = this.cache.get(checksum + i);\n            if (r) return r;\n        }\n    }\n\n    private getCache(screenPosition: Vector2, models: Model[], compatibility: PickComplexity): CachedPick {\n        const checksum = this._toChecksum(screenPosition, models);\n        return this.cache.get(checksum + compatibility);\n    }\n\n    private setCache(screenPosition: Vector2, models: Model[], compatibility: PickComplexity, cachedPick: CachedPick): void {\n        this.cache.set(this._toChecksum(screenPosition, models) + compatibility, cachedPick);\n    }\n\n    _toChecksum(screenPosition: Vector2, models: Model[]): number {\n        this.checksum.clear().add(screenPosition.x).add(screenPosition.y);\n        if (models) {\n            if (models.length === 0) this.checksum.add(\"empty\");\n            for (const m of models) this.checksum.add(m.name);\n        }\n        return this.checksum.get();\n    }\n\n    private sleep(ms: number): Promise<void> {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n}\n","import { Box3, Camera, Frustum, Matrix4, Plane, Ray, Raycaster, Vector2, Vector3 } from \"three\";\nimport { IIntersection } from \"./IIntersection\";\nimport { Models } from \"../Models\";\nimport { Caster } from \"./Caster\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\nimport { Model, PickableModel, SelectableModel, SnappedPickableModel } from \"../Model\";\nimport { PickComplexity, PickerCache } from \"./PickerCache\";\nimport {Settings, SnapType} from \"../common\";\nimport {SettingsProxyHandler} from \"../SettingsProxyHandler\";\n\nexport class Picker {\n    private _worldBoundingBox: Box3;\n    pickerBusy: boolean;\n    private cache = new PickerCache();\n\n    constructor(\n        private _camera: WVCamera,\n        private _models: Models,\n        private _container: HTMLElement,\n        private settingsProxy: SettingsProxyHandler<Settings>\n    ) {\n        _camera.subscribe(() => this.cache.clear());\n    }\n\n    public setWorldBoundingBox(box: Box3): void {\n        this._worldBoundingBox = box;\n    }\n\n    private createCaster(screenPosition: Vector2, snapDistance: number): Caster {\n        const caster = new Caster();\n        caster.screenPosition = screenPosition;\n        const p = screenPositionToRayTracePoint(caster.screenPosition, this._container);\n        caster.setFromCamera(p, this._camera);\n        caster.frustum = this.createFrustumFromScreenPoint(caster.screenPosition, snapDistance);\n        return caster;\n    }\n\n    private createFrustumFromScreenPoint(screenPoint: Vector2, snapDistance: number): Frustum {\n        return this.createFrustumFromScreenRect(screenPoint.clone().subScalar(snapDistance), screenPoint.clone().addScalar(snapDistance));\n    }\n\n    private createFrustumFromScreenRect = (() => {\n        const top = new Plane();\n        const right = new Plane();\n        const bottom = new Plane();\n        const left = new Plane();\n        const near = new Plane();\n        const far = new Plane();\n        const topLeft = new Vector3();\n        const topRight = new Vector3();\n        const bottomLeft = new Vector3();\n        const bottomRight = new Vector3();\n        const topLeftNear = new Vector3();\n        const bottomRightNear = new Vector3();\n        const topLeftPoint = new Vector2();\n        const bottomRightPoint = new Vector2();\n\n        return (screenPointTopLeft: Vector2, screenPointBottomRight: Vector2): Frustum => {\n            screenPositionToRayTracePoint(screenPointTopLeft, this._container, topLeftPoint);\n            screenPositionToRayTracePoint(screenPointBottomRight, this._container, bottomRightPoint);\n\n            const camera = this._camera;\n            topLeft.set(topLeftPoint.x, topLeftPoint.y, 1).unproject(camera);\n            topRight.set(bottomRightPoint.x, topLeftPoint.y, 1).unproject(camera);\n            bottomLeft.set(topLeftPoint.x, bottomRightPoint.y, 1).unproject(camera);\n            bottomRight.set(bottomRightPoint.x, bottomRightPoint.y, 1).unproject(camera);\n\n            topLeftNear.set(topLeftPoint.x, topLeftPoint.y, 0).unproject(camera);\n            bottomRightNear.set(bottomRightPoint.x, bottomRightPoint.y, 0).unproject(camera);\n\n            top.setFromCoplanarPoints(topLeftNear, topLeft, topRight);\n            right.setFromCoplanarPoints(bottomRightNear, topRight, bottomRight);\n            bottom.setFromCoplanarPoints(bottomRightNear, bottomRight, bottomLeft);\n            left.setFromCoplanarPoints(topLeftNear, bottomLeft, topLeft);\n\n            camera.getWorldDirection(near.normal);\n            near.constant = camera.position.length();\n            far.normal = near.normal;\n            far.constant = Infinity;\n\n            return new Frustum(top, bottom, left, right, near, far);\n        };\n    })();\n\n    async pickForNavigation(screenPosition: Vector2): Promise<IIntersection> {\n        return await this.cache.execCached(screenPosition, undefined, PickComplexity.NAVIGATION, async () => {\n            const caster = this.createCaster(screenPosition, 50);\n            caster.navigation = true;\n            return this.reduceIntersections(await this.pickAllModels(caster, undefined));\n        });\n    }\n\n    pick(screenPosition: Vector2, models: Model[]): Promise<IIntersection> {\n        return this.cache.execCached(screenPosition, models, PickComplexity.NORMAL, async () => {\n            const caster = this.createCaster(screenPosition, this.settingsProxy.settings.snapDistance);\n            return this.reduceIntersections(await this.pickAllModels(caster, models));\n        });\n    }\n\n    async pickSnapped(screenPosition: Vector2, snapTypes: SnapType[], waitIfBusy: boolean): Promise<IIntersection> {\n        const intersection = await this.cache.execCached(screenPosition, undefined, PickComplexity.SNAPPED, async () => {\n            const caster = this.createCaster(screenPosition, this.settingsProxy.settings.snapDistance);\n            return this.reduceIntersections(await this.pickAllModelsSnapped(caster, snapTypes, waitIfBusy));\n        });\n        // Filter cached interesction with unwanted snap type\n        return (intersection && snapTypes.includes(intersection.snapType)) ? intersection : null;\n    }\n\n    public async getIntersectionFromScreenRect(screenPointTopLeft: Vector2, screenPointBottomRight: Vector2, excludeIntersected: boolean = false): Promise<IIntersection[]> {\n        const caster = new Caster();\n        delete caster.ray;\n        caster.frustum = this.createFrustumFromScreenRect(screenPointTopLeft, screenPointBottomRight);\n        const picks = [];\n        const models = this._models.getIterable();\n\n        for (const model of models) {\n            const m = model as Model & SelectableModel;\n            if (m.isSelectable) picks.push(m.areaPick(caster, excludeIntersected));\n        }\n\n        let intersections: (IIntersection)[] = await Promise.all(picks);\n        intersections = intersections.filter(item => !!item);\n\n        return intersections;\n    }\n\n    private async pickAllModels(caster: Caster, models: Model[]): Promise<IIntersection[]> {\n        const promises: Array<Promise<IIntersection>> = [];\n        for (const model of models ? models : this._models.getIterable()) {\n            const m = model as Model & PickableModel;\n            if (m.pick)\n                promises.push(m.pick(caster));\n        }\n        const intersections = await Promise.all(promises);\n        return intersections.filter(i => !!i);\n    }\n\n    private async pickAllModelsSnapped(caster: Caster, snapTypes: SnapType[], waitIfBusy: boolean): Promise<IIntersection[]> {\n        if (this.pickerBusy && !waitIfBusy) return;\n        this.pickerBusy = true;\n\n        const promises: Array<Promise<IIntersection[]>> = [];\n        for (const model of this._models.getIterable()) {\n            const m = model as Model & SnappedPickableModel;\n            if (m.pickSnapped)\n                promises.push(m.pickSnapped(caster, snapTypes));\n        }\n        const ins = await Promise.all(promises);\n\n        this.pickerBusy = false;\n        return ins.flat().filter(i => !!i);\n    }\n\n    private reduceIntersections(intersections: IIntersection[]): IIntersection {\n        return !intersections || intersections.length === 0 ? undefined : intersections.reduce((a, b) => {\n            // when comparing edges or points that are closer than all the faces, compare by distance to ray not distance to ray origin.\n            const deltaDistance = (a.distanceToRay !== undefined && b.distanceToRay !== undefined) ?\n                (a.distanceToRay / a.distance) - (b.distanceToRay / b.distance) :\n                a.distance - b.distance;\n            const deltaPriority = (a.pickPriority !== undefined ? a.pickPriority : 0) - (b.pickPriority ? b.pickPriority : 0);\n            const deltaSnapType = (a.snapType !== undefined ? a.snapType : 0) - (b.snapType ? b.snapType : 0);\n\n            return (deltaPriority === 0 ? (deltaSnapType === 0 ? deltaDistance : -deltaSnapType) : -deltaPriority) < 0 ? a : b;\n        });\n    }\n}\n\nconst rayCaster = new Raycaster();\nexport function screenPositionToRay(point: { x: number; y: number }, container: HTMLElement, camera: Camera, out: Ray = new Ray()): Ray {\n    rayCaster.setFromCamera(screenPositionToRayTracePoint(point, container), camera);\n    return out.copy(rayCaster.ray);\n}\n\nexport function screenPositionToRayTracePoint(point: { x: number; y: number }, container: HTMLElement, out: Vector2 = new Vector2()): Vector2 {\n    const dimensions = container.getBoundingClientRect();\n    out.x = ((point.x - dimensions.left) / container.clientWidth) * 2 - 1;\n    out.y = -((point.y - dimensions.top) / container.clientHeight) * 2 + 1;\n    return out;\n}\n\nexport const worldToScreenPoint = (() => {\n    const pos = new Vector3();\n\n    return (point: Vector3, camera: Camera, canvasWidth: number, canvasHeight: number) => {\n        pos.copy(point).applyMatrix4(camera.matrixWorldInverse);\n        if (pos.z > 0) // point behind camera\n            return;\n\n        pos.applyMatrix4(camera.projectionMatrix);\n        pos.x = ((pos.x + 1) * canvasWidth) / 2;\n        pos.y = ((-pos.y + 1) * canvasHeight) / 2;\n\n        return pos;\n    };\n})();\n","import {Vector3} from \"three\";\n\n/**\n * A utils file common for main thread and workers.\n * NB: Be careful what you import here, as it will be added to the web worker bundle.\n * In particular, do not use THREE.js here.\n */\n\n// max size of buffer which can be indexed by 16bit integer\nexport const MAX_16BIT_SIZE = 0x10000;\n\nconst DEG_RATIO = 1 / 360;\nexport function getPerspectiveViewWorldSize(fov: number, distance: number): number {\n    return Math.tan(fov * Math.PI * DEG_RATIO) * distance;\n}\n\nexport function iterate<T>(array: T[] | T, loop: (o: T, i: number) => void): void {\n    if (Array.isArray(array)) {\n        for (let i = 0; i < array.length; i++)\n            loop(array[i], i);\n    }\n    else {\n        loop(array, 0);\n    }\n}\n\n// Remove image from RAM after they are transfered to VRAM\nexport function disposeImage(): void {\n    // @ts-ignore\n    this.image = undefined;\n}\n\nexport class Vector3Const {\n    static zero = Object.freeze(new Vector3(0, 0, 0));\n    static one = Object.freeze(new Vector3(1, 1, 1));\n    static up = Object.freeze(new Vector3(0, 0, 1));\n    static down = Object.freeze(new Vector3(0, 0, -1));\n    static forward = Object.freeze(new Vector3(0, 1, 0));\n    static back = Object.freeze(new Vector3(0, -1, 0));\n    static right = Object.freeze(new Vector3(1, 0, 0));\n    static left = Object.freeze(new Vector3(-1, 0, 0));\n}\n","import {\n    PointerInput,\n    ScrollEvent,\n    addIntersectionForNavigation, getScreenDistance\n} from \"../InputHandler\";\nimport { Api } from \"../Api\";\nimport { Vector3, Vector2 } from \"three\";\nimport { tap, map, filter, mergeMap, takeUntil, debounceTime } from \"rxjs/operators\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\nimport { screenPositionToRayTracePoint } from \"../Picker/Picker\";\nimport {GeometryType, Tool} from \"../common\";\nimport {getPerspectiveViewWorldSize, Vector3Const} from \"../Helpers/common-utils\";\nimport {IIntersection} from \"../Picker/IIntersection\";\nimport {Models} from \"../Models\";\n\nexport class Zoom implements Tool {\n    static get Name(): string { return \"zoom\" };\n\n    private _cameraExpectedPosition: Vector3;\n    private _camera: WVCamera;\n    private _pinchHandle: Subscription;\n    private _scrollHandle: Subscription;\n    private _zoom$: Observable<void>;\n    private _pinch$: Observable<any>;\n    private _zoomTarget: Vector3;\n    private _rayTracePoint: Vector2;\n    private readonly _scrollSpeed = 0.1;\n    private readonly _pinchSpeed = 0.0035;\n    private previousPinchDistance: number;\n    private previousPinchTargetTime: number;\n\n    private zoomPosition = new Vector3();\n    private zoomOffset = new Vector3();\n    private cameraDirection = new Vector3();\n\n    private right = new Vector3();\n    private up = new Vector3();\n    private forward = new Vector3();\n\n    useWorldCenter: boolean = false;\n\n    get name(): string {\n        return Zoom.Name;\n    }\n\n    constructor(private _api: Api) {\n        this._camera = _api.camera;\n\n        this._zoomTarget = new Vector3();\n        this._cameraExpectedPosition = new Vector3();\n\n        const inputs = this._api.inputHandler;\n\n        let scrollStarted: boolean = false;\n        this._zoom$ = inputs.zoom$.pipe(\n            mergeMap(async (event) => {\n                if (!scrollStarted) {\n                    await this._scrollStart(event);\n                    scrollStarted = true;\n                }\n                return event;\n            }),\n            map(e => this.applyZoom(this._camera, this._scrollSpeed * e.speed, e.intersection)),\n            debounceTime(200),\n            tap(() => scrollStarted = false)\n        );\n\n        this._pinch$ = inputs.pointerDown$.pipe(\n            filter(event => event.touchCount >= 2),\n            mergeMap(addIntersectionForNavigation(inputs.picker)),\n            tap(event => this.onPinchStart(event)),\n            mergeMap(() =>\n                inputs.pointerMove$.pipe(\n                    filter(event => event.touchCount >= 2),\n                    map(event => this.onPinchMove(event)),\n                    takeUntil(inputs.pointerUp$)\n                )\n            )\n        );\n\n        this.enabled = true;\n    }\n\n    private async _scrollStart(event: ScrollEvent | PointerInput): Promise<void> {\n        if (this.useWorldCenter) {\n            this._api.models.worldBoundingBox.value.getCenter(this._zoomTarget);\n            return;\n        }\n\n        event.intersection = await this._api.picker.pickForNavigation(new Vector2(event.x, event.y));\n        this.setZoomTarget(event);\n    }\n\n    set enabled(enabled: boolean) {\n        if (this._scrollHandle) {\n            this._scrollHandle.unsubscribe();\n            this._pinchHandle.unsubscribe();\n            this._scrollHandle = null;\n        }\n        if (!enabled) return;\n\n        this._scrollHandle = this._zoom$.subscribe();\n        this._pinchHandle = this._pinch$.subscribe();\n    }\n\n    get enabled(): boolean {\n        return !!this._scrollHandle;\n    }\n\n    private setZoomTarget(event: PointerInput | ScrollEvent): void {\n        const intersection = event.intersection;\n        this._rayTracePoint = screenPositionToRayTracePoint(event, this._api.container);\n\n        if (intersection && intersection.point && intersection.point.distanceTo(this._camera.position) > 0.1) {\n            this._zoomTarget.copy(intersection.point);\n        }\n        else {\n            // Zoom in mouse direction\n            this._zoomTarget.set(this._rayTracePoint.x, this._rayTracePoint.y, 1).unproject(this._camera);\n            const dist = intersection ? 10 : Zoom.getDistanceToNearestModel(this._camera.position, this._api.models, 10, 1000);\n            this._zoomTarget.sub(this._camera.position).normalize().multiplyScalar(dist).add(this._camera.position);\n        }\n    }\n\n    static getDistanceToNearestModel(position: Vector3, models: Models, min: number, max: number): number {\n        let distance = max;\n        for (const box of models.getBoundingBoxesIterable()) {\n            const d = box.distanceToPoint(position);\n            if (distance > d)\n                distance = d;\n        }\n        return Math.max(distance, min);\n    }\n\n    private perspectiveZoom(camera: WVCamera, deltaZoom: number, intersection: IIntersection): void {\n        const position = camera.position;\n        this._camera.getWorldDirection(this.cameraDirection);\n\n        // If camera is too close to target, ignore the distance\n        if (this.zoomOffset.length() > 0.07 && this.cameraDirection.dot(this.zoomOffset) > 0 || !intersection || intersection.snapGeometryType !== GeometryType.MESH)\n            this.zoomPosition.copy(this.zoomOffset).multiplyScalar(-deltaZoom).add(position);\n        else\n            this.zoomPosition.copy(this.cameraDirection).multiplyScalar(-0.5 * deltaZoom).add(position);\n\n        camera.position.copy(this.zoomPosition);\n        this._api.camera.callListeners();\n    }\n\n    private orthographicZoom(camera: WVCamera, deltaZoom: number): void {\n        camera.getWorldDirection(this.forward);\n        this.right.copy(Vector3Const.right);\n        this.up.copy(Vector3Const.forward);\n\n        this.right.applyQuaternion(this._camera.quaternion);\n        this.up.applyQuaternion(this._camera.quaternion);\n\n        const top = camera.aspect > 1 ? camera.orthoSize / camera.aspect : camera.orthoSize;\n        const right = camera.aspect > 1 ? camera.orthoSize : camera.orthoSize * camera.aspect;\n\n        const pickDY = top * this._rayTracePoint.y;\n        const pickDX = right * this._rayTracePoint.x;\n\n        const remainingTop = top - pickDY; // distance to original camera top plane from new zoom centre\n        const remainingRight = right - pickDX;\n\n        const remainingTopScaled = remainingTop * (1 + deltaZoom); // distance to top plane after zoom scaling applied\n        const remainingRightScaled = remainingRight * (1 + deltaZoom);\n\n        const shiftY = remainingTopScaled + pickDY - (1 + deltaZoom) * top; // distances to new camera centre\n        const shiftX = remainingRightScaled + pickDX - (1 + deltaZoom) * right;\n\n        this.up.multiplyScalar(shiftY);\n        this.right.multiplyScalar(shiftX);\n\n        camera.position.add(this.up);\n        camera.position.add(this.right);\n\n        camera.orthoSize = camera.orthoSize * (1 + deltaZoom);\n\n        this.adjustOrthoClipping(camera);\n        this._api.camera.callListeners();\n    }\n\n    private adjustOrthoClipping(camera: WVCamera): void {\n        // Camera distance does not influence object size on screen, but we still change distance to adjust near clipping\n        let dist = this._zoomTarget.distanceTo(camera.position);\n        dist -= camera.orthoSize / 2 / getPerspectiveViewWorldSize(camera.fov, 1);\n        camera.position.add(this.forward.multiplyScalar(dist));\n    }\n\n    private applyZoom(camera: WVCamera, deltaZoom: number, intersection: IIntersection): void {\n        this.zoomOffset.copy(this._zoomTarget).sub(camera.position);\n\n        if (camera.isPerspectiveCamera)\n            this.perspectiveZoom(camera, deltaZoom, intersection);\n        else if (camera.isOrthographicCamera)\n            this.orthographicZoom(camera, deltaZoom);\n    }\n\n    private getTouchDistance(event: PointerInput): number {\n        const oe = event.originalEvent as TouchEvent;\n        return getScreenDistance(oe.touches[0], oe.touches[1]);\n    }\n\n    private onPinchStart(event: PointerInput): void {\n        this.setZoomTarget(event);\n        this.previousPinchTargetTime = performance.now();\n        this.previousPinchDistance = this.getTouchDistance(event);\n    }\n\n    private onPinchMove(event: PointerInput): PointerInput {\n        if (performance.now() - this.previousPinchTargetTime > 200) {\n            this.setZoomTarget(event);\n            this.previousPinchTargetTime = performance.now();\n        }\n        const touchDistance = this.getTouchDistance(event);\n        const delta = this.previousPinchDistance - touchDistance;\n\n        this.applyZoom(this._camera, delta * this._pinchSpeed, event.intersection);\n        this.previousPinchDistance = touchDistance;\n        return event;\n    }\n}\n","import {\n    PointerInput,\n} from \"../InputHandler\";\nimport {Vector2, Vector3} from \"three\";\n\nimport { Observable, Subscription } from \"rxjs\";\nimport { MouseButton } from \"../common\";\nimport { SinglePointerTool } from \"./SinglePointerTool\";\nimport {Zoom} from \"./Zoom\";\nimport {Vector3Const} from \"../Helpers/common-utils\";\nimport {Api} from \"../Api\";\n\nexport class Pan extends SinglePointerTool {\n    static get Name(): string { return \"pan\" };\n\n    private _dragObservable: Observable<PointerInput>;\n    private _speed: number;\n    private _dragHandle: Subscription;\n    private previousEvent: PointerInput;\n\n    get name(): string {\n        return Pan.Name;\n    }\n\n    constructor(private _api: Api) {\n        super();\n        this.mouseButton = MouseButton.middle;\n        this.touchCount = 2;\n\n        this._dragObservable = _api.inputHandler.createDragObservable(this.observableOptions,\n            e => this._downCallback(e),\n            e => this.moveCallback(e),\n            () => {});\n\n        this.enabled = true;\n    }\n\n    private set speed(point: Vector3) {\n        let distance: number;\n        if (point)\n            distance = this._api.camera.position.distanceTo(point);\n        else {\n            // If no point was picked assume camera is far away from any model\n            distance = Zoom.getDistanceToNearestModel(this._api.camera.position, this._api.models, 10, 1000)\n        }\n        const viewWorldSize = this._api.camera.getViewWorldSize(distance) * 2;\n        this._speed = viewWorldSize / Math.max(this._api.container.clientWidth, this._api.container.clientHeight);\n    }\n\n    private async _downCallback(event: PointerInput): Promise<PointerInput> {\n        event.intersection = await this._api.picker.pickForNavigation(new Vector2(event.x, event.y));\n        this.speed = event.intersection ? event.intersection.point : null;\n        this.previousEvent = event;\n        return event;\n    }\n\n    private moveCallback = (() => {\n        const up = new Vector3();\n        const right = new Vector3();\n\n        return (event: PointerInput) => {\n            const deltaX = event.x - this.previousEvent.x;\n            const deltaY = event.y - this.previousEvent.y;\n\n            up.copy(Vector3Const.forward);\n            right.copy(Vector3Const.right);\n\n            up.applyQuaternion(this._api.camera.quaternion);\n            right.applyQuaternion(this._api.camera.quaternion);\n\n            right.multiplyScalar(-deltaX * this._speed);\n            up.multiplyScalar(deltaY * this._speed);\n\n            this._api.camera.position.add(right).add(up);\n            this._api.camera.callListeners();\n\n            this.previousEvent = event;\n            return event;\n        };\n    })();\n\n    set enabled(enabled: boolean) {\n        if (this._dragHandle) {\n            this._dragHandle.unsubscribe();\n            this._dragHandle = null;\n        }\n        if (!enabled) return;\n\n        this._dragHandle = this._dragObservable.subscribe();\n    }\n\n    get enabled(): boolean {\n        return !!this._dragHandle;\n    }\n}\n","import { DirectionToSpherical } from \"../Helpers/utils\";\nimport {\n    InputHandler,\n    PointerInput,\n} from \"../InputHandler\";\nimport { Vector3, Vector2, Box3 } from \"three\";\nimport { BehaviorSubject, Observable, Subscription } from \"rxjs\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\nimport { MouseButton } from \"../common\";\nimport { SinglePointerTool } from \"./SinglePointerTool\";\nimport {Vector3Const} from \"../Helpers/common-utils\";\n\nexport abstract class AbstractOrbit extends SinglePointerTool {\n    protected EPS = 0.02;\n\n    protected _camera: WVCamera;\n    private _dragHandle: Subscription;\n    private dragObservable: Observable<PointerInput>;\n    private _offset = new Vector3();\n\n    protected _originalPosition: Vector3;\n    protected _originalDirection: Vector3;\n    protected _originalUp: Vector3;\n    protected _rotationPoint: Vector3;\n    protected calculatingRotationPoint: boolean;\n\n    protected _startPoint: Vector2;\n\n    abstract name: string;\n\n    protected constructor(protected inputs: InputHandler, camera: WVCamera) {\n        super();\n        this.mouseButton = MouseButton.left;\n        this.touchCount = 1;\n\n        this._camera = camera;\n\n        this.dragObservable = inputs.createDragObservable(this.observableOptions,\n            e => this.downCallback(e),\n            e => this.moveCallback(e),\n            e => this.upCallback(e));\n    }\n\n    set enabled(enabled: boolean) {\n        if (this._dragHandle) {\n            this._dragHandle.unsubscribe();\n            this._dragHandle = null;\n        }\n        if (!enabled) return;\n\n        this._dragHandle = this.dragObservable.subscribe();\n    }\n\n    get enabled(): boolean {\n        return !!this._dragHandle;\n    }\n\n    protected async downCallback(event: PointerInput): Promise<PointerInput> {\n        this._startPoint = new Vector2(event.x, event.y);\n        this._rotationPoint = undefined;\n        return event;\n    }\n\n    protected async moveCallback(event: PointerInput): Promise<PointerInput> {\n        if (this.calculatingRotationPoint) return;\n        if (!this._rotationPoint) {\n            this.calculatingRotationPoint = true;\n            await this.calculateRotationPoint(event);\n            this.calculatingRotationPoint = false;\n        }\n\n        const delta = new Vector2(event.x, event.y).sub(this._startPoint);\n        const sphericalDirection = DirectionToSpherical(\n            this._originalDirection,\n            this._originalUp\n        );\n        this.translateCamera(delta, sphericalDirection);\n        this._camera.callListeners();\n        return event;\n    }\n\n    protected abstract upCallback(event: PointerInput): PointerInput;\n\n    protected calculateRotationPoint(event: PointerInput): void {\n        this.updateOriginalCamera();\n    }\n\n    protected translateCamera(delta: Vector2, sphericalDirection: Vector2): void {\n        sphericalDirection.x = Math.max(this.EPS, Math.min(sphericalDirection.x + delta.y * 0.007, Math.PI - this.EPS));\n        sphericalDirection.y -= delta.x * 0.003;\n        this._camera.rotateSpherical(this._rotationPoint, this._offset, sphericalDirection);\n    }\n\n    updateOriginalCamera = (() => {\n        this._originalUp = new Vector3();\n        const right = new Vector3();\n\n        return () => {\n            this._originalDirection = this._camera.getWorldDirection(new Vector3());\n            this._originalPosition = this._camera.position.clone();\n\n            this._originalUp.copy(Vector3Const.forward);\n            right.copy(Vector3Const.right);\n\n            this._originalUp.applyQuaternion(this._camera.quaternion);\n            right.applyQuaternion(this._camera.quaternion);\n\n            const offset = new Vector3()\n                .copy(this._rotationPoint)\n                .sub(this._originalPosition);\n            const direction = this._originalDirection;\n\n            this._offset.set(offset.dot(right), offset.dot(direction), offset.dot(this._originalUp));\n        };\n    })();\n}\n\nexport class Orbit extends AbstractOrbit {\n    static get Name(): string { return \"orbit\" };\n    useWorldCenter: boolean = false;\n\n    get name(): string {\n        return Orbit.Name;\n    }\n\n    constructor(inputs: InputHandler, camera: WVCamera, private _worldBoundingBox: BehaviorSubject<Box3>) {\n        super(inputs, camera);\n        this.enabled = true;\n    }\n\n\n    protected async calculateRotationPoint(event: PointerInput): Promise<void> {\n        if (!this.useWorldCenter)\n            event.intersection = await this.inputs.picker.pickForNavigation(new Vector2(event.x, event.y));\n        if (!this.useWorldCenter && event.intersection && event.intersection.point) {\n            this._rotationPoint = event.intersection.point;\n        } else {\n            this._rotationPoint = this._worldBoundingBox.value.getCenter(new Vector3());\n        }\n        super.calculateRotationPoint(event);\n    }\n\n    public upCallback(event: PointerInput): PointerInput {\n        return event;\n    }\n}\n","import { defer, of, interval, animationFrameScheduler } from \"rxjs\";\n\nimport { map, takeWhile, concat } from \"rxjs/operators\";\n\nexport const msElapsed = (scheduler: any) =>\n    defer(() => {\n        const start = scheduler.now();\n        return interval(0, scheduler).pipe(map(() => scheduler.now() - start));\n    });\n\nexport const duration = (ms: number, scheduler = animationFrameScheduler as any) =>\n    msElapsed(scheduler).pipe(\n        map((ems: number) => ems / ms),\n        takeWhile(t => t <= 1),\n        concat(of(1))\n    );\n\nexport const easeLinear = (t: number) => t;\nexport const easeInQuad = (t: number) => t * t;\nexport const easeOutQuad = (t: number) => 1 - (1 - t) * (1 - t);\nexport const easeInOutQuad = (t: number) => t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;\n\nexport const singleTween = (ms: number, easing: (t: number) => number, start: number, end: number) =>\n    duration(ms).pipe(\n        map(easing),\n        map((t: number) => start + (end - start) * t)\n    );\n","import { Vector3 } from \"three\";\nimport { MouseButton } from \"../common\";\nimport { InputHandler, PointerInput } from \"../InputHandler\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\nimport { AbstractOrbit } from \"./Orbit\";\nimport { tap, pairwise } from \"rxjs/operators\";\nimport { Observable, Subscription, merge, animationFrameScheduler } from \"rxjs\";\nimport { msElapsed } from \"../Animation\";\nimport {Vector3Const} from \"../Helpers/common-utils\";\n\nexport class Fly extends AbstractOrbit {\n    static get Name(): string { return \"fly\" };\n\n    private _keyHandle: Subscription;\n    private _keyObservable: Observable<KeyboardEvent>;\n    private _moveHandle: Subscription;\n    private _moveObservable: Observable<any>;\n    private _dir = new Vector3();\n    private _fly = new Vector3();\n\n    private _speedIncrease = 0.00001;\n    private _minSpeed = 0.002;\n    private _maxSpeed = 0.02;\n    private _speed = this._minSpeed;\n\n    get name(): string {\n        return Fly.Name;\n    }\n\n    constructor(inputs: InputHandler, camera: WVCamera) {\n        super(inputs, camera);\n        this.mouseButton = MouseButton.right;\n        this.touchCount = 3;\n        this._keyObservable = merge(inputs.keyDown$, inputs.keyUp$).pipe(tap(e => this.processKey(e)));\n        this._moveObservable = msElapsed(animationFrameScheduler).pipe(\n            pairwise(),\n            tap(t => this.move(t[1] - t[0]))\n        );\n        this.enabled = true;\n    }\n\n    private move(delta: number): void {\n        if (this._dir.lengthSq() === 0) return;\n\n        this._speed = Math.min(this._speed + delta * this._speedIncrease, this._maxSpeed);\n        this._fly.copy(this._dir).multiplyScalar(delta * this._speed);\n        this._fly.applyQuaternion(this._camera.quaternion);\n        this._camera.position.add(this._fly);\n        this._camera.callListeners();\n    }\n\n    private processKey(event: KeyboardEvent): void {\n        const sign = event.type === \"keydown\" ? 1 : -1;\n        switch (event.code) {\n            case \"KeyW\": this._dir.z += -sign; break;\n            case \"KeyS\": this._dir.z += sign; break;\n            case \"KeyA\": this._dir.x += -sign; break;\n            case \"KeyD\": this._dir.x += sign; break;\n            case \"KeyQ\": this._dir.y += -sign; break;\n            case \"KeyE\": this._dir.y += sign; break;\n        }\n        this._maxSpeed = event.shiftKey ? 0.1 : 0.02;\n        this._speedIncrease = event.shiftKey ? 0.0001 : 0.000005;\n        if (this._dir.equals(Vector3Const.zero)) this._speed = this._minSpeed;\n    }\n\n    protected async moveCallback(event: PointerInput): Promise<PointerInput> {\n        // on macOS unfocused window might receive mouse events, but not keyboard events. This confuses user, so lets disable all events\n        if (!document.hasFocus()) return;\n\n        return super.moveCallback(event);\n    }\n\n    protected async pick(event: PointerInput): Promise<PointerInput> {\n        return event;\n    }\n\n    protected calculateRotationPoint(event: PointerInput): void {\n        this._rotationPoint = this._camera.position;\n        super.calculateRotationPoint(event);\n        this._keyHandle = this._keyObservable.subscribe();\n        this._moveHandle = this._moveObservable.subscribe();\n    }\n\n    public upCallback(event: PointerInput): PointerInput {\n        this._dir.set(0, 0, 0);\n        if (this._keyHandle) this._keyHandle.unsubscribe();\n        if (this._moveHandle) this._moveHandle.unsubscribe();\n        return event;\n    }\n}\n","import { Api } from \"../Api\";\nimport {Vector3, Matrix4, Scene, Quaternion} from \"three\";\nimport {Tool} from \"../common\";\n\n/**\n * Simple navigation in VR, based on WebXR.\n * NB: Experimental.\n */\nexport class VRNavigation implements Tool {\n    static get Name(): string { return \"vrnavigation\" };\n\n    private _enabled: boolean;\n    private _api: Api;\n    private _scene: Scene;\n    private _speed: number = 0;\n    private _refOrientation: Quaternion;\n    private _refMatrix: Matrix4;\n    private _artificialRotationInProgress: boolean = false;\n    private _artificialRotation: number = 0;\n    private _accelerating: boolean = false;\n\n    private readonly BASE_SPEED = 0.015;\n    private readonly ACC = 50e-6;\n    private readonly ARTIFICIAL_ROT_ANGLE = Math.PI/8;\n    private readonly ACCELERATION_THRESHOLD = 0.75;\n    private readonly INSTANT_BREAK_THRESHOLD = 0.05;\n\n    get name(): string { return VRNavigation.Name; }\n\n    get enabled(): boolean { return this._enabled; }\n\n    set enabled(value: boolean) {\n        if (this._enabled === value) return;\n        this._enabled = value;\n        if (this._enabled) this._api.renderingManager.addAnimationFrameListener(this.update);\n        else this._api.renderingManager.removeAnimationFrameListener(this.update);\n    }\n\n    private get _session(): any {\n        return this._api.renderingManager.renderer.xr.getSession();\n    }\n\n    constructor(api: Api) {\n        this._api = api;\n        this._scene = api.scene;\n\n        this._refOrientation = new Quaternion();\n        const vrCam = this._api.renderingManager.vr.toVRCamera(api.camera);\n        vrCam.getWorldQuaternion(this._refOrientation);\n        this._refMatrix = vrCam.matrixWorld.clone();\n    }\n\n    update = (() => {\n        const that = this;\n        let previousTimestamp = 0;\n        let delta = 0;\n        return (timestamp: number) => {\n            delta = timestamp - previousTimestamp;\n            previousTimestamp = timestamp;\n            if (that.enabled) that.move(delta);\n        }\n    })();\n\n    private static hapticsPulse(sources: any[], intensity: number = 0.5, duration: number = 100): void {\n        // TODO: Check/wait for support for this\n        for (const source of sources) {\n            if (!source.pad) continue;\n            const pad = source.pad;\n            if (pad && pad.hapticActuators &&\n                pad.hapticActuators.length > 0 && pad.hapticActuators[0] &&\n                pad.hapticActuators[0].pulse\n            ) pad.hapticActuators[0].pulse(intensity, duration);\n        }\n    }\n\n    private move(delta: number): void {\n        if (!this._session) return;\n        const sources = this._session.inputSources;\n        if (!sources) return;\n\n        const cameraRig = this._api.renderingManager.vr.cameraRig;\n        if (!cameraRig) return;\n\n        let axisSumX = 0.0;\n        let axisSumY = 0.0;\n\n        // https://www.w3.org/TR/webxr-gamepads-module-1/\n        for (const source of sources) {\n            const axes = source.gamepad ? source.gamepad.axes : undefined;\n            if (axes) {\n                axisSumX += axes[0];\n                axisSumY -= axes[1];\n                axisSumX += axes[2];\n                axisSumY -= axes[3];\n            }\n        }\n\n        const vrCam = this._api.renderingManager.vr.toVRCamera(this._api.camera);\n        const camOrientation = new Quaternion();\n        vrCam.getWorldQuaternion(camOrientation);\n\n        const camDir = new Vector3(0,0,-1)\n            .applyQuaternion(camOrientation);\n\n        // Instant breaking\n        if (this._speed > 0 && axisSumY < this.INSTANT_BREAK_THRESHOLD || this._speed < 0 && axisSumY > -this.INSTANT_BREAK_THRESHOLD)\n            this._speed = 0;\n\n        // Accelerating\n        if (Math.abs(axisSumY) > this.ACCELERATION_THRESHOLD) {\n            this._speed += axisSumY * Math.abs(Math.pow(axisSumY, 2)) * this.ACC * delta;\n            this._accelerating = true;\n        } else {\n            this._speed *= Math.pow(Math.abs(axisSumY), 0.01 * delta);\n            this._accelerating = false;\n        }\n\n        // Navigation:\n        const baseSpeed = this.BASE_SPEED * axisSumY * Math.min(axisSumY*axisSumY, 0.2);\n        const dTot = (baseSpeed + this._speed) * delta;\n        cameraRig.position.add(camDir.clone().multiplyScalar(dTot));\n\n        // Artificial rotation:\n        let artificialRotationDelta = 0.0;\n        if (Math.abs(axisSumY) < 0.25 && Math.abs(axisSumX) > 0.75) {\n            if (!this._artificialRotationInProgress) {\n                VRNavigation.hapticsPulse(sources, 0.5, 100);\n                this._artificialRotationInProgress = true;\n                artificialRotationDelta -= Math.sign(axisSumX) * this.ARTIFICIAL_ROT_ANGLE;\n            }\n        }\n        if (Math.abs(axisSumX) < 0.7) {\n            this._artificialRotationInProgress = false;\n        }\n        this._artificialRotation += artificialRotationDelta;\n        const newCamDir = new Vector3();\n        cameraRig.getWorldDirection(newCamDir);\n        newCamDir.applyAxisAngle(new Vector3(0,0,1), artificialRotationDelta);\n        const camPos = new Vector3();\n        cameraRig.getWorldPosition(camPos);\n        cameraRig.lookAt(camPos.clone().add(newCamDir));\n    }\n}\n","export class ApiContainer<T> {\n    [name: string]: T | ((type: new (...params: any) => T) => T);\n\n    get<TT>(type: new (...params: any) => TT): TT {\n        for (const name in this) {\n            if (this.hasOwnProperty(name) && this[name] instanceof type)\n                return this[name] as unknown as TT;\n        }\n        return undefined;\n    }\n}\n\n","import { Api } from \"../Api\";\nimport { Vector3, Matrix4, Scene, Quaternion } from \"three\";\nimport {animationFrameScheduler, Observable} from \"rxjs\";\nimport { tap, pairwise } from \"rxjs/operators\";\nimport { msElapsed } from \"../Animation\";\nimport {Tool} from \"../common\";\nimport {WVCamera} from \"../Rendering/WVCamera\";\n\nexport class GamepadNavigation implements Tool {\n    static get Name(): string { return \"gamepad\" };\n\n    private _enabled: boolean;\n    private _api: Api;\n    private _camera: WVCamera;\n    private _scene: Scene;\n\n    private _speed: number = 0;\n    private _refOrientation: Quaternion;\n    private _refMatrix: Matrix4;\n    private _artificialRotationInProgress: boolean = false;\n    private _artificialRotation: number = 0;\n    private _accelerating: boolean = false;\n    private observable: Observable<[number, number]>;\n\n    private readonly BASE_SPEED = 0.015;\n    private readonly ACC = 50e-6;\n    private readonly ARTIFICIAL_ROT_ANGLE = Math.PI/8;\n    private readonly ACCELERATION_THRESHOLD = 0.75;\n    private readonly INSTANT_BREAK_THRESHOLD = 0.05;\n\n    get enabled(): boolean { return this._enabled; }\n\n    set enabled(value: boolean) {\n        if (this._enabled === value) return;\n        this._enabled = value;\n        if (this._enabled) this.observable.subscribe();\n    }\n\n    get name(): string {\n        return GamepadNavigation.Name;\n    }\n\n    constructor(api: Api) {\n        this._camera = api.camera;\n        this._api = api;\n        this._scene = api.scene;\n\n        this._refOrientation = new Quaternion();\n        const vrCam = this._api.renderingManager.vr.toVRCamera(this._camera);\n        vrCam.getWorldQuaternion(this._refOrientation);\n        this._refMatrix = vrCam.matrixWorld.clone();\n\n        this.observable = msElapsed(animationFrameScheduler).pipe(\n            pairwise(),\n            tap(t => this.move(t[1] - t[0]))\n        );\n    }\n\n    private static hapticsPulse(pads: Gamepad|Gamepad[], intensity: number = 0.5, duration: number = 100): void {\n        if (pads instanceof Gamepad)\n            pads = [pads];\n        for (const pad of pads) {\n            if (pad && pad.hapticActuators && pad.hapticActuators.length > 0 && pad.hapticActuators[0])\n                pad.hapticActuators[0].pulse(intensity, duration);\n        }\n\n    }\n\n    private move(delta: number): void {\n        if (!this.enabled || !window.navigator || !window.navigator.getGamepads) return;\n\n        const gamePads = window.navigator.getGamepads();\n        let axisSumX = 0.0;\n        let axisSumY = 0.0;\n\n        for (const pad of gamePads) {\n            if (pad) {\n                axisSumX += pad.axes[0];\n                axisSumY -= pad.axes[1];\n            }\n        }\n\n        const vrCam = this._api.renderingManager.vr.toVRCamera(this._camera);\n        const camOrientation = new Quaternion();\n        vrCam.getWorldQuaternion(camOrientation);\n\n        const camDir = new Vector3(0,0,-1)\n            .applyQuaternion(camOrientation);\n\n        // Instant breaking\n        if (this._speed > 0 && axisSumY < this.INSTANT_BREAK_THRESHOLD || this._speed < 0 && axisSumY > -this.INSTANT_BREAK_THRESHOLD)\n            this._speed = 0;\n\n        // Accelerating\n        if (Math.abs(axisSumY) > this.ACCELERATION_THRESHOLD) {\n            this._speed += axisSumY * Math.abs(Math.pow(axisSumY, 2)) * this.ACC * delta;\n            this._accelerating = true;\n        } else {\n            this._speed *= Math.pow(Math.abs(axisSumY), 0.01 * delta);\n            this._accelerating = false;\n        }\n\n        // Navigation:\n        const baseSpeed = this.BASE_SPEED * axisSumY * Math.min(axisSumY*axisSumY, 0.2);\n        const dTot = (baseSpeed + this._speed) * delta;\n        this._camera.position.add(camDir.clone().multiplyScalar(dTot));\n\n        // Artificial rotation:\n        let artificialRotationDelta = 0.0;\n        if (Math.abs(axisSumY) < 0.25 && Math.abs(axisSumX) > 0.75) {\n            if (!this._artificialRotationInProgress) {\n                GamepadNavigation.hapticsPulse(gamePads, 0.5, 100);\n                this._artificialRotationInProgress = true;\n                artificialRotationDelta -= Math.sign(axisSumX) * this.ARTIFICIAL_ROT_ANGLE;\n            }\n        }\n        if (Math.abs(axisSumX) < 0.7) {\n            this._artificialRotationInProgress = false;\n        }\n        this._artificialRotation += artificialRotationDelta;\n        const newCamDir = new Vector3();\n        this._camera.getWorldDirection(newCamDir);\n        newCamDir.applyAxisAngle(new Vector3(0,0,1), artificialRotationDelta);\n        const camPos = new Vector3();\n        this._camera.getWorldPosition(camPos);\n        this._camera.lookAt(camPos.clone().add(newCamDir));\n    }\n}\n","import { Pan } from \"./Pan\";\nimport { Zoom } from \"./Zoom\";\nimport { Orbit } from \"./Orbit\";\nimport { Fly } from \"./Fly\";\nimport { VRNavigation } from \"./VRNavigation\";\nimport { SelectionTool } from \"./SelectionTool\";\nimport { Tool, WebglViewerEventName } from \"../common\";\nimport { Api } from \"../Api\";\nimport { AreaSelectionTool } from \"./AreaSelectionTool\";\nimport { WVCamera } from \"../Rendering/WVCamera\";\nimport { debounceTime, tap } from \"rxjs/operators\";\nimport { ApiContainer } from \"../ApiContainer\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { PickingTool } from \"./PickingTool\";\nimport { GamepadNavigation } from \"./GamepadNavigation\";\n\nexport class ToolManager {\n    tools = new ApiContainer<Tool>();\n    private _camera: WVCamera;\n    private _activeTool: Tool;\n    private _conflictingTools: Tool[] = [];\n\n    constructor(private _api: Api) {\n        this._camera = this._api.camera;\n\n        // Navigation tools\n        this.addTool(new Orbit(this._api.inputHandler, _api.camera, _api.models.worldBoundingBox));\n        this.addTool(new Fly(this._api.inputHandler, _api.camera));\n        this.addTool(new Pan(this._api));\n        this.addTool(new Zoom(this._api));\n        this.addTool(new VRNavigation(this._api));\n        this.addTool(new GamepadNavigation(this._api));\n\n        // Interaction tools\n        this.addTool(new SelectionTool(this._api));\n        this.addTool(new AreaSelectionTool(this._api));\n        this.addTool(new PickingTool(this._api.inputHandler, _api.cursor, _api.eventDispatcher));\n        this.activateDefaultTool();\n\n        this._startEmittingNavigationEvents();\n        this._subscribeToDragging();\n    }\n\n    private _startEmittingNavigationEvents(): void {\n        let navStarted = false;\n        const cameraSubject = new BehaviorSubject<WVCamera>(this._api.camera);\n        this._api.camera.subscribe(() => cameraSubject.next(this._api.camera));\n\n        cameraSubject.pipe(\n            tap(() => {\n                if (!navStarted) this._api.eventDispatcher.navigation(true);\n                navStarted = true;\n            }),\n            debounceTime(100),\n            tap(() => {\n                this._api.eventDispatcher.navigation(false);\n                navStarted = false;\n            })\n        ).subscribe();\n    }\n\n    private _subscribeToDragging(): void {\n        this._api.eventDispatcher.subscribe(WebglViewerEventName.DragStart, e => this._disableConflictingTools(e));\n        this._api.eventDispatcher.subscribe(WebglViewerEventName.DragEnd, () => this._enableConflictingTools());\n    }\n\n    private _disableConflictingTools(e: CustomEvent<Tool>): void {\n        for (const toolName in this.tools) {\n            if (!this.tools.hasOwnProperty(toolName)) continue;\n            const tool = this.tools[toolName] as Tool;\n            if (tool === e.detail) continue;\n\n            // disable conflicting tools\n            if (tool.enabled) {\n                tool.enabled = false;\n                this._conflictingTools.push(tool);\n            }\n        }\n    }\n\n    private _enableConflictingTools(): void {\n        for (const tool of this._conflictingTools)\n            tool.enabled = true;\n        this._conflictingTools.length = 0;\n    }\n\n    addTool(tool: Tool): void {\n        if (this.tools.hasOwnProperty(tool.name)) throw new Error(`Tool ${tool.name} already exists`);\n        this.tools[tool.name] = tool;\n        tool.onFinished = () => this.activateDefaultTool();\n    }\n\n    activateDefaultTool(): void {\n        this.activeTool = \"selection\";\n    }\n\n    set activeTool(toolName: string) {\n        if (this._activeTool) this._activeTool.enabled = false;\n        this._activeTool = this.tools[toolName] as Tool;\n        if (this._activeTool) this._activeTool.enabled = true;\n        this._api.eventDispatcher.dispatch(new CustomEvent(WebglViewerEventName.ActiveToolChanged));\n    }\n\n    get activeTool(): string {\n        return this._activeTool.name;\n    }\n}\n","import {Vector3, Camera, Object3D, Quaternion} from \"three\";\nimport {DirectionToSpherical} from \"../Helpers/utils\";\nimport { Api } from \"../Api\";\nimport { VRNavigation } from \"../Tools/VRNavigation\";\nimport {WVCamera} from \"./WVCamera\";\nimport {GamepadNavigation} from \"../Tools/GamepadNavigation\";\nimport {Vector3Const} from \"../Helpers/common-utils\";\n\nexport class VRManager {\n    private session: any;\n    private origOrderIndependentTransparency: boolean;\n    cameraRig: Object3D;\n\n    constructor(private api: Api) {}\n\n    static async isVRAvailable(): Promise<boolean> {\n        if (!(\"xr\" in navigator)) return false;\n        // @ts-ignore\n        return navigator.xr && await navigator.xr.isSessionSupported(\"immersive-vr\");\n    }\n\n    async isAvailable(): Promise<boolean> {\n        return VRManager.isVRAvailable();\n    }\n\n    set enabled(value: boolean) {\n        if (value === this.enabled) return;\n\n        this.api.renderingManager.renderer.xr.enabled = value;\n        if (value) {\n            // @ts-ignore\n            navigator.xr.requestSession(\"immersive-vr\", {optionalFeatures: [\"local-floor\", \"bounded-floor\"]}).then((session) => {\n                this.session = session;\n                session.onend = this.onEnd;\n                this.api.renderingManager.renderer.xr.setSession(session);\n\n                this.api.renderingManager.addAnimationFrameListener(this._update);\n\n                // depth peeling is not supported in VR\n                this.origOrderIndependentTransparency = this.api.settingsProxy.settings.orderIndependentTransparency;\n\n                // TODO: post effects are not supported in VR\n                this.api.settingsProxy.settings.antialias = false;\n                this.api.settingsProxy.settings.orderIndependentTransparency = false;\n                this.api.settingsProxy.settings.renderEdges = false;\n\n                // Reset camera polar rotation, so vr avatar is standing straight up\n                const sphericalDirection = DirectionToSpherical(this.api.camera.getWorldDirection(new Vector3()), this.api.camera.up);\n                sphericalDirection.x = Math.PI / 2;\n                this.api.camera.rotateSpherical(this.api.camera.position, Vector3Const.zero, sphericalDirection);\n\n                this.api.camera.near = 0.01;\n                this.api.camera.far = 10000;\n                this.api.camera.updateProjectionMatrix();\n\n                this._createCameraRig();\n            });\n        } else {\n            this.session.end();\n        }\n\n        // navigation tools\n        this.api.toolManager.tools.get(VRNavigation).enabled = value;\n        this.api.toolManager.tools.get(GamepadNavigation).enabled = value;\n    }\n\n    private onEnd = () => {\n        if (!this.session) return;\n\n        this.api.renderingManager.removeAnimationFrameListener(this._update);\n        this.api.settingsProxy.settings.orderIndependentTransparency = this.origOrderIndependentTransparency;\n        this.session = undefined;\n        this._removeCameraRig();\n    }\n\n    private _createCameraRig(): void {\n        this.cameraRig = new Object3D();\n        this.cameraRig.position.copy(this.api.camera.position);\n        this.cameraRig.quaternion.copy(this.api.camera.quaternion);\n        this.api.camera.position.set(0, 0, 0);\n        this.api.camera.quaternion.copy(new Quaternion());\n\n        // Dont ask... https://github.com/mrdoob/three.js/issues/737\n        const rig2 = new Object3D();\n        rig2.up = Vector3Const.up;\n        rig2.add(this.api.camera);\n\n        this.cameraRig.add(rig2);\n    }\n\n    private _removeCameraRig(): void {\n        this.api.camera.position.copy(this.cameraRig.position);\n        this.api.camera.quaternion.copy(this.cameraRig.quaternion);\n        this.api.camera.parent.remove(this.api.camera);\n        this.cameraRig = undefined;\n    }\n\n    get enabled(): boolean {\n        return !!(this.session && this.api.renderingManager.renderer.xr.isPresenting);\n    }\n\n    private _update = (() => {\n        return () => this.api.camera.callListeners();\n    })();\n\n    // Returns VR camera if vr is enabled, original camera otherwise\n    toVRCamera(camera: WVCamera): Camera {\n        return camera.isPerspectiveCamera && this.enabled ? this.api.renderingManager.renderer.xr.getCamera(camera) : camera;\n    }\n}\n","const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nexport type UserAgent = string;\nexport type Navigator = {\n  userAgent: string;\n  platform: string;\n  maxTouchPoints?: number;\n};\n\nconst isAppleTabletOnIos13 = (navigator?: Navigator): boolean => {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.platform === 'MacIntel' &&\n    typeof navigator.maxTouchPoints === 'number' &&\n    navigator.maxTouchPoints > 1 &&\n    typeof MSStream === 'undefined'\n  );\n};\n\nfunction createMatch(userAgent: UserAgent): (regex: RegExp) => boolean {\n  return (regex: RegExp): boolean => regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    universal: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport type IsMobileParameter = UserAgent | Navigator;\n\nexport default function isMobile(param?: IsMobileParameter): isMobileResult {\n  let nav: Navigator = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0,\n  };\n\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0,\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0,\n    };\n  }\n\n  let userAgent = nav.userAgent;\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const match = createMatch(userAgent);\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet:\n        !match(appleIphone) &&\n        (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n      universal: match(appleUniversal),\n      device:\n        (match(appleIphone) ||\n          match(appleIpod) ||\n          match(appleTablet) ||\n          match(appleUniversal) ||\n          isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone) && match(amazonPhone)) ||\n        (!match(windowsPhone) && match(androidPhone)),\n      tablet:\n        !match(windowsPhone) &&\n        !match(amazonPhone) &&\n        !match(androidPhone) &&\n        (match(amazonTablet) || match(androidTablet)),\n      device:\n        (!match(windowsPhone) &&\n          (match(amazonPhone) ||\n            match(amazonTablet) ||\n            match(androidPhone) ||\n            match(androidTablet))) ||\n        match(/\\bokhttp\\b/i),\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet),\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device:\n        match(otherBlackBerry) ||\n        match(otherBlackBerry10) ||\n        match(otherOpera) ||\n        match(otherFirefox) ||\n        match(otherChrome),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n","function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","import { Group } from '../../objects/Group.js';\n\nfunction WebXRController() {\n\n\tthis._targetRay = null;\n\tthis._grip = null;\n\tthis._hand = null;\n\n}\n\nObject.assign( WebXRController.prototype, {\n\n\tconstructor: WebXRController,\n\n\tgetHandSpace: function () {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t},\n\n\tgetTargetRaySpace: function () {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t},\n\n\tgetGripSpace: function () {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function ( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function ( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { WebXRController };\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebXRController } from './WebXRController.js';\n\nfunction WebXRManager( renderer, gl ) {\n\n\tconst scope = this;\n\n\tlet session = null;\n\n\tlet framebufferScaleFactor = 1.0;\n\n\tlet referenceSpace = null;\n\tlet referenceSpaceType = 'local-floor';\n\n\tlet pose = null;\n\n\tconst controllers = [];\n\tconst inputSourcesMap = new Map();\n\n\t//\n\n\tconst cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tconst cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tconst cameras = [ cameraL, cameraR ];\n\n\tconst cameraVR = new ArrayCamera();\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tlet _currentDepthNear = null;\n\tlet _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getTargetRaySpace();\n\n\t};\n\n\tthis.getControllerGrip = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getGripSpace();\n\n\t};\n\n\tthis.getHand = function ( index ) {\n\n\t\tlet controller = controllers[ index ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new WebXRController();\n\t\t\tcontrollers[ index ] = controller;\n\n\t\t}\n\n\t\treturn controller.getHandSpace();\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tcontroller.disconnect( inputSource );\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t_currentDepthNear = null;\n\t\t_currentDepthFar = null;\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t\tif ( scope.isPresenting === true ) {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t}\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = async function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t}\n\n\t\t\tconst layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.isPresenting = true;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t};\n\n\tfunction onInputSourcesChange( event ) {\n\n\t\tconst inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tconst inputSource = event.removed[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tconst inputSource = event.added[ i ];\n\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tconst cameraLPos = new Vector3();\n\tconst cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tconst left = near * leftFov;\n\t\tconst right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tconst near2 = near + zOffset;\n\t\tconst far2 = far + zOffset;\n\t\tconst left2 = left - xOffset;\n\t\tconst right2 = right + ( ipd - xOffset );\n\t\tconst top2 = topFov * far / far2 * near2;\n\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tconst parent = camera.parent;\n\t\tconst cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\tconst children = camera.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t// update projection matrix for proper view frustum culling\n\n\t\tif ( cameras.length === 2 ) {\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t} else {\n\n\t\t\t// assume single camera setup (AR)\n\n\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tconst views = pose.views;\n\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tconst view = views[ i ];\n\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst inputSources = session.inputSources;\n\n\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tconst controller = controllers[ i ];\n\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nexport { WebXRManager };\n","export const REVISION = '125';\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const FlatShading = 1;\nexport const SmoothShading = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const CubeUVRefractionMapping = 307;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedShort565Type = 1019;\nexport const UnsignedInt248Type = 1020;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const RGBEFormat = RGBAFormat;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBIntegerFormat = 1032;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nexport const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nexport const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nexport const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nexport const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nexport const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nexport const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nexport const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nexport const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nexport const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nexport const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nexport const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nexport const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nexport const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const LinearEncoding = 3000;\nexport const sRGBEncoding = 3001;\nexport const GammaEncoding = 3007;\nexport const RGBEEncoding = 3002;\nexport const LogLuvEncoding = 3003;\nexport const RGBM7Encoding = 3004;\nexport const RGBM16Encoding = 3005;\nexport const RGBDEncoding = 3006;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n","import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [] );\n\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = null;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4();\n\tconst currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = null;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'isWebGLRenderTarget', { value: true } );\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\n\nexport { WebGLRenderTarget };\n","import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending, RGBAFormat } from '../constants.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { CubeCamera } from '../cameras/CubeCamera.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\tObject.defineProperty( this, 'isWebGLCubeRenderTarget', { value: true } );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\n\nexport { WebGLCubeRenderTarget };\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderList = renderer.getRenderList();\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\t\t\t\t\t\trenderer.setRenderList( currentRenderList );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeMaps };\n","function numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","import { BackSide } from '../../constants.js';\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n","export default /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n\t\t#ifdef HORIZONTAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n","import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport vsm_frag from '../shaders/ShaderLib/vsm_frag.glsl.js';\nimport vsm_vert from '../shaders/ShaderLib/vsm_vert.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","function arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tlet min = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nexport { arrayMin, arrayMax, getTypedArray };\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, camera ) {\n\n\t\tconst cameras = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n","function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n","export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n","export default /* glsl */`\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor.xyz *= color.xyz;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n","export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\n\t\tvec2 f = fract( uv );\n\n\t\tuv += 0.5 - f;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\n\t\t}\n\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\n\t\tuv *= texelSize;\n\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x += texelSize;\n\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.y += texelSize;\n\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tuv.x -= texelSize;\n\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\n\t\tvec3 tm = mix( tl, tr, f.x );\n\n\t\tvec3 bm = mix( bl, br, f.x );\n\n\t\treturn mix( tm, bm, f.y );\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n","export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n","export default /* glsl */`\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n\t// return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\t// NOTE: The implementation with min causes the shader to not compile on\n\t// a common Alcatel A502DL in Chrome 78/Android 8.1. Some research suggests \n\t// that the chipset is Mediatek MT6739 w/ IMG PowerVR GE8100 GPU.\n\t// D = min( floor( D ) / 255.0, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tfogDepth = - mvPosition.z;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n","export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n`;\n","export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n","export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n","export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n","export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n","export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSIONMAP\n\n\tuniform sampler2D transmissionMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n","export default /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n","export default /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n","export default /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n","export default /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export default /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n","export default /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transmission model\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export default /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n`;\n","export default /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","export default /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export default /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n","import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmissionmap_fragment from './ShaderChunk/transmissionmap_fragment.glsl.js';\nimport transmissionmap_pars_fragment from './ShaderChunk/transmissionmap_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport background_frag from './ShaderLib/background_frag.glsl.js';\nimport background_vert from './ShaderLib/background_vert.glsl.js';\nimport cube_frag from './ShaderLib/cube_frag.glsl.js';\nimport cube_vert from './ShaderLib/cube_vert.glsl.js';\nimport depth_frag from './ShaderLib/depth_frag.glsl.js';\nimport depth_vert from './ShaderLib/depth_vert.glsl.js';\nimport distanceRGBA_frag from './ShaderLib/distanceRGBA_frag.glsl.js';\nimport distanceRGBA_vert from './ShaderLib/distanceRGBA_vert.glsl.js';\nimport equirect_frag from './ShaderLib/equirect_frag.glsl.js';\nimport equirect_vert from './ShaderLib/equirect_vert.glsl.js';\nimport linedashed_frag from './ShaderLib/linedashed_frag.glsl.js';\nimport linedashed_vert from './ShaderLib/linedashed_vert.glsl.js';\nimport meshbasic_frag from './ShaderLib/meshbasic_frag.glsl.js';\nimport meshbasic_vert from './ShaderLib/meshbasic_vert.glsl.js';\nimport meshlambert_frag from './ShaderLib/meshlambert_frag.glsl.js';\nimport meshlambert_vert from './ShaderLib/meshlambert_vert.glsl.js';\nimport meshmatcap_frag from './ShaderLib/meshmatcap_frag.glsl.js';\nimport meshmatcap_vert from './ShaderLib/meshmatcap_vert.glsl.js';\nimport meshtoon_frag from './ShaderLib/meshtoon_frag.glsl.js';\nimport meshtoon_vert from './ShaderLib/meshtoon_vert.glsl.js';\nimport meshphong_frag from './ShaderLib/meshphong_frag.glsl.js';\nimport meshphong_vert from './ShaderLib/meshphong_vert.glsl.js';\nimport meshphysical_frag from './ShaderLib/meshphysical_frag.glsl.js';\nimport meshphysical_vert from './ShaderLib/meshphysical_vert.glsl.js';\nimport normal_frag from './ShaderLib/normal_frag.glsl.js';\nimport normal_vert from './ShaderLib/normal_vert.glsl.js';\nimport points_frag from './ShaderLib/points_frag.glsl.js';\nimport points_vert from './ShaderLib/points_vert.glsl.js';\nimport shadow_frag from './ShaderLib/shadow_frag.glsl.js';\nimport shadow_vert from './ShaderLib/shadow_vert.glsl.js';\nimport sprite_frag from './ShaderLib/sprite_frag.glsl.js';\nimport sprite_vert from './ShaderLib/sprite_vert.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n","import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n","import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tif ( background.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t// TODO Deprecate\n\n\t\t\t\tbackground = background.texture;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","import { WebGLUniforms } from 'three/src/renderers/webgl/WebGLUniforms';\nimport { WebGLShader } from 'three/src/renderers/webgl/WebGLShader';\nimport { ShaderChunk, GLSL3 } from 'three';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, Uncharted2ToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding } from 'three';\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","import { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping } from 'three';\nimport { WebGLProgram } from './WebGLProgram';\nimport { ShaderLib } from 'three';\nimport { UniformsUtils } from 'three';\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals',\n\t\t'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmissionMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping } from 'three';\nimport { MathUtils } from 'three';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n    const isWebGL2 = capabilities.isWebGL2;\n    const maxTextures = capabilities.maxTextures;\n    const maxCubemapSize = capabilities.maxCubemapSize;\n    const maxTextureSize = capabilities.maxTextureSize;\n    const maxSamples = capabilities.maxSamples;\n\n    const _videoTextures = new WeakMap();\n    let _canvas;\n\n    // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n    // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n    // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n    let useOffscreenCanvas = false;\n\n    try {\n\n        useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n            && ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n    } catch ( err ) {\n\n        // Ignore any errors\n\n    }\n\n    function createCanvas( width, height ) {\n\n        // Use OffscreenCanvas when available. Specially needed in web workers\n\n        return useOffscreenCanvas ?\n            new OffscreenCanvas( width, height ) :\n            document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n    }\n\n    function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n        let scale = 1;\n\n        // handle case if texture exceeds max size\n\n        if ( image.width > maxSize || image.height > maxSize ) {\n\n            scale = maxSize / Math.max( image.width, image.height );\n\n        }\n\n        // only perform resize if necessary\n\n        if ( scale < 1 || needsPowerOfTwo === true ) {\n\n            // only perform resize for certain image types\n\n            if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n                ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n                ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n                const floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n                const width = floor( scale * image.width );\n                const height = floor( scale * image.height );\n\n                if ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n                // cube textures can't reuse the same canvas\n\n                const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n                canvas.width = width;\n                canvas.height = height;\n\n                const context = canvas.getContext( '2d' );\n                context.drawImage( image, 0, 0, width, height );\n\n                console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n                return canvas;\n\n            } else {\n\n                if ( 'data' in image ) {\n\n                    console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n                }\n\n                return image;\n\n            }\n\n        }\n\n        return image;\n\n    }\n\n    function isPowerOfTwo( image ) {\n\n        return MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n    }\n\n    function textureNeedsPowerOfTwo( texture ) {\n\n        if ( isWebGL2 ) return false;\n\n        return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n            ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n    }\n\n    function textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n        return texture.generateMipmaps && supportsMips &&\n            texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n    }\n\n    function generateMipmap( target, texture, width, height ) {\n\n        _gl.generateMipmap( target );\n\n        const textureProperties = properties.get( texture );\n\n        // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n        textureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n    }\n\n    function getInternalFormat( internalFormatName, glFormat, glType ) {\n\n        if ( isWebGL2 === false ) return glFormat;\n\n        if ( internalFormatName !== null ) {\n\n            if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n            console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n        }\n\n        let internalFormat = glFormat;\n\n        if ( glFormat === _gl.RED ) {\n\n            if ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n            if ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n            if ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n        }\n\n        if ( glFormat === _gl.RGB ) {\n\n            if ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n            if ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n            if ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n        }\n\n        if ( glFormat === _gl.RGBA ) {\n\n            if ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n            if ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n            if ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8;\n\n        }\n\n        if ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n            internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n            extensions.get( 'EXT_color_buffer_float' );\n\n        }\n\n        return internalFormat;\n\n    }\n\n    // Fallback filters for non-power-of-2 textures\n\n    function filterFallback( f ) {\n\n        if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n            return _gl.NEAREST;\n\n        }\n\n        return _gl.LINEAR;\n\n    }\n\n    //\n\n    function onTextureDispose( event ) {\n\n        const texture = event.target;\n\n        texture.removeEventListener( 'dispose', onTextureDispose );\n\n        deallocateTexture( texture );\n\n        if ( texture.isVideoTexture ) {\n\n            _videoTextures.delete( texture );\n\n        }\n\n        info.memory.textures --;\n\n    }\n\n    function onRenderTargetDispose( event ) {\n\n        const renderTarget = event.target;\n\n        renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n        deallocateRenderTarget( renderTarget );\n\n        info.memory.textures --;\n\n    }\n\n    //\n\n    function deallocateTexture( texture ) {\n\n        const textureProperties = properties.get( texture );\n\n        if ( textureProperties.__webglInit === undefined ) return;\n\n        _gl.deleteTexture( textureProperties.__webglTexture );\n\n        properties.remove( texture );\n\n    }\n\n    function deallocateRenderTarget( renderTarget ) {\n\n        const renderTargetProperties = properties.get( renderTarget );\n        const textureProperties = properties.get( renderTarget.texture );\n\n        if ( ! renderTarget ) return;\n\n        if ( textureProperties.__webglTexture !== undefined ) {\n\n            _gl.deleteTexture( textureProperties.__webglTexture );\n\n        }\n\n        if ( renderTarget.depthTexture ) {\n\n            renderTarget.depthTexture.dispose();\n\n        }\n\n        if ( renderTarget.isWebGLCubeRenderTarget ) {\n\n            for ( let i = 0; i < 6; i ++ ) {\n\n                _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n                if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n            }\n\n        } else {\n\n            _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n            if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n            if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n            if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n            if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n        }\n\n        if ( renderTarget.isMultiRenderTarget ) {\n\n            const textures = renderTarget.textures;\n\n            for ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n                const attachmentProperties = properties.get( textures[ i ] );\n\n                if ( attachmentProperties.__webglTexture ) {\n\n                    _gl.deleteTexture( attachmentProperties.__webglTexture );\n\n                    info.memory.textures --;\n\n                }\n\n                properties.remove( textures[ i ] );\n\n            }\n\n        }\n\n        properties.remove( renderTarget.texture );\n        properties.remove( renderTarget );\n\n    }\n\n    //\n\n    let textureUnits = 0;\n\n    function resetTextureUnits() {\n\n        textureUnits = 0;\n\n    }\n\n    function allocateTextureUnit() {\n\n        const textureUnit = textureUnits;\n\n        if ( textureUnit >= maxTextures ) {\n\n            console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n        }\n\n        textureUnits += 1;\n\n        return textureUnit;\n\n    }\n\n    //\n\n    function setTexture2D( texture, slot ) {\n\n        const textureProperties = properties.get( texture );\n\n        if ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n        if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n            const image = texture.image;\n\n            if ( image === undefined ) {\n\n                console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n            } else if ( image.complete === false ) {\n\n                console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n            } else {\n\n                uploadTexture( textureProperties, texture, slot );\n                return;\n\n            }\n\n        }\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n    }\n\n    function setTexture2DArray( texture, slot ) {\n\n        const textureProperties = properties.get( texture );\n\n        if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n            uploadTexture( textureProperties, texture, slot );\n            return;\n\n        }\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n    }\n\n    function setTexture3D( texture, slot ) {\n\n        const textureProperties = properties.get( texture );\n\n        if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n            uploadTexture( textureProperties, texture, slot );\n            return;\n\n        }\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n    }\n\n    function setTextureCube( texture, slot ) {\n\n        const textureProperties = properties.get( texture );\n\n        if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n            uploadCubeTexture( textureProperties, texture, slot );\n            return;\n\n        }\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n    }\n\n    const wrappingToGL = {\n        [ RepeatWrapping ]: _gl.REPEAT,\n        [ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n        [ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n    };\n\n    const filterToGL = {\n        [ NearestFilter ]: _gl.NEAREST,\n        [ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n        [ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n        [ LinearFilter ]: _gl.LINEAR,\n        [ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n        [ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n    };\n\n    function setTextureParameters( textureType, texture, supportsMips ) {\n\n        if ( supportsMips ) {\n\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n            if ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n            }\n\n            _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n            _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n        } else {\n\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n            _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n            if ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n                _gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n            }\n\n            if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n                console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n            }\n\n            _gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n            _gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n            if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n                console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n            }\n\n        }\n\n        const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n        if ( extension ) {\n\n            if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n            if ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n            if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n                _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n                properties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n            }\n\n        }\n\n    }\n\n    function initTexture( textureProperties, texture ) {\n\n        if ( textureProperties.__webglInit === undefined ) {\n\n            textureProperties.__webglInit = true;\n\n            texture.addEventListener( 'dispose', onTextureDispose );\n\n            textureProperties.__webglTexture = _gl.createTexture();\n\n            info.memory.textures ++;\n\n        }\n\n    }\n\n    function uploadTexture( textureProperties, texture, slot ) {\n\n        let textureType = _gl.TEXTURE_2D;\n\n        if ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n        if ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n        initTexture( textureProperties, texture );\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( textureType, textureProperties.__webglTexture );\n\n        _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n        _gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n        _gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n        const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n        const image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n        const supportsMips = isPowerOfTwo( image ) || isWebGL2,\n            glFormat = utils.convert( texture.format );\n\n        let glType = utils.convert( texture.type ),\n            glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n        setTextureParameters( textureType, texture, supportsMips );\n\n        let mipmap;\n        const mipmaps = texture.mipmaps;\n\n        if ( texture.isDepthTexture ) {\n\n            // populate depth texture with dummy data\n\n            glInternalFormat = _gl.DEPTH_COMPONENT;\n\n            if ( isWebGL2 ) {\n\n                if ( texture.type === FloatType ) {\n\n                    glInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n                } else if ( texture.type === UnsignedIntType ) {\n\n                    glInternalFormat = _gl.DEPTH_COMPONENT24;\n\n                } else if ( texture.type === UnsignedInt248Type ) {\n\n                    glInternalFormat = _gl.DEPTH24_STENCIL8;\n\n                } else {\n\n                    glInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n                }\n\n            } else {\n\n                if ( texture.type === FloatType ) {\n\n                    console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n                }\n\n            }\n\n            // validation checks for WebGL 1\n\n            if ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n                // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n                // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n                // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n                    console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n                    texture.type = UnsignedShortType;\n                    glType = utils.convert( texture.type );\n\n                }\n\n            }\n\n            if ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n                // Depth stencil textures need the DEPTH_STENCIL internal format\n                // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                glInternalFormat = _gl.DEPTH_STENCIL;\n\n                // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n                // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n                // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n                if ( texture.type !== UnsignedInt248Type ) {\n\n                    console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n                    texture.type = UnsignedInt248Type;\n                    glType = utils.convert( texture.type );\n\n                }\n\n            }\n\n            //\n\n            state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n        } else if ( texture.isDataTexture ) {\n\n            // use manually created mipmaps if available\n            // if there are no manual mipmaps\n            // set 0 level mipmap and then use GL to generate other mipmap levels\n\n            if ( mipmaps.length > 0 && supportsMips ) {\n\n                for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n                    mipmap = mipmaps[ i ];\n                    state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n                }\n\n                texture.generateMipmaps = false;\n                textureProperties.__maxMipLevel = mipmaps.length - 1;\n\n            } else {\n\n                state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n                textureProperties.__maxMipLevel = 0;\n\n            }\n\n        } else if ( texture.isCompressedTexture ) {\n\n            for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n                mipmap = mipmaps[ i ];\n\n                if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n                    if ( glFormat !== null ) {\n\n                        state.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n                    } else {\n\n                        console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n                    }\n\n                } else {\n\n                    state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n                }\n\n            }\n\n            textureProperties.__maxMipLevel = mipmaps.length - 1;\n\n        } else if ( texture.isDataTexture2DArray ) {\n\n            state.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n            textureProperties.__maxMipLevel = 0;\n\n        } else if ( texture.isDataTexture3D ) {\n\n            state.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n            textureProperties.__maxMipLevel = 0;\n\n        } else {\n\n            // regular Texture (image, video, canvas)\n\n            // use manually created mipmaps if available\n            // if there are no manual mipmaps\n            // set 0 level mipmap and then use GL to generate other mipmap levels\n\n            if ( mipmaps.length > 0 && supportsMips ) {\n\n                for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n                    mipmap = mipmaps[ i ];\n                    state.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n                }\n\n                texture.generateMipmaps = false;\n                textureProperties.__maxMipLevel = mipmaps.length - 1;\n\n            } else {\n\n                state.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n                textureProperties.__maxMipLevel = 0;\n\n            }\n\n        }\n\n        if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n            generateMipmap( textureType, texture, image.width, image.height );\n\n        }\n\n        textureProperties.__version = texture.version;\n\n        if ( texture.onUpdate ) texture.onUpdate( texture );\n\n    }\n\n    function uploadCubeTexture( textureProperties, texture, slot ) {\n\n        if ( texture.image.length !== 6 ) return;\n\n        initTexture( textureProperties, texture );\n\n        state.activeTexture( _gl.TEXTURE0 + slot );\n        state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n        _gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n        _gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n        _gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n        const isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n        const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n        const cubeImage = [];\n\n        for ( let i = 0; i < 6; i ++ ) {\n\n            if ( ! isCompressed && ! isDataTexture ) {\n\n                cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n            } else {\n\n                cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n            }\n\n        }\n\n        const image = cubeImage[ 0 ],\n            supportsMips = isPowerOfTwo( image ) || isWebGL2,\n            glFormat = utils.convert( texture.format ),\n            glType = utils.convert( texture.type ),\n            glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n        setTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n        let mipmaps;\n\n        if ( isCompressed ) {\n\n            for ( let i = 0; i < 6; i ++ ) {\n\n                mipmaps = cubeImage[ i ].mipmaps;\n\n                for ( let j = 0; j < mipmaps.length; j ++ ) {\n\n                    const mipmap = mipmaps[ j ];\n\n                    if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n                        if ( glFormat !== null ) {\n\n                            state.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n                        } else {\n\n                            console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n                        }\n\n                    } else {\n\n                        state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n                    }\n\n                }\n\n            }\n\n            textureProperties.__maxMipLevel = mipmaps.length - 1;\n\n        } else {\n\n            mipmaps = texture.mipmaps;\n\n            for ( let i = 0; i < 6; i ++ ) {\n\n                if ( isDataTexture ) {\n\n                    state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n                    for ( let j = 0; j < mipmaps.length; j ++ ) {\n\n                        const mipmap = mipmaps[ j ];\n                        const mipmapImage = mipmap.image[ i ].image;\n\n                        state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n                    }\n\n                } else {\n\n                    state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n                    for ( let j = 0; j < mipmaps.length; j ++ ) {\n\n                        const mipmap = mipmaps[ j ];\n\n                        state.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n                    }\n\n                }\n\n            }\n\n            textureProperties.__maxMipLevel = mipmaps.length;\n\n        }\n\n        if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n            // We assume images for cube map have the same size.\n            generateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n        }\n\n        textureProperties.__version = texture.version;\n\n        if ( texture.onUpdate ) texture.onUpdate( texture );\n\n    }\n\n    // Render targets\n\n    // Setup storage for target texture and bind it to correct framebuffer\n    function setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n        const glFormat = utils.convert( texture.format );\n        const glType = utils.convert( texture.type );\n        const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n        state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n        _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n        _gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n        _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n    }\n\n    // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n    function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n        _gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n        if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n            let glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n            if ( isMultisample ) {\n\n                const depthTexture = renderTarget.depthTexture;\n\n                if ( depthTexture && depthTexture.isDepthTexture ) {\n\n                    if ( depthTexture.type === FloatType ) {\n\n                        glInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n                    } else if ( depthTexture.type === UnsignedIntType ) {\n\n                        glInternalFormat = _gl.DEPTH_COMPONENT24;\n\n                    }\n\n                }\n\n                const samples = getRenderTargetSamples( renderTarget );\n\n                _gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n            } else {\n\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n            }\n\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n        } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n            if ( isMultisample ) {\n\n                const samples = getRenderTargetSamples( renderTarget );\n\n                _gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n            } else {\n\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n            }\n\n\n            _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n        } else {\n\n            const glFormat = utils.convert( renderTarget.texture.format );\n            const glType = utils.convert( renderTarget.texture.type );\n            const glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n            if ( isMultisample ) {\n\n                const samples = getRenderTargetSamples( renderTarget );\n\n                _gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n            } else {\n\n                _gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n            }\n\n        }\n\n        _gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n    }\n\n    // Setup resources for a Depth Texture for a FBO (needs an extension)\n    function setupDepthTexture( framebuffer, renderTarget ) {\n\n        const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n        if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n        _gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n        if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n            throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n        }\n\n        // upload an empty depth texture with framebuffer size\n        if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n            renderTarget.depthTexture.image.width !== renderTarget.width ||\n            renderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n            renderTarget.depthTexture.image.width = renderTarget.width;\n            renderTarget.depthTexture.image.height = renderTarget.height;\n            renderTarget.depthTexture.needsUpdate = true;\n\n        }\n\n        setTexture2D( renderTarget.depthTexture, 0 );\n\n        const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n        if ( renderTarget.depthTexture.format === DepthFormat ) {\n\n            _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n        } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n            _gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n        } else {\n\n            throw new Error( 'Unknown depthTexture format' );\n\n        }\n\n    }\n\n    // Setup GL resources for a non-texture depth buffer\n    function setupDepthRenderbuffer( renderTarget ) {\n\n        const renderTargetProperties = properties.get( renderTarget );\n\n        const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n        if ( renderTarget.depthTexture ) {\n\n            if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n            setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n        } else {\n\n            if ( isCube ) {\n\n                renderTargetProperties.__webglDepthbuffer = [];\n\n                for ( let i = 0; i < 6; i ++ ) {\n\n                    _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n                    renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n                    setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n                }\n\n            } else {\n\n                _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n                renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n                setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n            }\n\n        }\n\n        _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n    }\n\n    // Set up GL resources for the render target\n    function setupRenderTarget( renderTarget ) {\n\n        const renderTargetProperties = properties.get( renderTarget );\n        const textureProperties = properties.get( renderTarget.texture );\n\n        renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n        textureProperties.__webglTexture = _gl.createTexture();\n\n        info.memory.textures ++;\n\n        const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n        const isMultiRenderTarget = ( renderTarget.isMultiRenderTarget === true );\n        const isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n        const supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n        // Handles WebGL2 RGBFormat fallback - #18858\n\n        if ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n            renderTarget.texture.format = RGBAFormat;\n\n            console.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n        }\n\n        // Setup framebuffer\n\n        if ( isCube ) {\n\n            renderTargetProperties.__webglFramebuffer = [];\n\n            for ( let i = 0; i < 6; i ++ ) {\n\n                renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n            }\n\n        } else {\n\n            renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n            if ( isMultiRenderTarget ) {\n\n                if ( capabilities.isWebGL2 || !! extensions.get( 'WEBGL_draw_buffers' ) ) {\n\n                    for ( let i = 0, il = renderTarget.textures.length; i < il; i ++ ) {\n\n                        const attachmentProperties = properties.get( renderTarget.textures[ i ] );\n\n                        if ( attachmentProperties.__webglTexture === undefined ) {\n\n                            attachmentProperties.__webglTexture = _gl.createTexture();\n\n                            info.memory.textures ++;\n\n                        }\n\n                    }\n\n                } else {\n\n                    console.warn( 'THREE.WebGLRenderer: MultiRenderTarget can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n                }\n\n            } else if ( isMultisample ) {\n\n                if ( isWebGL2 ) {\n\n                    renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n                    renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n                    _gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n                    const glFormat = utils.convert( renderTarget.texture.format );\n                    const glType = utils.convert( renderTarget.texture.type );\n                    const glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n                    const samples = getRenderTargetSamples( renderTarget );\n                    _gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n                    _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n                    _gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n                    _gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n                    if ( renderTarget.depthBuffer ) {\n\n                        renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n                        setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n                    }\n\n                    _gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n                } else {\n\n                    console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n                }\n\n            }\n\n        }\n\n        // Setup color buffer\n\n        if ( isCube ) {\n\n            state.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n            setTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, supportsMips );\n\n            for ( let i = 0; i < 6; i ++ ) {\n\n                setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n            }\n\n            if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n                generateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n            }\n\n            state.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n        } else if ( isMultiRenderTarget ) {\n\n            const textures = renderTarget.textures;\n\n            for ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n                const attachment = textures[ i ];\n                const attachmentProperties = properties.get( attachment );\n\n                state.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n                setTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n                setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n                if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n                    generateMipmap( _gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height );\n\n                }\n\n            }\n\n            state.bindTexture( _gl.TEXTURE_2D, null );\n\n        } else {\n\n            state.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n            setTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, supportsMips );\n            setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n            if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n                generateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n            }\n\n            state.bindTexture( _gl.TEXTURE_2D, null );\n\n        }\n\n        // Setup depth and stencil buffers\n\n        if ( renderTarget.depthBuffer ) {\n\n            setupDepthRenderbuffer( renderTarget );\n\n        }\n\n    }\n\n    function updateRenderTargetMipmap( renderTarget ) {\n\n        const texture = renderTarget.texture;\n        const supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n        if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n            const target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n            const webglTexture = properties.get( texture ).__webglTexture;\n\n            state.bindTexture( target, webglTexture );\n            generateMipmap( target, texture, renderTarget.width, renderTarget.height );\n            state.bindTexture( target, null );\n\n        }\n\n    }\n\n    function updateMultisampleRenderTarget( renderTarget ) {\n\n        if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n            if ( isWebGL2 ) {\n\n                const renderTargetProperties = properties.get( renderTarget );\n\n                _gl.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n                _gl.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n                const width = renderTarget.width;\n                const height = renderTarget.height;\n                let mask = _gl.COLOR_BUFFER_BIT;\n\n                if ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n                if ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n                _gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n                _gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n            } else {\n\n                console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n            }\n\n        }\n\n    }\n\n    function getRenderTargetSamples( renderTarget ) {\n\n        return ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n            Math.min( maxSamples, renderTarget.samples ) : 0;\n\n    }\n\n    function updateVideoTexture( texture ) {\n\n        const frame = info.render.frame;\n\n        // Check the last frame we updated the VideoTexture\n\n        if ( _videoTextures.get( texture ) !== frame ) {\n\n            _videoTextures.set( texture, frame );\n            texture.update();\n\n        }\n\n    }\n\n    // backwards compatibility\n\n    let warnedTexture2D = false;\n    let warnedTextureCube = false;\n\n    function safeSetTexture2D( texture, slot ) {\n\n        if ( texture && texture.isWebGLRenderTarget ) {\n\n            if ( warnedTexture2D === false ) {\n\n                console.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n                warnedTexture2D = true;\n\n            }\n\n            texture = texture.texture;\n\n        }\n\n        setTexture2D( texture, slot );\n\n    }\n\n    function safeSetTextureCube( texture, slot ) {\n\n        if ( texture && texture.isWebGLCubeRenderTarget ) {\n\n            if ( warnedTextureCube === false ) {\n\n                console.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n                warnedTextureCube = true;\n\n            }\n\n            texture = texture.texture;\n\n        }\n\n\n        setTextureCube( texture, slot );\n\n    }\n\n    //\n\n    this.allocateTextureUnit = allocateTextureUnit;\n    this.resetTextureUnits = resetTextureUnits;\n\n    this.setTexture2D = setTexture2D;\n    this.setTexture2DArray = setTexture2DArray;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n    this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n    this.safeSetTexture2D = safeSetTexture2D;\n    this.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n","import {WebGLRenderTarget} from \"three\";\nimport {Texture} from \"three/src/textures/Texture\";\n\nexport class MultiRenderTarget extends WebGLRenderTarget {\n    readonly isMultiRenderTarget = true;\n\n    constructor(public textures: Texture[], depthBuffer: boolean, stencilBuffer: boolean) {\n        super(textures ? textures[0].image.width : undefined, textures ? textures[0].image.height : undefined);\n        if (textures) this.texture = textures[0];\n        this.depthBuffer = depthBuffer;\n        this.stencilBuffer = stencilBuffer;\n    }\n\n    copy(source: MultiRenderTarget): any {\n        super.copy(source);\n        this.textures = [this.texture];\n        for (let i = 1, il = source.textures.length; i < il; i++)\n            this.textures[i] = source.textures[i].clone();\n        return this;\n    }\n\n    setSize(width: number, height: number): void {\n        if (this.width !== width || this.height !== height) {\n            this.width = width;\n            this.height = height;\n\n            for (let i = 0, il = this.textures.length; i < il; i++) {\n                this.textures[i].image.width = width;\n                this.textures[i].image.height = height;\n            }\n\n            this.dispose();\n        }\n        this.viewport.set( 0, 0, width, height );\n        this.scissor.set( 0, 0, width, height );\n    }\n}\n","﻿function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tconst meshPerAttribute = geometryAttribute.meshPerAttribute;\n\t\t\t\t\t\t\tif (size === 16) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, meshPerAttribute );\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, meshPerAttribute );\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, meshPerAttribute );\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, meshPerAttribute );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, meshPerAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tif (size === 16) {\n\t\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n","import {\n\tLinearEncoding, Vector4, Frustum, Matrix4, Vector3, NoToneMapping,\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType\n} from \"three\";\nimport {WebXRManager} from \"three/src/renderers/webxr/WebXRManager\";\nimport {WebGLUtils} from \"three/src/renderers/webgl/WebGLUtils\";\nimport {WebGLAttributes} from \"three/src/renderers/webgl/WebGLAttributes\";\nimport {WebGLRenderStates} from \"three/src/renderers/webgl/WebGLRenderStates\";\nimport {WebGLUniforms} from \"three/src/renderers/webgl/WebGLUniforms\";\nimport {WebGLAnimation} from \"three/src/renderers/webgl/WebGLAnimation\";\nimport {WebGLInfo} from \"three/src/renderers/webgl/WebGLInfo\";\nimport {WebGLState} from \"three/src/renderers/webgl/WebGLState\";\nimport {WebGLObjects} from \"three/src/renderers/webgl/WebGLObjects\";\nimport {WebGLClipping} from \"three/src/renderers/webgl/WebGLClipping\";\nimport {WebGLCubeMaps} from 'three/src/renderers/webgl/WebGLCubeMaps';\nimport {WebGLMorphtargets} from 'three/src/renderers/webgl/WebGLMorphtargets';\nimport {WebGLMaterials} from \"three/src/renderers/webgl/WebGLMaterials\";\nimport {WebGLShadowMap} from \"three/src/renderers/webgl/WebGLShadowMap\";\nimport {WebGLExtensions} from \"three/src/renderers/webgl/WebGLExtensions\";\nimport {WebGLGeometries} from \"three/src/renderers/webgl/WebGLGeometries\";\nimport {WebGLProperties} from \"three/src/renderers/webgl/WebGLProperties\";\nimport {WebGLRenderLists} from \"three/src/renderers/webgl/WebGLRenderLists\";\nimport {WebGLCapabilities} from \"three/src/renderers/webgl/WebGLCapabilities\";\nimport {WebGLBufferRenderer} from \"three/src/renderers/webgl/WebGLBufferRenderer\";\nimport {WebGLIndexedBufferRenderer} from \"three/src/renderers/webgl/WebGLIndexedBufferRenderer\";\nimport {WebGLBackground} from \"three/src/renderers/webgl/WebGLBackground\";\n\nimport {WebGLPrograms} from \"./WebGLPrograms\";\nimport {WebGLTextures} from \"./WebGLTextures\";\nimport {MultiRenderTarget} from \"./MultiRenderTarget\";\nimport {WebGLBindingStates} from \"./WebGLBindingStates\";\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its state isolated from the parent render call.\n\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _framebuffer = null;\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentFramebuffer = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\tlet _currentDrawBuffers = [];\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tconst shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tconst programInfo = properties.get( material ).program;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tconst compiled = new WeakMap();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tif ( compiled.has( material2 ) === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( material2, scene, object );\n\t\t\t\t\t\t\tcompiled.set( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( compiled.has( material ) === false ) {\n\n\t\t\t\t\tinitMaterial( material, scene, object );\n\t\t\t\t\tcompiled.set( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\trenderStateStack.pop();\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\tcurrentRenderList = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet program = materialProperties.program;\n\t\tlet programChange = true;\n\n\t\t// always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = materialProperties.program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( _gl.FRAMEBUFFER, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderList = function () {\n\n\t\treturn currentRenderList;\n\n\t};\n\n\tthis.setRenderList = function ( renderList ) {\n\n\t\tcurrentRenderList = renderList;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = _framebuffer;\n\t\tlet isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\tif ( capabilities.isWebGL2 || !! extensions.get( 'WEBGL_draw_buffers' ) ) {\n\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif ( renderTarget instanceof MultiRenderTarget ) {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== renderTarget.textures.length || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\tfor ( let i = 0, il = renderTarget.textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t_currentDrawBuffers[ i ] = _gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_currentDrawBuffers.length = renderTarget.textures.length;\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( renderTarget ) {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== _gl.BACK ) {\n\n\t\t\t\t\t\t_currentDrawBuffers[ 0 ] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\t_gl.drawBuffers( _currentDrawBuffers );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( _currentDrawBuffers );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tlet restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nexport { WebGLRenderer };\n","import {\n\tScene,\n\tShaderMaterial, Mesh,\n\tBoxBufferGeometry,\n\tPerspectiveCamera,\n\tWebGLCubeRenderTarget, BackSide,\n\tNoBlending,\n\tMaterial,\n\tWebGLRenderer,\n\tTexture\n} from \"three\";\n\nexport class EquirectangularToCubeGenerator {\n    private renderTarget: WebGLCubeRenderTarget;\n\tprivate readonly resolution: number;\n\tprivate readonly views: Array<{t: number[], u: number[]}>;\n\tprivate readonly boxMesh: Mesh;\n\tprivate readonly material: Material;\n\tprivate readonly camera: PerspectiveCamera;\n\tprivate readonly scene: Scene;\n\n\tconstructor(sourceTexture: Texture, options: any = {}) {\n\t\tthis.camera = new PerspectiveCamera(90, 1, 0.1, 10);\n\t\tthis.scene = new Scene();\n\t\tthis.material = this.createMaterial(sourceTexture);\n\t\tthis.boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), this.material);\n\t\tthis.scene.add(this.boxMesh);\n\n\t\tthis.resolution = options.resolution || 1024;\n\t\tthis.views = [\n\t\t\t{ t: [1, 0, 0], u: [0, -1, 0] },\n\t\t\t{ t: [- 1, 0, 0], u: [0, -1, 0] },\n\t\t\t{ t: [0, 1, 0], u: [0, 0, 1] },\n\t\t\t{ t: [0, - 1, 0], u: [0, 0, - 1] },\n\t\t\t{ t: [0, 0, 1], u: [0, -1, 0] },\n\t\t\t{ t: [0, 0, - 1], u: [0, - 1, 0] },\n\t\t];\n\n\t\tconst params = {\n\t\t\tformat: options.format || sourceTexture.format,\n\t\t\tmagFilter: sourceTexture.magFilter,\n\t\t\tminFilter: sourceTexture.minFilter,\n\t\t\ttype: options.type || sourceTexture.type,\n\t\t\tgenerateMipmaps: sourceTexture.generateMipmaps,\n\t\t\tanisotropy: sourceTexture.anisotropy,\n\t\t\tencoding: sourceTexture.encoding\n\t\t};\n\n\t\tthis.renderTarget = new WebGLCubeRenderTarget(this.resolution, params);\n\t}\n\n\tprivate createMaterial(sourceTexture: Texture): ShaderMaterial {\n\t\tconst shaderMaterial = new ShaderMaterial({\n\t\t\tuniforms: {\n\t\t\t\t\"equirectangularMap\": { value: sourceTexture },\n\t\t\t},\n\n            // language=GLSL\n\t\t\tvertexShader: `\n\t\t\t    varying vec3 localPosition;\n        \n                void main() {\n                    localPosition = position;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }\n            `,\n\n            // language=GLSL\n\t\t\tfragmentShader: `\n\t\t\t\t#include <common>\n                varying vec3 localPosition;\n                uniform sampler2D equirectangularMap;\n                \n                vec2 EquirectangularSampleUV(vec3 v) {\n                  \tvec2 uv = vec2(atan(v.z, v.x), asin(v.y));\n                  \tuv *= vec2(0.1591, 0.3183); // inverse atan\n                  \tuv += 0.5;\n                  \treturn uv;\n                }\n                \n                void main() {\n                  \tvec2 uv = EquirectangularSampleUV(normalize(localPosition));\n\t\t\t\t\tuv.x = 0.5-uv.x;\n                  \tgl_FragColor = texture2D(equirectangularMap, uv);\n                }\n            `,\n\n\t\t\tblending: NoBlending,\n            side: BackSide\n\t\t});\n\n\t\tshaderMaterial.type = 'EquirectangularToCubeGenerator';\n\t\treturn shaderMaterial;\n\n\t}\n\n\tupdate(renderer: WebGLRenderer): WebGLCubeRenderTarget {\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tconst v = this.views[i];\n\n\t\t\tthis.camera.position.set(0, 0, 0);\n\t\t\tthis.camera.up.set(v.u[0], v.u[1], v.u[2]);\n\t\t\tthis.camera.lookAt(v.t[0], v.t[1], v.t[2]);\n\n\t\t\trenderer.setRenderTarget(this.renderTarget, i);\n\t\t\trenderer.clear();\n\t\t\trenderer.render(this.scene, this.camera);\n\t\t}\n\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\treturn this.renderTarget;\n\t}\n\n\tdispose(): void {\n\t\tthis.renderTarget.dispose();\n\t}\n}\n\n\n","import {\n    Color,\n    CubeTexture,\n    Euler,\n    Matrix4,\n    Scene,\n    Texture,\n    Uniform,\n    WebGLCubeRenderTarget,\n    BackSide,\n    FrontSide,\n    Mesh,\n    BoxBufferGeometry,\n    ShaderMaterial,\n    ShaderLib,\n    PlaneBufferGeometry,\n    PerspectiveCamera, RepeatWrapping, MathUtils\n} from \"three\";\nimport {cloneUniforms} from \"three/src/renderers/shaders/UniformsUtils\";\nimport {RenderingManager} from \"./RenderingManager\";\nimport {BackgroundGradient, BackgroundSetting, Settings} from \"../common\";\nimport {WVCamera} from \"./WVCamera\";\nimport {ToneMapping} from \"three\";\nimport {EquirectangularToCubeGenerator} from \"./EquirectangularToCubeGenerator\";\nimport {SettingsProxyHandler} from \"../SettingsProxyHandler\";\n\nexport class WVBackground {\n    private background: Color | Texture | CubeTexture | WebGLCubeRenderTarget;\n    private currentBackground: Color | Texture | CubeTexture | WebGLCubeRenderTarget;\n\n    private boxMesh: Mesh;\n    private planeMesh: Mesh;\n    private currentBackgroundVersion = 0;\n    private currentTonemapping: ToneMapping;\n\n    private backgroundEuler = new Euler();\n    private backgroundScene = new Scene();\n    private backgroundCamera = new PerspectiveCamera();\n\n    constructor(private renderingManager: RenderingManager, private settingsProxy: SettingsProxyHandler<Settings>, private camera: WVCamera) {\n        this.update();\n        this.settingsProxy.addListener(\"background\", () => {\n            this.update();\n            this.renderingManager.redraw();\n        });\n\n        this.settingsProxy.addListener(\"backgroundRotation\", () => {\n            this.renderingManager.redraw();\n        });\n    }\n\n    private syncCamera(): void {\n        this.backgroundEuler.x = -Math.PI / 2;\n        this.backgroundEuler.z = this.settingsProxy.settings.backgroundRotation * Math.PI / 180;\n        this.backgroundCamera.quaternion.setFromEuler(this.backgroundEuler);\n        this.backgroundCamera.quaternion.multiply(this.camera.quaternion);\n        if (\n            this.backgroundCamera.aspect !== this.camera.aspect ||\n            this.backgroundCamera.fov !== this.camera.fov\n        ) {\n            this.backgroundCamera.aspect = this.camera.aspect;\n            this.backgroundCamera.fov = this.camera.fov;\n            this.backgroundCamera.updateProjectionMatrix();\n        }\n    }\n\n    private update(): void {\n        this.background =\n            this.toColor(this.settingsProxy.settings.background) ||\n            this.toGradient(this.settingsProxy.settings.background) ||\n            this.toSkybox(this.settingsProxy.settings.background) ||\n            this.toTexture(this.settingsProxy.settings.background);\n    }\n\n    private toGradient(background: BackgroundSetting): Texture {\n        const gradient = background as BackgroundGradient;\n        if (gradient.topColor && gradient.bottomColor) {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 2;\n            const context = canvas.getContext(\"2d\");\n            context.fillStyle = \"#\" + gradient.topColor.getHexString();\n            context.fillRect(0, 0, 1, 1);\n            context.fillStyle = \"#\" + gradient.bottomColor.getHexString();\n            context.fillRect(0, 1, 1, 1);\n            const texture = this.toTexture(canvas);\n\n            // crop half pixel on top and bottom for better vertical gradients\n            texture.repeat.y = (canvas.height - 1) / canvas.height;\n            texture.offset.y = 0.5 / canvas.height;\n            return texture;\n        }\n\n    }\n\n    private toColor(background: BackgroundSetting): Color {\n        const color = background as Color;\n        return color.r !== undefined && color.g !== undefined && color.b !== undefined ? color : undefined;\n    }\n\n    private toTexture(background: BackgroundSetting): Texture {\n        if (background instanceof HTMLImageElement || background instanceof HTMLCanvasElement) {\n            const texture = new Texture(background);\n            texture.needsUpdate = true;\n            return texture;\n        }\n    }\n\n    private toSkybox(background: BackgroundSetting): CubeTexture | WebGLCubeRenderTarget {\n        if (background instanceof HTMLImageElement || background instanceof HTMLCanvasElement) {\n            if (background.height * 4 === background.width * 3) {\n                const cubeTexture = new CubeTexture(this.getImagesFromSkyboxAtlas(background));\n                cubeTexture.needsUpdate = true;\n                return cubeTexture;\n            }\n            else if (background.height * 2 === background.width) {\n                const textureSrc = new Texture(background);\n                textureSrc.wrapS = RepeatWrapping;\n                textureSrc.needsUpdate = true;\n                const equiToCube = new EquirectangularToCubeGenerator(textureSrc, { resolution: MathUtils.ceilPowerOfTwo(background.height * 0.6) });\n                return equiToCube.update(this.renderingManager.renderer);\n            }\n        }\n        else if (background instanceof Array) {\n            const cubeTexture = new CubeTexture(background);\n            cubeTexture.needsUpdate = true;\n            return cubeTexture;\n        }\n    }\n\n    private getImagesFromSkyboxAtlas(srcImg: HTMLImageElement | HTMLCanvasElement): HTMLCanvasElement[] {\n        const imgs: HTMLCanvasElement[] = [];\n        const imageObj = srcImg;\n        const size = imageObj.height / 3;\n        for (let i = 0; i < 6; i++) {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            canvas.height = size;\n            canvas.width = size;\n            if (i === 0) context.drawImage(imageObj, size * 2, size, size, size, 0, 0, size, size);\n            if (i === 1) context.drawImage(imageObj, 0, size * i, size, size, 0, 0, size, size);\n            if (i === 2) context.drawImage(imageObj, size, 0, size, size, 0, 0, size, size);\n            if (i === 3) context.drawImage(imageObj, size, size * 2, size, size, 0, 0, size, size);\n            if (i === 4) context.drawImage(imageObj, size, size, size, size, 0, 0, size, size);\n            if (i === 5) context.drawImage(imageObj, size * 3, size, size, size, 0, 0, size, size);\n            imgs.push(canvas);\n        }\n        return imgs;\n    }\n\n    render(): void {\n        const renderer = this.renderingManager.renderer;\n\n        // Ignore background in AR\n        const xr = renderer.xr;\n        const session = xr.getSession && xr.getSession();\n        if (session && session.environmentBlendMode === 'additive') {\n            this.background = null;\n        }\n\n        if (this.background === null) {\n            return;\n        } else if (this.background && this.background instanceof Color) {\n            renderer.setClearColor(this.background);\n            renderer.setClearAlpha(1);\n            renderer.clear();\n            return;\n        }\n\n        if (this.background && (this.background instanceof CubeTexture || this.background instanceof WebGLCubeRenderTarget)) {\n\n            if (this.boxMesh === undefined) {\n\n                const uniforms = cloneUniforms(ShaderLib.cube.uniforms);\n                uniforms.rotMatrix = new Uniform(new Matrix4());\n\n                const backgroundMaterial = new ShaderMaterial({\n                    uniforms: uniforms,\n                    vertexShader: ShaderLib.cube.vertexShader,\n                    fragmentShader: ShaderLib.cube.fragmentShader,\n                    side: BackSide,\n                    depthTest: false,\n                    depthWrite: false,\n                    fog: false\n                });\n\n                const boxGeometry = new BoxBufferGeometry(100, 100, 100);\n                this.boxMesh = new Mesh(boxGeometry, backgroundMaterial);\n\n                boxGeometry.deleteAttribute('normal');\n                boxGeometry.deleteAttribute('uv');\n\n                // enable code injection for non-built-in material\n                Object.defineProperty(this.boxMesh.material, 'envMap', {\n                    get: function () {\n                        return this.uniforms.envMap.value;\n                    }\n                });\n                this.backgroundScene.children.length = 0;\n                this.backgroundScene.add(this.boxMesh);\n            }\n\n            if (this.planeMesh) {\n                this.backgroundScene.remove(this.planeMesh);\n                this.planeMesh = undefined;\n            }\n\n            const texture = this.background instanceof WebGLCubeRenderTarget ? this.background.texture : this.background;\n\n            // @ts-ignore\n            this.boxMesh.material.uniforms.envMap.value = texture;\n            // @ts-ignore\n            this.boxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? -1 : 1;\n\n            if (this.currentBackground !== this.background ||\n                this.currentBackgroundVersion !== texture.version ||\n                this.currentTonemapping !== renderer.toneMapping) {\n\n                // @ts-ignore\n                this.boxMesh.material.needsUpdate = true;\n\n                this.currentBackground = this.background;\n                this.currentBackgroundVersion = texture.version;\n                this.currentTonemapping = renderer.toneMapping;\n            }\n\n        } else if (this.background && this.background instanceof Texture) {\n\n            if (this.planeMesh === undefined) {\n                const planeGeometry = new PlaneBufferGeometry(2, 2);\n                this.planeMesh = new Mesh(\n                    planeGeometry,\n                    new ShaderMaterial({\n                        uniforms: cloneUniforms(ShaderLib.background.uniforms),\n                        vertexShader: ShaderLib.background.vertexShader,\n                        fragmentShader: ShaderLib.background.fragmentShader,\n                        side: FrontSide,\n                        depthTest: false,\n                        depthWrite: false,\n                        fog: false\n                    })\n                );\n                planeGeometry.deleteAttribute('normal');\n\n                // enable code injection for non-built-in material\n                Object.defineProperty(this.planeMesh.material, 'map', {\n                    get: function () {\n                        return this.uniforms.t2D.value;\n                    }\n                });\n\n                this.backgroundScene.children.length = 0;\n                this.backgroundScene.add(this.planeMesh);\n            }\n\n            if (this.boxMesh) {\n                this.backgroundScene.remove(this.boxMesh);\n                this.boxMesh = undefined;\n            }\n\n            // @ts-ignore\n            this.planeMesh.material.uniforms.t2D.value = this.background;\n\n\n            if (this.background.matrixAutoUpdate === true) {\n                // @ts-ignore\n                this.background.updateMatrix();\n            }\n\n            // @ts-ignore\n            this.planeMesh.material.uniforms.uvTransform.value.copy(this.background.matrix);\n\n            if (this.currentBackground !== this.background ||\n                this.currentBackgroundVersion !== this.background.version ||\n                this.currentTonemapping !== renderer.toneMapping) {\n\n                // @ts-ignore\n                this.planeMesh.material.needsUpdate = true;\n\n                this.currentBackground = this.background;\n                this.currentBackgroundVersion = this.background.version;\n                this.currentTonemapping = renderer.toneMapping;\n\n            }\n        }\n\n        this.syncCamera();\n        renderer.render(this.backgroundScene, this.backgroundCamera);\n    }\n}\n","import {\n\tOrthographicCamera,\n\tPlaneGeometry,\n\tMesh\n} from '../../../build/three.module.js';\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\n// from this module like Pass.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","import { Pass } from \"three/examples/jsm/postprocessing/Pass\";\nimport { ShaderMaterial, WebGLRenderer, WebGLRenderTarget, Scene, OrthographicCamera, Camera, Mesh, BufferGeometry, BufferAttribute, Blending, ShaderMaterialParameters } from \"three\";\n\nexport class EffectPass extends Pass {\n    private screen: Mesh;\n    private scene: Scene;\n    private camera: Camera;\n\n    constructor(material: ShaderMaterial) {\n        super();\n        this.scene = new Scene();\n        this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        this.setFullscreenMaterial(material);\n    }\n\n    getFullscreenMaterial(): ShaderMaterial {\n        return (this.screen !== null) ? this.screen.material as ShaderMaterial : null;\n    }\n\n    setFullscreenMaterial(material: ShaderMaterial): void {\n        let screen = this.screen;\n        if (screen) {\n            screen.material = material;\n        } else {\n            screen = new Mesh(getFullscreenTriangle(), material);\n            screen.frustumCulled = false;\n\n            if(!this.scene)\n                this.scene = new Scene();\n\n            this.scene.add(screen);\n            this.screen = screen;\n        }\n    }\n\n    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget): void {\n        renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n        renderer.render(this.scene, this.camera);\n    }\n}\n\nlet geometry: BufferGeometry;\nfunction getFullscreenTriangle(): BufferGeometry {\n    if (!geometry) {\n        const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\n        const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);\n        geometry = new BufferGeometry();\n        geometry.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n        geometry.setAttribute(\"uv\", new BufferAttribute(uvs, 2));\n    }\n    return geometry;\n}\n\n","import {\n    Scene, WebGLRenderer, WebGLRenderTarget,\n    DepthTexture, RGBAFormat, UnsignedByteType, ShaderMaterial,\n    FloatType, UnsignedIntType, Material\n} from \"three\";\nimport { RenderingManager } from \"./RenderingManager\";\nimport { EffectPass } from \"./EffectPass\";\nimport { DepthPeelingMaterial } from \"./DepthPeelingMaterial\";\nimport {WVCamera} from \"./WVCamera\";\nimport {EdgesAndSsaoRenderPass} from \"./EdgesAndSsaoRenderPass\";\nimport {WVBackground} from \"./WVBackground\";\nimport {Pass} from \"three/examples/jsm/postprocessing/Pass\";\nimport {SettingsProxyHandler} from \"../SettingsProxyHandler\";\nimport {Settings} from \"../common\";\n\nexport class DepthPeelingRenderPass extends Pass {\n    globalOpacity: number = 1.0;\n\n    private peelRenderTargets: WebGLRenderTarget[];\n    private combinePeelsPass: EffectPass;\n\n    private get depthPeelingEnabled(): boolean {\n        return this.settingsProxy.settings.orderIndependentTransparency &&\n            this.renderingManager.isFragDepthAvailable() && this.renderingManager.isDepthTextureAvailable();\n    }\n\n    get peelsCount(): number {\n        return this.peelRenderTargets.length;\n    }\n\n    set peelsCount(peelsCount: number) {\n        this.peelRenderTargets = [];\n        for (let i = 0; i < peelsCount; i++) {\n            const renderTarget = this.createRenderTarget();\n            renderTarget.depthTexture = createDepthTexture(this.renderingManager);\n            this.peelRenderTargets.push(renderTarget);\n        }\n    }\n\n    constructor(private renderingManager: RenderingManager, private settingsProxy: SettingsProxyHandler<Settings>, public scene: Scene, public camera: WVCamera, private background: WVBackground, private edgesAndSsaoPass: EdgesAndSsaoRenderPass) {\n        super();\n        settingsProxy.addListener(\"orderIndependentTransparency\", () => renderingManager.redraw());\n        this.peelsCount = settingsProxy.settings.transparencyPeelsCount;\n        settingsProxy.addListener(\"transparencyPeelsCount\", () => {\n            this.peelsCount = settingsProxy.settings.transparencyPeelsCount;\n            renderingManager.redraw();\n        });\n        renderingManager.uniforms.depthPeelingEnabled.value = Number(this.depthPeelingEnabled);\n        this.combinePeelsPass = new EffectPass(this.createCombinePeelsMaterial());\n    }\n\n    private createRenderTarget(): WebGLRenderTarget {\n        return new WebGLRenderTarget(\n            this.renderingManager.width,\n            this.renderingManager.height,\n            {\n                format: RGBAFormat,\n                type: UnsignedByteType,\n                depthBuffer: true,\n                stencilBuffer: false\n            }\n        );\n    }\n\n    private createCombinePeelsMaterial(): ShaderMaterial {\n        const mat = new ShaderMaterial({\n            uniforms: {\n                inputBuffer: { value: null },\n                depthBuffer: { value: null },\n            },\n            // language=GLSL\n            vertexShader: `\n                varying vec2 vUv;\n                \n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position.xy, 0.0, 1.0);\n                }\n            `,\n            // language=GLSL\n            fragmentShader: `\n                varying vec2 vUv;\n                uniform sampler2D inputBuffer;\n                uniform highp sampler2D depthBuffer;\n\n                void main() {\n                    gl_FragDepthEXT = texture2D(depthBuffer, vUv).r;\n                    gl_FragColor = texture2D(inputBuffer, vUv);\n                }\n            `,\n            transparent: true,\n            depthTest: true,\n            depthWrite: false\n        });\n        mat.extensions.fragDepth = true;\n        return mat;\n    }\n\n    private renderWithDepthPeeling(renderer: WebGLRenderer, renderTarget: WebGLRenderTarget): void {\n        this.renderingManager.uniforms.globalTransparent = false;\n        renderer.setClearColor(0x000000, 0);\n\n        // Render peel layers into buffers\n        for (let i = 0; i < this.peelsCount; i++) {\n            this.renderingManager.uniforms.depthPeelingEnabled.value = Number(i > 0);\n            this.renderingManager.uniforms.peelingDepthTexture.value = i === 0 ? null : this.peelRenderTargets[i - 1].depthTexture;\n            renderer.setRenderTarget(this.peelRenderTargets[i]);\n            renderer.clear();\n            this.edgesAndSsaoPass.render(renderer, this.peelRenderTargets[i], false,\n                (m: Material) => (m as DepthPeelingMaterial).isDepthPeelingMaterial && ((m as DepthPeelingMaterial).origTransparent || this.globalOpacity < 1.0) // only transparent meshes\n            );\n        }\n\n        this.renderingManager.uniforms.globalTransparent = undefined;\n\n        // Render the rest with traditional transparency\n        this.renderingManager.uniforms.depthPeelingEnabled.value = Number(true);\n        this.renderingManager.uniforms.peelingDepthTexture.value = this.peelRenderTargets[this.peelsCount - 1].depthTexture;\n        this.renderingManager.uniforms.globalTransparent = this.globalOpacity < 1.0 ? true : undefined;\n        renderer.setRenderTarget(renderTarget);\n        renderer.clearDepth();\n        this.background.render();\n        this.edgesAndSsaoPass.render(renderer, renderTarget, true,\n            (m: Material) => m.depthTest // non-depth tested materials will be rendered last\n        );\n        this.renderingManager.uniforms.globalTransparent = undefined;\n        this.renderingManager.uniforms.depthPeelingEnabled.value = Number(false);\n        this.renderingManager.uniforms.peelingDepthTexture.value = null;\n\n        // Blit depth peels above\n        for (let i = this.peelsCount - 1; i >= 0; i--) {\n            this.combinePeelsPass.getFullscreenMaterial().uniforms.inputBuffer.value = this.peelRenderTargets[i].texture;\n            this.combinePeelsPass.getFullscreenMaterial().uniforms.depthBuffer.value = this.peelRenderTargets[i].depthTexture;\n            this.combinePeelsPass.render(renderer, renderTarget);\n        }\n\n        // render non-depth tested materials above everything\n        this.renderingManager.uniforms.globalTransparent = this.globalOpacity < 1.0 ? true : undefined;\n        this.edgesAndSsaoPass.render(renderer, renderTarget, false,\n            (m: Material) => !m.depthTest\n        );\n        this.renderingManager.uniforms.globalTransparent = undefined;\n    }\n\n    setSize(width: number, height: number): void {\n        for (const t of this.peelRenderTargets)\n            t.setSize(width, height);\n        this.edgesAndSsaoPass.setSize(width, height);\n    }\n\n    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget): void {\n        this.renderingManager.uniforms.globalOpacity.value = this.globalOpacity;\n        renderer.autoClear = false;\n        if (this.depthPeelingEnabled) {\n            this.renderWithDepthPeeling(renderer, writeBuffer);\n        }\n        else {\n            this.renderingManager.uniforms.globalTransparent = this.globalOpacity < 1.0 ? true : undefined;\n            renderer.setRenderTarget(writeBuffer);\n            renderer.clearDepth();\n            this.background.render();\n            this.edgesAndSsaoPass.render(renderer, writeBuffer, true, () => true);\n            this.renderingManager.uniforms.globalTransparent = undefined;\n        }\n    }\n}\n\nexport function createDepthTexture(renderingManager: RenderingManager): DepthTexture {\n    // UnsignedInt lacks precision, so we use precision fix value\n    renderingManager.uniforms.depthPrecisionFix.value = renderingManager.isWebgl2() ? 0.000001 : 0.00001;\n    return new DepthTexture(undefined, undefined, renderingManager.isWebgl2() ? FloatType : UnsignedIntType);\n}\n","import {\n    DataTexture,\n    DepthTexture,\n    HalfFloatType, LinearFilter,\n    Material,\n    RGBAFormat, RGBFormat,\n    Scene,\n    ShaderMaterial, UnsignedByteType,\n    Vector2,\n    WebGLRenderer,\n    WebGLRenderTarget\n} from \"three\";\nimport {MultiRenderTarget} from \"./MultiRenderTarget\";\nimport {EffectPass} from \"./EffectPass\";\nimport {RenderingManager} from \"./RenderingManager\";\nimport {createDepthTexture} from \"./DepthPeelingRenderPass\";\nimport {WVMeshMaterial} from \"./WVMeshMaterial\";\nimport {WVCamera} from \"./WVCamera\";\nimport {Texture} from \"three/src/textures/Texture\";\nimport {TextureDataType} from \"three/src/constants\";\nimport {SettingsProxyHandler} from \"../SettingsProxyHandler\";\nimport {Settings} from \"../common\";\nimport {disposeImage} from \"../Helpers/common-utils\";\n\n// language=GLSL\nconst vertexShader = `\n    varying vec2 vUv;\n    varying vec2 vOffsetUvs[4];\n    uniform vec2 texelSize;\n\n    void main() {\n        vUv = uv;\n        vOffsetUvs[0] = vec2(texelSize.x, 0);\n        vOffsetUvs[1] = vec2(-texelSize.x, 0);\n        vOffsetUvs[2] = vec2(0, texelSize.y);\n        vOffsetUvs[3] = vec2(0, -texelSize.y);\n        gl_Position = vec4(position.xy, 0.0, 1.0);\n    }\n`;\n\n// language=GLSL\nconst fragmentShaderCommon = `\n    varying vec2 vUv;\n    varying vec2 vOffsetUvs[4];\n    uniform highp sampler2D normalEdgeFadeBuffer;\n    uniform highp sampler2D depthBuffer;\n    uniform vec2 cameraNearFar;\n    uniform mat4 uProjectionInverse;\n\n    // Camera relative position\n    vec3 computePosition(vec2 coord, float depthSample) {\n        // normalized device coordinates\n        vec4 ndc = vec4((vec3(coord, depthSample) - 0.5) * 2.0, 1.0);\n        vec4 clip = uProjectionInverse * ndc;\n        return clip.xyz / clip.w;\n    }\n\n    vec3 getNormal(vec4 normalSample) {\n        // treat background as surface with normal towards camera\n        return normalSample.xyz == vec3(0) ? vec3(0.0, 0.0, 1.0) : normalSample.xyz;\n    }\n`;\n\nexport class EdgesAndSsaoRenderPass {\n    private multiRenderTarget: MultiRenderTarget;\n    private ssaoRenderTarget: WebGLRenderTarget;\n    private ssaoSimpleRenderTarget: WebGLRenderTarget;\n    private edgesPass: EffectPass;\n    private ssaoPass: EffectPass;\n    private ssaoSimplePass: EffectPass;\n    private noiseTexture: Texture;\n    private texelSize = new Vector2();\n    private cameraNearFar = new Vector2();\n\n    get colorTexture(): Texture {\n        return this.multiRenderTarget.textures[0];\n    }\n\n    get normalTexture(): Texture {\n        return this.multiRenderTarget.textures[1];\n    }\n\n    get depthTexture(): DepthTexture {\n        return this.multiRenderTarget.depthTexture;\n    }\n\n    constructor(private settingsProxy: SettingsProxyHandler<Settings>, private renderingManager: RenderingManager, private scene: Scene, private camera: WVCamera) {\n        this.init();\n        this.settingsProxy.addListener(\"renderEdges\", () => this.init());\n    }\n\n    private init(): void {\n        if (this.renderEdges && !this.multiRenderTarget) {\n            this.multiRenderTarget = new MultiRenderTarget(\n                [this.createTexture(UnsignedByteType), this.createTexture(HalfFloatType)],\n                true, false);\n            this.multiRenderTarget.depthTexture = createDepthTexture(this.renderingManager);\n            this.noiseTexture = this.createNoiseTexture();\n            this.ssaoRenderTarget = new WebGLRenderTarget(1, 1, {\n                minFilter: LinearFilter,\n                magFilter: LinearFilter\n            });\n            this.ssaoSimpleRenderTarget = this.ssaoRenderTarget.clone();\n            this.ssaoPass = new EffectPass(this.createSsaoMaterial(false));\n            this.ssaoSimplePass = new EffectPass(this.createSsaoMaterial(true));\n            this.edgesPass = new EffectPass(this.createEdgesMaterial());\n        }\n    }\n\n    private get renderEdges(): boolean {\n        return this.settingsProxy.settings.renderEdges && this.renderingManager.isWebgl2();\n    }\n\n    private createNoiseTexture(): Texture {\n        const size = 100;\n        const noiseData = new Uint8Array(size * size * 3);\n        for (let i = 0; i < noiseData.length; ++i)\n            noiseData[i] = Math.random() * 255;\n        const t = new DataTexture(noiseData, size, size, RGBFormat);\n        t.onUpdate = disposeImage;\n        return t;\n    }\n\n    private createTexture(type: TextureDataType): Texture {\n        return new Texture(\n            {width: this.renderingManager.width, height: this.renderingManager.height} as any,\n            undefined,\n            undefined,\n            undefined,\n            LinearFilter,\n            LinearFilter,\n            RGBAFormat,\n            type,\n            undefined,\n            undefined\n        );\n    }\n\n    private createEdgesMaterial(): ShaderMaterial {\n        const mat = new ShaderMaterial({\n            uniforms: {\n                inputBuffer: { value: this.multiRenderTarget.textures[0] },\n                normalEdgeFadeBuffer: { value: this.multiRenderTarget.textures[1] },\n                depthBuffer: { value: this.multiRenderTarget.depthTexture },\n                ssaoBuffer: { value: this.ssaoRenderTarget.texture },\n                cameraNearFar: { value: this.cameraNearFar },\n                texelSize: { value: this.texelSize },\n                uProjectionInverse: { value: this.camera.projectionMatrixInverse }\n            },\n            vertexShader: vertexShader,\n            // language=GLSL\n            fragmentShader: `\n                ${fragmentShaderCommon}\n\n                uniform sampler2D inputBuffer;\n                uniform sampler2D ssaoBuffer;\n                \n                float distancePointToPlane(vec3 planeNormal, float planeConstant, vec3 pointPos) {\n                    return abs(dot(planeNormal, pointPos) + planeConstant);\n                }\n\n                void main() {\n                    vec4 color = texture2D(inputBuffer, vUv);\n                    vec4 normalEdgeFadeSample = texture2D(normalEdgeFadeBuffer, vUv);\n                    vec3 normal = getNormal(normalEdgeFadeSample);\n                    float edgeFade = normalEdgeFadeSample.w;\n                    float depthSample = texture2D(depthBuffer, vUv).x;\n                    vec3 position = computePosition(vUv, depthSample);\n                    float planeConstant = -dot(position, normal);\n                    bool isEdge = false;\n\n                    for (int i = 0; i < vOffsetUvs.length(); i++) {\n                        vec2 uv = vUv + vOffsetUvs[i];\n                        vec4 offsetNormalEdgeFadeSample = texture2D(normalEdgeFadeBuffer, uv);\n                        vec3 offsetNormal = getNormal(offsetNormalEdgeFadeSample);\n                        vec3 offsetPosition = computePosition(uv, texture2D(depthBuffer, uv).x);\n                        edgeFade = max(edgeFade, offsetNormalEdgeFadeSample.w);\n\n                        float normalDot = abs(dot(normal, offsetNormal));\n                        float depthDelta = distancePointToPlane(normal, planeConstant, offsetPosition);\n                        isEdge = normalDot < 0.9 ||\n                            depthDelta > 0.01 &&\n                            abs(depthDelta / position.z) > 0.01;// depth precision fix, removes noise\n                        if (isEdge) break;\n                    }\n\n                    float occlusion = texture2D(ssaoBuffer, vUv).a;\n                    color.rgb = color.rgb * (1.0 - occlusion);\n                    \n                    gl_FragColor = mix(color, vec4(color.rgb * 0.7, max(color.a, 0.4)), isEdge ? edgeFade : 0.0);\n                    gl_FragDepthEXT = depthSample;\n                }\n            `,\n            transparent: true,\n            depthTest: true,\n            depthWrite: true,\n            premultipliedAlpha: true\n        });\n        mat.extensions.fragDepth = true;\n        return mat;\n    }\n\n    private createSsaoMaterial(simple: boolean): ShaderMaterial {\n        return new ShaderMaterial({\n            uniforms: {\n                normalEdgeFadeBuffer: { value: this.multiRenderTarget.textures[1] },\n                depthBuffer: { value: this.multiRenderTarget.depthTexture },\n                noiseBuffer: { value: this.noiseTexture },\n                cameraNearFar: { value: this.cameraNearFar },\n                texelSize: { value: this.texelSize },\n                uProjectionInverse: { value: this.camera.projectionMatrixInverse }\n            },\n            defines: {\n                SIMPLE: simple\n            },\n            vertexShader: vertexShader,\n            // language=GLSL\n            fragmentShader: `\n                #define SIN45 0.707107\n\n                ${fragmentShaderCommon}\n                \n                uniform sampler2D noiseBuffer;\n                uniform vec2 texelSize;\n\n                float getOcclusion(vec3 position, vec3 normal, vec2 uv) {\n                    float uBias = 0.04;\n                    vec2 uAttenuation = vec2(1.0, 1.0);\n\n                    vec3 offsetPosition = computePosition(uv, texture2D(depthBuffer, uv).x);\n                    vec3 positionVec = offsetPosition - position;\n                    float intensity = max(dot(normal, normalize(positionVec)) - uBias, 0.0);\n                    float attenuation = 1.0 / (uAttenuation.x + uAttenuation.y * length(positionVec));\n                    return intensity * attenuation;\n                }\n\n                void main() {\n                    vec3 normal = getNormal(texture2D(normalEdgeFadeBuffer, vUv));\n                    float depthSample = texture2D(depthBuffer, vUv).x;\n                    if (depthSample == 1.0) // background                     \n                        discard;\n                    \n                    vec3 position = computePosition(vUv, depthSample);\n                    vec2 rand = normalize(texelFetch(noiseBuffer, ivec2(mod(gl_FragCoord.xy, vec2(100))), 0).xy);\n                    \n                    float occlusionRadius = 32.0;\n                    float occlusion = 0.0;\n\n                    int offsCount = vOffsetUvs.length();\n                    #ifdef SIMPLE\n                        offsCount = 2;\n                    #endif\n                    for (int i = 0; i < offsCount; i++) {\n                        vec2 k1 = reflect(vOffsetUvs[i], rand);\n                        vec2 k2 = vec2(k1.x * SIN45 - k1.y * SIN45, k1.x * SIN45 + k1.y * SIN45);\n                        k1 *= occlusionRadius;\n                        k2 *= occlusionRadius;\n                        \n                        occlusion += getOcclusion(position, normal, vUv + k1);\n                        occlusion += getOcclusion(position, normal, vUv + k2 * 0.75);\n                        occlusion += getOcclusion(position, normal, vUv + k1 * 0.5);\n                        occlusion += getOcclusion(position, normal, vUv + k2 * 0.25);\n                    }\n\n                    #ifdef SIMPLE\n                        occlusion *= 0.8;\n                    #endif\n                    occlusion = clamp(occlusion / float(4 * offsCount), 0.0, 1.0);\n                    gl_FragColor = vec4(occlusion);\n                }\n            `,\n            depthTest: false,\n            depthWrite: false,\n        });\n    }\n\n    render(renderer: WebGLRenderer, renderTarget: WebGLRenderTarget, renderSsao: boolean, shouldRenderMaterial: (m: Material) => boolean): void {\n        if (this.renderEdges)\n            this.renderWithEdges(renderer, renderTarget, renderSsao, shouldRenderMaterial);\n        else\n            this.renderWithoutEdges(renderer, renderTarget, shouldRenderMaterial);\n    }\n\n    private renderWithoutEdges(renderer: WebGLRenderer, renderTarget: WebGLRenderTarget, shouldRenderMaterial: (m: Material) => boolean): void {\n        let shouldRenderAnything = false;\n        this.renderingManager.traverseMaterials((o, m) => {\n            const srm = shouldRenderMaterial(m);\n            shouldRenderAnything = shouldRenderAnything || srm;\n            return m.visible = srm;\n        });\n        if (!shouldRenderAnything) return; // early optimization\n\n        renderer.setRenderTarget(renderTarget);\n        renderer.render(this.scene, this.camera);\n    }\n\n    private renderWithEdges(renderer: WebGLRenderer, renderTarget: WebGLRenderTarget, renderSsao: boolean, shouldRenderMaterial: (m: Material) => boolean): void {\n        let shouldRenderAnything = false;\n        // TODO: pass shouldRenderMaterial to webgl-viewer/src/Rendering/WebGLRenderer instead of traversing, should be faster\n        this.renderingManager.traverseMaterials((o, m) => {\n            const srm = shouldRenderMaterial(m);\n            shouldRenderAnything = shouldRenderAnything || srm;\n            return m.visible = !!(m as WVMeshMaterial).isWVMeshMaterial && srm;\n        });\n        if (!shouldRenderAnything) return; // early optimization\n\n        renderer.setRenderTarget(this.multiRenderTarget);\n        renderer.clear();\n        renderer.render(this.scene, this.camera);\n\n        this.cameraNearFar.set(this.camera.near, this.camera.far);\n\n        this.renderSsao(renderer, renderSsao);\n        this.edgesPass.render(renderer, renderTarget);\n\n        this.renderingManager.traverseMaterials((o, m) => m.visible = !(m as WVMeshMaterial).isWVMeshMaterial && shouldRenderMaterial(m));\n        renderer.setRenderTarget(renderTarget);\n        renderer.render(this.scene, this.camera);\n    }\n\n    private renderSsao(renderer: WebGLRenderer, renderSsao: boolean): void {\n        if (!renderSsao || !this.settingsProxy.settings.ssao) {\n            // just clear the buffer\n            this.edgesPass.getFullscreenMaterial().uniforms.ssaoBuffer.value = undefined;\n        }\n        else if (this.renderingManager.fullRender || !this.settingsProxy.settings.progressiveRendering) {\n            this.ssaoPass.render(renderer, this.ssaoRenderTarget);\n            this.edgesPass.getFullscreenMaterial().uniforms.ssaoBuffer.value = this.ssaoRenderTarget.texture;\n        }\n        else {\n            this.ssaoSimplePass.render(renderer, this.ssaoSimpleRenderTarget);\n            this.edgesPass.getFullscreenMaterial().uniforms.ssaoBuffer.value = this.ssaoSimpleRenderTarget.texture;\n        }\n    }\n\n    setSize(width: number, height: number): void {\n        if (this.multiRenderTarget) {\n            this.multiRenderTarget.setSize(width, height);\n            this.texelSize.set(1 / this.renderingManager.clientWidth, 1 / this.renderingManager.clientHeight);\n\n            // SSAO simple render target is smaller for optimization\n            this.ssaoRenderTarget.setSize(width, height);\n            this.ssaoSimpleRenderTarget.setSize(this.renderingManager.clientWidth * 0.7, this.renderingManager.clientHeight * 0.7);\n        }\n    }\n}\n","import {\n\tColor\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\tthis._oldClearColor = new Color();\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","import {\n    ShaderMaterial, Vector2, Uniform\n} from \"three\";\n\n// language=GLSL\nconst fragmentShader$8 = `\n    uniform sampler2D maskTexture;\n    varying vec2 vUv0;\n    varying vec2 vUv1;\n    varying vec2 vUv2;\n    varying vec2 vUv3;\n    \n    void main(){\n        vec2 c0=texture2D(maskTexture,vUv0).rg;\n        vec2 c1=texture2D(maskTexture,vUv1).rg;\n        vec2 c2=texture2D(maskTexture,vUv2).rg;\n        vec2 c3=texture2D(maskTexture,vUv3).rg;\n        float d0=(c0.x-c1.x)*0.5;\n        float d1=(c2.x-c3.x)*0.5;\n        float d=length(vec2(d0,d1));\n        float a0=min(c0.y,c1.y);\n        float a1=min(c2.y,c3.y);\n        float visibilityFactor=min(a0,a1);\n        gl_FragColor = vec4((1.0-visibilityFactor>0.001) ? vec2(d, 0.0): vec2(0.0, d), 1.0, 1.0);\n    }\n`;\n\n// language=GLSL\nconst vertexShader$4 = `\n    uniform vec2 texelSize;\n    varying vec2 vUv0;\n    varying vec2 vUv1;\n    varying vec2 vUv2;\n    varying vec2 vUv3;\n    \n    void main(){\n        vec2 uv=position.xy*0.5+0.5;\n        vUv0=vec2(uv.x+texelSize.x,uv.y);\n        vUv1=vec2(uv.x-texelSize.x,uv.y);\n        vUv2=vec2(uv.x,uv.y+texelSize.y);\n        vUv3=vec2(uv.x,uv.y-texelSize.y);\n        gl_Position=vec4(position.xy,1.0,1.0);\n    }\n`;\n\nexport class OutlineEffectMaterial extends ShaderMaterial {\n    constructor(texelSize: Vector2 = new Vector2()) {\n        super({\n            uniforms: {\n                maskTexture: new Uniform(null),\n                texelSize: new Uniform(new Vector2())\n            },\n\n            fragmentShader: fragmentShader$8,\n            vertexShader: vertexShader$4,\n\n            depthWrite: false,\n            depthTest: false\n        });\n        this.setTexelSize(texelSize.x, texelSize.y);\n    }\n\n    setTexelSize(x: number, y: number): void {\n        this.uniforms.texelSize.value.set(x, y);\n    }\n}\n","import {\n    WebGLRenderer, Scene, WebGLRenderTarget, Uniform, MeshBasicMaterial, LinearFilter, RGBFormat, Color, DoubleSide, ShaderMaterial, ShaderMaterialParameters,\n    Points, BufferGeometry\n} from \"three\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { EffectPass } from \"./EffectPass\";\nimport { WVCamera } from \"./WVCamera\";\nimport { DisplayGroup } from \"./DisplayGroup\";\nimport { OutlineEffectMaterial } from \"./OutlineEffectMaterial\";\nimport { GeometryObject3D } from \"../Model\";\nimport {WVPointsMaterial} from \"./WVPointsMaterial\";\n\n// language=GLSL\nconst fragment = `\nvarying vec2 vUv;    \n    \nuniform sampler2D edgeTexture;\nuniform sampler2D maskTexture;\n\nuniform vec3 color;\nuniform float edgeStrength;\nuniform float fillStrength;\n\nvoid main() {\n\tfloat edge = texture2D(edgeTexture, vUv).r;\n\tfloat mask = texture2D(maskTexture, vUv).r;\n\n\tedge = clamp(edge * edgeStrength * mask, 0.0, 1.0);\n\tmask = (1.0 - mask) * fillStrength;\n    gl_FragColor = vec4(color, edge + mask);\n}\n`;\n\nexport class SelectionEffectPass extends EffectPass {\n    private selectionScene: Scene;\n    private renderTargetMask: WebGLRenderTarget;\n    private renderTargetOutline: WebGLRenderTarget;\n    private maskPass: RenderPass;\n    private outlinePass: EffectPass;\n    private maskMaterial: MeshBasicMaterial;\n    private shouldClear: boolean;\n\n    constructor(camera: WVCamera, color: Color) {\n        const material = new ShaderMaterial({\n            uniforms: {},\n            // language=GLSL\n            vertexShader: `\n                varying vec2 vUv;\n\n                void main() {\n                    vUv = uv;\n                    gl_Position = vec4(position.xy, 0.0, 1.0);\n                }\n            `,\n            fragmentShader: fragment,\n            transparent: true,\n            depthTest: false,\n            depthWrite: false\n        } as ShaderMaterialParameters);\n        super(material);\n        material.transparent = true;\n\n        material.uniforms.maskTexture = new Uniform(null);\n        material.uniforms.edgeTexture = new Uniform(null);\n        material.uniforms.edgeStrength = new Uniform(5.0);\n        material.uniforms.fillStrength = new Uniform(0.25);\n        material.uniforms.color = new Uniform(color);\n\n        this.selectionScene = new Scene();\n\n        this.renderTargetMask = new WebGLRenderTarget(1, 1, {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter\n        });\n        this.renderTargetMask.texture.generateMipmaps = false;\n        this.renderTargetMask.texture.format = RGBFormat;\n        this.getFullscreenMaterial().uniforms.maskTexture.value = this.renderTargetMask.texture;\n\n        this.renderTargetOutline = new WebGLRenderTarget(1, 1, {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter,\n            stencilBuffer: false,\n            depthBuffer: false,\n            format: RGBFormat\n        });\n        this.renderTargetOutline.texture.generateMipmaps = false;\n        this.getFullscreenMaterial().uniforms.edgeTexture.value = this.renderTargetOutline.texture;\n\n        this.maskPass = new RenderPass(this.selectionScene, camera);\n        this.maskPass.clearColor = new Color(0xffffff);\n        this.maskPass.clearAlpha = 1;\n\n        this.maskMaterial = new MeshBasicMaterial({color: 0x000000, side: DoubleSide});\n\n        this.outlinePass = new EffectPass(new OutlineEffectMaterial());\n        this.outlinePass.getFullscreenMaterial().uniforms.maskTexture.value = this.renderTargetMask.texture;\n\n        this.shouldClear = true;\n    }\n\n    addObject(modelId: string, id: number | string, object: GeometryObject3D, groups: DisplayGroup[]= [{start: 0, count: Infinity}]): SelectionEffectPass {\n        let cloned = this.selectionScene.getObjectByName(modelId + id.toString()) as GeometryObject3D;\n        if (!cloned) {\n            cloned = object.clone(false) as GeometryObject3D;\n            cloned.name = modelId + id.toString();\n            cloned.matrixAutoUpdate = false;\n            cloned.matrix = object.matrixWorld;\n            cloned.geometry = new BufferGeometry();\n\n            // TODO: move this logic into respective object classes\n            if (object instanceof Points) {\n                // @ts-ignore\n                const m = object.material[0].clone() as WVPointsMaterial;\n                m.opacity = 1;\n                m.transparent = false;\n                cloned.material = [m];\n            }\n            else {\n                cloned.material = [this.maskMaterial];\n            }\n            this.selectionScene.add(cloned);\n        }\n\n        const geom = cloned.geometry;\n        const g = object.geometry;\n        geom.boundingBox = g.boundingBox;\n        geom.boundingSphere = g.boundingSphere;\n        geom.attributes = g.attributes;\n        geom.setIndex(g.getIndex());\n        geom.clearGroups();\n        for (const group of groups)\n            geom.addGroup(group.start, group.count, 0);\n        return this;\n    }\n\n    removeObject(modelId: string, id: number | string): SelectionEffectPass {\n        const cloned = this.selectionScene.getObjectByName(modelId + id.toString());\n        this.selectionScene.remove(cloned);\n        if (this.selectionScene.children.length === 0)\n            this.shouldClear = true;\n        return this;\n    }\n\n    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget): void {\n        if (this.selectionScene.children.length > 0 || this.shouldClear) {\n            this.maskPass.render(renderer, undefined, this.renderTargetMask, undefined, undefined);\n            this.outlinePass.render(renderer, this.renderTargetOutline);\n            super.render(renderer, writeBuffer);\n            this.shouldClear = false;\n        }\n    }\n\n    setSize(width: number, height: number): void {\n        this.renderTargetMask.setSize(width, height);\n\n        // 0.9 adds a bit of free blur\n        const w = width / window.devicePixelRatio * 0.9;\n        const h = height / window.devicePixelRatio * 0.9;\n        this.maskPass.setSize(w, h);\n        this.renderTargetOutline.setSize(w, h);\n        (this.outlinePass.getFullscreenMaterial() as OutlineEffectMaterial).setTexelSize(2.4 / width * window.devicePixelRatio, 2.4 / height * window.devicePixelRatio);\n        this.shouldClear = true;\n    }\n}\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from '../../../build/three.module.js';\nimport { Pass } from '../postprocessing/Pass.js';\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","import {\n\tVector2\n} from '../../../build/three.module.js';\n\n/**\n * NVIDIA FXAA by Timothy Lottes\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\n * - WebGL port by @supereggbert\n * http://www.glge.org/demos/fxaa/\n */\n\nvar FXAAShader = {\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'resolution': { value: new Vector2( 1 / 1024, 1 / 512 ) }\n\n\t},\n\n\tvertexShader: [\n\n\t\t'varying vec2 vUv;',\n\n\t\t'void main() {',\n\n\t\t'\tvUv = uv;',\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t'}'\n\n\t].join( '\\n' ),\n\n\tfragmentShader: [\n\t\t'precision highp float;',\n\t\t'',\n\t\t'uniform sampler2D tDiffuse;',\n\t\t'',\n\t\t'uniform vec2 resolution;',\n\t\t'',\n\t\t'varying vec2 vUv;',\n\t\t'',\n\t\t'// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)',\n\t\t'',\n\t\t'//----------------------------------------------------------------------------------',\n\t\t'// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag',\n\t\t'// SDK Version: v3.00',\n\t\t'// Email:       gameworks@nvidia.com',\n\t\t'// Site:        http://developer.nvidia.com/',\n\t\t'//',\n\t\t'// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.',\n\t\t'//',\n\t\t'// Redistribution and use in source and binary forms, with or without',\n\t\t'// modification, are permitted provided that the following conditions',\n\t\t'// are met:',\n\t\t'//  * Redistributions of source code must retain the above copyright',\n\t\t'//    notice, this list of conditions and the following disclaimer.',\n\t\t'//  * Redistributions in binary form must reproduce the above copyright',\n\t\t'//    notice, this list of conditions and the following disclaimer in the',\n\t\t'//    documentation and/or other materials provided with the distribution.',\n\t\t'//  * Neither the name of NVIDIA CORPORATION nor the names of its',\n\t\t'//    contributors may be used to endorse or promote products derived',\n\t\t'//    from this software without specific prior written permission.',\n\t\t'//',\n\t\t'// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS\\'\\' AND ANY',\n\t\t'// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE',\n\t\t'// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR',\n\t\t'// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR',\n\t\t'// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,',\n\t\t'// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,',\n\t\t'// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR',\n\t\t'// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY',\n\t\t'// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT',\n\t\t'// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE',\n\t\t'// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.',\n\t\t'//',\n\t\t'//----------------------------------------------------------------------------------',\n\t\t'',\n\t\t'#define FXAA_PC 1',\n\t\t'#define FXAA_GLSL_100 1',\n\t\t'#define FXAA_QUALITY_PRESET 12',\n\t\t'',\n\t\t'#define FXAA_GREEN_AS_LUMA 1',\n\t\t'',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_PC_CONSOLE',\n\t\t'    //',\n\t\t'    // The console algorithm for PC is included',\n\t\t'    // for developers targeting really low spec machines.',\n\t\t'    // Likely better to just run FXAA_PC, and use a really low preset.',\n\t\t'    //',\n\t\t'    #define FXAA_PC_CONSOLE 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_GLSL_120',\n\t\t'    #define FXAA_GLSL_120 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_GLSL_130',\n\t\t'    #define FXAA_GLSL_130 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_HLSL_3',\n\t\t'    #define FXAA_HLSL_3 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_HLSL_4',\n\t\t'    #define FXAA_HLSL_4 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_HLSL_5',\n\t\t'    #define FXAA_HLSL_5 0',\n\t\t'#endif',\n\t\t'/*==========================================================================*/',\n\t\t'#ifndef FXAA_GREEN_AS_LUMA',\n\t\t'    //',\n\t\t'    // For those using non-linear color,',\n\t\t'    // and either not able to get luma in alpha, or not wanting to,',\n\t\t'    // this enables FXAA to run using green as a proxy for luma.',\n\t\t'    // So with this enabled, no need to pack luma in alpha.',\n\t\t'    //',\n\t\t'    // This will turn off AA on anything which lacks some amount of green.',\n\t\t'    // Pure red and blue or combination of only R and B, will get no AA.',\n\t\t'    //',\n\t\t'    // Might want to lower the settings for both,',\n\t\t'    //    fxaaConsoleEdgeThresholdMin',\n\t\t'    //    fxaaQualityEdgeThresholdMin',\n\t\t'    // In order to insure AA does not get turned off on colors',\n\t\t'    // which contain a minor amount of green.',\n\t\t'    //',\n\t\t'    // 1 = On.',\n\t\t'    // 0 = Off.',\n\t\t'    //',\n\t\t'    #define FXAA_GREEN_AS_LUMA 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_EARLY_EXIT',\n\t\t'    //',\n\t\t'    // Controls algorithm\\'s early exit path.',\n\t\t'    // On PS3 turning this ON adds 2 cycles to the shader.',\n\t\t'    // On 360 turning this OFF adds 10ths of a millisecond to the shader.',\n\t\t'    // Turning this off on console will result in a more blurry image.',\n\t\t'    // So this defaults to on.',\n\t\t'    //',\n\t\t'    // 1 = On.',\n\t\t'    // 0 = Off.',\n\t\t'    //',\n\t\t'    #define FXAA_EARLY_EXIT 1',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_DISCARD',\n\t\t'    //',\n\t\t'    // Only valid for PC OpenGL currently.',\n\t\t'    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.',\n\t\t'    //',\n\t\t'    // 1 = Use discard on pixels which don\\'t need AA.',\n\t\t'    //     For APIs which enable concurrent TEX+ROP from same surface.',\n\t\t'    // 0 = Return unchanged color on pixels which don\\'t need AA.',\n\t\t'    //',\n\t\t'    #define FXAA_DISCARD 0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_FAST_PIXEL_OFFSET',\n\t\t'    //',\n\t\t'    // Used for GLSL 120 only.',\n\t\t'    //',\n\t\t'    // 1 = GL API supports fast pixel offsets',\n\t\t'    // 0 = do not use fast pixel offsets',\n\t\t'    //',\n\t\t'    #ifdef GL_EXT_gpu_shader4',\n\t\t'        #define FXAA_FAST_PIXEL_OFFSET 1',\n\t\t'    #endif',\n\t\t'    #ifdef GL_NV_gpu_shader5',\n\t\t'        #define FXAA_FAST_PIXEL_OFFSET 1',\n\t\t'    #endif',\n\t\t'    #ifdef GL_ARB_gpu_shader5',\n\t\t'        #define FXAA_FAST_PIXEL_OFFSET 1',\n\t\t'    #endif',\n\t\t'    #ifndef FXAA_FAST_PIXEL_OFFSET',\n\t\t'        #define FXAA_FAST_PIXEL_OFFSET 0',\n\t\t'    #endif',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#ifndef FXAA_GATHER4_ALPHA',\n\t\t'    //',\n\t\t'    // 1 = API supports gather4 on alpha channel.',\n\t\t'    // 0 = API does not support gather4 on alpha channel.',\n\t\t'    //',\n\t\t'    #if (FXAA_HLSL_5 == 1)',\n\t\t'        #define FXAA_GATHER4_ALPHA 1',\n\t\t'    #endif',\n\t\t'    #ifdef GL_ARB_gpu_shader5',\n\t\t'        #define FXAA_GATHER4_ALPHA 1',\n\t\t'    #endif',\n\t\t'    #ifdef GL_NV_gpu_shader5',\n\t\t'        #define FXAA_GATHER4_ALPHA 1',\n\t\t'    #endif',\n\t\t'    #ifndef FXAA_GATHER4_ALPHA',\n\t\t'        #define FXAA_GATHER4_ALPHA 0',\n\t\t'    #endif',\n\t\t'#endif',\n\t\t'',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'                        FXAA QUALITY - TUNING KNOBS',\n\t\t'------------------------------------------------------------------------------',\n\t\t'NOTE the other tuning knobs are now in the shader function inputs!',\n\t\t'============================================================================*/',\n\t\t'#ifndef FXAA_QUALITY_PRESET',\n\t\t'    //',\n\t\t'    // Choose the quality preset.',\n\t\t'    // This needs to be compiled into the shader as it effects code.',\n\t\t'    // Best option to include multiple presets is to',\n\t\t'    // in each shader define the preset, then include this file.',\n\t\t'    //',\n\t\t'    // OPTIONS',\n\t\t'    // -----------------------------------------------------------------------',\n\t\t'    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)',\n\t\t'    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)',\n\t\t'    // 39       - no dither, very expensive',\n\t\t'    //',\n\t\t'    // NOTES',\n\t\t'    // -----------------------------------------------------------------------',\n\t\t'    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)',\n\t\t'    // 13 = about same speed as FXAA 3.9 and better than 12',\n\t\t'    // 23 = closest to FXAA 3.9 visually and performance wise',\n\t\t'    //  _ = the lowest digit is directly related to performance',\n\t\t'    // _  = the highest digit is directly related to style',\n\t\t'    //',\n\t\t'    #define FXAA_QUALITY_PRESET 12',\n\t\t'#endif',\n\t\t'',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'',\n\t\t'                           FXAA QUALITY - PRESETS',\n\t\t'',\n\t\t'============================================================================*/',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'                     FXAA QUALITY - MEDIUM DITHER PRESETS',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 10)',\n\t\t'    #define FXAA_QUALITY_PS 3',\n\t\t'    #define FXAA_QUALITY_P0 1.5',\n\t\t'    #define FXAA_QUALITY_P1 3.0',\n\t\t'    #define FXAA_QUALITY_P2 12.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 11)',\n\t\t'    #define FXAA_QUALITY_PS 4',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 3.0',\n\t\t'    #define FXAA_QUALITY_P3 12.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 12)',\n\t\t'    #define FXAA_QUALITY_PS 5',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 4.0',\n\t\t'    #define FXAA_QUALITY_P4 12.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 13)',\n\t\t'    #define FXAA_QUALITY_PS 6',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 4.0',\n\t\t'    #define FXAA_QUALITY_P5 12.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 14)',\n\t\t'    #define FXAA_QUALITY_PS 7',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 4.0',\n\t\t'    #define FXAA_QUALITY_P6 12.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 15)',\n\t\t'    #define FXAA_QUALITY_PS 8',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 4.0',\n\t\t'    #define FXAA_QUALITY_P7 12.0',\n\t\t'#endif',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'                     FXAA QUALITY - LOW DITHER PRESETS',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 20)',\n\t\t'    #define FXAA_QUALITY_PS 3',\n\t\t'    #define FXAA_QUALITY_P0 1.5',\n\t\t'    #define FXAA_QUALITY_P1 2.0',\n\t\t'    #define FXAA_QUALITY_P2 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 21)',\n\t\t'    #define FXAA_QUALITY_PS 4',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 22)',\n\t\t'    #define FXAA_QUALITY_PS 5',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 23)',\n\t\t'    #define FXAA_QUALITY_PS 6',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 24)',\n\t\t'    #define FXAA_QUALITY_PS 7',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 3.0',\n\t\t'    #define FXAA_QUALITY_P6 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 25)',\n\t\t'    #define FXAA_QUALITY_PS 8',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 4.0',\n\t\t'    #define FXAA_QUALITY_P7 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 26)',\n\t\t'    #define FXAA_QUALITY_PS 9',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 2.0',\n\t\t'    #define FXAA_QUALITY_P7 4.0',\n\t\t'    #define FXAA_QUALITY_P8 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 27)',\n\t\t'    #define FXAA_QUALITY_PS 10',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 2.0',\n\t\t'    #define FXAA_QUALITY_P7 2.0',\n\t\t'    #define FXAA_QUALITY_P8 4.0',\n\t\t'    #define FXAA_QUALITY_P9 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 28)',\n\t\t'    #define FXAA_QUALITY_PS 11',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 2.0',\n\t\t'    #define FXAA_QUALITY_P7 2.0',\n\t\t'    #define FXAA_QUALITY_P8 2.0',\n\t\t'    #define FXAA_QUALITY_P9 4.0',\n\t\t'    #define FXAA_QUALITY_P10 8.0',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 29)',\n\t\t'    #define FXAA_QUALITY_PS 12',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.5',\n\t\t'    #define FXAA_QUALITY_P2 2.0',\n\t\t'    #define FXAA_QUALITY_P3 2.0',\n\t\t'    #define FXAA_QUALITY_P4 2.0',\n\t\t'    #define FXAA_QUALITY_P5 2.0',\n\t\t'    #define FXAA_QUALITY_P6 2.0',\n\t\t'    #define FXAA_QUALITY_P7 2.0',\n\t\t'    #define FXAA_QUALITY_P8 2.0',\n\t\t'    #define FXAA_QUALITY_P9 2.0',\n\t\t'    #define FXAA_QUALITY_P10 4.0',\n\t\t'    #define FXAA_QUALITY_P11 8.0',\n\t\t'#endif',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'                     FXAA QUALITY - EXTREME QUALITY',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_QUALITY_PRESET == 39)',\n\t\t'    #define FXAA_QUALITY_PS 12',\n\t\t'    #define FXAA_QUALITY_P0 1.0',\n\t\t'    #define FXAA_QUALITY_P1 1.0',\n\t\t'    #define FXAA_QUALITY_P2 1.0',\n\t\t'    #define FXAA_QUALITY_P3 1.0',\n\t\t'    #define FXAA_QUALITY_P4 1.0',\n\t\t'    #define FXAA_QUALITY_P5 1.5',\n\t\t'    #define FXAA_QUALITY_P6 2.0',\n\t\t'    #define FXAA_QUALITY_P7 2.0',\n\t\t'    #define FXAA_QUALITY_P8 2.0',\n\t\t'    #define FXAA_QUALITY_P9 2.0',\n\t\t'    #define FXAA_QUALITY_P10 4.0',\n\t\t'    #define FXAA_QUALITY_P11 8.0',\n\t\t'#endif',\n\t\t'',\n\t\t'',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'',\n\t\t'                                API PORTING',\n\t\t'',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)',\n\t\t'    #define FxaaBool bool',\n\t\t'    #define FxaaDiscard discard',\n\t\t'    #define FxaaFloat float',\n\t\t'    #define FxaaFloat2 vec2',\n\t\t'    #define FxaaFloat3 vec3',\n\t\t'    #define FxaaFloat4 vec4',\n\t\t'    #define FxaaHalf float',\n\t\t'    #define FxaaHalf2 vec2',\n\t\t'    #define FxaaHalf3 vec3',\n\t\t'    #define FxaaHalf4 vec4',\n\t\t'    #define FxaaInt2 ivec2',\n\t\t'    #define FxaaSat(x) clamp(x, 0.0, 1.0)',\n\t\t'    #define FxaaTex sampler2D',\n\t\t'#else',\n\t\t'    #define FxaaBool bool',\n\t\t'    #define FxaaDiscard clip(-1)',\n\t\t'    #define FxaaFloat float',\n\t\t'    #define FxaaFloat2 float2',\n\t\t'    #define FxaaFloat3 float3',\n\t\t'    #define FxaaFloat4 float4',\n\t\t'    #define FxaaHalf half',\n\t\t'    #define FxaaHalf2 half2',\n\t\t'    #define FxaaHalf3 half3',\n\t\t'    #define FxaaHalf4 half4',\n\t\t'    #define FxaaSat(x) saturate(x)',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_GLSL_100 == 1)',\n\t\t'  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)',\n\t\t'  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_GLSL_120 == 1)',\n\t\t'    // Requires,',\n\t\t'    //  #version 120',\n\t\t'    // And at least,',\n\t\t'    //  #extension GL_EXT_gpu_shader4 : enable',\n\t\t'    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)',\n\t\t'    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)',\n\t\t'    #if (FXAA_FAST_PIXEL_OFFSET == 1)',\n\t\t'        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)',\n\t\t'    #else',\n\t\t'        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)',\n\t\t'    #endif',\n\t\t'    #if (FXAA_GATHER4_ALPHA == 1)',\n\t\t'        // use #extension GL_ARB_gpu_shader5 : enable',\n\t\t'        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)',\n\t\t'        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)',\n\t\t'        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)',\n\t\t'        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)',\n\t\t'    #endif',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_GLSL_130 == 1)',\n\t\t'    // Requires \"#version 130\" or better',\n\t\t'    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)',\n\t\t'    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)',\n\t\t'    #if (FXAA_GATHER4_ALPHA == 1)',\n\t\t'        // use #extension GL_ARB_gpu_shader5 : enable',\n\t\t'        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)',\n\t\t'        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)',\n\t\t'        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)',\n\t\t'        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)',\n\t\t'    #endif',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_HLSL_3 == 1)',\n\t\t'    #define FxaaInt2 float2',\n\t\t'    #define FxaaTex sampler2D',\n\t\t'    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))',\n\t\t'    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_HLSL_4 == 1)',\n\t\t'    #define FxaaInt2 int2',\n\t\t'    struct FxaaTex { SamplerState smpl; Texture2D tex; };',\n\t\t'    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)',\n\t\t'    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)',\n\t\t'#endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'#if (FXAA_HLSL_5 == 1)',\n\t\t'    #define FxaaInt2 int2',\n\t\t'    struct FxaaTex { SamplerState smpl; Texture2D tex; };',\n\t\t'    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)',\n\t\t'    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)',\n\t\t'    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)',\n\t\t'    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)',\n\t\t'    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)',\n\t\t'    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)',\n\t\t'#endif',\n\t\t'',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'                   GREEN AS LUMA OPTION SUPPORT FUNCTION',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_GREEN_AS_LUMA == 0)',\n\t\t'    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }',\n\t\t'#else',\n\t\t'    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }',\n\t\t'#endif',\n\t\t'',\n\t\t'',\n\t\t'',\n\t\t'',\n\t\t'/*============================================================================',\n\t\t'',\n\t\t'                             FXAA3 QUALITY - PC',\n\t\t'',\n\t\t'============================================================================*/',\n\t\t'#if (FXAA_PC == 1)',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'FxaaFloat4 FxaaPixelShader(',\n\t\t'    //',\n\t\t'    // Use noperspective interpolation here (turn off perspective interpolation).',\n\t\t'    // {xy} = center of pixel',\n\t\t'    FxaaFloat2 pos,',\n\t\t'    //',\n\t\t'    // Used only for FXAA Console, and not used on the 360 version.',\n\t\t'    // Use noperspective interpolation here (turn off perspective interpolation).',\n\t\t'    // {xy_} = upper left of pixel',\n\t\t'    // {_zw} = lower right of pixel',\n\t\t'    FxaaFloat4 fxaaConsolePosPos,',\n\t\t'    //',\n\t\t'    // Input color texture.',\n\t\t'    // {rgb_} = color in linear or perceptual color space',\n\t\t'    // if (FXAA_GREEN_AS_LUMA == 0)',\n\t\t'    //     {__a} = luma in perceptual color space (not linear)',\n\t\t'    FxaaTex tex,',\n\t\t'    //',\n\t\t'    // Only used on the optimized 360 version of FXAA Console.',\n\t\t'    // For everything but 360, just use the same input here as for \"tex\".',\n\t\t'    // For 360, same texture, just alias with a 2nd sampler.',\n\t\t'    // This sampler needs to have an exponent bias of -1.',\n\t\t'    FxaaTex fxaaConsole360TexExpBiasNegOne,',\n\t\t'    //',\n\t\t'    // Only used on the optimized 360 version of FXAA Console.',\n\t\t'    // For everything but 360, just use the same input here as for \"tex\".',\n\t\t'    // For 360, same texture, just alias with a 3nd sampler.',\n\t\t'    // This sampler needs to have an exponent bias of -2.',\n\t\t'    FxaaTex fxaaConsole360TexExpBiasNegTwo,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Quality.',\n\t\t'    // This must be from a constant/uniform.',\n\t\t'    // {x_} = 1.0/screenWidthInPixels',\n\t\t'    // {_y} = 1.0/screenHeightInPixels',\n\t\t'    FxaaFloat2 fxaaQualityRcpFrame,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // This must be from a constant/uniform.',\n\t\t'    // This effects sub-pixel AA quality and inversely sharpness.',\n\t\t'    //   Where N ranges between,',\n\t\t'    //     N = 0.50 (default)',\n\t\t'    //     N = 0.33 (sharper)',\n\t\t'    // {x__} = -N/screenWidthInPixels',\n\t\t'    // {_y_} = -N/screenHeightInPixels',\n\t\t'    // {_z_} =  N/screenWidthInPixels',\n\t\t'    // {__w} =  N/screenHeightInPixels',\n\t\t'    FxaaFloat4 fxaaConsoleRcpFrameOpt,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // Not used on 360, but used on PS3 and PC.',\n\t\t'    // This must be from a constant/uniform.',\n\t\t'    // {x__} = -2.0/screenWidthInPixels',\n\t\t'    // {_y_} = -2.0/screenHeightInPixels',\n\t\t'    // {_z_} =  2.0/screenWidthInPixels',\n\t\t'    // {__w} =  2.0/screenHeightInPixels',\n\t\t'    FxaaFloat4 fxaaConsoleRcpFrameOpt2,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.',\n\t\t'    // This must be from a constant/uniform.',\n\t\t'    // {x__} =  8.0/screenWidthInPixels',\n\t\t'    // {_y_} =  8.0/screenHeightInPixels',\n\t\t'    // {_z_} = -4.0/screenWidthInPixels',\n\t\t'    // {__w} = -4.0/screenHeightInPixels',\n\t\t'    FxaaFloat4 fxaaConsole360RcpFrameOpt2,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Quality.',\n\t\t'    // This used to be the FXAA_QUALITY_SUBPIX define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // Choose the amount of sub-pixel aliasing removal.',\n\t\t'    // This can effect sharpness.',\n\t\t'    //   1.00 - upper limit (softer)',\n\t\t'    //   0.75 - default amount of filtering',\n\t\t'    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)',\n\t\t'    //   0.25 - almost off',\n\t\t'    //   0.00 - completely off',\n\t\t'    FxaaFloat fxaaQualitySubpix,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Quality.',\n\t\t'    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // The minimum amount of local contrast required to apply algorithm.',\n\t\t'    //   0.333 - too little (faster)',\n\t\t'    //   0.250 - low quality',\n\t\t'    //   0.166 - default',\n\t\t'    //   0.125 - high quality',\n\t\t'    //   0.063 - overkill (slower)',\n\t\t'    FxaaFloat fxaaQualityEdgeThreshold,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Quality.',\n\t\t'    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // Trims the algorithm from processing darks.',\n\t\t'    //   0.0833 - upper limit (default, the start of visible unfiltered edges)',\n\t\t'    //   0.0625 - high quality (faster)',\n\t\t'    //   0.0312 - visible limit (slower)',\n\t\t'    // Special notes when using FXAA_GREEN_AS_LUMA,',\n\t\t'    //   Likely want to set this to zero.',\n\t\t'    //   As colors that are mostly not-green',\n\t\t'    //   will appear very dark in the green channel!',\n\t\t'    //   Tune by looking at mostly non-green content,',\n\t\t'    //   then start at zero and increase until aliasing is a problem.',\n\t\t'    FxaaFloat fxaaQualityEdgeThresholdMin,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // This does not effect PS3, as this needs to be compiled in.',\n\t\t'    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.',\n\t\t'    //   Due to the PS3 being ALU bound,',\n\t\t'    //   there are only three safe values here: 2 and 4 and 8.',\n\t\t'    //   These options use the shaders ability to a free *|/ by 2|4|8.',\n\t\t'    // For all other platforms can be a non-power of two.',\n\t\t'    //   8.0 is sharper (default!!!)',\n\t\t'    //   4.0 is softer',\n\t\t'    //   2.0 is really soft (good only for vector graphics inputs)',\n\t\t'    FxaaFloat fxaaConsoleEdgeSharpness,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // This does not effect PS3, as this needs to be compiled in.',\n\t\t'    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.',\n\t\t'    //   Due to the PS3 being ALU bound,',\n\t\t'    //   there are only two safe values here: 1/4 and 1/8.',\n\t\t'    //   These options use the shaders ability to a free *|/ by 2|4|8.',\n\t\t'    // The console setting has a different mapping than the quality setting.',\n\t\t'    // Other platforms can use other values.',\n\t\t'    //   0.125 leaves less aliasing, but is softer (default!!!)',\n\t\t'    //   0.25 leaves more aliasing, and is sharper',\n\t\t'    FxaaFloat fxaaConsoleEdgeThreshold,',\n\t\t'    //',\n\t\t'    // Only used on FXAA Console.',\n\t\t'    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.',\n\t\t'    // It is here now to allow easier tuning.',\n\t\t'    // Trims the algorithm from processing darks.',\n\t\t'    // The console setting has a different mapping than the quality setting.',\n\t\t'    // This only applies when FXAA_EARLY_EXIT is 1.',\n\t\t'    // This does not apply to PS3,',\n\t\t'    // PS3 was simplified to avoid more shader instructions.',\n\t\t'    //   0.06 - faster but more aliasing in darks',\n\t\t'    //   0.05 - default',\n\t\t'    //   0.04 - slower and less aliasing in darks',\n\t\t'    // Special notes when using FXAA_GREEN_AS_LUMA,',\n\t\t'    //   Likely want to set this to zero.',\n\t\t'    //   As colors that are mostly not-green',\n\t\t'    //   will appear very dark in the green channel!',\n\t\t'    //   Tune by looking at mostly non-green content,',\n\t\t'    //   then start at zero and increase until aliasing is a problem.',\n\t\t'    FxaaFloat fxaaConsoleEdgeThresholdMin,',\n\t\t'    //',\n\t\t'    // Extra constants for 360 FXAA Console only.',\n\t\t'    // Use zeros or anything else for other platforms.',\n\t\t'    // These must be in physical constant registers and NOT immediates.',\n\t\t'    // Immediates will result in compiler un-optimizing.',\n\t\t'    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)',\n\t\t'    FxaaFloat4 fxaaConsole360ConstDir',\n\t\t') {',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat2 posM;',\n\t\t'    posM.x = pos.x;',\n\t\t'    posM.y = pos.y;',\n\t\t'    #if (FXAA_GATHER4_ALPHA == 1)',\n\t\t'        #if (FXAA_DISCARD == 0)',\n\t\t'            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);',\n\t\t'            #if (FXAA_GREEN_AS_LUMA == 0)',\n\t\t'                #define lumaM rgbyM.w',\n\t\t'            #else',\n\t\t'                #define lumaM rgbyM.y',\n\t\t'            #endif',\n\t\t'        #endif',\n\t\t'        #if (FXAA_GREEN_AS_LUMA == 0)',\n\t\t'            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);',\n\t\t'            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));',\n\t\t'        #else',\n\t\t'            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);',\n\t\t'            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));',\n\t\t'        #endif',\n\t\t'        #if (FXAA_DISCARD == 1)',\n\t\t'            #define lumaM luma4A.w',\n\t\t'        #endif',\n\t\t'        #define lumaE luma4A.z',\n\t\t'        #define lumaS luma4A.x',\n\t\t'        #define lumaSE luma4A.y',\n\t\t'        #define lumaNW luma4B.w',\n\t\t'        #define lumaN luma4B.z',\n\t\t'        #define lumaW luma4B.x',\n\t\t'    #else',\n\t\t'        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);',\n\t\t'        #if (FXAA_GREEN_AS_LUMA == 0)',\n\t\t'            #define lumaM rgbyM.w',\n\t\t'        #else',\n\t\t'            #define lumaM rgbyM.y',\n\t\t'        #endif',\n\t\t'        #if (FXAA_GLSL_100 == 1)',\n\t\t'          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));',\n\t\t'        #else',\n\t\t'          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));',\n\t\t'        #endif',\n\t\t'    #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat maxSM = max(lumaS, lumaM);',\n\t\t'    FxaaFloat minSM = min(lumaS, lumaM);',\n\t\t'    FxaaFloat maxESM = max(lumaE, maxSM);',\n\t\t'    FxaaFloat minESM = min(lumaE, minSM);',\n\t\t'    FxaaFloat maxWN = max(lumaN, lumaW);',\n\t\t'    FxaaFloat minWN = min(lumaN, lumaW);',\n\t\t'    FxaaFloat rangeMax = max(maxWN, maxESM);',\n\t\t'    FxaaFloat rangeMin = min(minWN, minESM);',\n\t\t'    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;',\n\t\t'    FxaaFloat range = rangeMax - rangeMin;',\n\t\t'    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);',\n\t\t'    FxaaBool earlyExit = range < rangeMaxClamped;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    if(earlyExit)',\n\t\t'        #if (FXAA_DISCARD == 1)',\n\t\t'            FxaaDiscard;',\n\t\t'        #else',\n\t\t'            return rgbyM;',\n\t\t'        #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    #if (FXAA_GATHER4_ALPHA == 0)',\n\t\t'        #if (FXAA_GLSL_100 == 1)',\n\t\t'          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));',\n\t\t'        #else',\n\t\t'          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));',\n\t\t'          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));',\n\t\t'        #endif',\n\t\t'    #else',\n\t\t'        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));',\n\t\t'        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));',\n\t\t'    #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat lumaNS = lumaN + lumaS;',\n\t\t'    FxaaFloat lumaWE = lumaW + lumaE;',\n\t\t'    FxaaFloat subpixRcpRange = 1.0/range;',\n\t\t'    FxaaFloat subpixNSWE = lumaNS + lumaWE;',\n\t\t'    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;',\n\t\t'    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat lumaNESE = lumaNE + lumaSE;',\n\t\t'    FxaaFloat lumaNWNE = lumaNW + lumaNE;',\n\t\t'    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;',\n\t\t'    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat lumaNWSW = lumaNW + lumaSW;',\n\t\t'    FxaaFloat lumaSWSE = lumaSW + lumaSE;',\n\t\t'    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);',\n\t\t'    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);',\n\t\t'    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;',\n\t\t'    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;',\n\t\t'    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;',\n\t\t'    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;',\n\t\t'    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;',\n\t\t'    FxaaBool horzSpan = edgeHorz >= edgeVert;',\n\t\t'    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    if(!horzSpan) lumaN = lumaW;',\n\t\t'    if(!horzSpan) lumaS = lumaE;',\n\t\t'    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;',\n\t\t'    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat gradientN = lumaN - lumaM;',\n\t\t'    FxaaFloat gradientS = lumaS - lumaM;',\n\t\t'    FxaaFloat lumaNN = lumaN + lumaM;',\n\t\t'    FxaaFloat lumaSS = lumaS + lumaM;',\n\t\t'    FxaaBool pairN = abs(gradientN) >= abs(gradientS);',\n\t\t'    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));',\n\t\t'    if(pairN) lengthSign = -lengthSign;',\n\t\t'    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat2 posB;',\n\t\t'    posB.x = posM.x;',\n\t\t'    posB.y = posM.y;',\n\t\t'    FxaaFloat2 offNP;',\n\t\t'    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;',\n\t\t'    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;',\n\t\t'    if(!horzSpan) posB.x += lengthSign * 0.5;',\n\t\t'    if( horzSpan) posB.y += lengthSign * 0.5;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat2 posN;',\n\t\t'    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;',\n\t\t'    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;',\n\t\t'    FxaaFloat2 posP;',\n\t\t'    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;',\n\t\t'    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;',\n\t\t'    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;',\n\t\t'    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));',\n\t\t'    FxaaFloat subpixE = subpixC * subpixC;',\n\t\t'    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    if(!pairN) lumaNN = lumaSS;',\n\t\t'    FxaaFloat gradientScaled = gradient * 1.0/4.0;',\n\t\t'    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;',\n\t\t'    FxaaFloat subpixF = subpixD * subpixE;',\n\t\t'    FxaaBool lumaMLTZero = lumaMM < 0.0;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    lumaEndN -= lumaNN * 0.5;',\n\t\t'    lumaEndP -= lumaNN * 0.5;',\n\t\t'    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;',\n\t\t'    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;',\n\t\t'    FxaaBool doneNP = (!doneN) || (!doneP);',\n\t\t'    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;',\n\t\t'    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    if(doneNP) {',\n\t\t'        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'        doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'        doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;',\n\t\t'        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;',\n\t\t'        doneNP = (!doneN) || (!doneP);',\n\t\t'        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;',\n\t\t'        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'        #if (FXAA_QUALITY_PS > 3)',\n\t\t'        if(doneNP) {',\n\t\t'            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'            doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'            doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;',\n\t\t'            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;',\n\t\t'            doneNP = (!doneN) || (!doneP);',\n\t\t'            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;',\n\t\t'            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'            #if (FXAA_QUALITY_PS > 4)',\n\t\t'            if(doneNP) {',\n\t\t'                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;',\n\t\t'                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;',\n\t\t'                doneNP = (!doneN) || (!doneP);',\n\t\t'                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;',\n\t\t'                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                #if (FXAA_QUALITY_PS > 5)',\n\t\t'                if(doneNP) {',\n\t\t'                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                    doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                    doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;',\n\t\t'                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;',\n\t\t'                    doneNP = (!doneN) || (!doneP);',\n\t\t'                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;',\n\t\t'                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                    #if (FXAA_QUALITY_PS > 6)',\n\t\t'                    if(doneNP) {',\n\t\t'                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                        doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                        doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;',\n\t\t'                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;',\n\t\t'                        doneNP = (!doneN) || (!doneP);',\n\t\t'                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;',\n\t\t'                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                        #if (FXAA_QUALITY_PS > 7)',\n\t\t'                        if(doneNP) {',\n\t\t'                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                            doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                            doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;',\n\t\t'                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;',\n\t\t'                            doneNP = (!doneN) || (!doneP);',\n\t\t'                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;',\n\t\t'                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    #if (FXAA_QUALITY_PS > 8)',\n\t\t'    if(doneNP) {',\n\t\t'        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'        doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'        doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;',\n\t\t'        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;',\n\t\t'        doneNP = (!doneN) || (!doneP);',\n\t\t'        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;',\n\t\t'        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'        #if (FXAA_QUALITY_PS > 9)',\n\t\t'        if(doneNP) {',\n\t\t'            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'            doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'            doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;',\n\t\t'            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;',\n\t\t'            doneNP = (!doneN) || (!doneP);',\n\t\t'            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;',\n\t\t'            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'            #if (FXAA_QUALITY_PS > 10)',\n\t\t'            if(doneNP) {',\n\t\t'                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;',\n\t\t'                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;',\n\t\t'                doneNP = (!doneN) || (!doneP);',\n\t\t'                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;',\n\t\t'                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                #if (FXAA_QUALITY_PS > 11)',\n\t\t'                if(doneNP) {',\n\t\t'                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                    doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                    doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;',\n\t\t'                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;',\n\t\t'                    doneNP = (!doneN) || (!doneP);',\n\t\t'                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;',\n\t\t'                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                    #if (FXAA_QUALITY_PS > 12)',\n\t\t'                    if(doneNP) {',\n\t\t'                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));',\n\t\t'                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));',\n\t\t'                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;',\n\t\t'                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;',\n\t\t'                        doneN = abs(lumaEndN) >= gradientScaled;',\n\t\t'                        doneP = abs(lumaEndP) >= gradientScaled;',\n\t\t'                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;',\n\t\t'                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;',\n\t\t'                        doneNP = (!doneN) || (!doneP);',\n\t\t'                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;',\n\t\t'                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                    }',\n\t\t'                    #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                }',\n\t\t'                #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'            }',\n\t\t'            #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'        }',\n\t\t'        #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    }',\n\t\t'    #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                        }',\n\t\t'                        #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                    }',\n\t\t'                    #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'                }',\n\t\t'                #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'            }',\n\t\t'            #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'        }',\n\t\t'        #endif',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    }',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat dstN = posM.x - posN.x;',\n\t\t'    FxaaFloat dstP = posP.x - posM.x;',\n\t\t'    if(!horzSpan) dstN = posM.y - posN.y;',\n\t\t'    if(!horzSpan) dstP = posP.y - posM.y;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;',\n\t\t'    FxaaFloat spanLength = (dstP + dstN);',\n\t\t'    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;',\n\t\t'    FxaaFloat spanLengthRcp = 1.0/spanLength;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaBool directionN = dstN < dstP;',\n\t\t'    FxaaFloat dst = min(dstN, dstP);',\n\t\t'    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;',\n\t\t'    FxaaFloat subpixG = subpixF * subpixF;',\n\t\t'    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;',\n\t\t'    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;',\n\t\t'/*--------------------------------------------------------------------------*/',\n\t\t'    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;',\n\t\t'    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);',\n\t\t'    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;',\n\t\t'    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;',\n\t\t'    #if (FXAA_DISCARD == 1)',\n\t\t'        return FxaaTexTop(tex, posM);',\n\t\t'    #else',\n\t\t'        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);',\n\t\t'    #endif',\n\t\t'}',\n\t\t'/*==========================================================================*/',\n\t\t'#endif',\n\t\t'',\n\t\t'void main() {',\n\t\t'  gl_FragColor = FxaaPixelShader(',\n\t\t'    vUv,',\n\t\t'    vec4(0.0),',\n\t\t'    tDiffuse,',\n\t\t'    tDiffuse,',\n\t\t'    tDiffuse,',\n\t\t'    resolution,',\n\t\t'    vec4(0.0),',\n\t\t'    vec4(0.0),',\n\t\t'    vec4(0.0),',\n\t\t'    0.75,',\n\t\t'    0.166,',\n\t\t'    0.0833,',\n\t\t'    0.0,',\n\t\t'    0.0,',\n\t\t'    0.0,',\n\t\t'    vec4(0.0)',\n\t\t'  );',\n\t\t'',\n\t\t'  // TODO avoid querying texture twice for same texel',\n\t\t'  gl_FragColor.a = texture2D(tDiffuse, vUv).a;',\n\t\t'}'\n\t].join( '\\n' )\n\n};\n\nexport { FXAAShader };\n","import {ShaderPass} from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport {FXAAShader} from \"three/examples/jsm/shaders/FXAAShader\";\nimport {ShaderMaterial, WebGLRenderer, WebGLRenderTarget} from \"three\";\n\nexport class FXAAPass extends ShaderPass {\n    material: ShaderMaterial;\n\n    constructor() {\n        super(FXAAShader);\n    }\n\n    render(renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget, deltaTime: number, maskActive: boolean): void {\n        super.render(renderer, writeBuffer, readBuffer, deltaTime, maskActive);\n    }\n\n    setSize(width: number, height: number): void {\n        super.setSize(width, height);\n        this.material.uniforms.resolution.value.x = 1 / width;\n        this.material.uniforms.resolution.value.y = 1 / height;\n    }\n}\n","import {WVBackground} from \"./WVBackground\";\nimport {EdgesAndSsaoRenderPass} from \"./EdgesAndSsaoRenderPass\";\nimport {DepthPeelingRenderPass} from \"./DepthPeelingRenderPass\";\nimport {SelectionEffectPass} from \"./SelectionEffectPass\";\nimport {FXAAPass} from \"./FXAAPass\";\nimport {Api} from \"../Api\";\nimport {LinearFilter, RGBAFormat, WebGLRenderTarget} from \"three\";\nimport {Pass} from \"three/examples/jsm/postprocessing/Pass\";\nimport {RenderingManager} from \"./RenderingManager\";\n\nexport class PassComposer {\n    depthPeelingRenderPass: DepthPeelingRenderPass;\n    private selectionEffectPass: SelectionEffectPass;\n    private fxaaPass: FXAAPass;\n    private antialias: boolean;\n\n    private beforeSelectionPasses: Pass[] = [];\n    private afterSelectionPasses: Pass[] = [];\n    private beforeAntialiasingPasses: Pass[] = [];\n    private afterAntialiasingPasses: Pass[] = [];\n\n    renderTarget: WebGLRenderTarget;\n    mainPassRenderTarget: WebGLRenderTarget;\n\n    constructor(private api: Api, private renderingManager: RenderingManager) {\n        this.updateAntialias();\n        api.settingsProxy.addListener(\"antialias\", () => this.updateAntialias());\n        this.renderTarget = new WebGLRenderTarget(renderingManager.width, renderingManager.height, {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter,\n            format: RGBAFormat,\n            stencilBuffer: false\n        });\n\n        const background = new WVBackground(renderingManager, api.settingsProxy, api.camera);\n        const edgesAndSsaoPass = new EdgesAndSsaoRenderPass(api.settingsProxy, renderingManager, api.scene, api.camera);\n        this.depthPeelingRenderPass = new DepthPeelingRenderPass(renderingManager, api.settingsProxy, api.scene, api.camera, background, edgesAndSsaoPass);\n        this.selectionEffectPass = new SelectionEffectPass(api.camera, api.settingsProxy.settings.selectionColor);\n        this.api.selectionEffectPass = this.selectionEffectPass;\n        this.fxaaPass = new FXAAPass(); // Note: MSAA is force enabled in VR mode, enabling both FXAA and MSAA at the same time is a bad idea\n    }\n\n    private updateAntialias(): void {\n        this.antialias = this.api.settingsProxy.settings.antialias === undefined\n            ? devicePixelRatio <= 1 && !this.renderingManager.isMobile()\n            : this.api.settingsProxy.settings.antialias;\n    }\n\n    render(): void {\n        const renderer = this.renderingManager.renderer;\n        const rt = this.antialias ? this.renderTarget : null;\n\n        this.depthPeelingRenderPass.render(renderer, this.mainPassRenderTarget || rt);\n        this.renderPasses(this.beforeSelectionPasses, rt, !this.antialias);\n        this.selectionEffectPass.render(renderer, rt);\n        this.renderPasses(this.afterSelectionPasses, rt, !this.antialias);\n        this.renderPasses(this.beforeAntialiasingPasses, rt, !this.antialias);\n        if (this.antialias) this.fxaaPass.render(renderer, null, rt, undefined, undefined);\n        this.renderPasses(this.afterAntialiasingPasses, this.renderTarget, true);\n    }\n\n    private renderPasses(passes: Pass[], renderTarget: WebGLRenderTarget, renderToScreen: boolean): void {\n        for (const p of passes) {\n            p.renderToScreen = renderToScreen;\n            p.render(this.renderingManager.renderer, p.needsSwap ? renderTarget : null, p.needsSwap ? null : renderTarget, undefined, undefined);\n        }\n    }\n\n    setSize(width: number, height: number): void {\n        this.updateAntialias();\n        this.renderTarget.setSize(width, height);\n        if (this.mainPassRenderTarget) this.mainPassRenderTarget.setSize(width, height);\n        this.depthPeelingRenderPass.setSize(width, height);\n        this.selectionEffectPass.setSize(width, height);\n        this.fxaaPass.setSize(width, height);\n        this.beforeSelectionPasses.forEach(p => p.setSize(width, height));\n    }\n\n    addPassBeforeSelection(pass: Pass): void {\n        this.beforeSelectionPasses.push(pass);\n    }\n\n    addPassAfterSelection(pass: Pass): void {\n        this.afterSelectionPasses.push(pass);\n    }\n\n    addPassBeforeAntialiasing(pass: Pass): void {\n        this.beforeAntialiasingPasses.push(pass);\n    }\n\n    addPassAfterAntialiasing(pass: Pass): void {\n        this.afterAntialiasingPasses.push(pass);\n    }\n}\n","import {Box3, Material, Uniform, Vector2, WebGLRendererParameters} from \"three\";\nimport {Api} from \"../Api\";\nimport {WVCamera} from \"./WVCamera\";\nimport {VRManager} from \"./VRManager\";\nimport isMobile from \"ismobilejs\";\nimport {GeometryObject3D} from \"../Model\";\nimport {WebGLRenderer} from \"./WebGLRenderer\";\nimport {iterate} from \"../Helpers/common-utils\";\nimport {PassComposer} from \"./PassComposer\";\nimport {WebglViewerEventName} from \"../common\";\n\nexport interface GlobalMaterialUniforms {\n    viewSize: Uniform;\n    pixelRatio: Uniform;\n    globalOpacity: Uniform;\n    globalTransparent?: boolean;\n    depthPeelingEnabled: Uniform;\n    peelingDepthTexture: Uniform;\n    depthPrecisionFix: Uniform;\n}\n\nexport class RenderingManager {\n    enabled: boolean;\n    composer: PassComposer;\n    renderer: WebGLRenderer;\n    private renderRequested: boolean;\n    private beforeRenderListeners: Array<() => void> = [];\n    private afterRenderListeners: Array<() => void> = [];\n    private animationFrameListeners: Array<(timestamp: number) => void> = [];\n    vr: VRManager;\n    private _isMobile: boolean;\n    private driverRendererString: string;\n    private lastRenderTime: number;\n\n    uniforms: GlobalMaterialUniforms = {\n        viewSize: new Uniform(new Vector2(this.width, this.height)),\n        pixelRatio: new Uniform(devicePixelRatio),\n        globalOpacity: new Uniform(1),\n        depthPeelingEnabled: new Uniform(Number(false)),\n        peelingDepthTexture: new Uniform(null),\n        depthPrecisionFix: new Uniform(0)\n    };\n\n    get fullRender(): boolean {\n        // rendering fully on render request idle (progressive rendering)\n        return !this.renderRequested;\n    }\n\n    private readonly _camera: WVCamera;\n    private _boundingBox: Box3;\n\n    constructor(private _api: Api) {\n        this.renderRequested = true;\n        this._camera = _api.camera;\n        this.composer = this.initializeRenderer();\n\n        this._api.camera.subscribe(() => {\n            if (this._boundingBox && !this._boundingBox.isEmpty() && !this.vr.enabled)\n                this._camera.fitNearAndFarPlanes(this._boundingBox);\n            this.redraw();\n        });\n        this._api.models.worldBoundingBox.subscribe((aabb: Box3) => {\n            if (!aabb.isEmpty() && !this.vr.enabled) {\n                this._boundingBox = aabb;\n                this._camera.fitNearAndFarPlanes(this._boundingBox);\n                this.redraw();\n            }\n        });\n        this._api.settingsProxy.addListener(\"darkModeMaterials\", () => this.redraw());\n        this._api.settingsProxy.addListener(\"renderEdges\", () => this.redraw());\n        this._api.settingsProxy.addListener(\"vertexInterpolationMaterials\", () => this.redraw());\n    }\n\n    isMobile(): boolean {\n        if (this._isMobile === undefined) this._isMobile = isMobile(navigator).any;\n        return this._isMobile;\n    }\n\n    isWebgl2(): boolean {\n        return this.renderer.capabilities.isWebGL2;\n    }\n\n    isFragDepthAvailable(): boolean {\n        return this.isWebgl2() || !!this.renderer.extensions.get(\"EXT_frag_depth\");\n    }\n\n    isDepthTextureAvailable(): boolean {\n        return this.isWebgl2() || !!this.renderer.extensions.get(\"WEBGL_depth_texture\");\n    }\n\n    isHalfFloatTextureTypeAvailable(): boolean {\n        return this.isWebgl2() || !!this.renderer.extensions.get(\"OES_texture_half_float\");\n    }\n\n    get globalOpacity(): number {\n        return this.composer.depthPeelingRenderPass.globalOpacity;\n    }\n\n    set globalOpacity(value: number) {\n        this.composer.depthPeelingRenderPass.globalOpacity = value;\n        this.redraw();\n    }\n\n    redraw(): void {\n        this.renderRequested = true;\n    }\n\n    addBeforeRenderListener(listener: () => void): void {\n        this.beforeRenderListeners.push(listener);\n    }\n\n    addAfterRenderListener(listener: () => void): void {\n        this.afterRenderListeners.push(listener);\n    }\n\n    private removeListener(listeners: any[], listener: any): void {\n        const index = listeners.indexOf(listener);\n        if (index !== -1) listeners.splice(index, 1);\n    }\n\n    removeBeforeRenderListener(listener: () => void): void {\n        this.removeListener(this.beforeRenderListeners, listener);\n    }\n\n    removeAfterRenderListener(listener: () => void): void {\n        this.removeListener(this.afterRenderListeners, listener);\n    }\n\n    addAnimationFrameListener(listener: (timestamp: number) => void): void {\n        this.animationFrameListeners.push(listener);\n    }\n\n    removeAnimationFrameListener(listener: (timestamp: number) => void): void {\n        this.removeListener(this.animationFrameListeners, listener);\n    }\n\n    start(): void {\n        this.renderer.setAnimationLoop((t: number) => this.animationLoop(t));\n    }\n\n    private animationLoop(timestamp: number): void {\n        this.updateCanvasSize();\n\n        if (this.enabled) {\n            if (this.renderRequested) {\n                this.render();\n                this.lastRenderTime = timestamp;\n                this.renderRequested = false;\n            }\n            // full render on render request idle (progressive rendering)\n            else if (this.lastRenderTime && timestamp - this.lastRenderTime > 100) {\n                this.render();\n                this.lastRenderTime = undefined;\n            }\n        }\n        this.animationFrameListeners.forEach(l => l(timestamp));\n    }\n\n    private render(): void {\n        this.beforeRenderListeners.forEach(l => l());\n        this.composer.render();\n        this.afterRenderListeners.forEach(l => l());\n    }\n\n    async screenshot(): Promise<Blob> {\n        this.composer.render();\n        return await new Promise((resolve: BlobCallback) => {\n            this.renderer.domElement.toBlob(resolve);\n        });\n    }\n\n    private updateCanvasSize(): void {\n        if (this.vr.enabled) return;\n\n        const canvas = this.renderer.domElement;\n        if ((Math.abs(canvas.height - this.height) > 1 || Math.abs(canvas.width - this.width) > 1) && this.clientWidth > 10 && this.clientHeight > 10) {\n            this.renderer.setPixelRatio(devicePixelRatio);\n            this.uniforms.pixelRatio.value = devicePixelRatio;\n            this.uniforms.viewSize.value.x = this.width;\n            this.uniforms.viewSize.value.y = this.height;\n\n            this._camera.aspect = canvas.clientWidth / canvas.clientHeight;\n            this.composer.setSize(this.width, this.height);\n            this.renderer.setSize(this.clientWidth, this.clientHeight, false);\n            this._camera.updateProjectionMatrix();\n            this._camera.callListeners();\n        }\n    }\n\n    initializeRenderer(): PassComposer {\n        this.enabled = false;\n\n        const canvas = this._api.container.children[0] as HTMLCanvasElement;\n\n        const contextAttributes = {\n            stencil: false,\n            alpha: false,\n            powerPreference: \"high-performance\",\n            antialias: this._api.settingsProxy.settings.xrCompatible, // force MSAA for xr devices only, FXAA will be used for others\n            xrCompatible: this._api.settingsProxy.settings.xrCompatible\n        } as WebGLContextAttributes;\n        let context: WebGLRenderingContext;\n        if (this._api.settingsProxy.settings.useWebgl2)\n            context = canvas.getContext(\"webgl2\", contextAttributes) as WebGLRenderingContext;\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextAttributes) as WebGLRenderingContext;\n\n        const params = { canvas: canvas, context: context } as WebGLRendererParameters;\n        this.renderer = new WebGLRenderer(params);\n\n        const gl = this.renderer.getContext();\n        this.driverRendererString = gl.getParameter(gl.getExtension(\"WEBGL_debug_renderer_info\").UNMASKED_RENDERER_WEBGL);\n        // tslint:disable-next-line:no-console\n        console.log(`Rendering: ${gl.getParameter(gl.VERSION)}, ${gl.getParameter(gl.SHADING_LANGUAGE_VERSION)}, ${gl.getParameter(gl.VENDOR)}, ${this.driverRendererString}`);\n\n        this.vr = new VRManager(this._api);\n        this.updateCanvasSize();\n        this.enabled = true;\n\n        return new PassComposer(this._api, this);\n    }\n\n    traverseMaterials(callback: (o: GeometryObject3D, m: Material) => void): void {\n        this._api.scene.traverse(o => {\n            const obj = o as GeometryObject3D;\n            if (obj.material)\n                iterate(obj.material, m => callback(obj, m));\n        });\n    }\n\n    private get viewportScale(): number {\n        // @ts-ignore\n        return window.visualViewport ? window.visualViewport.scale : 1;\n    }\n\n    get width(): number {\n        return Math.trunc(this._api.container.clientWidth * devicePixelRatio * this.viewportScale);\n    }\n\n    get height(): number {\n        return Math.trunc(this._api.container.clientHeight * devicePixelRatio * this.viewportScale);\n    }\n\n    get clientWidth(): number {\n        return Math.trunc(this._api.container.clientWidth * this.viewportScale);\n    }\n\n    get clientHeight(): number {\n        return Math.trunc(this._api.container.clientHeight * this.viewportScale);\n    }\n}\n","import {PickEventDetail, SelectionEventDetail, Tool, WebglViewerEventName} from \"./common\";\n\nexport class EventDispatcher {\n    constructor(private _element: HTMLElement) {}\n\n    public error(message: string): void {\n        const log = {\n            detail: message,\n            bubbles: true,\n            composed: true\n        };\n        console.error(message);\n        this._element.dispatchEvent(new CustomEvent(WebglViewerEventName.Error, log));\n    }\n\n    public selected(detail: SelectionEventDetail): void {\n        const event = new CustomEvent<SelectionEventDetail>(WebglViewerEventName.Selection, {\n            detail: detail,\n            bubbles: true,\n            composed: true\n        });\n        this._element.dispatchEvent(event);\n    }\n\n    public picked(detail: PickEventDetail): void {\n        const event = new CustomEvent<PickEventDetail>(WebglViewerEventName.Pick, {\n            detail: detail,\n            bubbles: true,\n            composed: true\n        });\n        this._element.dispatchEvent(event);\n    }\n\n    public navigation(start: boolean): void {\n        const event = new CustomEvent(start ? WebglViewerEventName.NavigationStart : WebglViewerEventName.NavigationEnd, {\n            bubbles: true,\n            composed: true\n        });\n        this._element.dispatchEvent(event);\n    }\n\n    public dragStart(tool: Tool): void {\n        const event = new CustomEvent(WebglViewerEventName.DragStart, {\n            detail: tool,\n            bubbles: true,\n            composed: true,\n        });\n        this._element.dispatchEvent(event);\n    }\n\n    public dragEnd(tool: Tool): void {\n        const event = new CustomEvent(WebglViewerEventName.DragEnd, {\n            detail: tool,\n            bubbles: true,\n            composed: true\n        });\n        this._element.dispatchEvent(event);\n    }\n\n    public dispatch(event: CustomEvent): void {\n        this._element.dispatchEvent(event);\n    }\n\n    public subscribe(eventName: WebglViewerEventName, listener: (e: CustomEvent) => void): void {\n        this._element.addEventListener(eventName, listener as EventListener);\n    }\n}\n","import { StickyElement } from \"./CustomObjects/StickyElement\";\n\nimport { Api } from \"./Api\";\n\nexport class HtmlElementPositioner {\n    private readonly _htmlObjects: Set<StickyElement>;\n\n    constructor(private _api: Api) {\n        this._htmlObjects = new Set();\n        _api.renderingManager.addBeforeRenderListener(() => this.update());\n    }\n\n    addElement(object: StickyElement): void {\n        if (!this._htmlObjects.has(object)) {\n            this._api.container.appendChild(object);\n            this._htmlObjects.add(object);\n        }\n    }\n\n    removeElement(object: StickyElement): void {\n        if (this._htmlObjects.has(object)) {\n            this._api.container.removeChild(object);\n            this._htmlObjects.delete(object);\n        }\n    }\n\n    private update(): void {\n        const parentClientRect = this._api.container.getBoundingClientRect();\n        for (const htmlObject of this._htmlObjects)\n            htmlObject.updatePosition(parentClientRect);\n    }\n}\n","import { BehaviorSubject } from \"rxjs\";\nimport { Model, SelectableModel } from \"./Model\";\nimport { Box3, Scene, Object3D } from \"three\";\nimport { Selection } from \"./Selection\";\n\nexport class Models {\n    public worldBoundingBox: BehaviorSubject<Box3>;\n    private _models: Map<Model, Box3>;\n    private _modelContainer: Object3D;\n\n    constructor(scene: Scene, private selection: Selection) {\n        this.worldBoundingBox = new BehaviorSubject(new Box3());\n        this._models = new Map();\n        this._modelContainer = new Object3D();\n        scene.add(this._modelContainer);\n        this.setupSelection(selection);\n    }\n\n    private setupSelection(selection: Selection): void {\n        selection.subscribe(() => {\n            for (const [m] of this._models) {\n                const model = m as Model & SelectableModel;\n                if (!model.setSelection) continue;\n\n                const ids = selection.get(model.name);\n                if (!ids || ids.length === 0)\n                    model.clearSelection();\n                else\n                    model.setSelection(ids);\n            }\n        });\n    }\n\n    async add(model: Model, addToScene: boolean = true): Promise<void> {\n        if (this.get(model.name))\n            throw new Error(\"A model with the same id is already loaded. \" + model.name);\n\n        this._models.set(model, await model.getBoundingBox());\n        model.subscribeToBoundingBox((box) => {\n            this._models.set(model, box);\n            this.recalculateWorldBoundingBox()\n        });\n        if (addToScene)\n            this._modelContainer.add(model);\n    }\n\n    async remove(modelId: string): Promise<void> {\n        const model = this.get(modelId);\n        if (!model) throw new Error(`Model ${modelId} not found`);\n\n        this._models.delete(model);\n        this.recalculateWorldBoundingBox();\n        this._modelContainer.remove(model);\n        this.selection.delete(modelId);\n        await model.dispose();\n    }\n\n    get(modelId: string): Model {\n        return Array.from(this._models.keys()).find(m => m.name === modelId);\n    }\n\n    getIterable(): IterableIterator<Model> {\n        return this._models.keys();\n    }\n\n    getBoundingBoxesIterable(): IterableIterator<Box3> {\n        return this._models.values();\n    }\n\n    private recalculateWorldBoundingBox(): void {\n        this.worldBoundingBox.value.makeEmpty();\n        this._models.forEach(box => this.worldBoundingBox.value.union(box));\n        this.worldBoundingBox.next(this.worldBoundingBox.value);\n    }\n}\n","import { LoadOptions } from \"./common\";\nimport { Model } from \"./Model\";\n\ntype LoadType = (ref: any, options: LoadOptions) => Promise<Model>;\n\nexport class Registry {\n    public LUT: Map<(ref: any, options: LoadOptions) => boolean, LoadType>;\n\n    constructor() {\n        this.LUT = new Map();\n    }\n\n    register(\n        identifier: (ref: any, options: LoadOptions) => boolean,\n        load: LoadType\n    ): void {\n        this.LUT.set(identifier, load);\n    }\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\n\nexport class Selection extends Map<string, number[]> {\n    private listeners: Array<(origin: any) => void>;\n\n    startSelectionEventEmitter(eventDispatcher: EventDispatcher): void {\n        this.subscribe((origin) => {\n            const count = Array.from(this.keys())\n                .reduce((c, current) => c + this.get(current).length, 0);\n            eventDispatcher.selected({ count: count, origin: origin });\n        });\n    }\n\n    setOnly(modelId: string, ids: number[], origin?: any): void {\n        super.clear();\n        super.set(modelId, ids);\n        this.callListeners(origin);\n    }\n\n    set(modelId: string, ids: number[], origin?: any): this {\n        super.set(modelId, ids);\n        this.callListeners(origin);\n        return this;\n    }\n\n    delete(modelId: string, origin?: any): boolean {\n        const result = super.delete(modelId);\n        this.callListeners(origin);\n        return result;\n    }\n\n    add(modelId: string, ids: number[], origin?: any): void {\n        ids = this.has(modelId) ? [...this.get(modelId), ...ids] : ids;\n        const set = new Set(ids);\n\n        if (this.has(modelId)) {\n            const newSelection = [...set];\n            super.set(modelId, newSelection);\n        } else {\n            super.set(modelId, [...set]);\n        }\n        this.callListeners(origin);\n    }\n\n    subtract(modelId: string, ids: number[], origin?: any): void {\n        if (this.has(modelId)) {\n            const newIds = this.get(modelId).filter(e => !ids.includes(e));\n            if (newIds.length > 0) super.set(modelId, newIds);\n            else super.delete(modelId);\n        }\n        this.callListeners(origin);\n    }\n\n    clear(origin?: any): void {\n        super.clear();\n        this.callListeners(origin);\n    }\n\n    private callListeners(origin: any): void {\n        if (this.listeners)\n            this.listeners.forEach(l => l(origin));\n    }\n\n    subscribe(listener: (origin: any) => void): void {\n        if (!this.listeners) this.listeners = [];\n        this.listeners.push(listener);\n    }\n\n    unsubscribe(listener: () => void): void {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n\n    // Use to perform multiple operations with selection and make listeners be called only once\n    change(callback: () => void, origin?: any): void {\n        const origListeners = this.listeners;\n        this.listeners = undefined;\n        callback();\n        this.listeners = origListeners;\n        this.callListeners(origin);\n    }\n}\n","import {Box3, Camera, Euler, Frustum, Matrix4, Quaternion, Vector2, Vector3, MathUtils} from \"three\";\nimport {ProjectionType, ViewPreset} from \"../common\";\nimport {SphericalToDirection} from \"../Helpers/utils\";\nimport {Api} from \"../Api\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {easeInOutQuad, singleTween} from \"../Animation\";\nimport {getPerspectiveViewWorldSize, Vector3Const} from \"../Helpers/common-utils\";\n\nexport class WVCamera extends Camera {\n    projectionType: ProjectionType = ProjectionType.Perspective;\n\n    private readonly farPlaneDefault: number = 10000;\n    nearMin: number = 0.05;\n\n    near = this.nearMin;\n    far = this.farPlaneDefault;\n\n    aspect = 1;\n\n    // Angle of perspective view in degrees of wider aspect ratio (might be horizontal or vertical)\n    fov = 60;\n\n    // Orthographic view size in meters of wider aspect ratio (might be horizontal or vertical)\n    orthoSize = 1;\n\n    // for compatibility with threejs cameras\n    get zoom(): number { return 1; }\n\n    get isPerspectiveCamera(): boolean {\n        return this.projectionType === ProjectionType.Perspective;\n    }\n\n    get isOrthographicCamera(): boolean {\n        return this.projectionType === ProjectionType.Ortho;\n    }\n\n    constructor(private _api: Api) {\n        super();\n        this.updateProjectionMatrix();\n    }\n\n    updateProjectionMatrix(): void {\n        if (this.isPerspectiveCamera)\n            this.updatePerspectiveProjectionMatrix();\n        else\n            this.updateOrthographicProjectionMatrix();\n    }\n\n    private updatePerspectiveProjectionMatrix(): void {\n        const wider = this.near * Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov);\n\n        const top = this.aspect > 1 ? wider / this.aspect : wider;\n        const height = 2 * top;\n        const width = this.aspect * height;\n        const left = -0.5 * width;\n\n        this.projectionMatrix.makePerspective(left, left + width, top, top - height, this.near, this.far);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n\n    private updateOrthographicProjectionMatrix(): void {\n        const dx = this.aspect > 1 ? this.orthoSize : this.orthoSize * this.aspect;\n        const dy = dx / this.aspect;\n\n        this.projectionMatrix.makeOrthographic(-dx, dx, dy, -dy, this.near, this.far);\n        this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n    }\n\n    getProjectionCompensatingScale(distance: number): number {\n        const res = Math.max(this._api.container.clientWidth, this._api.container.clientHeight);\n        return this.getViewWorldSize(distance) * 30 / res;\n    }\n\n    getViewWorldSize(distance: number): number {\n        return WVCamera.getViewWorldSize(this, distance);\n    }\n\n    static getViewWorldSize(camera: WVCamera, distance: number): number {\n        if (camera.isPerspectiveCamera) {\n            return getPerspectiveViewWorldSize(camera.fov, distance);\n        }\n        else if (camera.isOrthographicCamera) {\n            return camera.orthoSize;\n        }\n    }\n\n    public getProjectionType(): ProjectionType {\n        return this.projectionType;\n    }\n\n    public async setProjectionType(projectionType: ProjectionType, focusPoint?: Vector3): Promise<void> {\n        if (!focusPoint) focusPoint = await this._getViewFocusPoint();\n        if (projectionType === ProjectionType.Perspective && this.isOrthographicCamera)\n            this._switchToPerspective(focusPoint);\n        else if (projectionType === ProjectionType.Ortho && this.isPerspectiveCamera)\n            this._switchToOrthographic(focusPoint);\n    }\n\n    private async _getViewFocusPoint(): Promise<Vector3> {\n        const canvas = this._api.renderingManager.renderer.domElement;\n        const rect = canvas.getBoundingClientRect();\n        const intersection = await this._api.picker.pickForNavigation(new Vector2(rect.x + rect.width / 2, rect.y + rect.height / 2));\n        return intersection ? intersection.point : this._api.models.worldBoundingBox.value.getCenter(new Vector3());\n    }\n\n    private _switchToOrthographic(focusPoint: Vector3): void {\n        let dist = focusPoint.distanceTo(this.position);\n        if (dist === 0) dist = 1;\n        const orthoSize = getPerspectiveViewWorldSize(this.fov, dist);\n        this.projectionType = ProjectionType.Ortho;\n        this.orthoSize = orthoSize;\n        this.updateProjectionMatrix();\n        this.callListeners();\n    }\n\n    private _switchToPerspective(focusPoint: Vector3): void {\n        this.projectionType = ProjectionType.Perspective;\n        this.updateProjectionMatrix();\n\n        const dist = this.orthoSize / getPerspectiveViewWorldSize(this.fov, 1);\n        this.position.sub(focusPoint).normalize().multiplyScalar(dist).add(focusPoint);\n        this.callListeners();\n    }\n\n    async animate(position?: Vector3, quaternion?: Quaternion, animationTime: number = this._api.settingsProxy.settings.animationTime, easeFunc: (t: number) => number = easeInOutQuad): Promise<void> {\n        if (animationTime === 0) {\n            if (position) this.position.copy(position);\n            if (quaternion) this.quaternion.copy(quaternion);\n            this.callListeners();\n        } else {\n            if (position && quaternion)\n                await Promise.all([this.animatePosition(position, animationTime, easeFunc), this.animateRotation(quaternion, animationTime, easeFunc)]);\n            else if (position)\n                await this.animatePosition(position, animationTime, easeFunc);\n            else if (quaternion)\n                this.animateRotation(quaternion, animationTime, easeFunc);\n        }\n    }\n\n    private cameraMover: Subscription;\n    private cameraMoverComplete: () => void;\n    private cameraRotator: Subscription;\n    private cameraRotatorComplete: () => void;\n\n    animatePosition(position: Vector3, animationTime: number = this._api.settingsProxy.settings.animationTime, easeFunc: (t: number) => number = easeInOutQuad): Promise<void> {\n        this.stopMoveAnimation();\n        const startPosition = this.position.clone();\n        const lastPosition = startPosition.clone();\n\n        return new Promise((resolved, rejected) => {\n            this.cameraMoverComplete = () => {\n                this.callListeners();\n                resolved();\n            };\n            this.cameraMover = singleTween(animationTime, easeFunc, 0, 1)\n                .subscribe((t: number) => {\n                        // stop animation if camera was moved by \"external forces\"\n                        if (!this.position.equals(lastPosition)) {\n                            this.stopMoveAnimation();\n                            return;\n                        }\n                        this.position.lerpVectors(startPosition, position, t);\n                        this.callListeners();\n                        lastPosition.copy(this.position);\n                    },\n                    rejected,\n                    this.cameraMoverComplete\n                );\n        });\n    }\n\n    animateRotation(quaternion: Quaternion, animationTime: number = this._api.settingsProxy.settings.animationTime, easeFunc: (t: number) => number = easeInOutQuad): Promise<void> {\n        this.stopRotationAnimation();\n        const start = this.quaternion.clone();\n        const last = start.clone();\n\n        return new Promise((resolved, rejected) => {\n            this.cameraRotatorComplete = () => resolved();\n            this.cameraRotator = singleTween(animationTime, easeFunc, 0, 1)\n                .subscribe((t: number) => {\n                        // stop animation if camera was rotated by \"external forces\"\n                        if (!this.quaternion.equals(last)) {\n                            this.stopRotationAnimation();\n                            return;\n                        }\n                        Quaternion.slerp(start, quaternion, this.quaternion, t);\n                        this.callListeners();\n                        last.copy(this.quaternion);\n                    },\n                    rejected,\n                    this.cameraRotatorComplete\n                );\n        });\n    }\n\n    private stopMoveAnimation(): void {\n        if (this.cameraMover) {\n            this.cameraMover.unsubscribe();\n            this.cameraMover = null;\n            this.cameraMoverComplete();\n        }\n    }\n\n    private stopRotationAnimation(): void {\n        if (this.cameraRotator) {\n            this.cameraRotator.unsubscribe();\n            this.cameraRotator = null;\n            this.cameraRotatorComplete();\n        }\n    }\n\n    public async fitToView(boundingbox: Box3, animationTime: number, preset?: ViewPreset, tightness: number = 0.65): Promise<void> {\n        let dist = 10;\n        let center = Vector3Const.zero;\n\n        if (!boundingbox.isEmpty()) {\n            const size = boundingbox.max.clone().sub(boundingbox.min);\n            const length = size.length();\n            dist = length / (tightness * 2) / getPerspectiveViewWorldSize(this.fov, 1);\n            this.orthoSize = length;\n            center = boundingbox.getCenter(new Vector3());\n        }\n\n        const firstLoad =\n            this.position.x === 0 &&\n            this.position.y === 0 &&\n            this.position.z === 0;\n        if (!preset && firstLoad) preset = ViewPreset.Axon;\n\n        if (preset) {\n            const position =\n                preset === ViewPreset.Axon ? new Vector3(dist * 0.7, -dist * 0.7, dist * 0.3) :\n                preset === ViewPreset.Top ? new Vector3(0, 0, dist) :\n                preset === ViewPreset.Bottom ? new Vector3(0, 0, -dist) :\n                preset === ViewPreset.Left ? new Vector3(dist, 0, 0) :\n                preset === ViewPreset.Right ? new Vector3(-dist, 0, 0) :\n                preset === ViewPreset.Front ? new Vector3(0, dist, 0) :\n                preset === ViewPreset.Back ? new Vector3(0, -dist, 0) : null;\n            const quaternion = preset === ViewPreset.Top ? new Quaternion() :\n                preset === ViewPreset.Bottom ? new Quaternion().setFromEuler(new Euler(0, Math.PI, Math.PI)) :\n                new Quaternion().setFromRotationMatrix(new Matrix4().lookAt(position, Vector3Const.zero, this.up));\n            await this.animate(position.add(center), quaternion,firstLoad ? 0 : animationTime);\n        }\n        else {\n            const position = this.getWorldDirection(new Vector3()).multiplyScalar(-dist);\n            await this.animatePosition(position.add(center), animationTime);\n        }\n    }\n\n    rotateSpherical = (() => {\n        const PI_2 = Math.PI / 2;\n\n        const sphericalUp = new Vector2();\n        const right = new Vector3();\n        const up = new Vector3();\n        const forward = new Vector3();\n        const lookAt = new Vector3();\n        const scaled_forward = new Vector3();\n        const scaled_right = new Vector3();\n        const scaled_up = new Vector3();\n        const position = new Vector3();\n\n        return (rotationPoint: Vector3, offset: Vector3, sphericalDirection: Vector2) => {\n            sphericalUp.set(sphericalDirection.x - PI_2, sphericalDirection.y);\n\n            SphericalToDirection(sphericalDirection, forward);\n            SphericalToDirection(sphericalUp, up);\n            right.crossVectors(forward, up);\n\n            scaled_forward.copy(forward).multiplyScalar(offset.y);\n            scaled_right.copy(right).multiplyScalar(offset.x);\n            scaled_up.copy(up).multiplyScalar(offset.z);\n\n            this.position.copy(\n                position\n                    .copy(rotationPoint)\n                    .sub(scaled_forward)\n                    .sub(scaled_right)\n                    .sub(scaled_up)\n            );\n            this.lookAt(lookAt.copy(this.position).add(forward));\n        };\n    })();\n\n    private _frustum = new Frustum();\n    private _matrix = new Matrix4();\n    get frustum(): Frustum {\n        // camera matrices are not updated in VR mode, so we need to use a special vr camera\n        const cam = this._api.renderingManager.vr.toVRCamera(this);\n        cam.updateMatrixWorld(true);\n        this._matrix.multiplyMatrices(cam.projectionMatrix, cam.matrixWorldInverse);\n        this._frustum.setFromProjectionMatrix(this._matrix);\n        return this._frustum;\n    }\n\n    fitNearAndFarPlanes = (() => {\n        const point = new Vector3();\n        return (aabb: Box3) => {\n            const frustum = this.frustum;\n            const farNormal = frustum.planes[4].normal;\n            point.set(\n                farNormal.x <= 0.0 ? aabb.max.x : aabb.min.x,\n                farNormal.y <= 0.0 ? aabb.max.y : aabb.min.y,\n                farNormal.z <= 0.0 ? aabb.max.z : aabb.min.z\n            );\n            const far = frustum.planes[4].distanceToPoint(point);\n            this.far = this.far - far > 0 ? (this.far - far) * 1.05 : this.farPlaneDefault;\n\n            const nearNormal = frustum.planes[5].normal;\n            point.set(\n                nearNormal.x <= 0.0 ? aabb.max.x : aabb.min.x,\n                nearNormal.y <= 0.0 ? aabb.max.y : aabb.min.y,\n                nearNormal.z <= 0.0 ? aabb.max.z : aabb.min.z\n            );\n\n            const near = frustum.planes[5].distanceToPoint(point);\n            this.near = Math.max((near + this.near) * 0.95, this.nearMin);\n            this.updateProjectionMatrix();\n        };\n    })();\n\n    private listeners: Array<() => void> = [];\n\n    callListeners(): void {\n        this.listeners.forEach(l => l());\n    }\n\n    subscribe(listener: () => void): void {\n        this.listeners.push(listener);\n    }\n\n    unsubscribe(listener: () => void): void {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n}\n","export const version = \"DEV_BUILD\";\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from '../../../build/three.module.js';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tdashOffset: { value: 0 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashOffset: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport { LineMaterial };\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from '../../../build/three.module.js';\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n","import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n","import {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from '../../../build/three.module.js';\nimport { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\nimport { LineMaterial } from '../lines/LineMaterial.js';\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'LineSegments2';\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth + threshold;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// camera forward is negative\n\t\t\tvar near = - camera.near;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// skip the segment if it's entirely behind the camera\n\t\t\t\tvar isBehindCameraNear = start.z > near && end.z > near;\n\t\t\t\tif ( isBehindCameraNear ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// trim the segment if it extends behind camera near\n\t\t\t\tif ( start.z > near ) {\n\n\t\t\t\t\tconst deltaDist = start.z - end.z;\n\t\t\t\t\tconst t = ( start.z - near ) / deltaDist;\n\t\t\t\t\tstart.lerp( end, t );\n\n\t\t\t\t} else if ( end.z > near ) {\n\n\t\t\t\t\tconst deltaDist = end.z - start.z;\n\t\t\t\t\tconst t = ( end.z - near ) / deltaDist;\n\t\t\t\t\tend.lerp( start, t );\n\n\t\t\t\t}\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n","import {\n    Vector3,\n    WebGLRenderer,\n    Intersection,\n    Matrix4,\n    Ray,\n    LineSegments,\n    Frustum,\n    Line3,\n    InterleavedBufferAttribute,\n    Box3,\n    InterleavedBuffer,\n} from \"three\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport {Caster} from \"../Picker/Caster\";\nimport {LineSegments2} from \"three/examples/jsm/lines/LineSegments2\";\n\nexport class MeshLine extends LineSegments2 {\n    geometry: LineGeometry;\n    material: LineMaterial;\n\n    private _inverseMatrix = new Matrix4();\n    private _ray = new Ray();\n    private _frustum = new Frustum();\n    private _box = new Box3();\n    private vStart = new Vector3();\n    private vEnd = new Vector3();\n    private interPoint = new Vector3();\n    private segmentPoint = new Vector3();\n\n    constructor(geometry: LineGeometry, material: LineMaterial) {\n        super(geometry, material);\n        this.material = material;\n        material.dashed ? material.defines.USE_DASH = \"\": delete material.defines.USE_DASH;\n        this.onBeforeRender = (renderer: WebGLRenderer) => renderer.getSize(material.resolution);\n    }\n\n    update(vectors: Vector3[] | Float32Array): void {\n        let positions: Float32Array;\n\n        if (vectors instanceof Float32Array) {\n            positions = vectors\n        }\n        else {\n            const positionsAttribute = this.geometry.attributes.instanceEnd as InterleavedBufferAttribute;\n            positions = positionsAttribute ? positionsAttribute.data.array as Float32Array : undefined;\n            if (!positions || positions.length !== vectors.length * 3)\n                positions = new Float32Array(vectors.length * 3);\n            for (let i = 0; i < vectors.length; i++) vectors[i].toArray(positions, i * 3);\n        }\n\n        const instanceStartAttr = this.geometry.getAttribute(\"instanceStart\");\n        if (instanceStartAttr && instanceStartAttr.array.length !== positions.length * 2 - 6) {\n            // TODO: LineGeometry does not support resizing, this is a hackaround. Avoid this if possible\n            this.geometry = new LineGeometry();\n        }\n        this.geometry.setPositions(positions);\n        if (this.material.dashed) this.computeLineDistances();\n    }\n\n    onUpload( callback: () => void ): void {\n        const startBuffer = (this.geometry.attributes.instanceStart as InterleavedBufferAttribute).data as any as InterleavedBuffer;\n        (startBuffer as any).onUploadCallback = callback;\n        const endBuffer = (this.geometry.attributes.instanceEnd as InterleavedBufferAttribute).data as any as InterleavedBuffer;\n        (endBuffer as any).onUploadCallback = callback;\n    }\n\n    raycast(caster: Caster, intersects: Intersection[]): void {\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n\n        this._box.copy(geometry.boundingBox);\n        this._box.applyMatrix4(matrixWorld);\n\n        if (!caster.frustum.intersectsBox(this._box)) return;\n\n        this._inverseMatrix.copy(matrixWorld).invert();\n        this._ray.copy(caster.ray).applyMatrix4(this._inverseMatrix);\n        this._frustum.copy(caster.frustum);\n        for (const plane of this._frustum.planes) plane.applyMatrix4(this._inverseMatrix);\n\n        const step = (this && this instanceof LineSegments) ? 2 : 1;\n\n        const positions = (geometry.attributes.instanceEnd as InterleavedBufferAttribute).data.array;\n\n        for (let i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            this.vStart.fromArray(positions, 3 * i);\n            this.vEnd.fromArray(positions, 3 * i + 3);\n\n            if (!this.intersect(this._ray, this._frustum, this.vStart, this.vEnd, this.interPoint)) continue;\n\n            this.interPoint.applyMatrix4(this.matrixWorld);\n            const distance = caster.ray.origin.distanceTo(this.interPoint);\n            if (distance < caster.near || distance > caster.far) continue;\n\n            intersects.push({\n                distance: distance,\n                point: this.interPoint.clone(),\n                index: i,\n                object: this\n            });\n        }\n    }\n\n    private intersect(ray: Ray, frustum: Frustum, lineStart: Vector3, lineEnd: Vector3, target: Vector3): boolean {\n        ray.distanceSqToSegment(lineStart, lineEnd, target, this.segmentPoint);\n        return frustum.containsPoint(this.segmentPoint);\n    }\n}\n","import { PointerInput } from \"../InputHandler\";\nimport { Api } from \"../Api\";\nimport {\n    DoubleSide,\n    Group,\n    LinearFilter,\n    MeshBasicMaterial,\n    Object3D,\n    Points,\n    PointsMaterial,\n    RingGeometry,\n    TextureLoader,\n    Vector2,\n    Vector3,\n    Scene, BufferGeometry\n} from \"three\";\nimport { Subscription } from \"rxjs\";\nimport { IIntersection } from \"./IIntersection\";\nimport {SnapType, WebglViewerEventName} from \"../common\";\nimport {LineMaterial} from \"three/examples/jsm/lines/LineMaterial\";\nimport {MeshLine} from \"../CustomObjects/MeshLine\";\nimport {createScreenStaticSizeMesh} from \"../Helpers/utils\";\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\nimport {Geometry} from \"three/examples/jsm/deprecated/Geometry\";\nimport {BufferAttribute} from \"three/src/core/BufferAttribute\";\n\nexport class Cursor3D {\n    private _moveSubscription: Subscription;\n    private faceCursor: Object3D;\n    private pointCursor: Points;\n    private lineCursor: Points;\n    private lineHighlight: MeshLine;\n    private cursor: Object3D;\n    private renderPass: RenderPass;\n    private isNavigating: boolean;\n\n    snapTypes: SnapType[] = [SnapType.POINT, SnapType.LINE, SnapType.FACE];\n    intersection: IIntersection;\n\n    private normal = new Vector3();\n\n    private createCursors(): void {\n        const pointsGeometry = new BufferGeometry();\n        pointsGeometry.setAttribute(\"position\", new BufferAttribute(new Float32Array([0, 0, 0]), 3));\n        const textureLoader = new TextureLoader();\n\n        const loadTexture = (url: string) => {\n            return textureLoader.load(url, (t) => {\n                t.premultiplyAlpha = false;\n                t.generateMipmaps = false;\n                t.minFilter = LinearFilter;\n                t.magFilter = LinearFilter;\n                t.needsUpdate = true;\n            });\n        };\n\n        // Surface\n        const markerMaterial = new PointsMaterial({\n            map: loadTexture(\"snap_face.png\"),\n            transparent: true,\n            depthWrite: false,\n            depthTest: false,\n            sizeAttenuation: false,\n            alphaTest: 0,\n            size: 15\n        });\n        this.faceCursor = new Group();\n        const points = new Points(pointsGeometry, markerMaterial);\n        points.renderOrder = 1;\n        this.faceCursor.add(points);\n        const material = new MeshBasicMaterial({ color: 0xffffff, depthTest: false, depthWrite: false, transparent: true, opacity: 0.3, side: DoubleSide });\n        const ringGeometry = new RingGeometry(2, 2.25, 4);\n        ringGeometry.translate(0, 0, 0.01);\n        ringGeometry.rotateZ(Math.PI / 4);\n        const ringMesh = createScreenStaticSizeMesh(ringGeometry, material, this._api);\n        this.faceCursor.add(ringMesh);\n        this.faceCursor.renderOrder = 1;\n\n        // Point\n        this.pointCursor = new Points(pointsGeometry, new PointsMaterial({\n            map: loadTexture(\"snap_point.png\"),\n            transparent: true,\n            depthWrite: false,\n            depthTest: false,\n            sizeAttenuation: false,\n            size: 15\n        }));\n\n        // Line\n        this.lineCursor = new Points(pointsGeometry, new PointsMaterial({\n            map: loadTexture(\"snap_edge.png\"),\n            transparent: true,\n            depthWrite: false,\n            depthTest: false,\n            sizeAttenuation: false,\n            size: 15,\n        }));\n        this.lineHighlight = new MeshLine(new LineGeometry(), new LineMaterial({linewidth: 3, color: 0xffffff, opacity: 0.3, depthTest: false, depthWrite: false, transparent: true}));\n    }\n\n    private createRenderPass(): void {\n        this.renderPass = new RenderPass(new Scene(), this._api.camera);\n        this.renderPass.clear = false;\n        this._api.renderingManager.composer.addPassAfterAntialiasing(this.renderPass);\n    }\n\n    constructor(private _api: Api) {\n        this.createCursors();\n        this.createRenderPass();\n        this.cursor = this.faceCursor;\n        this.initNavigationIntegration();\n    }\n\n    private initNavigationIntegration(): void {\n        this._api.eventDispatcher.subscribe(WebglViewerEventName.NavigationStart, () => {\n            this.cursor.visible = false;\n            this.isNavigating = true\n        });\n        this._api.eventDispatcher.subscribe(WebglViewerEventName.NavigationEnd, () => {\n            this.cursor.visible = true;\n            this.isNavigating = false\n        });\n    }\n\n    public subscribe(onMove?: () => void): void {\n        this._moveSubscription = this._api.inputHandler.pointerMove$\n            .subscribe(async e => {\n                if (!this.isNavigating) {\n                    await this.calculateIntersection(e, false);\n                    if (onMove) onMove();\n                }\n            });\n\n        this.faceCursor.visible = false;\n        this.renderPass.scene.add(this.faceCursor);\n\n        this.pointCursor.visible = false;\n        this.renderPass.scene.add(this.pointCursor);\n\n        this.lineCursor.visible = false;\n        this.renderPass.scene.add(this.lineCursor);\n        this.lineHighlight.visible = false;\n        this.renderPass.scene.add(this.lineHighlight);\n\n        this._api.renderingManager.redraw();\n    }\n\n    public unsubscribe(): void {\n        if (!this._moveSubscription) return;\n\n        this._moveSubscription.unsubscribe();\n        this._moveSubscription = undefined;\n        this.renderPass.scene.remove(this.faceCursor);\n        this.renderPass.scene.remove(this.pointCursor);\n        this.renderPass.scene.remove(this.lineCursor);\n        this.renderPass.scene.remove(this.lineHighlight);\n        this._api.renderingManager.redraw();\n    }\n\n    async calculateIntersection(event: PointerInput, waitIfBusy: boolean): Promise<PointerInput> {\n        event.intersection = await this._api.picker.pickSnapped(new Vector2(event.x, event.y), this.snapTypes, waitIfBusy);\n        this.intersection = event.intersection;\n        const intersection = this.intersection;\n\n        this.cursor.visible = false;\n        if (intersection) {\n            this.cursor = intersection.snapType === SnapType.POINT ? this.pointCursor :\n                intersection.snapType === SnapType.LINE ? this.lineCursor :\n                    this.faceCursor;\n            this.cursor.position.copy(intersection.point);\n\n            if (intersection.normal) {\n                this.normal.copy(this._api.camera.position).sub(intersection.point);\n                const dot = this.normal.dot(intersection.normal);\n                this.normal.copy(intersection.normal);\n                if (dot < 0) this.normal.negate();\n                this.cursor.lookAt(this.normal.clone().add(intersection.point));\n            }\n\n            this.lineHighlight.visible = !!intersection.snapLineStart;\n            if (intersection.snapLineStart) {\n                this.lineHighlight.update([intersection.snapLineStart, intersection.snapLineEnd]);\n            }\n\n            this.cursor.updateMatrix();\n            this.cursor.visible = !this.isNavigating;\n        }\n\n        this._api.renderingManager.redraw();\n\n        return event;\n    }\n}\n","import {SettingsProxyHandler} from \"./SettingsProxyHandler\";\nimport {Settings} from \"./common\";\n\ninterface PageViewData {\n    hitType: \"pageview\";\n    title?: string;\n    location?: string;\n    page?: string;\n}\n\ninterface EventData {\n    hitType: \"event\";\n    eventCategory?: string;\n    eventAction?: string;\n    eventLabel?: string;\n    eventValue?: number;\n}\n\ninterface ExceptionData {\n    hitType: \"exception\";\n    exDescription?: string;\n    exFatal?: boolean;\n}\n\nexport class Analytics {\n    private keywords: string[] = [];\n\n    constructor(private settingsProxy: SettingsProxyHandler<Settings>) {\n        this.init();\n        this.command(\"create\", \"UA-155752318-1\", \"auto\");\n        this.send({hitType: \"pageview\"});\n\n        window.addEventListener(\"error\", (event: ErrorEvent) => {\n            if (!event.error) return;\n\n            const keyword = this.containsViewerKeyword(event.error.stack);\n            if (keyword)\n                this.logError(event.error.stack + ` (keyword: ${keyword})`);\n        });\n    }\n\n    private containsViewerKeyword(errorStack: string): string {\n        for (const k of this.keywords)\n            if (errorStack.includes(k)) return k;\n    }\n\n    addViewerErrorStackKeyword(keyword: string): void {\n        this.keywords.push(keyword);\n    }\n\n    private init(): void {\n        if (!this.settingsProxy.settings.analyticsEnabled) return;\n\n        ((i: Window, s: Document, o: string, g: string, r: string, a: any, m: any) => {\n            // @ts-ignore\n            i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)}, i[r].l=new Date().getTime();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','https://www.google-analytics.com/analytics.js','gawv', undefined, undefined);\n    }\n\n    private command(cmd: string, param1: any, param2?: any): void {\n        if (!this.settingsProxy.settings.analyticsEnabled) return;\n        // @ts-ignore\n        gawv(cmd, param1, param2);\n    }\n\n    private send(data: EventData | ExceptionData | PageViewData): void {\n        this.command(\"send\", data);\n    }\n\n    logLoadEvent(modelId: string): void {\n        this.send({hitType: \"event\", eventCategory: \"Model\", eventAction: \"Load\", eventLabel: modelId});\n    }\n\n    logError(message: string): void {\n        this.send({\n            hitType: \"exception\",\n            exDescription: message,\n        });\n        this.send({\n            hitType: \"event\",\n            eventCategory: \"Error\",\n            eventAction: \"Error\",\n            eventLabel: message\n        });\n    }\n}\n","import { Vector3, Box3, Quaternion, Euler } from \"three\";\nimport { WVCamera } from \"./Rendering/WVCamera\";\nimport {Settings, ProjectionType, ViewPreset} from \"./common\";\nimport { Models } from \"./Models\";\nimport { Selection } from \"./Selection\";\nimport {easeInOutQuad} from \"./Animation\";\nimport {InputHandler} from \"./InputHandler\";\nimport {SettingsProxyHandler} from \"./SettingsProxyHandler\";\n\nexport { easeLinear, easeInOutQuad, easeInQuad, easeOutQuad } from \"./Animation\"\n\nexport interface Fit {\n    // modelId -> entityIds\n    models?: Map<string, number[]>;\n    viewPreset?: ViewPreset;\n    tightness?: number;\n}\n\nexport interface TrimbleRotation {\n    pitch: number;\n    yaw: number;\n}\n\nexport class PublicCamera {\n    private _rotation: TrimbleRotation = {pitch: 0, yaw: 0};\n    private _direction = new Vector3();\n    private _tmpVec3 = new Vector3();\n    private _tmpQuat= new Quaternion();\n    private _tmpEuler= new Euler();\n\n    constructor(private _camera: WVCamera, private _models: Models, private _settingsHandler: SettingsProxyHandler<Settings>) {\n    }\n\n    subscribeKeys(inputHandler: InputHandler, selection: Selection): void {\n        inputHandler.keyDown$.subscribe((e) => {\n            if (e.code === \"KeyF\") this.fitToView({models: selection.size ? selection : undefined});\n        });\n    }\n\n    get position(): Vector3 {\n        return this._camera.position;\n    }\n\n    set position(p: Vector3) {\n        this._camera.position.copy(p);\n        this._camera.callListeners();\n    }\n\n    get quaternion(): Quaternion {\n        return this._camera.quaternion;\n    }\n\n    set quaternion(q: Quaternion) {\n        this._camera.quaternion.copy(q);\n        this._camera.callListeners();\n    }\n\n    get nearMin(): number {\n        return this._camera.nearMin;\n    }\n\n    set nearMin(nearMin: number) {\n        this._camera.nearMin = nearMin;\n    }\n\n    get rotation(): TrimbleRotation {\n        const forward = this._tmpVec3.set(0, 0, -1).applyQuaternion(this._camera.quaternion);\n        this._rotation.pitch = Math.PI - Math.atan2(Math.sqrt(forward.x*forward.x + forward.y*forward.y), forward.z);\n\n        if (Math.abs(forward.z) > 0.999) this._tmpVec3.set(0, 1, 0).applyQuaternion(this._camera.quaternion); // up\n        this._rotation.yaw = -Math.atan2(this._tmpVec3.x, this._tmpVec3.y);\n        return this._rotation;\n    }\n\n    set rotation(r: TrimbleRotation) {\n        this.quaternion = this.rotationToQuaternion(r);\n        this._camera.callListeners();\n    }\n\n    private rotationToQuaternion(r: TrimbleRotation): Quaternion {\n        let yaw = r.yaw;\n        if (Math.abs(r.pitch - Math.PI) < 0.999) yaw += Math.PI;\n        this._tmpEuler.set(r.pitch, 0, yaw, \"YZX\");\n        return this._tmpQuat.setFromEuler(this._tmpEuler);\n    }\n\n    get direction(): Vector3 {\n        return this._camera.getWorldDirection(this._direction);\n    }\n\n    get projectionType(): ProjectionType {\n        return this._camera.getProjectionType();\n    }\n\n    set projectionType(t: ProjectionType) {\n        this._camera.setProjectionType(t);\n    }\n\n    // not a duplicate, this one returns a promise\n    setProjectionType(t: ProjectionType): Promise<void> {\n        return this._camera.setProjectionType(t);\n    }\n\n    get aspect(): number {\n        return this._camera.aspect;\n    }\n\n    // Angle of perspective view in degrees of wider aspect ratio (might be horizontal or vertical)\n    get fieldOfView(): number {\n        return this._camera.fov;\n    }\n\n    set fieldOfView(fov: number) {\n        this._camera.fov = fov;\n        this._camera.callListeners();\n    }\n\n    // Orthographic view size in meters of wider aspect ratio (might be horizontal or vertical)\n    get orthoSize(): number {\n        return this._camera.orthoSize;\n    }\n\n    set orthoSize(orthoSize: number) {\n        this._camera.orthoSize = orthoSize;\n        this._camera.callListeners();\n    }\n\n    async animate(position?: Vector3, quaternion?: Quaternion, rotation?: TrimbleRotation, animationTime?: number, easeFunc?: (t: number) => number): Promise<void> {\n        if (rotation) quaternion = this.rotationToQuaternion(rotation);\n        await this._camera.animate(position, quaternion, animationTime, easeFunc);\n    }\n\n    async fitToView(fit?: Fit | string): Promise<void> {\n        if (typeof fit === \"string\")\n            fit = {models: new Map([[fit, undefined]])};\n\n        if  (fit === undefined || fit.models === undefined) {\n            await this._camera.fitToView(this._models.worldBoundingBox.value, this._settingsHandler.settings.animationTime, fit ? fit.viewPreset : undefined, fit ? fit.tightness : undefined);\n            return;\n        }\n\n        const box = new Box3();\n        for (const [modelId, entityIds] of fit.models) {\n            const model = this._models.get(modelId);\n            if (!model) throw new Error(`No model found named ${modelId}`);\n            box.union(await model.getBoundingBox(entityIds));\n        }\n        await this._camera.fitToView(box, this._settingsHandler.settings.animationTime, fit.viewPreset, fit.tightness) ;\n    }\n}\n","import {AlphaFormat, LinearFilter, Texture} from \"three\";\nimport {disposeImage} from \"./common-utils\";\n\nexport interface TextTextures {\n    atlases: Array<{\n        texture: Texture;\n        size: number;\n    }>;\n    samples: AtlasSample[];\n}\n\nexport interface AtlasSample {\n    atlasIndex: number;\n    offsetX: number;\n    offsetY: number;\n    width: number;\n    height: number;\n}\n\nexport class TextureGenerator {\n\n    static readonly MAX_ATLAS_SIZE = 2048;\n    private static readonly TEXT_ATLAS_MARGIN = 4;\n\n    private textures: TextTextures;\n    private atlasIndex: number = 0;\n\n    private readonly measurementContext = document.createElement('canvas').getContext('2d');\n    private atlasCanvas: HTMLCanvasElement;\n    private samplesForCurrentAtlas: number;\n    private offsetX: number;\n    private offsetY: number;\n    private boundingBoxX: number;\n    private boundingBoxY: number;\n\n    generateTextTextures(textDescriptions: Array<{text: string, font: string, size: number}>): TextTextures {\n        this.textures = { atlases: [], samples: [] } as TextTextures;\n        this.atlasIndex = 0;\n        const drawCommands = new Array<{fontString: string, text: string, x: number, y: number}>();\n        this.resetCanvas();\n\n        for (const td of textDescriptions) {\n            const lineSpace = 1.2;\n            const lines = td.text.split(/\\r?\\n/);\n            const scaledSize = td.size * devicePixelRatio;\n            const fontString = `${ scaledSize }px ${td.font}`;\n            this.measurementContext.font = fontString;\n            const metrics = this.measurementContext.measureText(td.text);\n\n            let lineHeight = scaledSize * lineSpace;\n            let bbAscent = scaledSize;\n\n            // Calculating the correct measures for exact BB alignment (not supported in FF & Edge):\n            if (\"actualBoundingBoxAscent\" in metrics && \"actualBoundingBoxDescent\" in metrics) {\n                bbAscent = metrics.actualBoundingBoxAscent;\n                lineHeight = bbAscent + metrics.actualBoundingBoxDescent;\n            }\n\n            const height = scaledSize * 1.2 * (lines.length - 1) + lineHeight;\n\n            // The width of the texture is the width of the widest row:\n            let width = 0;\n            for (const l of lines) {\n                const w = this.measurementContext.measureText(l).width;\n                if (w > width) width = w;\n            }\n\n            // If does not fit at current offset, switch to a new row:\n            if (!this.fits(width, height, TextureGenerator.TEXT_ATLAS_MARGIN)) {\n                this.offsetX = 0;\n                this.offsetY = this.boundingBoxY;\n            }\n\n            // If still cannot fit, consider atlas as full, store it as a texture, and start a new one:\n            if (!this.fits(width, height, TextureGenerator.TEXT_ATLAS_MARGIN)) {\n                this.makeTextAtlasTexture(drawCommands);\n                this.resetCanvas();\n            }\n\n            // Draw the text on the canvas:\n            for (let i = 0; i < lines.length; ++i)\n                drawCommands.push({\n                    fontString: fontString,\n                    text: lines[i],\n                    x: this.offsetX + 1,\n                    y: this.offsetY + bbAscent + i * scaledSize * lineSpace + 1\n                });\n\n            // Store as an atlas sample:\n            this.textures.samples.push(this.createAtlasSample(width, height));\n\n            // Update the atlas object\n            this.boundingBoxX = Math.max(this.boundingBoxX, this.offsetX + width + TextureGenerator.TEXT_ATLAS_MARGIN);\n            this.boundingBoxY = Math.max(this.boundingBoxY, this.offsetY + height + TextureGenerator.TEXT_ATLAS_MARGIN);\n            this.offsetX += width + TextureGenerator.TEXT_ATLAS_MARGIN;\n        }\n\n        // If current atlas contains textures, store it as a texture:\n        if (this.samplesForCurrentAtlas > 0) this.makeTextAtlasTexture(drawCommands);\n\n        return this.textures;\n    }\n\n    private resetCanvas(): void {\n        this.samplesForCurrentAtlas = 0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.boundingBoxX = 0;\n        this.boundingBoxY = 0;\n    }\n\n    private fits(width: number, height: number, margin: number): boolean {\n        return  this.offsetX + width + margin <= TextureGenerator.MAX_ATLAS_SIZE &&\n                this.offsetY + height + margin <= TextureGenerator.MAX_ATLAS_SIZE;\n    }\n\n    private createAtlasSample(width: number, height: number): AtlasSample {\n        this.samplesForCurrentAtlas++;\n        return {\n            atlasIndex: this.atlasIndex,\n            offsetX: this.offsetX,\n            offsetY: this.offsetY,\n            width: width + 2,\n            height: height + 2,\n        };\n    }\n\n    private makeTextAtlasTexture(drawCommands: Array<{fontString: string, text: string, x: number, y: number}>): void {\n\n        // Crating a square canvas as small as possible, containing the bounding box of its textures:\n        const atlasSize = Math.max(this.boundingBoxX, this.boundingBoxY);\n        this.atlasCanvas = document.createElement('canvas');\n        this.atlasCanvas.width = atlasSize;\n        this.atlasCanvas.height = atlasSize;\n\n        // Drawing the text on the canvas and emptying the command array:\n        const ctx = this.atlasCanvas.getContext('2d');\n        ctx.fillStyle = \"#ffffff\";\n        for (const cmd of drawCommands) {\n            ctx.font = cmd.fontString;\n            ctx.fillText(cmd.text, cmd.x, cmd.y);\n        }\n        drawCommands.length = 0;\n\n        // Creating the atlas:\n        this.textures.atlases.push({\n            texture: TextureGenerator.createTextTexture(this.atlasCanvas),\n            size: atlasSize,\n        });\n        this.atlasIndex++;\n        this.atlasCanvas = undefined;\n    }\n\n    private static createTextTexture(canvas: HTMLCanvasElement): Texture {\n        const texture = new Texture(canvas);\n        texture.format = AlphaFormat;\n        texture.minFilter = LinearFilter;\n        texture.magFilter = LinearFilter;\n        texture.generateMipmaps = false;\n        texture.premultiplyAlpha = false;\n        texture.needsUpdate = true;\n        texture.onUpdate = disposeImage;\n        return texture;\n    }\n}\n\n","export class SettingsProxyHandler<S extends object> implements ProxyHandler<S> {\n    settings: S;\n\n    private listeners = new Map<string, Array<(value: any) => void>>();\n\n    addListener(p: string, listener: (value: any) => void): void {\n        let l = this.listeners.get(p);\n        if (!l)\n            l = []; this.listeners.set(p, l);\n        l.push(listener);\n    }\n\n    constructor(settings: S) {\n        this.settings = new Proxy<S>(settings, this);\n    }\n\n    set(settings: S, p: string, value: any): boolean {\n        // @ts-ignore\n        settings[p] = value;\n\n        const l = this.listeners.get(p);\n        if (l) {\n            for (const listener of l)\n                listener(value);\n        }\n        return true;\n    }\n}\n","import {ToolManager} from \"./Tools/ToolManager\";\nimport {RenderingManager} from \"./Rendering/RenderingManager\";\nimport {Picker} from \"./Picker/Picker\";\nimport {EventDispatcher} from \"./EventDispatcher\";\nimport {HtmlElementPositioner} from \"./HtmlElementPositioner\";\nimport {Models} from \"./Models\";\nimport {Registry} from \"./Registry\";\nimport {InputHandler} from \"./InputHandler\";\n\nimport {Settings, LengthUnit, LoadOptions, QualityPreset, Tool} from \"./common\";\nimport {Color, Object3D, Scene} from \"three\";\nimport {Api} from \"./Api\";\nimport {Selection} from \"./Selection\";\n\nimport {WVCamera} from \"./Rendering/WVCamera\";\nimport {QualityAwarePlugin, WebglViewerPlugin} from \"./WebglViewerPlugin\";\nimport {ApiContainer} from \"./ApiContainer\";\nimport {VRManager} from \"./Rendering/VRManager\";\nimport {Model} from \"./Model\";\nimport {version} from \"./Version\";\nimport {Cursor3D} from \"./Picker/Cursor3D\";\nimport {Analytics} from \"./Analytics\";\nimport {PublicCamera} from \"./PublicCamera\";\nimport { TextureGenerator } from \"./Helpers/TextureGenerator\";\nimport {Vector3Const} from \"./Helpers/common-utils\";\nimport {SettingsProxyHandler} from \"./SettingsProxyHandler\";\n\nexport class WebglViewer extends HTMLElement {\n    private _api: Api;\n    private _publicCamera: PublicCamera;\n\n    constructor(settings?: Settings) {\n        super();\n        // tslint:disable-next-line:no-console\n        console.log(`webgl-viewer build version: ${version}`);\n\n        const settingsProxy = new SettingsProxyHandler<Settings>(Object.assign({\n            background: {topColor: new Color(\"#FFFFFF\"), bottomColor: new Color(\"#AAAAAA\")},\n            color: new Color(\"#000000\"),\n            lengthUnit: LengthUnit.m,\n            decimals: 2,\n            backgroundRotation: 0,\n            darkModeMaterials: false,\n            vertexInterpolationMaterials: false,\n            progressiveRendering: true,\n            renderEdges: true,\n            ssao: true,\n            orderIndependentTransparency: true,\n            transparencyPeelsCount: 2,\n            hoverHighlightEnabled: false,\n            antialias: undefined, // undefined === automatic\n            xrCompatible: false,\n            useWebgl2: true,\n            animationTime: 500,\n            selectionColor: new Color(\"#ffcc00\"),\n            hoverColor: new Color(\"#0000ff\"),\n            staticRootUrl: undefined,\n            snapDistance: 12,\n            analyticsEnabled: true,\n            sandbox: false\n        } as Settings, settings || {}));\n\n        this._initializeApi(settingsProxy);\n        this._api.analytics.addViewerErrorStackKeyword(this.constructor.name);\n    }\n\n    get settings(): Settings {\n        return this._api.settingsProxy.settings;\n    }\n\n    activateQualityPreset(quality: QualityPreset): void {\n        if (quality === QualityPreset.HighQuality) {\n            this.settings.progressiveRendering = false;\n            this.settings.antialias = true;\n            this.settings.renderEdges = true;\n            this.settings.ssao = true;\n            this.settings.orderIndependentTransparency = true;\n            this.settings.transparencyPeelsCount = 4;\n            this.settings.vertexInterpolationMaterials = false;\n        }\n        else if (quality === QualityPreset.Optimal) {\n            this.settings.progressiveRendering = true;\n            this.settings.antialias = undefined;\n            this.settings.renderEdges = true;\n            this.settings.ssao = true;\n            this.settings.orderIndependentTransparency = true;\n            this.settings.transparencyPeelsCount = 2;\n            this.settings.vertexInterpolationMaterials = false;\n        }\n        else if (quality === QualityPreset.HighPerformance) {\n            this.settings.progressiveRendering = true;\n            this.settings.antialias = undefined;\n            this.settings.renderEdges = true;\n            this.settings.ssao = true;\n            this.settings.orderIndependentTransparency = true;\n            this.settings.transparencyPeelsCount = 1;\n            this.settings.vertexInterpolationMaterials = false;\n        }\n        else if (quality === QualityPreset.MaxPerformance) {\n            this.settings.progressiveRendering = true;\n            this.settings.antialias = false;\n            this.settings.renderEdges = false;\n            this.settings.ssao = false;\n            this.settings.orderIndependentTransparency = false;\n            this.settings.vertexInterpolationMaterials = true;\n        }\n\n        for (const p in this.plugins) {\n            const plugin = this.plugins[p] as any as QualityAwarePlugin;\n            if (plugin.activateQualityPreset) plugin.activateQualityPreset(quality);\n        }\n    }\n\n    get globalOpacity(): number {\n        return this._api.renderingManager.globalOpacity;\n    }\n\n    set globalOpacity(value: number) {\n        this._api.renderingManager.globalOpacity = value;\n    }\n\n    addPlugin(p: WebglViewerPlugin): WebglViewer {\n        const plugin = p as WebglViewerPlugin;\n        plugin.api = this._api;\n        if (this.plugins[plugin.name]) throw Error(`Plugin ${plugin.name} is already initialized`);\n        if (plugin.version !== version) throw Error(`Plugin version mismatch ${plugin.version}`);\n        this.plugins[plugin.name] = plugin;\n\n        this._api.analytics.addViewerErrorStackKeyword(plugin.constructor.name);\n        return this;\n    }\n\n    async load(ref: any, options: LoadOptions = {}): Promise<Model> {\n        options.fitToView = options.fitToView !== undefined ? options.fitToView : true;\n\n        const loader = Array.from(this._api.registry.LUT.entries()).find(pair => pair[0](ref, options));\n        if (!loader)\n            throw new Error(`Unknown model type: ${ref}`);\n\n        const model = await loader[1](ref, options);\n\n        if (options.transform) model.transform(options.transform);\n        if (options.fitToView) {\n            const box = this._api.models.worldBoundingBox.value;\n            this._api.camera.fitToView(box, this._api.settingsProxy.settings.animationTime);\n        }\n\n        this._api.renderingManager.redraw();\n        this._api.analytics.logLoadEvent(model.name);\n        return model;\n    }\n\n    async unload(modelId: string, options?: LoadOptions): Promise<void> {\n        options = options || { fitToView: true };\n        modelId = options.modelId || modelId;\n\n        await this._api.models.remove(modelId);\n        if (options.fitToView)\n            this._api.camera.fitToView(this._api.models.worldBoundingBox.value, this._api.settingsProxy.settings.animationTime);\n        else\n            this._api.renderingManager.redraw();\n    }\n\n    getModel<T extends Model>(modelId: string, type?: new (...params: any) => T): T {\n        const model = this._api.models.get(modelId);\n        return type === undefined || model instanceof type ? model as T : undefined;\n    }\n\n    getModels(): Model[] {\n        return Array.from(this._api.models.getIterable());\n    }\n\n    private _initializeApi(settingsProxy: SettingsProxyHandler<Settings>): void {\n        this.initApiForJsdom();\n        const api = this._api;\n        Object3D.DefaultUp.copy(Vector3Const.up);\n\n        // @ts-ignore will be replaced with import.meta.url by rollup\n        api.staticRootUrl = settingsProxy.settings.staticRootUrl || window.DEFAULT_STATIC_ROOT_URL || \"/\";\n\n        api.container = document.createElement(\"main\");\n        api.container.setAttribute(\"id\", \"content\");\n        api.container.appendChild(document.createElement(\"canvas\"));\n\n        api.eventDispatcher = new EventDispatcher(this);\n        api.settingsProxy = settingsProxy;\n        api.scene = new Scene();\n\n        api.selection = new Selection();\n        api.selection.startSelectionEventEmitter(api.eventDispatcher);\n        api.models = new Models(api.scene, api.selection);\n        api.plugins = new ApiContainer<WebglViewerPlugin>();\n\n        api.camera = new WVCamera(this._api);\n\n        api.picker = new Picker(api.camera, api.models, api.container, api.settingsProxy);\n        api.renderingManager = new RenderingManager(api);\n        api.htmlElementPositioner = new HtmlElementPositioner(api);\n\n        api.inputHandler = new InputHandler(\n            api.picker,\n            api.container\n        );\n\n        this._publicCamera = new PublicCamera(api.camera, api.models, api.settingsProxy);\n        this._publicCamera.subscribeKeys(api.inputHandler, api.selection);\n        api.cursor = new Cursor3D(api);\n\n        api.toolManager = new ToolManager(api);\n\n        api.models.worldBoundingBox.subscribe(() => api.renderingManager.redraw());\n        api.models.worldBoundingBox.subscribe(aabb => api.picker.setWorldBoundingBox(aabb));\n        api.analytics = new Analytics(api.settingsProxy);\n\n        api.textureGenerator = new TextureGenerator();\n\n        this.createShadowDom();\n        this._api.renderingManager.start();\n    }\n\n    private createShadowDom(): void {\n        this.attachShadow({mode: 'open'});\n        // noinspection CssInvalidPropertyValue\n        this.shadowRoot.innerHTML += `\n            <style>\n                :host {\n                    display: block;\n                    box-sizing: border-box;\n                    height: 100%;\n                    width: 100%;\n                }\n\n                main {\n                    box-sizing: border-box;\n                    height: 100%;\n                    width: 100%;\n                    cursor: default;\n                    overflow: hidden;\n                    position: relative;\n                }\n\n                canvas {\n                    width: 100%;\n                    height: 100%;\n                    display: block;\n                    position: relative;\n                }\n\n                .grab {\n                    cursor: -webkit-grab !important;\n                    cursor: -moz-grab !important;\n                    cursor: grab !important;\n                }\n\n                .grabbing {\n                    cursor: -webkit-grabbing !important;\n                    cursor: -moz-grabbing !important;\n                    cursor: grabbing !important;\n                }\n\n                .default {\n                    cursor: default;\n                }\n            </style>`;\n        this.shadowRoot.appendChild(this._api.container);\n    }\n\n    public initApiForJsdom(): void {\n        const api: Api = {};\n        this._api = api;\n\n        api.registry = new Registry();\n    }\n\n    set activeTool(tool: string) {\n        this._api.toolManager.activeTool = tool;\n    }\n\n    get activeTool(): string {\n        return this._api.toolManager.activeTool;\n    }\n\n    get tools(): ApiContainer<Tool> {\n        return this._api.toolManager.tools;\n    }\n\n    get plugins(): ApiContainer<WebglViewerPlugin> {\n        return this._api.plugins;\n    }\n\n    async screenshot(): Promise<Blob> {\n        return this._api.renderingManager.screenshot();\n    }\n\n    get selection(): Selection {\n        return this._api.selection;\n    }\n\n    get camera(): PublicCamera {\n        return this._publicCamera;\n    }\n\n    get vr(): VRManager {\n        return this._api.renderingManager.vr;\n    }\n}\n\n// Using eval to allow code to be removed by tree-shaking during build\n// tslint:disable-next-line:no-eval\neval(\"if (window.customElements && typeof WebglViewer !== 'undefined') window.customElements.define('webgl-viewer', WebglViewer)\");\n","import { Api } from \"./Api\";\nimport { version } from \"./Version\";\nimport {QualityPreset} from \"./common\";\n\nexport abstract class WebglViewerPlugin {\n    get version(): string {\n        return version;\n    }\n\n    abstract get name(): string;\n    abstract set api(api: Api);\n}\n\nexport interface QualityAwarePlugin {\n    activateQualityPreset(quality: QualityPreset): void;\n}\n","import {BehaviorSubject} from \"rxjs\";\nimport {Box3, Line, Matrix4, Mesh, Object3D, Points} from \"three\";\nimport {IIntersection} from \"./Picker/IIntersection\";\nimport {Caster} from \"./Picker/Caster\";\nimport {PointerInput} from \"./InputHandler\";\nimport {SnapType} from \"./common\";\nimport {Vector3Const} from \"./Helpers/common-utils\";\n\nexport type GeometryObject3D = Mesh | Points | Line;\n\nexport interface SelectableModel extends PickableModel {\n    readonly isSelectable: true;\n    areaPick(caster: Caster, containedOnly?: boolean): Promise<IIntersection>;\n    setSelection(ids: number[]): void;\n    clearSelection(): void;\n}\n\nexport interface HoverableModel {\n    setHoveredFromEvent(event: PointerInput): void;\n}\n\nexport interface PickableModel {\n    pick(caster: Caster): Promise<IIntersection>;\n}\n\nexport interface SnappedPickableModel extends PickableModel {\n    pickSnapped(caster: Caster, snapTypes: SnapType[]): Promise<IIntersection[]>;\n}\n\nexport abstract class Model extends Object3D {\n    get modelId(): string {\n        return this.name;\n    }\n\n    protected boundingBox: BehaviorSubject<Box3>;\n\n    constructor(name: string) {\n        super();\n        super.name = name;\n        this.boundingBox = new BehaviorSubject(new Box3());\n        this.up.copy(Vector3Const.up);\n    }\n\n    getBoundingBox(ids?: number[]): Promise<Box3> {\n        return Promise.resolve(this.boundingBox.value);\n    }\n\n    subscribeToBoundingBox(callback: (box: Box3) => void): void {\n        this.boundingBox.subscribe(callback);\n    }\n\n    transform(matrix: Matrix4): void {\n        const newTransform = new Matrix4().fromArray(matrix.elements);\n        const oldTransform = this.matrixWorld.clone();\n        newTransform.decompose(this.position, this.quaternion, this.scale);\n\n        const bbTransform = newTransform.multiply(oldTransform.invert());\n        this.boundingBox.value.applyMatrix4(bbTransform);\n\n        this.updateMatrixWorld(true);\n        this.boundingBox.next(this.boundingBox.value);\n    }\n\n    isLoading(): boolean {\n        return false;\n    }\n\n    dispose(): void {};\n}\n","export * from \"./common\";\nexport * from \"./WebglViewer\";\nexport * from \"./WebglViewerPlugin\";\nexport * from \"./Selection\";\nexport * from \"./Tools/Fly\";\nexport * from \"./Tools/Orbit\";\nexport * from \"./Tools/Pan\";\nexport * from \"./Tools/Zoom\";\nexport * from \"./Tools/SelectionTool\";\nexport * from \"./Tools/PickingTool\";\nexport * from \"./Tools/AreaSelectionTool\";\nexport * from \"./Helpers/utils\";\nexport * from \"./PublicCamera\";\nexport * from \"./Rendering/VRManager\";\nexport * from \"./Model\";\n\nexport { Vector3, Quaternion, Matrix4, Euler, Box3, Vector2, Line3, Ray, Triangle, Spherical, Cylindrical, Plane, Frustum, Sphere, Matrix3, Box2, Vector4, Color } from \"three\";\nimport { Vector3, Quaternion, Matrix4, Euler, Box3, Vector2, Line3, Ray, Triangle, Spherical, Cylindrical, Plane, Frustum, Sphere, Matrix3, Box2, Vector4, Color } from \"three\";\n\n// Make math classes available in window context for tests and debugging\n// Using eval to allow tree-shaking\nconst threeMath =  { Vector3, Quaternion, Matrix4, Euler, Box3, Vector2, Line3, Ray, Triangle, Spherical, Cylindrical, Plane, Frustum, Sphere, Matrix3, Box2, Vector4, Color };\n// @ts-ignore\nwindow.threeMath = threeMath;\n// tslint:disable-next-line:no-eval\neval(\"Object.assign(window, threeMath)\");\n"],"names":["BehaviorSubject","_super","tslib_1.__extends","subscription","this","closed","AnimationFrameAction","_this","scheduler","delay","id","AnimationFrameScheduler","active","error","actions","index","action","count","animationFrameScheduler","input","subscriber","err","empty","period","counter","PairwiseOperator","prototype","call","PairwiseSubscriber","pair","inclusive","TakeWhileOperator","destination","result","nextOrComplete","Checksum","[object Object]","Int32Array","Float32Array","intPlaceholder","buffer","Uint8Array","data","Number","isInteger","MAX_INT32","MIN_INT32","floatPlaceholder","compute","i","length","codePointAt","p","hasOwnProperty","add","crc","bytes","k","POLY","PickerCache","Map","screenPosition","models","complexity","command","sleep","_get","Promise","_reportProcessingStart","_reportProcessingEndAndStore","cachedPick","getCompatibleCache","intersection","resolve","listeners","push","getCache","Error","setCache","forEach","l","entry","cache","delete","compatibility","checksum","_toChecksum","get","r","set","clear","x","y","m","name","ms","setTimeout","Picker","_camera","_models","_container","settingsProxy","top","Plane","right","bottom","left","near","far","topLeft","Vector3","topRight","bottomLeft","bottomRight","topLeftNear","bottomRightNear","topLeftPoint","Vector2","bottomRightPoint","screenPointTopLeft","screenPointBottomRight","screenPositionToRayTracePoint","camera","unproject","setFromCoplanarPoints","getWorldDirection","normal","constant","position","Infinity","Frustum","subscribe","box","_worldBoundingBox","snapDistance","caster","Caster","setFromCamera","frustum","createFrustumFromScreenPoint","screenPoint","createFrustumFromScreenRect","clone","subScalar","addScalar","execCached","undefined","async","createCaster","navigation","reduceIntersections","pickAllModels","settings","snapTypes","waitIfBusy","pickAllModelsSnapped","includes","snapType","excludeIntersected","ray","picks","getIterable","model","isSelectable","areaPick","intersections","all","filter","item","promises","pick","pickerBusy","pickSnapped","ins","flat","reduce","a","b","deltaDistance","distanceToRay","distance","deltaPriority","pickPriority","deltaSnapType","point","container","out","dimensions","getBoundingClientRect","clientWidth","clientHeight","Raycaster","pos","DEG_RATIO","getPerspectiveViewWorldSize","fov","Math","tan","PI","iterate","array","loop","Array","isArray","disposeImage","image","Vector3Const","Object","freeze","Zoom","_api","_zoomTarget","_cameraExpectedPosition","inputs","inputHandler","scrollStarted","_zoom$","zoom$","pipe","mergeMap","event","_scrollStart","map","e","applyZoom","_scrollSpeed","speed","debounceTime","tap","_pinch$","pointerDown$","touchCount","addIntersectionForNavigation","picker","onPinchStart","pointerMove$","onPinchMove","takeUntil","pointerUp$","enabled","Name","useWorldCenter","worldBoundingBox","value","getCenter","pickForNavigation","setZoomTarget","_scrollHandle","unsubscribe","_pinchHandle","_rayTracePoint","distanceTo","copy","dist","getDistanceToNearestModel","sub","normalize","multiplyScalar","min","max","getBoundingBoxesIterable","d","distanceToPoint","deltaZoom","cameraDirection","zoomOffset","dot","snapGeometryType","zoomPosition","callListeners","forward","up","applyQuaternion","quaternion","aspect","orthoSize","pickDY","pickDX","shiftY","shiftX","adjustOrthoClipping","isPerspectiveCamera","perspectiveZoom","isOrthographicCamera","orthographicZoom","oe","originalEvent","getScreenDistance","touches","previousPinchTargetTime","performance","now","previousPinchDistance","getTouchDistance","touchDistance","delta","_pinchSpeed","Pan","SinglePointerTool","super","deltaX","previousEvent","deltaY","_speed","mouseButton","_dragObservable","createDragObservable","observableOptions","_downCallback","moveCallback","viewWorldSize","getViewWorldSize","_dragHandle","AbstractOrbit","_originalUp","_originalDirection","_originalPosition","offset","_rotationPoint","direction","_offset","dragObservable","downCallback","upCallback","_startPoint","calculatingRotationPoint","calculateRotationPoint","sphericalDirection","DirectionToSpherical","translateCamera","updateOriginalCamera","EPS","rotateSpherical","Orbit","msElapsed","defer","start","interval","duration","ems","takeWhile","t","concat","of","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","pow","singleTween","easing","end","Fly","_minSpeed","_keyObservable","merge","keyDown$","keyUp$","processKey","_moveObservable","pairwise","move","_dir","lengthSq","_speedIncrease","_maxSpeed","_fly","sign","type","code","z","shiftKey","equals","zero","document","hasFocus","_keyHandle","_moveHandle","VRNavigation","api","that","previousTimestamp","timestamp","_scene","scene","_refOrientation","Quaternion","vrCam","renderingManager","vr","toVRCamera","getWorldQuaternion","_refMatrix","matrixWorld","_enabled","addAnimationFrameListener","update","removeAnimationFrameListener","_session","renderer","xr","getSession","sources","intensity","source","pad","hapticActuators","pulse","inputSources","cameraRig","axisSumX","axisSumY","axes","gamepad","camOrientation","camDir","INSTANT_BREAK_THRESHOLD","abs","ACCELERATION_THRESHOLD","ACC","_accelerating","dTot","BASE_SPEED","artificialRotationDelta","_artificialRotationInProgress","hapticsPulse","ARTIFICIAL_ROT_ANGLE","_artificialRotation","newCamDir","applyAxisAngle","camPos","getWorldPosition","lookAt","ApiContainer","GamepadNavigation","observable","pads","Gamepad","window","navigator","getGamepads","gamePads","ToolManager","addTool","SelectionTool","AreaSelectionTool","PickingTool","cursor","eventDispatcher","activateDefaultTool","_startEmittingNavigationEvents","_subscribeToDragging","navStarted","cameraSubject","next","_disableConflictingTools","_enableConflictingTools","toolName","tools","tool","detail","_conflictingTools","onFinished","activeTool","_activeTool","dispatch","CustomEvent","VRManager","session","_update","orderIndependentTransparency","origOrderIndependentTransparency","_removeCameraRig","isSessionSupported","isVRAvailable","requestSession","optionalFeatures","then","onend","onEnd","setSession","antialias","renderEdges","updateProjectionMatrix","_createCameraRig","toolManager","Object3D","rig2","parent","remove","isPresenting","getCamera","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","platform","maxTouchPoints","MSStream","createMatch","userAgent","regex","test","isMobile","param","nav","tmp","split","match","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","WebGLAnimation","context","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","callback","setContext","WebXRController","_targetRay","_grip","_hand","WebXRManager","gl","scope","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","cameraL","PerspectiveCamera","layers","enable","viewport","Vector4","cameraR","cameras","cameraVR","ArrayCamera","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","dispatchEvent","onSessionEnd","disconnect","setFramebuffer","setRenderTarget","getRenderTarget","animation","onInputSourcesChange","removed","added","getController","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","setFramebufferScaleFactor","console","warn","setReferenceSpaceType","getReferenceSpace","addEventListener","attributes","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","alpha","depth","stencil","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","matrix","multiplyMatrices","matrixWorldInverse","invert","depthNear","depthFar","decompose","scale","children","updateMatrixWorld","setFromMatrixPosition","ipd","projL","projectionMatrix","elements","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","compose","near2","far2","left2","right2","top2","bottom2","makePerspective","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","renderState","framebuffer","cameraVRNeedsUpdate","view","getViewport","fromArray","transform","width","height","dispose","assign","constructor","Group","matrixAutoUpdate","visible","joints","inputState","pinching","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","inputjoint","values","jointPose","getJointPose","jointName","joint","rotation","jointRadius","radius","indexTip","thumbTip","distanceToPinch","threshold","handedness","target","getPose","targetRaySpace","gripSpace","EventDispatcher","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","NearestFilter","LinearFilter","LinearMipmapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","RGBADepthPacking","WebGLUtils","extensions","capabilities","isWebGL2","convert","extension","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","WebGLAttributes","buffers","WeakMap","attribute","isInterleavedBufferAttribute","deleteBuffer","bufferType","isGLBufferAttribute","cached","version","bytesPerElement","elementSize","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","Float64Array","Uint16Array","isFloat16BufferAttribute","Int16Array","Uint32Array","Int8Array","BYTES_PER_ELEMENT","updateRange","bufferSubData","subarray","updateBuffer","UniformsLib","common","diffuse","Color","opacity","uvTransform","Matrix3","uv2Transform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","lightProbe","directionalLights","properties","color","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","points","size","sprite","center","UniformsCache","light","uniforms","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","state","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directional","directionalShadow","spot","spotShadow","rectArea","rectAreaLTC1","rectAreaLTC2","pointShadow","hemi","vector3","matrix4","Matrix4","matrix42","setup","g","sort","shadowMap","shadow","texture","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","cos","angle","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","has","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","viewMatrix","transformDirection","applyMatrix4","identity","premultiply","extractRotation","WebGLRenderState","lightsArray","shadowsArray","init","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderCallDepth","emptyTexture","Texture","emptyTexture2dArray","DataTexture2DArray","emptyTexture3d","DataTexture3D","emptyCubeTexture","CubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","n","toArray","arraysEqual","copyArray","allocTexUnits","textures","allocateTextureUnit","setValueV1f","v","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","w","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","getSingularSetter","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","setValue","PureArrayUniform","StructuredUniform","seq","updateCache","u","RePathPart","addUniform","uniformObject","parseUniform","path","pathLength","lastIndex","exec","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","WebGLInfo","render","calls","triangles","lines","memory","geometries","programs","autoReset","reset","mode","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","premultipliedAlpha","clearColor","depthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthTest","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","stencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","indexOf","parseFloat","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","flipSided","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","useProgram","setMaterial","material","frontFaceCW","side","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","setLineWidth","lineWidth","setScissorTest","scissorTest","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","texImage3D","scissor","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","removeEventListener","instanceMatrix","instanceColor","object","geometry","buffergeometry","isInstancedMesh","hasEventListener","ARRAY_BUFFER","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","plane","viewNormalMatrix","uniform","needsUpdate","resetGlobalState","numPlanes","numIntersection","projectPlanes","planes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","getNormalMatrix","i4","enableLocalClipping","beginShadows","endShadows","setState","useCache","clippingPlanes","clipIntersection","clipShadows","materialProperties","nGlobal","lGlobal","clippingState","cloneUniforms","src","dst","property","isColor","isMatrix3","isMatrix4","isVector2","isVector3","isVector4","isTexture","slice","mergeUniforms","merged","setOptional","upload","seqWithValue","WebGLRenderTarget","options","defineProperty","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","generateMipmaps","depthTexture","WebGLCubeRenderTarget","dummy","_needsFlipEnvMap","shader","tEquirect","vertexShader","fragmentShader","BoxGeometry","ShaderMaterial","mesh","Mesh","currentMinFilter","CubeCamera","currentRenderTarget","WebGLCubeMaps","cubemaps","mapTextureMapping","onTextureDispose","cubemap","currentRenderList","getRenderList","renderTarget","fromEquirectangularTexture","setRenderList","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","workInfluences","objectInfluences","morphTargetInfluences","influences","influence","MAX_SAFE_INTEGER","morphTargets","morphAttributes","morphNormals","morphInfluencesSum","getAttribute","setAttribute","hasAttribute","deleteAttribute","morphBaseInfluence","morphTargetsRelative","getUniforms","WebGLMaterials","refreshUniformsCommon","emissive","emissiveIntensity","isCubeTexture","__maxMipLevel","uvScaleMap","uv2ScaleMap","clearcoatMap","clearcoatNormalMap","clearcoatRoughnessMap","isWebGLRenderTarget","updateMatrix","refreshUniformsStandard","roughness","metalness","negate","envMapIntensity","refreshFogUniforms","isFog","isFogExp2","density","refreshMaterialUniforms","pixelRatio","isMeshBasicMaterial","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","specular","shininess","refreshUniformsPhong","isMeshStandardMaterial","isMeshPhysicalMaterial","clearcoat","clearcoatRoughness","sheen","clearcoatNormalScale","transmission","transmissionMap","refreshUniformsPhysical","isMeshMatcapMaterial","matcap","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","isMeshDistanceMaterial","referencePosition","nearDistance","farDistance","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","dashSize","totalSize","gapSize","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","isShaderMaterial","uniformsNeedUpdate","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowSide","0","1","2","shadowMaterialVertical","defines","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","vsm_vert","vsm_frag","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","BufferGeometry","BufferAttribute","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","MeshDepthMaterial","depthPacking","skinning","getDistanceMaterialVariant","MeshDistanceMaterial","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","isSkinnedMesh","keyA","uuid","keyB","materialsForVariant","cachedMaterial","wireframe","wireframeLinewidth","linewidth","renderObject","shadowCamera","isMesh","isLine","isPoints","receiveShadow","frustumCulled","intersectsObject","modelViewMatrix","groups","kl","group","groupMaterial","materialIndex","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","il","shadowFrameExtents","getFrameExtents","multiply","floor","isPointLightShadow","pars","viewportCount","getViewportCount","vp","updateMatrices","getFrustum","WebGLExtensions","getExtension","arrayMax","WebGLGeometries","bindingStates","wireframeAttributes","onGeometryDispose","releaseStatesOfGeometry","isInstancedBufferGeometry","_maxInstanceCount","updateWireframeAttribute","indices","geometryIndex","geometryPosition","c","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","geometryAttributes","getWireframeAttribute","currentAttribute","WebGLProperties","key","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","unshift","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","list","WebGLCapabilities","parameters","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","methodName","WebGLIndexedBufferRenderer","setIndex","drawElements","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderLib","basic","lambert","phong","standard","toon","dashed","background","t2D","cube","equirect","distanceRGBA","WebGLBackground","objects","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isWebGLCubeRenderTarget","onBeforeRender","copyPosition","toneMapping","PlaneGeometry","WebGLShader","string","createShader","shaderSource","compileShader","physical","programIdCount","addLineNumbers","join","getEncodingComponents","LinearEncoding","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","LogLuvEncoding","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","generateExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","flatShading","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filterEmptyLine","generateDefines","chunks","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","parseInt","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","CubeUVRefractionMapping","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","MultiplyOperation","MixOperation","AddOperation","WebGLProgram","cacheKey","getContext","gammaFactorDefine","gammaFactor","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","glslVersion","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexColors","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","shadowMapEnabled","sizeAttenuation","alphaTest","physicallyCorrectLights","NoToneMapping","dithering","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","GLSL3","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","index0AttributeName","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","cachedUniforms","cachedAttributes","deleteShader","getAttributes","destroy","releaseStatesOfProgram","deleteProgram","usedTimes","WebGLPrograms","clipping","shaderIDs","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","bones","skeleton","nVertexUniforms","nVertexMatrices","getMaxBones","normalMapType","ObjectSpaceNormalMap","TangentSpaceNormalMap","maxMorphTargets","maxMorphNormals","toneMapped","derivatives","fragDepth","drawBuffers","shaderTextureLOD","customProgramCacheKey","getProgramCacheKey","UniformsUtils","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLTextures","_gl","utils","_videoTextures","_canvas","useOffscreenCanvas","OffscreenCanvas","createCanvas","createElementNS","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","HTMLCanvasElement","ImageBitmap","MathUtils","floorPowerOfTwo","canvas","drawImage","isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","internalFormat","R32F","R16F","R8","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","f","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LINEAR","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","isMultiRenderTarget","attachmentProperties","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","flipY","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","unpackAlignment","isCompressed","isCompressedTexture","isDataTexture","cubeImage","glInternalFormat","mipmaps","setTextureParameters","mipmap","mipmapImage","onUpdate","uploadCubeTexture","wrappingToGL","RepeatWrapping","REPEAT","ClampToEdgeWrapping","CLAMP_TO_EDGE","MirroredRepeatWrapping","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipmapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","wrapR","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","isDataTexture2DArray","isDataTexture3D","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","setupFrameBufferTexture","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","updateMultisampleRenderTarget","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","MultiRenderTarget","WebGLBindingStates","maxVertexAttributes","vaoAvailable","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","normalized","stride","vertexAttribIPointer","resetDefaultState","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","attributesNum","cachedAttribute","geometryAttribute","saveCache","ELEMENT_ARRAY_BUFFER","programAttributes","materialDefaultAttributeValues","defaultAttributeValues","programAttribute","itemSize","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","createCanvasElement","style","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderState","renderStateStack","domElement","sortObjects","toneMappingExposure","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","materials","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","message","initGLContext","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","uv","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","determinant","setProgram","rangeFactor","dataCount","rangeStart","drawRange","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","traverseVisible","isLight","compiled","traverse","material2","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","isArrayCamera","jl","camera2","normalMatrix","renderObjectImmediate","onAfterRender","lightsStateVersion","programCacheKey","programChange","onBeforeCompile","needsLights","materialNeedsLights","progUniforms","uniformsList","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","uCamPos","cameraPosition","boneTexture","sqrt","ceilPowerOfTwo","boneMatrices","DataTexture","boneTextureSize","isCamera","setFromProjectionMatrix","opaqueObjects","transparentObjects","drawBuffersWEBGL","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","resetState","__THREE_DEVTOOLS__","EquirectangularToCubeGenerator","sourceTexture","Scene","createMaterial","BoxBufferGeometry","params","shaderMaterial","equirectangularMap","WVBackground","Euler","addListener","redraw","backgroundEuler","backgroundRotation","backgroundCamera","setFromEuler","toColor","toGradient","toSkybox","toTexture","gradient","topColor","bottomColor","createElement","fillStyle","getHexString","fillRect","repeat","cubeTexture","getImagesFromSkyboxAtlas","textureSrc","srcImg","imgs","imageObj","rotMatrix","Uniform","backgroundMaterial","boxGeometry","backgroundScene","planeGeometry","PlaneBufferGeometry","syncCamera","Pass","needsSwap","renderToScreen","FullScreenQuad","OrthographicCamera","_mesh","EffectPass","setFullscreenMaterial","screen","getFullscreenTriangle","writeBuffer","vertices","uvs","DepthPeelingRenderPass","edgesAndSsaoPass","peelsCount","transparencyPeelsCount","depthPeelingEnabled","combinePeelsPass","createCombinePeelsMaterial","isFragDepthAvailable","isDepthTextureAvailable","peelRenderTargets","createRenderTarget","createDepthTexture","mat","inputBuffer","globalTransparent","peelingDepthTexture","isDepthPeelingMaterial","origTransparent","globalOpacity","getFullscreenMaterial","renderWithDepthPeeling","depthPrecisionFix","isWebgl2","DepthTexture","fragmentShaderCommon","EdgesAndSsaoRenderPass","colorTexture","multiRenderTarget","normalTexture","noiseTexture","createNoiseTexture","ssaoRenderTarget","ssaoSimpleRenderTarget","ssaoPass","createSsaoMaterial","ssaoSimplePass","edgesPass","createEdgesMaterial","noiseData","random","normalEdgeFadeBuffer","ssaoBuffer","cameraNearFar","texelSize","uProjectionInverse","projectionMatrixInverse","simple","noiseBuffer","SIMPLE","renderSsao","shouldRenderMaterial","renderWithEdges","renderWithoutEdges","shouldRenderAnything","traverseMaterials","o","srm","isWVMeshMaterial","ssao","fullRender","progressiveRendering","RenderPass","_oldClearColor","create","readBuffer","oldClearAlpha","oldOverrideMaterial","oldAutoClear","fragmentShader$8","vertexShader$4","OutlineEffectMaterial","maskTexture","setTexelSize","fragment","SelectionEffectPass","edgeTexture","edgeStrength","fillStrength","selectionScene","renderTargetMask","renderTargetOutline","maskPass","maskMaterial","outlinePass","shouldClear","modelId","cloned","getObjectByName","toString","Points","geom","boundingBox","boundingSphere","getIndex","clearGroups","addGroup","devicePixelRatio","h","ShaderPass","textureID","fsQuad","FXAAShader","tDiffuse","FXAAPass","deltaTime","maskActive","PassComposer","updateAntialias","depthPeelingRenderPass","selectionEffectPass","selectionColor","fxaaPass","rt","mainPassRenderTarget","renderPasses","beforeSelectionPasses","afterSelectionPasses","beforeAntialiasingPasses","afterAntialiasingPasses","passes","pass","RenderingManager","viewSize","renderRequested","composer","initializeRenderer","_boundingBox","isEmpty","fitNearAndFarPlanes","aabb","_isMobile","listener","beforeRenderListeners","afterRenderListeners","splice","removeListener","animationFrameListeners","updateCanvasSize","lastRenderTime","toBlob","useWebgl2","driverRendererString","UNMASKED_RENDERER_WEBGL","SHADING_LANGUAGE_VERSION","VENDOR","obj","viewportScale","visualViewport","trunc","_element","bubbles","composed","eventName","HtmlElementPositioner","_htmlObjects","Set","addBeforeRenderListener","appendChild","removeChild","parentClientRect","htmlObject","updatePosition","Models","selection","Box3","_modelContainer","setupSelection","setSelection","ids","clearSelection","addToScene","getBoundingBox","subscribeToBoundingBox","recalculateWorldBoundingBox","from","keys","find","makeEmpty","union","Registry","LUT","identifier","load","Selection","origin","current","selected","newSelection","newIds","origListeners","WVCamera","Camera","nearMin","farPlaneDefault","PI_2","sphericalUp","scaled_forward","scaled_right","scaled_up","rotationPoint","SphericalToDirection","crossVectors","farNormal","nearNormal","zoom","projectionType","updatePerspectiveProjectionMatrix","updateOrthographicProjectionMatrix","wider","DEG2RAD","dx","dy","makeOrthographic","res","focusPoint","_getViewFocusPoint","_switchToPerspective","_switchToOrthographic","rect","animationTime","easeFunc","animatePosition","animateRotation","stopMoveAnimation","startPosition","lastPosition","resolved","rejected","cameraMoverComplete","cameraMover","lerpVectors","stopRotationAnimation","last","cameraRotatorComplete","cameraRotator","slerp","boundingbox","preset","tightness","firstLoad","setFromRotationMatrix","animate","cam","_matrix","line","dashScale","dashOffset","LineMaterial","defineProperties","enumerable","setValues","isLineMaterial","LineSegmentsGeometry","InstancedBufferGeometry","Float32BufferAttribute","vector","isLineSegmentsGeometry","instanceStart","instanceEnd","computeBoundingBox","computeBoundingSphere","setPositions","lineSegments","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","setColors","colors","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","WireframeGeometry","fromLineSegments","isGeometry","isBufferGeometry","setFromBufferAttribute","Sphere","maxRadiusSq","fromBufferAttribute","distanceToSquared","isNaN","toJSON","applyMatrix","LineGeometry","isLineGeometry","fromLine","LineSegments2","isLineSegments2","computeLineDistances","lineDistances","instanceDistanceBuffer","raycast","ssOrigin","ssOrigin3","mvMatrix","Line3","closestPoint","raycaster","intersects","Line2","at","deltaDist","lerp","closestPointToPointParameter","zPos","isInClipSpace","isInside","pointOnLine","distanceSqToSegment","face","faceIndex","uv2","MeshLine","Ray","USE_DASH","vectors","positions","positionsAttribute","instanceStartAttr","_box","intersectsBox","_inverseMatrix","_ray","step","LineSegments","vStart","vEnd","intersect","interPoint","lineStart","lineEnd","segmentPoint","containsPoint","Cursor3D","createCursors","createRenderPass","faceCursor","initNavigationIntegration","pointsGeometry","textureLoader","TextureLoader","loadTexture","url","markerMaterial","ringGeometry","RingGeometry","translate","rotateZ","ringMesh","createScreenStaticSizeMesh","pointCursor","lineCursor","lineHighlight","renderPass","addPassAfterAntialiasing","isNavigating","onMove","_moveSubscription","calculateIntersection","snapLineStart","snapLineEnd","Analytics","send","hitType","keyword","containsViewerKeyword","stack","logError","errorStack","keywords","s","analyticsEnabled","q","Date","getTime","getElementsByTagName","parentNode","insertBefore","cmd","param1","param2","gawv","eventCategory","eventAction","eventLabel","exDescription","PublicCamera","_settingsHandler","pitch","yaw","fitToView","_tmpVec3","_rotation","atan2","rotationToQuaternion","_tmpEuler","_tmpQuat","_direction","getProjectionType","setProjectionType","fieldOfView","fit","viewPreset","entityIds","TextureGenerator","textDescriptions","atlases","atlasIndex","drawCommands","resetCanvas","td","lineSpace","text","scaledSize","fontString","font","measurementContext","metrics","measureText","lineHeight","bbAscent","actualBoundingBoxAscent","actualBoundingBoxDescent","fits","TEXT_ATLAS_MARGIN","offsetX","offsetY","boundingBoxY","makeTextAtlasTexture","createAtlasSample","boundingBoxX","samplesForCurrentAtlas","margin","MAX_ATLAS_SIZE","atlasSize","atlasCanvas","ctx","fillText","createTextTexture","SettingsProxyHandler","Proxy","WebglViewer","HTMLElement","lengthUnit","decimals","darkModeMaterials","vertexInterpolationMaterials","hoverHighlightEnabled","hoverColor","staticRootUrl","sandbox","_initializeApi","analytics","addViewerErrorStackKeyword","quality","plugins","plugin","activateQualityPreset","ref","loader","registry","entries","logLoadEvent","initApiForJsdom","DefaultUp","startSelectionEventEmitter","htmlElementPositioner","InputHandler","_publicCamera","subscribeKeys","setWorldBoundingBox","textureGenerator","createShadowDom","attachShadow","shadowRoot","innerHTML","screenshot","eval","WebglViewerPlugin","Model","newTransform","oldTransform","bbTransform","threeMath","Triangle","Spherical","Cylindrical","Box2"],"mappings":"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O+V,EAAMhC,EAAQ8gB,EAAiBo0B,GAErEliB,EAAKpvB,OAAQ3X,EAAO4nC,EAAMqhB,0BCxDH,gHCAA,wFCAA,gGCAA,4iBCAA,6GCAA,8DCAA,+HCAA,6uYCAA,u5CCAA,urBCAA,kKCAA,oGCAA,kGCAA,sFCAA,6ECAA,mHCAA,yPCAA,m7GCAA,88ICAA,ivBCAA,iLCAA,gMCAA,mPCAA,8FCAA,kFCAA,0kHCAA,whDCAA,sQCAA,8VCAA,iUCAA,6rBCAA,+ECAA,yECAA,4TCAA,sPCAA,kdCAA,oSCAA,+HCAA,qhGCAA,2kKCAA,8sGCAA,kGCAA,yiCCAA,qOCAA,42CCAA,u+CCAA,8rMCAA,slJCAA,gkCCAA,8SCAA,sUCAA,yMCAA,yNCAA,kaCAA,gLCAA,iFCAA,iYCAA,iPCAA,ySCAA,gGCAA,gtBCAA,+PCAA,m/BCAA,mkCCAA,mxBCAA,qtCCAA,4GCAA,8YCAA,iTCAA,qxDCAA,6NCAA,qPCAA,gHCAA,ioBCAA,ySCAA,qGCAA,+rVCAA,+7CCAA,+mDCAA,wkDCAA,+PCAA,wkCCAA,6ZCAA,0fCAA,kOCAA,gGCAA,+HCAA,qjECAA,wICAA,oGCAA,gHCAA,oKCAA,+FCAA,4GCAA,8JCAA,sICAA,kTCAA,4PCAA,oLCAA,sXCAA,mRCAA,igCCAA,ukCCAA,0vBCAA,0vBCAA,8YCAA,6NCAA,o2BCAA,8jBCAA,8xDCAA,04BCAA,87ECAA,iqCCAA,0oDCAA,kkCCAA,u0DCAA,+sCCAA,mnECAA,8wCCAA,kwGCAA,88CCAA,ixBCAA,w5CCAA,sxBCAA,ytBCAA,6bCAA,+aCAA,4vBCAA,wpCCmIlB,MAAMK,YAAc,CAC1BC,kBAAmBA,kBACnBC,uBAAwBA,uBACxBC,mBAAoBA,mBACpBC,eAAgBA,eAChBC,oBAAqBA,oBACrBC,aAAcA,aACdC,mBAAoBA,mBACpBC,MAAOA,MACPC,sBAAuBA,sBACvBC,yBAA0BA,yBAC1BC,8BAA+BA,8BAC/BC,4BAA6BA,4BAC7BC,uBAAwBA,uBACxBC,eAAgBA,eAChBC,oBAAqBA,oBACrBC,kBAAmBA,kBACnBC,aAAcA,aACdv0B,OAAQA,OACRw0B,4BA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SACA,iFACA,sBACA,4BACA,SACA,iFACA,sBACA,4BACA,SACA,iFACA,6BACA,SACA,2CACA,sEACA,mEACA,8DACA,SACA,6EACA,2EACA,SACA,oDACA,wCACA,wCACA,iEACA,gDACA,SACA,iBACA,kBACA,SACA,mCACA,SACA,iFACA,0BACA,SACA,+CACA,6DACA,4EACA,yEACA,iCACA,SACA,iBACA,kBACA,SACA,gCACA,SACA,iFACA,uBACA,SACA,6CACA,6DACA,SACA,wDACA,yEACA,mEACA,SACA,6BACA,SACA,iFACA,iCACA,SACA,iCACA,SACA,gDACA,2CACA,SACA,gCACA,2CACA,aACA,+BACA,2CACA,aACA,gCACA,2CACA,aACA,qCACA,2CACA,aACA,SACA,iFACA,6BACA,SACA,oDACA,4DACA,SACA,6BACA,uCACA,aACA,gCACA,uCACA,aACA,+BACA,uCACA,aACA,iCACA,uCACA,aACA,SACA,GACA,GACA,iFACA,sDACA,iFACA,qEACA,iFACA,8BACA,SACA,oCACA,uEACA,uDACA,mEACA,SACA,iBACA,iFACA,2EACA,iFACA,8CACA,SACA,eACA,iFACA,8EACA,8DACA,gEACA,kEACA,6DACA,SACA,qCACA,SACA,GACA,GACA,iFACA,GACA,oDACA,GACA,iFACA,GACA,iFACA,4DACA,iFACA,kCACA,gCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,GACA,iFACA,yDACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,iFACA,sDACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,GACA,GACA,iFACA,GACA,8CACA,GACA,iFACA,2EACA,4BACA,kCACA,8BACA,8BACA,8BACA,8BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4CACA,gCACA,QACA,4BACA,mCACA,8BACA,gCACA,gCACA,gCACA,4BACA,8BACA,8BACA,8BACA,qCACA,SACA,iFACA,2BACA,kDACA,kEACA,SACA,iFACA,2BACA,mBACA,uBACA,uBACA,iDACA,6DACA,uDACA,wCACA,0EACA,YACA,2EACA,aACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,2BACA,2CACA,qDACA,oEACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,yBACA,8BACA,gCACA,gEACA,4EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,+DACA,wEACA,+DACA,wEACA,SACA,GACA,GACA,iFACA,2DACA,iFACA,gCACA,6DACA,QACA,6DACA,SACA,GACA,GACA,GACA,GACA,iFACA,GACA,kDACA,GACA,iFACA,qBACA,iFACA,8BACA,SACA,oFACA,gCACA,sBACA,SACA,sEACA,oFACA,qCACA,sCACA,oCACA,SACA,8BACA,4DACA,sCACA,iEACA,mBACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,oCACA,+CACA,wCACA,yCACA,sCACA,SACA,oCACA,+CACA,oEACA,mCACA,gCACA,gCACA,wCACA,yCACA,wCACA,yCACA,yCACA,SACA,oCACA,kDACA,+CACA,0CACA,2CACA,0CACA,2CACA,0CACA,SACA,oCACA,+DACA,+CACA,0CACA,2CACA,0CACA,2CACA,6CACA,SACA,oCACA,yDACA,gDACA,0DACA,oCACA,uCACA,8CACA,yEACA,6BACA,iCACA,mCACA,SACA,oCACA,iEACA,gDACA,2EACA,uCACA,+BACA,2BACA,gCACA,qCACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,iFACA,0CACA,2CACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,iEACA,yEACA,4DACA,uCACA,yBACA,qEACA,0CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,6DACA,yEACA,+EACA,+CACA,kEACA,qDACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,+EACA,sDACA,qCACA,+DACA,oDACA,0BACA,oDACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oDACA,yDACA,0EACA,2DACA,iDACA,wCACA,MACA,iFACA,uBACA,sBACA,sBACA,oCACA,kCACA,wDACA,4CACA,wCACA,oBACA,wCACA,qBACA,iBACA,wCACA,4DACA,iFACA,gBACA,4DACA,iFACA,iBACA,kCACA,qCACA,iBACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,YACA,oDACA,wCACA,oCACA,gBACA,oCACA,iBACA,mCACA,8GACA,8GACA,8GACA,8GACA,gBACA,wGACA,wGACA,wGACA,wGACA,iBACA,aACA,iFACA,2CACA,2CACA,4CACA,4CACA,2CACA,2CACA,+CACA,+CACA,sEACA,6CACA,oFACA,oDACA,iFACA,oBACA,kCACA,2BACA,gBACA,4BACA,iBACA,iFACA,oCACA,mCACA,+GACA,+GACA,+GACA,+GACA,gBACA,yGACA,yGACA,yGACA,yGACA,iBACA,YACA,uGACA,uGACA,aACA,iFACA,wCACA,wCACA,4CACA,8CACA,qDACA,qDACA,iFACA,4CACA,4CACA,uDACA,uDACA,iFACA,4CACA,4CACA,qEACA,qEACA,uDACA,uDACA,uDACA,uDACA,iFACA,sDACA,oDACA,gDACA,6DACA,iFACA,mCACA,mCACA,uDACA,0DACA,iFACA,2CACA,2CACA,wCACA,wCACA,yDACA,gEACA,0CACA,kEACA,iFACA,uBACA,uBACA,uBACA,wBACA,2DACA,2DACA,gDACA,gDACA,iFACA,uBACA,mDACA,mDACA,uBACA,mDACA,mDACA,kDACA,4DACA,6CACA,4DACA,iFACA,kCACA,qDACA,+CACA,6CACA,2CACA,iFACA,gCACA,gCACA,wDACA,wDACA,sDACA,sDACA,8CACA,sDACA,sDACA,iFACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,wCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,kEACA,kEACA,iDACA,kEACA,kEACA,iFACA,4CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,sEACA,sEACA,qDACA,sEACA,sEACA,iFACA,gDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,0EACA,0EACA,yDACA,0EACA,0EACA,iFACA,oDACA,uCACA,wFACA,wFACA,6EACA,6EACA,uEACA,uEACA,8EACA,8EACA,6DACA,8EACA,8EACA,iFACA,gCACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,yCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,mEACA,mEACA,iDACA,mEACA,mEACA,iFACA,6CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,uEACA,uEACA,qDACA,uEACA,uEACA,iFACA,iDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,2EACA,2EACA,yDACA,2EACA,2EACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,aACA,iFACA,4BACA,iCACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,iFACA,wCACA,wCACA,4CACA,4CACA,iFACA,4DACA,4CACA,4DACA,gDACA,iFACA,yCACA,uCACA,8DACA,6CACA,8DACA,uDACA,iFACA,gEACA,mEACA,8DACA,8DACA,8BACA,wCACA,YACA,+DACA,aACA,IACA,iFACA,SACA,GACA,gBACA,oCACA,WACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,iBACA,YACA,aACA,cACA,WACA,WACA,WACA,gBACA,OACA,GACA,wDACA,iDACA,KACCuc,KAAM,aCrlCIwvB,iBAAiBL,WAG1BpiF,cACIuQ,MAAMgyE,YAGVviF,OAAO2W,EAAyBolE,EAAgC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"}