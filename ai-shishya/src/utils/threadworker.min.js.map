{"version":3,"file":"threadworker.min.js","sources":["../../../webgl-viewer/src/Rendering/DisplayGroup.ts","../../src/GeometryEngine/QueryHandling/ModelStateManager.ts","../../src/GeometryEngine/GeometryBuilders/GeometryBuilder.ts","../../node_modules/flatbuffers/js/flatbuffers.mjs","../../src/TrimBim_generated.ts","../../../../node_modules/three/src/math/MathUtils.js","../../../../node_modules/three/src/math/Quaternion.js","../../../../node_modules/three/src/math/Vector3.js","../../../../node_modules/three/src/math/Matrix3.js","../../../../node_modules/three/src/math/Plane.js","../../../../node_modules/three/src/math/Triangle.js","../../../../node_modules/three/src/math/Spherical.js","../../../../node_modules/three/src/math/Cylindrical.js","../../../../node_modules/three/src/math/Box3.js","../../../../node_modules/three/src/math/Sphere.js","../../../../node_modules/three/src/math/Frustum.js","../../../../node_modules/three/src/math/Ray.js","../../../../node_modules/three/src/math/Matrix4.js","../../../../node_modules/three/src/math/Vector2.js","../../../../node_modules/three/src/math/Box2.js","../../../../node_modules/three/src/math/Line3.js","../../../../node_modules/three/src/math/Euler.js","../../../../node_modules/three/src/math/Vector4.js","../../../../node_modules/three/src/math/Color.js","../../../../node_modules/three/src/core/Face3.js","../../src/GeometryEngine/ThreeMath.ts","../../src/common.ts","../../src/GeometryEngine/GeometryBuilders/MeshGeometryBuilder.ts","../../../../node_modules/three/src/extras/Earcut.js","../../src/GeometryEngine/GeometryBuilders/BRepGeometryBuilder.ts","../../src/GeometryEngine/Pickers.ts","../../src/GeometryEngine/GeometryBuilders/LinePrimitiveBuilder.ts","../../src/GeometryEngine/GeometryBuilders/GraphicsGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/SweptDiskSolidGeometryBuilder.ts","../../../webgl-viewer/src/Helpers/Checksum.ts","../../src/GeometryEngine/Utils.ts","../../src/GeometryEngine/GeometryBuilders/BillboardGeometryBuilder.ts","../../src/GeometryEngine/GeometryBuilders/GridGeometryBuilder.ts","../../src/GeometryEngine/BatchCounter.ts","../../src/GeometryEngine/BatchCluster.ts","../../src/GeometryEngine/GeometryUpdateMessenger.ts","../../src/GeometryEngine/ClusterManager.ts","../../src/GeometryEngine/GeometryBuilders/AlignmentGeometryBuilder.ts","../../src/GeometryEngine/GeometryManager.ts","../../src/GeometryEngine/MaterialManager.ts","../../src/GeometryEngine/InstanceManager.ts","../../src/GeometryEngine/QueryHandling/ModelBuilderWorker.ts","../../node_modules/ismobilejs/src/isMobile.ts","../../src/GeometryEngine/LodManager.ts","../../src/GeometryEngine/ThreadWorkerMessages.ts","../../src/UUID.ts","../../src/GeometryEngine/EntityManager.ts","../../src/GeometryEngine/QueryHandling/Expression.ts","../../src/GeometryEngine/QueryHandling/Parser.ts","../../src/GeometryEngine/QueryHandling/find.ts","../../src/GeometryEngine/ModelEntityState.ts","../../src/GeometryEngine/QueryHandling/QuantizedAxisAlignedBox3.ts","../../src/GeometryEngine/QueryHandling/QuantizedAxisAlignedBox3TreeNode.ts","../../src/GeometryEngine/QueryHandling/QuantizedAxisAlignedBox3Tree.ts","../../src/GeometryEngine/QueryHandling/PickHandler.ts","../../src/GeometryEngine/LayerManager.ts","../../src/GeometryEngine/ThreadWorkerModel.ts","../../src/GeometryEngine/ThreadWorker.ts"],"sourcesContent":["export interface DisplayGroup {\r\n    start: number;\r\n    count: number;\r\n}\r\n\r\nexport const mergeGroups = (input: DisplayGroup[]): DisplayGroup[] => {\r\n    if (input.length === 0) return input;\r\n\r\n    input.sort((a, b) => a.start - b.start);\r\n    const result = [input[0]];\r\n\r\n    for (let i = 1; i < input.length; i++) {\r\n        const r = input[i];\r\n        const last = result[result.length - 1];\r\n\r\n        if (last.start + last.count < r.start)\r\n            result.push(r);\r\n        else if (last.start + last.count < r.start + r.count)\r\n            last.count = r.start + r.count - last.start;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const subtractGroups = (ranges: DisplayGroup[], subtracts: DisplayGroup[]): DisplayGroup[] => {\r\n    if (ranges.length === 0 || subtracts.length === 0) return ranges;\r\n\r\n    subtracts = mergeGroups(subtracts);\r\n\r\n    for (let i = 0; i < subtracts.length; i++) {\r\n        const subtract = subtracts[i];\r\n        if (subtract.count === 0) continue;\r\n\r\n        for (let j = 0; j < ranges.length; j++) {\r\n            const range = ranges[j];\r\n            const startInside = subtract.start > range.start && subtract.start < range.start + range.count;\r\n            const endInside = subtract.start + subtract.count > range.start && subtract.start + subtract.count < range.start + range.count;\r\n            if (startInside && endInside) {\r\n                ranges.push({start: subtract.start + subtract.count, count: range.count + range.start - subtract.start - subtract.count});\r\n                range.count = subtract.start - range.start;\r\n            }\r\n            else if (startInside) {\r\n                range.count = subtract.start - range.start;\r\n            }\r\n            else if (endInside) {\r\n                range.count = range.start + range.count - subtract.start - subtract.count;\r\n                range.start = subtract.start + subtract.count;\r\n            }\r\n            // range is fully inside subtract\r\n            else if (subtract.start <= range.start && subtract.start + subtract.count >= range.start + range.count) {\r\n                ranges.splice(j, 1);\r\n                j--;\r\n            }\r\n        }\r\n    }\r\n\r\n    return ranges;\r\n};\r\n","import { MaterialManager } from \"../MaterialManager\";\r\nimport { ClusterManager } from \"../ClusterManager\";\r\nimport { MessageType, UpdateGeometryMessage } from \"../ThreadWorkerMessages\";\r\nimport { InstanceManager } from \"../InstanceManager\";\r\nimport { ActionType, IMetaMaterial, ISetBatchState } from \"../../Model/ModelBuilderTypes\";\r\nimport { mergeGroups, subtractGroups } from \"@technology/webgl-viewer/dist/esnext/Rendering/DisplayGroup\";\r\nimport { ModelEntityState } from \"../ModelEntityState\";\r\nimport { TrimbimPickPriority } from \"../../common\";\r\nimport { LodManager } from \"../LodManager\";\r\nimport { BatchPrototype } from \"../BatchCluster\";\r\nimport { LayerManager } from \"../LayerManager\";\r\nimport {GeometryManager} from \"../GeometryManager\";\r\n\r\nexport class ModelStateManager {\r\n    private hoveredInstanceIds: number[];\r\n\r\n    constructor(\r\n        private modelId: string,\r\n        private materialManager: MaterialManager,\r\n        private clusterManager: ClusterManager,\r\n        private instanceManager: InstanceManager,\r\n        private lodManager: LodManager,\r\n        private layerManager: LayerManager,\r\n        private state: ModelEntityState,\r\n        private geometryManager: GeometryManager,\r\n    ) {\r\n    }\r\n\r\n    public resetMaterials(entityIds: number[]): void {\r\n        const instanceIds = entityIds ? this.entityIdsToInstanceIds(entityIds) : this.clusterManager.getInstanceIds();\r\n        this.clusterManager.resetMaterials(instanceIds);\r\n    }\r\n\r\n    getMaterials(entityIds: number[]): IMetaMaterial[] {\r\n        return entityIds.map(entityId => {\r\n            const instanceId = this.entityIdsToInstanceIds([entityId])[0];\r\n            if (instanceId === undefined) return undefined;\r\n            const materialId = this.clusterManager.getMaterialId(instanceId);\r\n            return materialId !== undefined ? this.materialManager.getMaterial(materialId) : undefined;\r\n        })\r\n    }\r\n\r\n    public setMaterial(entityIds: number[], material: IMetaMaterial): void {\r\n        const instanceIds = entityIds ? this.entityIdsToInstanceIds(entityIds) : this.clusterManager.getInstanceIds();\r\n\r\n        // copy some parameters from original materials\r\n        const newMaterials: IMetaMaterial[] = [];\r\n        for (const instanceId of instanceIds) {\r\n            const oldMatId = this.clusterManager.getMaterialId(instanceId);\r\n            const oldMat = this.materialManager.getMaterial(oldMatId);\r\n            const newMat = Object.assign({}, material) as IMetaMaterial;\r\n            if (newMat.color === undefined) newMat.color = oldMat.color;\r\n            if (newMat.opacity === undefined) newMat.opacity = oldMat.opacity;\r\n            if (newMat.transparent === undefined) newMat.transparent = oldMat.transparent;\r\n            if (newMat.side === undefined) newMat.side = oldMat.side;\r\n            if (newMat.textureId === undefined) newMat.textureId = oldMat.textureId;\r\n            newMaterials.push(newMat);\r\n        }\r\n        const materialIds = this.materialManager.addMaterials(newMaterials);\r\n\r\n        const groups = instanceIds.reduce((map: Map<number, number[]>, instanceId: number, i: number) => {\r\n            const matId = materialIds[i];\r\n            if (!map.has(matId)) map.set(matId, []);\r\n            map.get(matId).push(instanceId);\r\n            return map;\r\n        }, new Map<number, number[]>());\r\n        groups.forEach((iids: number[], matId: number) => this.clusterManager.setMaterial(iids, matId));\r\n    }\r\n\r\n    public clearSelection(): void {\r\n        this.state.clearSelection();\r\n\r\n        for (const cluster of this.clusterManager.clusterLUT.values()) {\r\n            for (let lodLevel = 0; lodLevel < this.lodManager.getLevelsCount(); lodLevel++) {\r\n                for (const batch of cluster.getBatches(lodLevel)) {\r\n                    if (batch.state.selected.length > 0) {\r\n                        batch.state.selected = [];\r\n                        this.postSetStateMessage(batch);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private postSetStateMessage(batch: BatchPrototype): void {\r\n        const stateUpdate: UpdateGeometryMessage = {\r\n            type: MessageType.UPDATE_GEOMETRY,\r\n            modelId: this.modelId,\r\n            actions: [{\r\n                actionType: ActionType.SET_BATCH_STATE,\r\n                modelId: this.modelId,\r\n                batchId: batch.id,\r\n                state: batch.state\r\n            } as ISetBatchState]\r\n        };\r\n        postMessage(stateUpdate);\r\n    }\r\n\r\n    public resetVisibility(): void {\r\n        this.state.resetVisibility();\r\n\r\n        for (const cluster of this.clusterManager.clusterLUT.values()) {\r\n            for (let lodLevel = 0; lodLevel < this.lodManager.getLevelsCount(); lodLevel++) {\r\n                for (const batch of cluster.getBatches(lodLevel)) {\r\n                    if (batch.state.visible.length === 1 && batch.state.visible[0].start === 0 && batch.state.visible[0].count === Infinity)\r\n                        continue;\r\n                    batch.state.visible = [{ start: 0, count: Infinity }];\r\n                    this.postSetStateMessage(batch);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setSelection(entityIds: number[]): void {\r\n        // TODO: make a diff\r\n        this.clearSelection();\r\n        this.state.setSelection(true, entityIds);\r\n\r\n        const instanceIds = this.entityIdsToInstanceIds(entityIds);\r\n        const batchMap = this.clusterManager.getBatchGeometryByInstanceIds(instanceIds);\r\n        for (const [batchId, locations] of batchMap) {\r\n            const batch = locations[0].batch;\r\n            batch.state.selected = mergeGroups(this.clusterManager.calculateRanges(locations));\r\n            this.postSetStateMessage(batch);\r\n        }\r\n    }\r\n\r\n    public setHovered(entityIds: number[]): void {\r\n        if (!entityIds) {\r\n            this.clearHovered();\r\n            return;\r\n        }\r\n\r\n        const instanceIds = this.entityIdsToInstanceIds(entityIds);\r\n        this.hoveredInstanceIds = instanceIds;\r\n        const batchMap = this.clusterManager.getBatchGeometryByInstanceIds(instanceIds);\r\n        for (const [batchId, locations] of batchMap) {\r\n            const batch = locations[0].batch;\r\n            batch.state.hovered = mergeGroups(this.clusterManager.calculateRanges(locations));\r\n            this.postSetStateMessage(batch);\r\n        }\r\n    }\r\n\r\n    private clearHovered(): void {\r\n        if (!this.hoveredInstanceIds) return;\r\n\r\n        const batchMap = this.clusterManager.getBatchGeometryByInstanceIds(this.hoveredInstanceIds);\r\n        for (const [batchId, locations] of batchMap) {\r\n            const batch = locations[0].batch;\r\n            batch.state.hovered = undefined;\r\n            this.postSetStateMessage(batch);\r\n        }\r\n        this.hoveredInstanceIds = undefined;\r\n    }\r\n\r\n    setVisibility(entityIds: number[], visible: boolean): void {\r\n        this.state.setVisibility(visible, entityIds);\r\n        let instanceIds = entityIds ? this.entityIdsToInstanceIds(entityIds) : this.clusterManager.getInstanceIds();\r\n        if (visible) instanceIds = instanceIds.filter(id => this.layerManager.isVisibleByLayer(id));\r\n        this.applyVisibility(instanceIds, visible);\r\n    }\r\n\r\n    setLayerVisibility(layer: string, visible: boolean): void {\r\n        this.layerManager.setLayerVisibility(layer, visible);\r\n        const instanceIds = visible ? this.layerManager.getLayerInstances(layer).filter(id =>\r\n            this.state.isVisible(this.geometryManager.getEntityId(id))\r\n        ) : this.layerManager.getLayerInstances(layer);\r\n        this.applyVisibility(instanceIds, visible);\r\n    }\r\n\r\n    private applyVisibility(instanceIds: number[], visible: boolean): void {\r\n        const batchMap = this.clusterManager.getBatchGeometryByInstanceIds(instanceIds);\r\n        for (const [batchId, locations] of batchMap) {\r\n            const batch = locations[0].batch;\r\n\r\n            const ranges = this.clusterManager.calculateRanges(locations);\r\n            if (visible)\r\n                batch.state.visible = mergeGroups(batch.state.visible.concat(ranges));\r\n            else\r\n                batch.state.visible = subtractGroups(batch.state.visible, ranges);\r\n            this.postSetStateMessage(batch);\r\n        }\r\n    }\r\n\r\n    public setPickPriority(entityIds: number[], pickPriority: TrimbimPickPriority): void {\r\n        this.state.setPickPriority(pickPriority, entityIds);\r\n    }\r\n\r\n    public resetPickPriority(): void {\r\n        this.state.resetPickPriority();\r\n    }\r\n\r\n    private entityIdsToInstanceIds(entityIds: number[]): number[] {\r\n        const instanceIds = [];\r\n        for (let i = 0, l = entityIds.length; i < l; i++) {\r\n            if (this.instanceManager.entityToInstance.has(entityIds[i]))\r\n                instanceIds.push(...this.instanceManager.entityToInstance.get(entityIds[i]));\r\n        }\r\n        return instanceIds;\r\n    }\r\n}\r\n","import { HitPoint } from \"../HitPoint\";\r\nimport { Frustum, Ray } from \"../ThreeMath\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { IText, TrimbimGeometryType } from \"../../common\";\r\nimport { BatchPrototype } from \"../BatchCluster\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport const normalLength = 32767;\r\n\r\nexport abstract class GeometryBuilder {\r\n    readonly geometryType: TrimbimGeometryType;\r\n    readonly snapGeometryType: GeometryType;\r\n\r\n    protected buffers: GeometryData[] = [];\r\n\r\n    constructor(protected geometry: Fbs.ModelGeometry) { }\r\n\r\n    protected abstract prepareModelTypes(): void;\r\n    protected abstract calculateBufferSizes(geometryDefinition: any, objectType?: ObjectType): GeometryData;\r\n    protected abstract build(geometryDefinition: any, bufferGeometry: GeometryData): void;\r\n\r\n    abstract getGeometries(geometryIndex: number, buildIfEmpty: boolean): GeometryData[];\r\n    abstract pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\r\n\r\n    abstract pickFace(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\r\n    abstract pickLine(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\r\n    abstract pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[];\r\n}\r\n\r\nexport interface GeometryData {\r\n    objectType: ObjectType;\r\n    indices?: Uint16Array | Uint8Array | Uint32Array;\r\n    positions?: Float32Array | Float64Array;\r\n    normals?: Int16Array;\r\n    uvs?: Float32Array;\r\n    pointSizes?: Float32Array;\r\n    indicesLength: number;\r\n    positionsLength: number;\r\n    normalsLength: number;\r\n    uvsLength: number;\r\n    pointSizesLength: number;\r\n    materialId?: number;\r\n    indexPointer?: number;\r\n    positionPointer?: number;\r\n    normalPointer?: number;\r\n    uvPointer?: number;\r\n    pointSizePointer?: number;\r\n    text?: IText,\r\n}\r\n\r\nexport interface ObjectBatchGeometryContainer {\r\n    geometry: GeometryData;\r\n    instanceId?: number;\r\n    start: number;\r\n    batch: BatchPrototype;\r\n}\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport { flatbuffers } from \"flatbuffers\"\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum SegmentType{\r\n  LineSegment= 0,\r\n  PolyLine= 1,\r\n  Arc= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum HorizontalSegmentType{\r\n  Invalid= 0,\r\n  LineSegment= 1,\r\n  CircularArcSegment= 2,\r\n  ClothoidalArcSegment= 3,\r\n  TransientCurveSegment= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum VerticalSegmentType{\r\n  Invalid= 0,\r\n  LineSegment= 1,\r\n  CircularArcSegment= 2,\r\n  ParabolicArcSegment= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum HorizontalTransitionCurveType{\r\n  Invalid= 0,\r\n  BiquadraticParabola= 1,\r\n  BlossCurve= 2,\r\n  ClothoidCurve= 3,\r\n  CosineCurve= 4,\r\n  CubicParabola= 5,\r\n  SineCurve= 6\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum OwnerHistoryState{\r\n  Undefined= 0,\r\n  ReadWrite= 1,\r\n  ReadOnly= 2,\r\n  Locked= 3,\r\n  ReadWriteLocked= 4,\r\n  ReadOnlyLocked= 5\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum OwnerHistoryChangeAction{\r\n  NoChange= 0,\r\n  Modified= 1,\r\n  Added= 2,\r\n  Deleted= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum PropertyType{\r\n  LengthMeasure= 0,\r\n  AreaMeasure= 1,\r\n  VolumeMeasure= 2,\r\n  MassMeasure= 3,\r\n  AngleMeasure= 4,\r\n  StringValue= 5,\r\n  IntValue= 6,\r\n  DoubleValue= 7,\r\n  DateTime= 8,\r\n  Logical= 9,\r\n  Boolean= 10\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum Logical{\r\n  False= 0,\r\n  True= 1,\r\n  Unknown= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum Sidedness{\r\n  Single= 0,\r\n  Double= 1,\r\n  FrontFace= 2,\r\n  BackFace= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum LineStyle{\r\n  Normal= 0,\r\n  Border= 1,\r\n  Center= 2,\r\n  DashDot= 3,\r\n  Dashed= 4,\r\n  Divide= 5,\r\n  Dot= 6,\r\n  Hidden= 7,\r\n  ISO02W100= 8,\r\n  ISO03W100= 9,\r\n  ISO04W100= 10,\r\n  ISO05W100= 11,\r\n  ISO06W100= 12,\r\n  ISO07W100= 13,\r\n  ISO08W100= 14,\r\n  ISO09W100= 15,\r\n  ISO10W100= 16,\r\n  ISO11W100= 17,\r\n  ISO12W100= 18,\r\n  ISO13W100= 19,\r\n  ISO14W100= 20,\r\n  ISO15W100= 21\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum IdentifierType{\r\n  Guid= 0,\r\n  String= 1,\r\n  SpatialHash= 2,\r\n  DwgHandle= 3,\r\n  None= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum GeometryType{\r\n  None= 0,\r\n  BRep= 1,\r\n  TriangleMesh= 2,\r\n  TriangleMesh8= 3,\r\n  SweptDiskSolid= 4,\r\n  GraphicsContainer= 5,\r\n  BRepWithUV= 6,\r\n  BRepWithNormals= 7,\r\n  AlignmentCurve= 8,\r\n  GridLineContainer= 9,\r\n  TexturedTriangleMesh= 10,\r\n  TexturedTriangleMesh8= 11,\r\n  CoordinateGeometryPoint= 12,\r\n  BillboardText= 13,\r\n  Billboard= 14,\r\n  TexturedBillboard= 15,\r\n  Bolt= 16\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum TextureType{\r\n  None= 0,\r\n  Png= 1,\r\n  JPeg= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum LayoutType{\r\n  Invalid= 0,\r\n  LeftToRight= 1,\r\n  RightToLeft= 2,\r\n  Vertical= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum AlignmentType{\r\n  Invalid= 0,\r\n  LeftTop= 1,\r\n  LeftCenter= 2,\r\n  LeftBottom= 3,\r\n  CenterTop= 4,\r\n  CenterCenter= 5,\r\n  CenterBottom= 6,\r\n  RightTop= 7,\r\n  RightCenter= 8,\r\n  RightBottom= 9,\r\n  LeftBaseLine= 10,\r\n  CenterBaseLine= 11,\r\n  RightBaseLine= 12,\r\n  LeftBottomBaseLine= 13,\r\n  CenterBottomBaseLine= 14,\r\n  RightBottomBaseLine= 15\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum BoltType{\r\n  None= 0,\r\n  Normal= 1,\r\n  Round= 2,\r\n  Countersunk= 3,\r\n  Stud= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport enum HierarchyType{\r\n  Unknown= 0,\r\n  SpatialHierarchy= 1,\r\n  SpatialContainment= 2,\r\n  Containment= 3,\r\n  ElementAssembly= 4,\r\n  Group= 5,\r\n  System= 6,\r\n  Zone= 7\r\n}};\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Vec3f {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Vec3f\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec3f {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_x(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_y(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nz():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_z(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @param number z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVec3f(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(z);\r\n  builder.writeFloat32(y);\r\n  builder.writeFloat32(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Vec2d {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Vec2d\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec2d {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat64(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_x(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_y(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVec2d(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {\r\n  builder.prep(8, 16);\r\n  builder.writeFloat64(y);\r\n  builder.writeFloat64(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Vec3d {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Vec3d\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vec3d {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat64(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_x(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_y(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nz():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_z(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @param number z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVec3d(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(z);\r\n  builder.writeFloat64(y);\r\n  builder.writeFloat64(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class AABB3f {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns AABB3f\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):AABB3f {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nmin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nmax(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number min_x\r\n * @param number min_y\r\n * @param number min_z\r\n * @param number max_x\r\n * @param number max_y\r\n * @param number max_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createAABB3f(builder:flatbuffers.Builder, min_x: number, min_y: number, min_z: number, max_x: number, max_y: number, max_z: number):flatbuffers.Offset {\r\n  builder.prep(4, 24);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(max_z);\r\n  builder.writeFloat32(max_y);\r\n  builder.writeFloat32(max_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(min_z);\r\n  builder.writeFloat32(min_y);\r\n  builder.writeFloat32(min_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Placement3 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Placement3\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Placement3 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\norigin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nxAxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 24, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nyAxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 36, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number origin_x\r\n * @param number origin_y\r\n * @param number origin_z\r\n * @param number xAxis_x\r\n * @param number xAxis_y\r\n * @param number xAxis_z\r\n * @param number yAxis_x\r\n * @param number yAxis_y\r\n * @param number yAxis_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPlacement3(builder:flatbuffers.Builder, origin_x: number, origin_y: number, origin_z: number, xAxis_x: number, xAxis_y: number, xAxis_z: number, yAxis_x: number, yAxis_y: number, yAxis_z: number):flatbuffers.Offset {\r\n  builder.prep(8, 48);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(yAxis_z);\r\n  builder.writeFloat32(yAxis_y);\r\n  builder.writeFloat32(yAxis_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(xAxis_z);\r\n  builder.writeFloat32(xAxis_y);\r\n  builder.writeFloat32(xAxis_x);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(origin_z);\r\n  builder.writeFloat64(origin_y);\r\n  builder.writeFloat64(origin_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Line3f {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Line3f\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Line3f {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nstart(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nend(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number start_x\r\n * @param number start_y\r\n * @param number start_z\r\n * @param number end_x\r\n * @param number end_y\r\n * @param number end_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLine3f(builder:flatbuffers.Builder, start_x: number, start_y: number, start_z: number, end_x: number, end_y: number, end_z: number):flatbuffers.Offset {\r\n  builder.prep(4, 24);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(end_z);\r\n  builder.writeFloat32(end_y);\r\n  builder.writeFloat32(end_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(start_z);\r\n  builder.writeFloat32(start_y);\r\n  builder.writeFloat32(start_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Line3d {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Line3d\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Line3d {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\nstart(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\nend(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 24, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number start_x\r\n * @param number start_y\r\n * @param number start_z\r\n * @param number end_x\r\n * @param number end_y\r\n * @param number end_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLine3d(builder:flatbuffers.Builder, start_x: number, start_y: number, start_z: number, end_x: number, end_y: number, end_z: number):flatbuffers.Offset {\r\n  builder.prep(8, 48);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(end_z);\r\n  builder.writeFloat64(end_y);\r\n  builder.writeFloat64(end_x);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(start_z);\r\n  builder.writeFloat64(start_y);\r\n  builder.writeFloat64(start_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Polyline3f {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Polyline3f\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Polyline3f {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Polyline3f= obj\r\n * @returns Polyline3f\r\n */\r\nstatic getRootAsPolyline3f(bb:flatbuffers.ByteBuffer, obj?:Polyline3f):Polyline3f {\r\n  return (obj || new Polyline3f()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Polyline3f= obj\r\n * @returns Polyline3f\r\n */\r\nstatic getSizePrefixedRootAsPolyline3f(bb:flatbuffers.ByteBuffer, obj?:Polyline3f):Polyline3f {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Polyline3f()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\npoints(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npointsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPolyline3f(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset pointsOffset\r\n */\r\nstatic addPoints(builder:flatbuffers.Builder, pointsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, pointsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPointsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPolyline3f(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPolyline3f(builder:flatbuffers.Builder, pointsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Polyline3f.startPolyline3f(builder);\r\n  Polyline3f.addPoints(builder, pointsOffset);\r\n  return Polyline3f.endPolyline3f(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Arc3f {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Arc3f\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Arc3f {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\ncenter(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\naxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nrefDirection(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 24, this.bb!);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nradius():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 36);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_radius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 36);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nangle():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 40);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_angle(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number center_x\r\n * @param number center_y\r\n * @param number center_z\r\n * @param number axis_x\r\n * @param number axis_y\r\n * @param number axis_z\r\n * @param number refDirection_x\r\n * @param number refDirection_y\r\n * @param number refDirection_z\r\n * @param number radius\r\n * @param number angle\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createArc3f(builder:flatbuffers.Builder, center_x: number, center_y: number, center_z: number, axis_x: number, axis_y: number, axis_z: number, refDirection_x: number, refDirection_y: number, refDirection_z: number, radius: number, angle: number):flatbuffers.Offset {\r\n  builder.prep(4, 44);\r\n  builder.writeFloat32(angle);\r\n  builder.writeFloat32(radius);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(refDirection_z);\r\n  builder.writeFloat32(refDirection_y);\r\n  builder.writeFloat32(refDirection_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(axis_z);\r\n  builder.writeFloat32(axis_y);\r\n  builder.writeFloat32(axis_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(center_z);\r\n  builder.writeFloat32(center_y);\r\n  builder.writeFloat32(center_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Arc3d {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Arc3d\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Arc3d {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\ncenter(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\naxis(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 24, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\nrefDirection(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + 48, this.bb!);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nradius():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 72);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_radius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 72);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nangle():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 80);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_angle(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 80);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number center_x\r\n * @param number center_y\r\n * @param number center_z\r\n * @param number axis_x\r\n * @param number axis_y\r\n * @param number axis_z\r\n * @param number refDirection_x\r\n * @param number refDirection_y\r\n * @param number refDirection_z\r\n * @param number radius\r\n * @param number angle\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createArc3d(builder:flatbuffers.Builder, center_x: number, center_y: number, center_z: number, axis_x: number, axis_y: number, axis_z: number, refDirection_x: number, refDirection_y: number, refDirection_z: number, radius: number, angle: number):flatbuffers.Offset {\r\n  builder.prep(8, 88);\r\n  builder.writeFloat64(angle);\r\n  builder.writeFloat64(radius);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(refDirection_z);\r\n  builder.writeFloat64(refDirection_y);\r\n  builder.writeFloat64(refDirection_x);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(axis_z);\r\n  builder.writeFloat64(axis_y);\r\n  builder.writeFloat64(axis_x);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(center_z);\r\n  builder.writeFloat64(center_y);\r\n  builder.writeFloat64(center_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Guid {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Guid\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Guid {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata1():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data1(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata2():number {\r\n  return this.bb!.readUint16(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data2(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint16(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata3():number {\r\n  return this.bb!.readUint16(this.bb_pos + 6);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data3(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint16(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata41():number {\r\n  return this.bb!.readUint8(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_1(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata42():number {\r\n  return this.bb!.readUint8(this.bb_pos + 9);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_2(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 9);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata43():number {\r\n  return this.bb!.readUint8(this.bb_pos + 10);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_3(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata44():number {\r\n  return this.bb!.readUint8(this.bb_pos + 11);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_4(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 11);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata45():number {\r\n  return this.bb!.readUint8(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_5(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata46():number {\r\n  return this.bb!.readUint8(this.bb_pos + 13);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_6(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 13);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata47():number {\r\n  return this.bb!.readUint8(this.bb_pos + 14);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_7(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndata48():number {\r\n  return this.bb!.readUint8(this.bb_pos + 15);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_data4_8(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 15);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number data1\r\n * @param number data2\r\n * @param number data3\r\n * @param number data4_1\r\n * @param number data4_2\r\n * @param number data4_3\r\n * @param number data4_4\r\n * @param number data4_5\r\n * @param number data4_6\r\n * @param number data4_7\r\n * @param number data4_8\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGuid(builder:flatbuffers.Builder, data1: number, data2: number, data3: number, data4_1: number, data4_2: number, data4_3: number, data4_4: number, data4_5: number, data4_6: number, data4_7: number, data4_8: number):flatbuffers.Offset {\r\n  builder.prep(4, 16);\r\n  builder.writeInt8(data4_8);\r\n  builder.writeInt8(data4_7);\r\n  builder.writeInt8(data4_6);\r\n  builder.writeInt8(data4_5);\r\n  builder.writeInt8(data4_4);\r\n  builder.writeInt8(data4_3);\r\n  builder.writeInt8(data4_2);\r\n  builder.writeInt8(data4_1);\r\n  builder.writeInt16(data3);\r\n  builder.writeInt16(data2);\r\n  builder.writeInt32(data1);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class SpatialHash {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns SpatialHash\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SpatialHash {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat64(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_x(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_y(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nz():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_z(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd0():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 24);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d0(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd1():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 32);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d1(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd2():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 40);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d2(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd3():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 48);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d3(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 48);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd4():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 56);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d4(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 56);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd5():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 64);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d5(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 64);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd6():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 72);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d6(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 72);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nd7():number {\r\n  return this.bb!.readFloat64(this.bb_pos + 80);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_d7(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 80);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @param number z\r\n * @param number d0\r\n * @param number d1\r\n * @param number d2\r\n * @param number d3\r\n * @param number d4\r\n * @param number d5\r\n * @param number d6\r\n * @param number d7\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSpatialHash(builder:flatbuffers.Builder, x: number, y: number, z: number, d0: number, d1: number, d2: number, d3: number, d4: number, d5: number, d6: number, d7: number):flatbuffers.Offset {\r\n  builder.prep(8, 88);\r\n  builder.writeFloat64(d7);\r\n  builder.writeFloat64(d6);\r\n  builder.writeFloat64(d5);\r\n  builder.writeFloat64(d4);\r\n  builder.writeFloat64(d3);\r\n  builder.writeFloat64(d2);\r\n  builder.writeFloat64(d1);\r\n  builder.writeFloat64(d0);\r\n  builder.writeFloat64(z);\r\n  builder.writeFloat64(y);\r\n  builder.writeFloat64(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class UV {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns UV\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):UV {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nu():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_u(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nv():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_v(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number u\r\n * @param number v\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createUV(builder:flatbuffers.Builder, u: number, v: number):flatbuffers.Offset {\r\n  builder.prep(4, 8);\r\n  builder.writeFloat32(v);\r\n  builder.writeFloat32(u);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class OuterWire {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns OuterWire\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):OuterWire {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param OuterWire= obj\r\n * @returns OuterWire\r\n */\r\nstatic getRootAsOuterWire(bb:flatbuffers.ByteBuffer, obj?:OuterWire):OuterWire {\r\n  return (obj || new OuterWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param OuterWire= obj\r\n * @returns OuterWire\r\n */\r\nstatic getSizePrefixedRootAsOuterWire(bb:flatbuffers.ByteBuffer, obj?:OuterWire):OuterWire {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new OuterWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nvertexIndices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nvertexIndicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint16Array\r\n */\r\nvertexIndicesArray():Uint16Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startOuterWire(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset vertexIndicesOffset\r\n */\r\nstatic addVertexIndices(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, vertexIndicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVertexIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(2, data.length, 2);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt16(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVertexIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endOuterWire(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // vertexIndices\r\n  return offset;\r\n};\r\n\r\nstatic createOuterWire(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  OuterWire.startOuterWire(builder);\r\n  OuterWire.addVertexIndices(builder, vertexIndicesOffset);\r\n  return OuterWire.endOuterWire(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class InnerWire {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns InnerWire\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):InnerWire {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param InnerWire= obj\r\n * @returns InnerWire\r\n */\r\nstatic getRootAsInnerWire(bb:flatbuffers.ByteBuffer, obj?:InnerWire):InnerWire {\r\n  return (obj || new InnerWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param InnerWire= obj\r\n * @returns InnerWire\r\n */\r\nstatic getSizePrefixedRootAsInnerWire(bb:flatbuffers.ByteBuffer, obj?:InnerWire):InnerWire {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new InnerWire()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterWire():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_outerWire(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint16(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nvertexIndices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nvertexIndicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint16Array\r\n */\r\nvertexIndicesArray():Uint16Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startInnerWire(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number outerWire\r\n */\r\nstatic addOuterWire(builder:flatbuffers.Builder, outerWire:number) {\r\n  builder.addFieldInt16(0, outerWire, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset vertexIndicesOffset\r\n */\r\nstatic addVertexIndices(builder:flatbuffers.Builder, vertexIndicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, vertexIndicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVertexIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(2, data.length, 2);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt16(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVertexIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endInnerWire(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // vertexIndices\r\n  return offset;\r\n};\r\n\r\nstatic createInnerWire(builder:flatbuffers.Builder, outerWire:number, vertexIndicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  InnerWire.startInnerWire(builder);\r\n  InnerWire.addOuterWire(builder, outerWire);\r\n  InnerWire.addVertexIndices(builder, vertexIndicesOffset);\r\n  return InnerWire.endInnerWire(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class BRep {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BRep\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BRep {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRep= obj\r\n * @returns BRep\r\n */\r\nstatic getRootAsBRep(bb:flatbuffers.ByteBuffer, obj?:BRep):BRep {\r\n  return (obj || new BRep()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRep= obj\r\n * @returns BRep\r\n */\r\nstatic getSizePrefixedRootAsBRep(bb:flatbuffers.ByteBuffer, obj?:BRep):BRep {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BRep()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\r\n */\r\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\r\n */\r\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninnerWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBRep(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset outerWiresOffset\r\n */\r\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, outerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset innerWiresOffset\r\n */\r\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, innerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBRep(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // outerWires\r\n  builder.requiredField(offset, 6); // innerWires\r\n  builder.requiredField(offset, 8); // vertices\r\n  return offset;\r\n};\r\n\r\nstatic createBRep(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BRep.startBRep(builder);\r\n  BRep.addOuterWires(builder, outerWiresOffset);\r\n  BRep.addInnerWires(builder, innerWiresOffset);\r\n  BRep.addVertices(builder, verticesOffset);\r\n  return BRep.endBRep(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class PositionUV {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PositionUV\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PositionUV {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nposition(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.UV|null\r\n */\r\nuv(obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb_pos + 12, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number position_x\r\n * @param number position_y\r\n * @param number position_z\r\n * @param number uv_u\r\n * @param number uv_v\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPositionUV(builder:flatbuffers.Builder, position_x: number, position_y: number, position_z: number, uv_u: number, uv_v: number):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.prep(4, 8);\r\n  builder.writeFloat32(uv_v);\r\n  builder.writeFloat32(uv_u);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(position_z);\r\n  builder.writeFloat32(position_y);\r\n  builder.writeFloat32(position_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class PositionNormal {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PositionNormal\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PositionNormal {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nposition(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f|null\r\n */\r\nnormal(obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb_pos + 12, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number position_x\r\n * @param number position_y\r\n * @param number position_z\r\n * @param number normal_x\r\n * @param number normal_y\r\n * @param number normal_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPositionNormal(builder:flatbuffers.Builder, position_x: number, position_y: number, position_z: number, normal_x: number, normal_y: number, normal_z: number):flatbuffers.Offset {\r\n  builder.prep(4, 24);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(normal_z);\r\n  builder.writeFloat32(normal_y);\r\n  builder.writeFloat32(normal_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(position_z);\r\n  builder.writeFloat32(position_y);\r\n  builder.writeFloat32(position_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class BRepWithUV {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BRepWithUV\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BRepWithUV {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRepWithUV= obj\r\n * @returns BRepWithUV\r\n */\r\nstatic getRootAsBRepWithUV(bb:flatbuffers.ByteBuffer, obj?:BRepWithUV):BRepWithUV {\r\n  return (obj || new BRepWithUV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRepWithUV= obj\r\n * @returns BRepWithUV\r\n */\r\nstatic getSizePrefixedRootAsBRepWithUV(bb:flatbuffers.ByteBuffer, obj?:BRepWithUV):BRepWithUV {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BRepWithUV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\r\n */\r\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\r\n */\r\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninnerWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.PositionUV= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.PositionUV\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PositionUV):Trimble.Technology.TrimBim.Fbs.PositionUV|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PositionUV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBRepWithUV(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset outerWiresOffset\r\n */\r\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, outerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset innerWiresOffset\r\n */\r\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, innerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(20, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBRepWithUV(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // outerWires\r\n  builder.requiredField(offset, 6); // innerWires\r\n  builder.requiredField(offset, 8); // vertices\r\n  return offset;\r\n};\r\n\r\nstatic createBRepWithUV(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BRepWithUV.startBRepWithUV(builder);\r\n  BRepWithUV.addOuterWires(builder, outerWiresOffset);\r\n  BRepWithUV.addInnerWires(builder, innerWiresOffset);\r\n  BRepWithUV.addVertices(builder, verticesOffset);\r\n  return BRepWithUV.endBRepWithUV(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class BRepWithNormal {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BRepWithNormal\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BRepWithNormal {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRepWithNormal= obj\r\n * @returns BRepWithNormal\r\n */\r\nstatic getRootAsBRepWithNormal(bb:flatbuffers.ByteBuffer, obj?:BRepWithNormal):BRepWithNormal {\r\n  return (obj || new BRepWithNormal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BRepWithNormal= obj\r\n * @returns BRepWithNormal\r\n */\r\nstatic getSizePrefixedRootAsBRepWithNormal(bb:flatbuffers.ByteBuffer, obj?:BRepWithNormal):BRepWithNormal {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BRepWithNormal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.OuterWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.OuterWire\r\n */\r\nouterWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.OuterWire):Trimble.Technology.TrimBim.Fbs.OuterWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.OuterWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.InnerWire= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.InnerWire\r\n */\r\ninnerWires(index: number, obj?:Trimble.Technology.TrimBim.Fbs.InnerWire):Trimble.Technology.TrimBim.Fbs.InnerWire|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.InnerWire()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninnerWiresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.PositionNormal= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.PositionNormal\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PositionNormal):Trimble.Technology.TrimBim.Fbs.PositionNormal|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PositionNormal()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBRepWithNormal(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset outerWiresOffset\r\n */\r\nstatic addOuterWires(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, outerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createOuterWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startOuterWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset innerWiresOffset\r\n */\r\nstatic addInnerWires(builder:flatbuffers.Builder, innerWiresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, innerWiresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createInnerWiresVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startInnerWiresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(24, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBRepWithNormal(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // outerWires\r\n  builder.requiredField(offset, 6); // innerWires\r\n  builder.requiredField(offset, 8); // vertices\r\n  return offset;\r\n};\r\n\r\nstatic createBRepWithNormal(builder:flatbuffers.Builder, outerWiresOffset:flatbuffers.Offset, innerWiresOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BRepWithNormal.startBRepWithNormal(builder);\r\n  BRepWithNormal.addOuterWires(builder, outerWiresOffset);\r\n  BRepWithNormal.addInnerWires(builder, innerWiresOffset);\r\n  BRepWithNormal.addVertices(builder, verticesOffset);\r\n  return BRepWithNormal.endBRepWithNormal(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class IndexedVertex {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns IndexedVertex\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):IndexedVertex {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionIndex():number {\r\n  return this.bb!.readUint16(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_positionIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint16(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalIndex():number {\r\n  return this.bb!.readUint16(this.bb_pos + 2);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_normalIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 2);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint16(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number positionIndex\r\n * @param number normalIndex\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndexedVertex(builder:flatbuffers.Builder, positionIndex: number, normalIndex: number):flatbuffers.Offset {\r\n  builder.prep(2, 4);\r\n  builder.writeInt16(normalIndex);\r\n  builder.writeInt16(positionIndex);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TriangleMesh {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TriangleMesh\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TriangleMesh {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TriangleMesh= obj\r\n * @returns TriangleMesh\r\n */\r\nstatic getRootAsTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh):TriangleMesh {\r\n  return (obj || new TriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TriangleMesh= obj\r\n * @returns TriangleMesh\r\n */\r\nstatic getSizePrefixedRootAsTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh):TriangleMesh {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex):Trimble.Technology.TrimBim.Fbs.IndexedVertex|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nindices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint16Array\r\n */\r\nindicesArray():Uint16Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTriangleMesh(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset positionsOffset\r\n */\r\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, positionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset normalsOffset\r\n */\r\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, normalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset indicesOffset\r\n */\r\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, indicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(2, data.length, 2);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt16(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTriangleMesh(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // positions\r\n  builder.requiredField(offset, 6); // normals\r\n  builder.requiredField(offset, 8); // vertices\r\n  builder.requiredField(offset, 10); // indices\r\n  return offset;\r\n};\r\n\r\nstatic createTriangleMesh(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TriangleMesh.startTriangleMesh(builder);\r\n  TriangleMesh.addPositions(builder, positionsOffset);\r\n  TriangleMesh.addNormals(builder, normalsOffset);\r\n  TriangleMesh.addVertices(builder, verticesOffset);\r\n  TriangleMesh.addIndices(builder, indicesOffset);\r\n  return TriangleMesh.endTriangleMesh(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class IndexedVertex8 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns IndexedVertex8\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):IndexedVertex8 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionIndex():number {\r\n  return this.bb!.readUint8(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_positionIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalIndex():number {\r\n  return this.bb!.readUint8(this.bb_pos + 1);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_normalIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 1);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number positionIndex\r\n * @param number normalIndex\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndexedVertex8(builder:flatbuffers.Builder, positionIndex: number, normalIndex: number):flatbuffers.Offset {\r\n  builder.prep(1, 2);\r\n  builder.writeInt8(normalIndex);\r\n  builder.writeInt8(positionIndex);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TriangleMesh8 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TriangleMesh8\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TriangleMesh8 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TriangleMesh8= obj\r\n * @returns TriangleMesh8\r\n */\r\nstatic getRootAsTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh8):TriangleMesh8 {\r\n  return (obj || new TriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TriangleMesh8= obj\r\n * @returns TriangleMesh8\r\n */\r\nstatic getSizePrefixedRootAsTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TriangleMesh8):TriangleMesh8 {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex8= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex8\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex8):Trimble.Technology.TrimBim.Fbs.IndexedVertex8|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex8()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 2, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nindices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint8Array\r\n */\r\nindicesArray():Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTriangleMesh8(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset positionsOffset\r\n */\r\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, positionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset normalsOffset\r\n */\r\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, normalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset indicesOffset\r\n */\r\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, indicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTriangleMesh8(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // positions\r\n  builder.requiredField(offset, 6); // normals\r\n  builder.requiredField(offset, 8); // vertices\r\n  builder.requiredField(offset, 10); // indices\r\n  return offset;\r\n};\r\n\r\nstatic createTriangleMesh8(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TriangleMesh8.startTriangleMesh8(builder);\r\n  TriangleMesh8.addPositions(builder, positionsOffset);\r\n  TriangleMesh8.addNormals(builder, normalsOffset);\r\n  TriangleMesh8.addVertices(builder, verticesOffset);\r\n  TriangleMesh8.addIndices(builder, indicesOffset);\r\n  return TriangleMesh8.endTriangleMesh8(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TexturedTriangleMesh {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TexturedTriangleMesh\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedTriangleMesh {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TexturedTriangleMesh= obj\r\n * @returns TexturedTriangleMesh\r\n */\r\nstatic getRootAsTexturedTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh):TexturedTriangleMesh {\r\n  return (obj || new TexturedTriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TexturedTriangleMesh= obj\r\n * @returns TexturedTriangleMesh\r\n */\r\nstatic getSizePrefixedRootAsTexturedTriangleMesh(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh):TexturedTriangleMesh {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TexturedTriangleMesh()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.UV\r\n */\r\nuvs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nuvsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex):Trimble.Technology.TrimBim.Fbs.IndexedVertex|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nindices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint16Array\r\n */\r\nindicesArray():Uint16Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTexturedTriangleMesh(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset positionsOffset\r\n */\r\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, positionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset normalsOffset\r\n */\r\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, normalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset uvsOffset\r\n */\r\nstatic addUvs(builder:flatbuffers.Builder, uvsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, uvsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startUvsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset indicesOffset\r\n */\r\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, indicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(2, data.length, 2);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt16(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTexturedTriangleMesh(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // positions\r\n  builder.requiredField(offset, 6); // normals\r\n  builder.requiredField(offset, 8); // uvs\r\n  builder.requiredField(offset, 10); // vertices\r\n  builder.requiredField(offset, 12); // indices\r\n  return offset;\r\n};\r\n\r\nstatic createTexturedTriangleMesh(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, uvsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TexturedTriangleMesh.startTexturedTriangleMesh(builder);\r\n  TexturedTriangleMesh.addPositions(builder, positionsOffset);\r\n  TexturedTriangleMesh.addNormals(builder, normalsOffset);\r\n  TexturedTriangleMesh.addUvs(builder, uvsOffset);\r\n  TexturedTriangleMesh.addVertices(builder, verticesOffset);\r\n  TexturedTriangleMesh.addIndices(builder, indicesOffset);\r\n  return TexturedTriangleMesh.endTexturedTriangleMesh(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TexturedTriangleMesh8 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TexturedTriangleMesh8\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedTriangleMesh8 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TexturedTriangleMesh8= obj\r\n * @returns TexturedTriangleMesh8\r\n */\r\nstatic getRootAsTexturedTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh8):TexturedTriangleMesh8 {\r\n  return (obj || new TexturedTriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TexturedTriangleMesh8= obj\r\n * @returns TexturedTriangleMesh8\r\n */\r\nstatic getSizePrefixedRootAsTexturedTriangleMesh8(bb:flatbuffers.ByteBuffer, obj?:TexturedTriangleMesh8):TexturedTriangleMesh8 {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TexturedTriangleMesh8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\npositions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npositionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3f\r\n */\r\nnormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Vec3f):Trimble.Technology.TrimBim.Fbs.Vec3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnormalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.UV= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.UV\r\n */\r\nuvs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.UV):Trimble.Technology.TrimBim.Fbs.UV|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.UV()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nuvsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.IndexedVertex8= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.IndexedVertex8\r\n */\r\nvertices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.IndexedVertex8):Trimble.Technology.TrimBim.Fbs.IndexedVertex8|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.IndexedVertex8()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 2, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nindices(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint8Array\r\n */\r\nindicesArray():Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTexturedTriangleMesh8(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset positionsOffset\r\n */\r\nstatic addPositions(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, positionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPositionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset normalsOffset\r\n */\r\nstatic addNormals(builder:flatbuffers.Builder, normalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, normalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNormalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset uvsOffset\r\n */\r\nstatic addUvs(builder:flatbuffers.Builder, uvsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, uvsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startUvsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticesOffset\r\n */\r\nstatic addVertices(builder:flatbuffers.Builder, verticesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, verticesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVerticesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(2, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset indicesOffset\r\n */\r\nstatic addIndices(builder:flatbuffers.Builder, indicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, indicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndicesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startIndicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTexturedTriangleMesh8(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // positions\r\n  builder.requiredField(offset, 6); // normals\r\n  builder.requiredField(offset, 8); // uvs\r\n  builder.requiredField(offset, 10); // vertices\r\n  builder.requiredField(offset, 12); // indices\r\n  return offset;\r\n};\r\n\r\nstatic createTexturedTriangleMesh8(builder:flatbuffers.Builder, positionsOffset:flatbuffers.Offset, normalsOffset:flatbuffers.Offset, uvsOffset:flatbuffers.Offset, verticesOffset:flatbuffers.Offset, indicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TexturedTriangleMesh8.startTexturedTriangleMesh8(builder);\r\n  TexturedTriangleMesh8.addPositions(builder, positionsOffset);\r\n  TexturedTriangleMesh8.addNormals(builder, normalsOffset);\r\n  TexturedTriangleMesh8.addUvs(builder, uvsOffset);\r\n  TexturedTriangleMesh8.addVertices(builder, verticesOffset);\r\n  TexturedTriangleMesh8.addIndices(builder, indicesOffset);\r\n  return TexturedTriangleMesh8.endTexturedTriangleMesh8(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Directrix {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Directrix\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Directrix {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Directrix= obj\r\n * @returns Directrix\r\n */\r\nstatic getRootAsDirectrix(bb:flatbuffers.ByteBuffer, obj?:Directrix):Directrix {\r\n  return (obj || new Directrix()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Directrix= obj\r\n * @returns Directrix\r\n */\r\nstatic getSizePrefixedRootAsDirectrix(bb:flatbuffers.ByteBuffer, obj?:Directrix):Directrix {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Directrix()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns Trimble.Technology.TrimBim.Fbs.SegmentType\r\n */\r\ntypes(index: number):Trimble.Technology.TrimBim.Fbs.SegmentType|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntypesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Int8Array\r\n */\r\ntypesArray():Int8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nindexes(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindexesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint32Array\r\n */\r\nindexesArray():Uint32Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Line3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Line3f\r\n */\r\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Line3f):Trimble.Technology.TrimBim.Fbs.Line3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlineSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Polyline3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Polyline3f\r\n */\r\npolyLines(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Polyline3f):Trimble.Technology.TrimBim.Fbs.Polyline3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Polyline3f()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npolyLinesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Arc3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3f\r\n */\r\narcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Arc3f):Trimble.Technology.TrimBim.Fbs.Arc3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\narcsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDirectrix(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset typesOffset\r\n */\r\nstatic addTypes(builder:flatbuffers.Builder, typesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, typesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<Trimble.Technology.TrimBim.Fbs.SegmentType> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.SegmentType[]):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTypesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset indexesOffset\r\n */\r\nstatic addIndexes(builder:flatbuffers.Builder, indexesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, indexesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createIndexesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt32(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startIndexesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lineSegmentsOffset\r\n */\r\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, lineSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(24, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset polyLinesOffset\r\n */\r\nstatic addPolyLines(builder:flatbuffers.Builder, polyLinesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, polyLinesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPolyLinesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPolyLinesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset arcsOffset\r\n */\r\nstatic addArcs(builder:flatbuffers.Builder, arcsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, arcsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startArcsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(44, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDirectrix(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // types\r\n  builder.requiredField(offset, 6); // indexes\r\n  builder.requiredField(offset, 8); // lineSegments\r\n  builder.requiredField(offset, 10); // polyLines\r\n  builder.requiredField(offset, 12); // arcs\r\n  return offset;\r\n};\r\n\r\nstatic createDirectrix(builder:flatbuffers.Builder, typesOffset:flatbuffers.Offset, indexesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, polyLinesOffset:flatbuffers.Offset, arcsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Directrix.startDirectrix(builder);\r\n  Directrix.addTypes(builder, typesOffset);\r\n  Directrix.addIndexes(builder, indexesOffset);\r\n  Directrix.addLineSegments(builder, lineSegmentsOffset);\r\n  Directrix.addPolyLines(builder, polyLinesOffset);\r\n  Directrix.addArcs(builder, arcsOffset);\r\n  return Directrix.endDirectrix(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class SweptDiskSolidContainer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns SweptDiskSolidContainer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SweptDiskSolidContainer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param SweptDiskSolidContainer= obj\r\n * @returns SweptDiskSolidContainer\r\n */\r\nstatic getRootAsSweptDiskSolidContainer(bb:flatbuffers.ByteBuffer, obj?:SweptDiskSolidContainer):SweptDiskSolidContainer {\r\n  return (obj || new SweptDiskSolidContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param SweptDiskSolidContainer= obj\r\n * @returns SweptDiskSolidContainer\r\n */\r\nstatic getSizePrefixedRootAsSweptDiskSolidContainer(bb:flatbuffers.ByteBuffer, obj?:SweptDiskSolidContainer):SweptDiskSolidContainer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new SweptDiskSolidContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Directrix= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Directrix\r\n */\r\ndirectrices(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Directrix):Trimble.Technology.TrimBim.Fbs.Directrix|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Directrix()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndirectricesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nradius(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nradiusLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nradiusArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startSweptDiskSolidContainer(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset directricesOffset\r\n */\r\nstatic addDirectrices(builder:flatbuffers.Builder, directricesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, directricesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDirectricesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDirectricesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset radiusOffset\r\n */\r\nstatic addRadius(builder:flatbuffers.Builder, radiusOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, radiusOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createRadiusVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startRadiusVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endSweptDiskSolidContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // directrices\r\n  builder.requiredField(offset, 6); // radius\r\n  return offset;\r\n};\r\n\r\nstatic createSweptDiskSolidContainer(builder:flatbuffers.Builder, directricesOffset:flatbuffers.Offset, radiusOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  SweptDiskSolidContainer.startSweptDiskSolidContainer(builder);\r\n  SweptDiskSolidContainer.addDirectrices(builder, directricesOffset);\r\n  SweptDiskSolidContainer.addRadius(builder, radiusOffset);\r\n  return SweptDiskSolidContainer.endSweptDiskSolidContainer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HorizontalLineSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HorizontalLineSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalLineSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalLineSegment= obj\r\n * @returns HorizontalLineSegment\r\n */\r\nstatic getRootAsHorizontalLineSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalLineSegment):HorizontalLineSegment {\r\n  return (obj || new HorizontalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalLineSegment= obj\r\n * @returns HorizontalLineSegment\r\n */\r\nstatic getSizePrefixedRootAsHorizontalLineSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalLineSegment):HorizontalLineSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HorizontalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDirection():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDirection(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_segmentLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHorizontalLineSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startPointOffset\r\n */\r\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, startPointOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDirection\r\n */\r\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\r\n  builder.addFieldFloat64(3, startDirection, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number segmentLength\r\n */\r\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\r\n  builder.addFieldFloat64(4, segmentLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHorizontalLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createHorizontalLineSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number):flatbuffers.Offset {\r\n  HorizontalLineSegment.startHorizontalLineSegment(builder);\r\n  HorizontalLineSegment.addStartTag(builder, startTagOffset);\r\n  HorizontalLineSegment.addEndTag(builder, endTagOffset);\r\n  HorizontalLineSegment.addStartPoint(builder, startPointOffset);\r\n  HorizontalLineSegment.addStartDirection(builder, startDirection);\r\n  HorizontalLineSegment.addSegmentLength(builder, segmentLength);\r\n  return HorizontalLineSegment.endHorizontalLineSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HorizontalCircularArcSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HorizontalCircularArcSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalCircularArcSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalCircularArcSegment= obj\r\n * @returns HorizontalCircularArcSegment\r\n */\r\nstatic getRootAsHorizontalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalCircularArcSegment):HorizontalCircularArcSegment {\r\n  return (obj || new HorizontalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalCircularArcSegment= obj\r\n * @returns HorizontalCircularArcSegment\r\n */\r\nstatic getSizePrefixedRootAsHorizontalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalCircularArcSegment):HorizontalCircularArcSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HorizontalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDirection():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDirection(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_segmentLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nradius():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_radius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisCCW():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isCCW(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHorizontalCircularArcSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(7);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startPointOffset\r\n */\r\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, startPointOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDirection\r\n */\r\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\r\n  builder.addFieldFloat64(3, startDirection, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number segmentLength\r\n */\r\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\r\n  builder.addFieldFloat64(4, segmentLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number radius\r\n */\r\nstatic addRadius(builder:flatbuffers.Builder, radius:number) {\r\n  builder.addFieldFloat64(5, radius, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isCCW\r\n */\r\nstatic addIsCCW(builder:flatbuffers.Builder, isCCW:boolean) {\r\n  builder.addFieldInt8(6, +isCCW, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHorizontalCircularArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createHorizontalCircularArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, radius:number, isCCW:boolean):flatbuffers.Offset {\r\n  HorizontalCircularArcSegment.startHorizontalCircularArcSegment(builder);\r\n  HorizontalCircularArcSegment.addStartTag(builder, startTagOffset);\r\n  HorizontalCircularArcSegment.addEndTag(builder, endTagOffset);\r\n  HorizontalCircularArcSegment.addStartPoint(builder, startPointOffset);\r\n  HorizontalCircularArcSegment.addStartDirection(builder, startDirection);\r\n  HorizontalCircularArcSegment.addSegmentLength(builder, segmentLength);\r\n  HorizontalCircularArcSegment.addRadius(builder, radius);\r\n  HorizontalCircularArcSegment.addIsCCW(builder, isCCW);\r\n  return HorizontalCircularArcSegment.endHorizontalCircularArcSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HorizontalClothoidalArcSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HorizontalClothoidalArcSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalClothoidalArcSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalClothoidalArcSegment= obj\r\n * @returns HorizontalClothoidalArcSegment\r\n */\r\nstatic getRootAsHorizontalClothoidalArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalClothoidalArcSegment):HorizontalClothoidalArcSegment {\r\n  return (obj || new HorizontalClothoidalArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalClothoidalArcSegment= obj\r\n * @returns HorizontalClothoidalArcSegment\r\n */\r\nstatic getSizePrefixedRootAsHorizontalClothoidalArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalClothoidalArcSegment):HorizontalClothoidalArcSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HorizontalClothoidalArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDirection():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDirection(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_segmentLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartRadius():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startRadius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nclothoidConstant():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_clothoidConstant(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisCCW():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isCCW(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisEntry():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isEntry(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHorizontalClothoidalArcSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(9);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startPointOffset\r\n */\r\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, startPointOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDirection\r\n */\r\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\r\n  builder.addFieldFloat64(3, startDirection, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number segmentLength\r\n */\r\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\r\n  builder.addFieldFloat64(4, segmentLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startRadius\r\n */\r\nstatic addStartRadius(builder:flatbuffers.Builder, startRadius:number) {\r\n  builder.addFieldFloat64(5, startRadius, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number clothoidConstant\r\n */\r\nstatic addClothoidConstant(builder:flatbuffers.Builder, clothoidConstant:number) {\r\n  builder.addFieldFloat64(6, clothoidConstant, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isCCW\r\n */\r\nstatic addIsCCW(builder:flatbuffers.Builder, isCCW:boolean) {\r\n  builder.addFieldInt8(7, +isCCW, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isEntry\r\n */\r\nstatic addIsEntry(builder:flatbuffers.Builder, isEntry:boolean) {\r\n  builder.addFieldInt8(8, +isEntry, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHorizontalClothoidalArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createHorizontalClothoidalArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, startRadius:number, clothoidConstant:number, isCCW:boolean, isEntry:boolean):flatbuffers.Offset {\r\n  HorizontalClothoidalArcSegment.startHorizontalClothoidalArcSegment(builder);\r\n  HorizontalClothoidalArcSegment.addStartTag(builder, startTagOffset);\r\n  HorizontalClothoidalArcSegment.addEndTag(builder, endTagOffset);\r\n  HorizontalClothoidalArcSegment.addStartPoint(builder, startPointOffset);\r\n  HorizontalClothoidalArcSegment.addStartDirection(builder, startDirection);\r\n  HorizontalClothoidalArcSegment.addSegmentLength(builder, segmentLength);\r\n  HorizontalClothoidalArcSegment.addStartRadius(builder, startRadius);\r\n  HorizontalClothoidalArcSegment.addClothoidConstant(builder, clothoidConstant);\r\n  HorizontalClothoidalArcSegment.addIsCCW(builder, isCCW);\r\n  HorizontalClothoidalArcSegment.addIsEntry(builder, isEntry);\r\n  return HorizontalClothoidalArcSegment.endHorizontalClothoidalArcSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HorizontalTransitionArcSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HorizontalTransitionArcSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalTransitionArcSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalTransitionArcSegment= obj\r\n * @returns HorizontalTransitionArcSegment\r\n */\r\nstatic getRootAsHorizontalTransitionArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalTransitionArcSegment):HorizontalTransitionArcSegment {\r\n  return (obj || new HorizontalTransitionArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalTransitionArcSegment= obj\r\n * @returns HorizontalTransitionArcSegment\r\n */\r\nstatic getSizePrefixedRootAsHorizontalTransitionArcSegment(bb:flatbuffers.ByteBuffer, obj?:HorizontalTransitionArcSegment):HorizontalTransitionArcSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HorizontalTransitionArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nstartPoint(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDirection():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDirection(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_segmentLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartRadius():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startRadius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nendRadius():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_endRadius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisStartRadiusCCW():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isStartRadiusCCW(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisEndRadiusCCW():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isEndRadiusCCW(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType.Invalid;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHorizontalTransitionArcSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(10);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startPointOffset\r\n */\r\nstatic addStartPoint(builder:flatbuffers.Builder, startPointOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, startPointOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDirection\r\n */\r\nstatic addStartDirection(builder:flatbuffers.Builder, startDirection:number) {\r\n  builder.addFieldFloat64(3, startDirection, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number segmentLength\r\n */\r\nstatic addSegmentLength(builder:flatbuffers.Builder, segmentLength:number) {\r\n  builder.addFieldFloat64(4, segmentLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startRadius\r\n */\r\nstatic addStartRadius(builder:flatbuffers.Builder, startRadius:number) {\r\n  builder.addFieldFloat64(5, startRadius, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number endRadius\r\n */\r\nstatic addEndRadius(builder:flatbuffers.Builder, endRadius:number) {\r\n  builder.addFieldFloat64(6, endRadius, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isStartRadiusCCW\r\n */\r\nstatic addIsStartRadiusCCW(builder:flatbuffers.Builder, isStartRadiusCCW:boolean) {\r\n  builder.addFieldInt8(7, +isStartRadiusCCW, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isEndRadiusCCW\r\n */\r\nstatic addIsEndRadiusCCW(builder:flatbuffers.Builder, isEndRadiusCCW:boolean) {\r\n  builder.addFieldInt8(8, +isEndRadiusCCW, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType type\r\n */\r\nstatic addType(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType) {\r\n  builder.addFieldInt8(9, type, Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType.Invalid);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHorizontalTransitionArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createHorizontalTransitionArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startPointOffset:flatbuffers.Offset, startDirection:number, segmentLength:number, startRadius:number, endRadius:number, isStartRadiusCCW:boolean, isEndRadiusCCW:boolean, type:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionCurveType):flatbuffers.Offset {\r\n  HorizontalTransitionArcSegment.startHorizontalTransitionArcSegment(builder);\r\n  HorizontalTransitionArcSegment.addStartTag(builder, startTagOffset);\r\n  HorizontalTransitionArcSegment.addEndTag(builder, endTagOffset);\r\n  HorizontalTransitionArcSegment.addStartPoint(builder, startPointOffset);\r\n  HorizontalTransitionArcSegment.addStartDirection(builder, startDirection);\r\n  HorizontalTransitionArcSegment.addSegmentLength(builder, segmentLength);\r\n  HorizontalTransitionArcSegment.addStartRadius(builder, startRadius);\r\n  HorizontalTransitionArcSegment.addEndRadius(builder, endRadius);\r\n  HorizontalTransitionArcSegment.addIsStartRadiusCCW(builder, isStartRadiusCCW);\r\n  HorizontalTransitionArcSegment.addIsEndRadiusCCW(builder, isEndRadiusCCW);\r\n  HorizontalTransitionArcSegment.addType(builder, type);\r\n  return HorizontalTransitionArcSegment.endHorizontalTransitionArcSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class VerticalLineSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns VerticalLineSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalLineSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalLineSegment= obj\r\n * @returns VerticalLineSegment\r\n */\r\nstatic getRootAsVerticalLineSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalLineSegment):VerticalLineSegment {\r\n  return (obj || new VerticalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalLineSegment= obj\r\n * @returns VerticalLineSegment\r\n */\r\nstatic getSizePrefixedRootAsVerticalLineSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalLineSegment):VerticalLineSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new VerticalLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDistAlong():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDistAlong(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhorizontalLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_horizontalLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartHeight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startHeight(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartGradient():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startGradient(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startVerticalLineSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(6);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDistAlong\r\n */\r\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\r\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number horizontalLength\r\n */\r\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\r\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startHeight\r\n */\r\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\r\n  builder.addFieldFloat64(4, startHeight, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startGradient\r\n */\r\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\r\n  builder.addFieldFloat64(5, startGradient, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endVerticalLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createVerticalLineSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number):flatbuffers.Offset {\r\n  VerticalLineSegment.startVerticalLineSegment(builder);\r\n  VerticalLineSegment.addStartTag(builder, startTagOffset);\r\n  VerticalLineSegment.addEndTag(builder, endTagOffset);\r\n  VerticalLineSegment.addStartDistAlong(builder, startDistAlong);\r\n  VerticalLineSegment.addHorizontalLength(builder, horizontalLength);\r\n  VerticalLineSegment.addStartHeight(builder, startHeight);\r\n  VerticalLineSegment.addStartGradient(builder, startGradient);\r\n  return VerticalLineSegment.endVerticalLineSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class VerticalCircularArcSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns VerticalCircularArcSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalCircularArcSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalCircularArcSegment= obj\r\n * @returns VerticalCircularArcSegment\r\n */\r\nstatic getRootAsVerticalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalCircularArcSegment):VerticalCircularArcSegment {\r\n  return (obj || new VerticalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalCircularArcSegment= obj\r\n * @returns VerticalCircularArcSegment\r\n */\r\nstatic getSizePrefixedRootAsVerticalCircularArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalCircularArcSegment):VerticalCircularArcSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new VerticalCircularArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDistAlong():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDistAlong(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhorizontalLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_horizontalLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartHeight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startHeight(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartGradient():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startGradient(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nradius():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_radius(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisConvex():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isConvex(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startVerticalCircularArcSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDistAlong\r\n */\r\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\r\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number horizontalLength\r\n */\r\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\r\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startHeight\r\n */\r\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\r\n  builder.addFieldFloat64(4, startHeight, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startGradient\r\n */\r\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\r\n  builder.addFieldFloat64(5, startGradient, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number radius\r\n */\r\nstatic addRadius(builder:flatbuffers.Builder, radius:number) {\r\n  builder.addFieldFloat64(6, radius, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isConvex\r\n */\r\nstatic addIsConvex(builder:flatbuffers.Builder, isConvex:boolean) {\r\n  builder.addFieldInt8(7, +isConvex, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endVerticalCircularArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createVerticalCircularArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number, radius:number, isConvex:boolean):flatbuffers.Offset {\r\n  VerticalCircularArcSegment.startVerticalCircularArcSegment(builder);\r\n  VerticalCircularArcSegment.addStartTag(builder, startTagOffset);\r\n  VerticalCircularArcSegment.addEndTag(builder, endTagOffset);\r\n  VerticalCircularArcSegment.addStartDistAlong(builder, startDistAlong);\r\n  VerticalCircularArcSegment.addHorizontalLength(builder, horizontalLength);\r\n  VerticalCircularArcSegment.addStartHeight(builder, startHeight);\r\n  VerticalCircularArcSegment.addStartGradient(builder, startGradient);\r\n  VerticalCircularArcSegment.addRadius(builder, radius);\r\n  VerticalCircularArcSegment.addIsConvex(builder, isConvex);\r\n  return VerticalCircularArcSegment.endVerticalCircularArcSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class VerticalParabolicArcSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns VerticalParabolicArcSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalParabolicArcSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalParabolicArcSegment= obj\r\n * @returns VerticalParabolicArcSegment\r\n */\r\nstatic getRootAsVerticalParabolicArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalParabolicArcSegment):VerticalParabolicArcSegment {\r\n  return (obj || new VerticalParabolicArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalParabolicArcSegment= obj\r\n * @returns VerticalParabolicArcSegment\r\n */\r\nstatic getSizePrefixedRootAsVerticalParabolicArcSegment(bb:flatbuffers.ByteBuffer, obj?:VerticalParabolicArcSegment):VerticalParabolicArcSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new VerticalParabolicArcSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstartTag():string|null\r\nstartTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstartTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nendTag():string|null\r\nendTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nendTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartDistAlong():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startDistAlong(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhorizontalLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_horizontalLength(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartHeight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startHeight(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartGradient():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startGradient(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nparabolaConstant():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_parabolaConstant(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisConvex():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_isConvex(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startVerticalParabolicArcSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startTagOffset\r\n */\r\nstatic addStartTag(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, startTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endTagOffset\r\n */\r\nstatic addEndTag(builder:flatbuffers.Builder, endTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, endTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startDistAlong\r\n */\r\nstatic addStartDistAlong(builder:flatbuffers.Builder, startDistAlong:number) {\r\n  builder.addFieldFloat64(2, startDistAlong, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number horizontalLength\r\n */\r\nstatic addHorizontalLength(builder:flatbuffers.Builder, horizontalLength:number) {\r\n  builder.addFieldFloat64(3, horizontalLength, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startHeight\r\n */\r\nstatic addStartHeight(builder:flatbuffers.Builder, startHeight:number) {\r\n  builder.addFieldFloat64(4, startHeight, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startGradient\r\n */\r\nstatic addStartGradient(builder:flatbuffers.Builder, startGradient:number) {\r\n  builder.addFieldFloat64(5, startGradient, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number parabolaConstant\r\n */\r\nstatic addParabolaConstant(builder:flatbuffers.Builder, parabolaConstant:number) {\r\n  builder.addFieldFloat64(6, parabolaConstant, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isConvex\r\n */\r\nstatic addIsConvex(builder:flatbuffers.Builder, isConvex:boolean) {\r\n  builder.addFieldInt8(7, +isConvex, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endVerticalParabolicArcSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // startTag\r\n  builder.requiredField(offset, 6); // endTag\r\n  return offset;\r\n};\r\n\r\nstatic createVerticalParabolicArcSegment(builder:flatbuffers.Builder, startTagOffset:flatbuffers.Offset, endTagOffset:flatbuffers.Offset, startDistAlong:number, horizontalLength:number, startHeight:number, startGradient:number, parabolaConstant:number, isConvex:boolean):flatbuffers.Offset {\r\n  VerticalParabolicArcSegment.startVerticalParabolicArcSegment(builder);\r\n  VerticalParabolicArcSegment.addStartTag(builder, startTagOffset);\r\n  VerticalParabolicArcSegment.addEndTag(builder, endTagOffset);\r\n  VerticalParabolicArcSegment.addStartDistAlong(builder, startDistAlong);\r\n  VerticalParabolicArcSegment.addHorizontalLength(builder, horizontalLength);\r\n  VerticalParabolicArcSegment.addStartHeight(builder, startHeight);\r\n  VerticalParabolicArcSegment.addStartGradient(builder, startGradient);\r\n  VerticalParabolicArcSegment.addParabolaConstant(builder, parabolaConstant);\r\n  VerticalParabolicArcSegment.addIsConvex(builder, isConvex);\r\n  return VerticalParabolicArcSegment.endVerticalParabolicArcSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HorizontalCurve {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HorizontalCurve\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HorizontalCurve {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalCurve= obj\r\n * @returns HorizontalCurve\r\n */\r\nstatic getRootAsHorizontalCurve(bb:flatbuffers.ByteBuffer, obj?:HorizontalCurve):HorizontalCurve {\r\n  return (obj || new HorizontalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HorizontalCurve= obj\r\n * @returns HorizontalCurve\r\n */\r\nstatic getSizePrefixedRootAsHorizontalCurve(bb:flatbuffers.ByteBuffer, obj?:HorizontalCurve):HorizontalCurve {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HorizontalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstartAlongDistance():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_startAlongDistance(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType\r\n */\r\nsegmentTypes(index: number):Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentTypesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Int8Array\r\n */\r\nsegmentTypesArray():Int8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment\r\n */\r\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment):Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlineSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment\r\n */\r\ncircularArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalCircularArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncircularArcSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment\r\n */\r\nclothoidalArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalClothoidalArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nclothoidalArcSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment\r\n */\r\ntransitionArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment):Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalTransitionArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntransitionArcSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHorizontalCurve(builder:flatbuffers.Builder) {\r\n  builder.startObject(6);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number startAlongDistance\r\n */\r\nstatic addStartAlongDistance(builder:flatbuffers.Builder, startAlongDistance:number) {\r\n  builder.addFieldFloat64(0, startAlongDistance, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset segmentTypesOffset\r\n */\r\nstatic addSegmentTypes(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, segmentTypesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSegmentTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.HorizontalSegmentType[]):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSegmentTypesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lineSegmentsOffset\r\n */\r\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, lineSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset circularArcSegmentsOffset\r\n */\r\nstatic addCircularArcSegments(builder:flatbuffers.Builder, circularArcSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, circularArcSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createCircularArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startCircularArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset clothoidalArcSegmentsOffset\r\n */\r\nstatic addClothoidalArcSegments(builder:flatbuffers.Builder, clothoidalArcSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, clothoidalArcSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createClothoidalArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startClothoidalArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset transitionArcSegmentsOffset\r\n */\r\nstatic addTransitionArcSegments(builder:flatbuffers.Builder, transitionArcSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, transitionArcSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTransitionArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTransitionArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHorizontalCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // segmentTypes\r\n  builder.requiredField(offset, 8); // lineSegments\r\n  builder.requiredField(offset, 10); // circularArcSegments\r\n  builder.requiredField(offset, 12); // clothoidalArcSegments\r\n  builder.requiredField(offset, 14); // transitionArcSegments\r\n  return offset;\r\n};\r\n\r\nstatic createHorizontalCurve(builder:flatbuffers.Builder, startAlongDistance:number, segmentTypesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, circularArcSegmentsOffset:flatbuffers.Offset, clothoidalArcSegmentsOffset:flatbuffers.Offset, transitionArcSegmentsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  HorizontalCurve.startHorizontalCurve(builder);\r\n  HorizontalCurve.addStartAlongDistance(builder, startAlongDistance);\r\n  HorizontalCurve.addSegmentTypes(builder, segmentTypesOffset);\r\n  HorizontalCurve.addLineSegments(builder, lineSegmentsOffset);\r\n  HorizontalCurve.addCircularArcSegments(builder, circularArcSegmentsOffset);\r\n  HorizontalCurve.addClothoidalArcSegments(builder, clothoidalArcSegmentsOffset);\r\n  HorizontalCurve.addTransitionArcSegments(builder, transitionArcSegmentsOffset);\r\n  return HorizontalCurve.endHorizontalCurve(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class VerticalCurve {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns VerticalCurve\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):VerticalCurve {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalCurve= obj\r\n * @returns VerticalCurve\r\n */\r\nstatic getRootAsVerticalCurve(bb:flatbuffers.ByteBuffer, obj?:VerticalCurve):VerticalCurve {\r\n  return (obj || new VerticalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param VerticalCurve= obj\r\n * @returns VerticalCurve\r\n */\r\nstatic getSizePrefixedRootAsVerticalCurve(bb:flatbuffers.ByteBuffer, obj?:VerticalCurve):VerticalCurve {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new VerticalCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalSegmentType\r\n */\r\nsegmentTypes(index: number):Trimble.Technology.TrimBim.Fbs.VerticalSegmentType|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsegmentTypesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Int8Array\r\n */\r\nsegmentTypesArray():Int8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.VerticalLineSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalLineSegment\r\n */\r\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalLineSegment):Trimble.Technology.TrimBim.Fbs.VerticalLineSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlineSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment\r\n */\r\ncircularArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment):Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalCircularArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncircularArcSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment\r\n */\r\nparabolicArcSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment):Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalParabolicArcSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nparabolicArcSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startVerticalCurve(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset segmentTypesOffset\r\n */\r\nstatic addSegmentTypes(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, segmentTypesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<Trimble.Technology.TrimBim.Fbs.VerticalSegmentType> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSegmentTypesVector(builder:flatbuffers.Builder, data:Trimble.Technology.TrimBim.Fbs.VerticalSegmentType[]):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSegmentTypesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lineSegmentsOffset\r\n */\r\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, lineSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset circularArcSegmentsOffset\r\n */\r\nstatic addCircularArcSegments(builder:flatbuffers.Builder, circularArcSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, circularArcSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createCircularArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startCircularArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset parabolicArcSegmentsOffset\r\n */\r\nstatic addParabolicArcSegments(builder:flatbuffers.Builder, parabolicArcSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, parabolicArcSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createParabolicArcSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startParabolicArcSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endVerticalCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // segmentTypes\r\n  builder.requiredField(offset, 6); // lineSegments\r\n  builder.requiredField(offset, 8); // circularArcSegments\r\n  builder.requiredField(offset, 10); // parabolicArcSegments\r\n  return offset;\r\n};\r\n\r\nstatic createVerticalCurve(builder:flatbuffers.Builder, segmentTypesOffset:flatbuffers.Offset, lineSegmentsOffset:flatbuffers.Offset, circularArcSegmentsOffset:flatbuffers.Offset, parabolicArcSegmentsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  VerticalCurve.startVerticalCurve(builder);\r\n  VerticalCurve.addSegmentTypes(builder, segmentTypesOffset);\r\n  VerticalCurve.addLineSegments(builder, lineSegmentsOffset);\r\n  VerticalCurve.addCircularArcSegments(builder, circularArcSegmentsOffset);\r\n  VerticalCurve.addParabolicArcSegments(builder, parabolicArcSegmentsOffset);\r\n  return VerticalCurve.endVerticalCurve(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class AlignmentCurve {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns AlignmentCurve\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):AlignmentCurve {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param AlignmentCurve= obj\r\n * @returns AlignmentCurve\r\n */\r\nstatic getRootAsAlignmentCurve(bb:flatbuffers.ByteBuffer, obj?:AlignmentCurve):AlignmentCurve {\r\n  return (obj || new AlignmentCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param AlignmentCurve= obj\r\n * @returns AlignmentCurve\r\n */\r\nstatic getSizePrefixedRootAsAlignmentCurve(bb:flatbuffers.ByteBuffer, obj?:AlignmentCurve):AlignmentCurve {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new AlignmentCurve()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.HorizontalCurve= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HorizontalCurve|null\r\n */\r\nhorizontalCurve(obj?:Trimble.Technology.TrimBim.Fbs.HorizontalCurve):Trimble.Technology.TrimBim.Fbs.HorizontalCurve|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HorizontalCurve()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.VerticalCurve= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.VerticalCurve|null\r\n */\r\nverticalCurve(obj?:Trimble.Technology.TrimBim.Fbs.VerticalCurve):Trimble.Technology.TrimBim.Fbs.VerticalCurve|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.VerticalCurve()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nname():string|null\r\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nname(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startAlignmentCurve(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset horizontalCurveOffset\r\n */\r\nstatic addHorizontalCurve(builder:flatbuffers.Builder, horizontalCurveOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, horizontalCurveOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset verticalCurveOffset\r\n */\r\nstatic addVerticalCurve(builder:flatbuffers.Builder, verticalCurveOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, verticalCurveOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset nameOffset\r\n */\r\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, nameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endAlignmentCurve(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // horizontalCurve\r\n  builder.requiredField(offset, 6); // verticalCurve\r\n  builder.requiredField(offset, 8); // name\r\n  return offset;\r\n};\r\n\r\nstatic createAlignmentCurve(builder:flatbuffers.Builder, horizontalCurveOffset:flatbuffers.Offset, verticalCurveOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  AlignmentCurve.startAlignmentCurve(builder);\r\n  AlignmentCurve.addHorizontalCurve(builder, horizontalCurveOffset);\r\n  AlignmentCurve.addVerticalCurve(builder, verticalCurveOffset);\r\n  AlignmentCurve.addName(builder, nameOffset);\r\n  return AlignmentCurve.endAlignmentCurve(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GridLineSegment {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GridLineSegment\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GridLineSegment {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridLineSegment= obj\r\n * @returns GridLineSegment\r\n */\r\nstatic getRootAsGridLineSegment(bb:flatbuffers.ByteBuffer, obj?:GridLineSegment):GridLineSegment {\r\n  return (obj || new GridLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridLineSegment= obj\r\n * @returns GridLineSegment\r\n */\r\nstatic getSizePrefixedRootAsGridLineSegment(bb:flatbuffers.ByteBuffer, obj?:GridLineSegment):GridLineSegment {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GridLineSegment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\naxisTag():string|null\r\naxisTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\naxisTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Line3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Line3d|null\r\n */\r\nlineSegment(obj?:Trimble.Technology.TrimBim.Fbs.Line3d):Trimble.Technology.TrimBim.Fbs.Line3d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGridLineSegment(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset axisTagOffset\r\n */\r\nstatic addAxisTag(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, axisTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lineSegmentOffset\r\n */\r\nstatic addLineSegment(builder:flatbuffers.Builder, lineSegmentOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, lineSegmentOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGridLineSegment(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // axisTag\r\n  builder.requiredField(offset, 6); // lineSegment\r\n  return offset;\r\n};\r\n\r\nstatic createGridLineSegment(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset, lineSegmentOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GridLineSegment.startGridLineSegment(builder);\r\n  GridLineSegment.addAxisTag(builder, axisTagOffset);\r\n  GridLineSegment.addLineSegment(builder, lineSegmentOffset);\r\n  return GridLineSegment.endGridLineSegment(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GridArc {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GridArc\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GridArc {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridArc= obj\r\n * @returns GridArc\r\n */\r\nstatic getRootAsGridArc(bb:flatbuffers.ByteBuffer, obj?:GridArc):GridArc {\r\n  return (obj || new GridArc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridArc= obj\r\n * @returns GridArc\r\n */\r\nstatic getSizePrefixedRootAsGridArc(bb:flatbuffers.ByteBuffer, obj?:GridArc):GridArc {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GridArc()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\naxisTag():string|null\r\naxisTag(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\naxisTag(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Arc3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3d|null\r\n */\r\narc(obj?:Trimble.Technology.TrimBim.Fbs.Arc3d):Trimble.Technology.TrimBim.Fbs.Arc3d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGridArc(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset axisTagOffset\r\n */\r\nstatic addAxisTag(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, axisTagOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset arcOffset\r\n */\r\nstatic addArc(builder:flatbuffers.Builder, arcOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, arcOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGridArc(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // axisTag\r\n  builder.requiredField(offset, 6); // arc\r\n  return offset;\r\n};\r\n\r\nstatic createGridArc(builder:flatbuffers.Builder, axisTagOffset:flatbuffers.Offset, arcOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GridArc.startGridArc(builder);\r\n  GridArc.addAxisTag(builder, axisTagOffset);\r\n  GridArc.addArc(builder, arcOffset);\r\n  return GridArc.endGridArc(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GridLineContainer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GridLineContainer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GridLineContainer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridLineContainer= obj\r\n * @returns GridLineContainer\r\n */\r\nstatic getRootAsGridLineContainer(bb:flatbuffers.ByteBuffer, obj?:GridLineContainer):GridLineContainer {\r\n  return (obj || new GridLineContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GridLineContainer= obj\r\n * @returns GridLineContainer\r\n */\r\nstatic getSizePrefixedRootAsGridLineContainer(bb:flatbuffers.ByteBuffer, obj?:GridLineContainer):GridLineContainer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GridLineContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GridLineSegment= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GridLineSegment\r\n */\r\ngridLineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridLineSegment):Trimble.Technology.TrimBim.Fbs.GridLineSegment|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridLineSegment()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngridLineSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GridArc= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GridArc\r\n */\r\ngridArcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridArc):Trimble.Technology.TrimBim.Fbs.GridArc|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridArc()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngridArcsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGridLineContainer(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gridLineSegmentsOffset\r\n */\r\nstatic addGridLineSegments(builder:flatbuffers.Builder, gridLineSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, gridLineSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGridLineSegmentsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGridLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gridArcsOffset\r\n */\r\nstatic addGridArcs(builder:flatbuffers.Builder, gridArcsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, gridArcsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGridArcsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGridArcsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGridLineContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // gridLineSegments\r\n  builder.requiredField(offset, 6); // gridArcs\r\n  return offset;\r\n};\r\n\r\nstatic createGridLineContainer(builder:flatbuffers.Builder, gridLineSegmentsOffset:flatbuffers.Offset, gridArcsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GridLineContainer.startGridLineContainer(builder);\r\n  GridLineContainer.addGridLineSegments(builder, gridLineSegmentsOffset);\r\n  GridLineContainer.addGridArcs(builder, gridArcsOffset);\r\n  return GridLineContainer.endGridLineContainer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Owner {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Owner\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Owner {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Owner= obj\r\n * @returns Owner\r\n */\r\nstatic getRootAsOwner(bb:flatbuffers.ByteBuffer, obj?:Owner):Owner {\r\n  return (obj || new Owner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Owner= obj\r\n * @returns Owner\r\n */\r\nstatic getSizePrefixedRootAsOwner(bb:flatbuffers.ByteBuffer, obj?:Owner):Owner {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Owner()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\npersonId():string|null\r\npersonId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\npersonId(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\npersonFamilyName():string|null\r\npersonFamilyName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\npersonFamilyName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\npersonGivenName():string|null\r\npersonGivenName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\npersonGivenName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\npersonMiddleNames():string|null\r\npersonMiddleNames(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\npersonMiddleNames(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\npersonRoles():string|null\r\npersonRoles(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\npersonRoles(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\norganizationId():string|null\r\norganizationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\norganizationId(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\norganizationName():string|null\r\norganizationName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\norganizationName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\norganizationDescription():string|null\r\norganizationDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\norganizationDescription(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\norganizationRoles():string|null\r\norganizationRoles(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\norganizationRoles(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\napplicationVersion():string|null\r\napplicationVersion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\napplicationVersion(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\napplicationFullName():string|null\r\napplicationFullName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\napplicationFullName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\napplicationIdentifier():string|null\r\napplicationIdentifier(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\napplicationIdentifier(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startOwner(builder:flatbuffers.Builder) {\r\n  builder.startObject(12);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset personIdOffset\r\n */\r\nstatic addPersonId(builder:flatbuffers.Builder, personIdOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, personIdOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset personFamilyNameOffset\r\n */\r\nstatic addPersonFamilyName(builder:flatbuffers.Builder, personFamilyNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, personFamilyNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset personGivenNameOffset\r\n */\r\nstatic addPersonGivenName(builder:flatbuffers.Builder, personGivenNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, personGivenNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset personMiddleNamesOffset\r\n */\r\nstatic addPersonMiddleNames(builder:flatbuffers.Builder, personMiddleNamesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, personMiddleNamesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset personRolesOffset\r\n */\r\nstatic addPersonRoles(builder:flatbuffers.Builder, personRolesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, personRolesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset organizationIdOffset\r\n */\r\nstatic addOrganizationId(builder:flatbuffers.Builder, organizationIdOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, organizationIdOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset organizationNameOffset\r\n */\r\nstatic addOrganizationName(builder:flatbuffers.Builder, organizationNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, organizationNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset organizationDescriptionOffset\r\n */\r\nstatic addOrganizationDescription(builder:flatbuffers.Builder, organizationDescriptionOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(7, organizationDescriptionOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset organizationRolesOffset\r\n */\r\nstatic addOrganizationRoles(builder:flatbuffers.Builder, organizationRolesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(8, organizationRolesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset applicationVersionOffset\r\n */\r\nstatic addApplicationVersion(builder:flatbuffers.Builder, applicationVersionOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(9, applicationVersionOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset applicationFullNameOffset\r\n */\r\nstatic addApplicationFullName(builder:flatbuffers.Builder, applicationFullNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(10, applicationFullNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset applicationIdentifierOffset\r\n */\r\nstatic addApplicationIdentifier(builder:flatbuffers.Builder, applicationIdentifierOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(11, applicationIdentifierOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endOwner(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createOwner(builder:flatbuffers.Builder, personIdOffset:flatbuffers.Offset, personFamilyNameOffset:flatbuffers.Offset, personGivenNameOffset:flatbuffers.Offset, personMiddleNamesOffset:flatbuffers.Offset, personRolesOffset:flatbuffers.Offset, organizationIdOffset:flatbuffers.Offset, organizationNameOffset:flatbuffers.Offset, organizationDescriptionOffset:flatbuffers.Offset, organizationRolesOffset:flatbuffers.Offset, applicationVersionOffset:flatbuffers.Offset, applicationFullNameOffset:flatbuffers.Offset, applicationIdentifierOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Owner.startOwner(builder);\r\n  Owner.addPersonId(builder, personIdOffset);\r\n  Owner.addPersonFamilyName(builder, personFamilyNameOffset);\r\n  Owner.addPersonGivenName(builder, personGivenNameOffset);\r\n  Owner.addPersonMiddleNames(builder, personMiddleNamesOffset);\r\n  Owner.addPersonRoles(builder, personRolesOffset);\r\n  Owner.addOrganizationId(builder, organizationIdOffset);\r\n  Owner.addOrganizationName(builder, organizationNameOffset);\r\n  Owner.addOrganizationDescription(builder, organizationDescriptionOffset);\r\n  Owner.addOrganizationRoles(builder, organizationRolesOffset);\r\n  Owner.addApplicationVersion(builder, applicationVersionOffset);\r\n  Owner.addApplicationFullName(builder, applicationFullNameOffset);\r\n  Owner.addApplicationIdentifier(builder, applicationIdentifierOffset);\r\n  return Owner.endOwner(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class History {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns History\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):History {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.OwnerHistoryState\r\n */\r\nstate():Trimble.Technology.TrimBim.Fbs.OwnerHistoryState {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryState value\r\n * @returns boolean\r\n */\r\nmutate_state(value:Trimble.Technology.TrimBim.Fbs.OwnerHistoryState):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction\r\n */\r\nchangeAction():Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 1));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction value\r\n * @returns boolean\r\n */\r\nmutate_changeAction(value:Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 1);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns flatbuffers.Long\r\n */\r\ncreationDate():flatbuffers.Long {\r\n  return this.bb!.readInt64(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Long value\r\n * @returns boolean\r\n */\r\nmutate_creationDate(value:flatbuffers.Long):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns flatbuffers.Long\r\n */\r\nlastModificationDate():flatbuffers.Long {\r\n  return this.bb!.readInt64(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Long value\r\n * @returns boolean\r\n */\r\nmutate_lastModificationDate(value:flatbuffers.Long):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryState state\r\n * @param Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction changeAction\r\n * @param flatbuffers.Long creationDate\r\n * @param flatbuffers.Long lastModificationDate\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createHistory(builder:flatbuffers.Builder, state: Trimble.Technology.TrimBim.Fbs.OwnerHistoryState, changeAction: Trimble.Technology.TrimBim.Fbs.OwnerHistoryChangeAction, creationDate: flatbuffers.Long, lastModificationDate: flatbuffers.Long):flatbuffers.Offset {\r\n  builder.prep(8, 24);\r\n  builder.writeInt64(lastModificationDate);\r\n  builder.writeInt64(creationDate);\r\n  builder.pad(6);\r\n  builder.writeInt8(changeAction);\r\n  builder.writeInt8(state);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Product {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Product\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Product {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nowner():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_owner(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhistory():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_history(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nname():number {\r\n  return this.bb!.readUint32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_name(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndescription():number {\r\n  return this.bb!.readUint32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_description(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nobjectType():number {\r\n  return this.bb!.readUint32(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_objectType(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number owner\r\n * @param number history\r\n * @param number name\r\n * @param number description\r\n * @param number objectType\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createProduct(builder:flatbuffers.Builder, owner: number, history: number, name: number, description: number, objectType: number):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.writeInt32(objectType);\r\n  builder.writeInt32(description);\r\n  builder.writeInt32(name);\r\n  builder.writeInt32(history);\r\n  builder.writeInt32(owner);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class ProductBinding {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ProductBinding\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ProductBinding {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nentityId():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_entityId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nproductId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_productId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number entityId\r\n * @param number productId\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createProductBinding(builder:flatbuffers.Builder, entityId: number, productId: number):flatbuffers.Offset {\r\n  builder.prep(4, 8);\r\n  builder.writeInt32(productId);\r\n  builder.writeInt32(entityId);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class SinglePropertyDefinition {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns SinglePropertyDefinition\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SinglePropertyDefinition {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nname():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_name(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.PropertyType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.PropertyType {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 4));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.PropertyType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.PropertyType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number name\r\n * @param Trimble.Technology.TrimBim.Fbs.PropertyType type\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSinglePropertyDefinition(builder:flatbuffers.Builder, name: number, type: Trimble.Technology.TrimBim.Fbs.PropertyType):flatbuffers.Offset {\r\n  builder.prep(4, 8);\r\n  builder.pad(3);\r\n  builder.writeInt8(type);\r\n  builder.writeInt32(name);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class PropertySetDefinition {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PropertySetDefinition\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PropertySetDefinition {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PropertySetDefinition= obj\r\n * @returns PropertySetDefinition\r\n */\r\nstatic getRootAsPropertySetDefinition(bb:flatbuffers.ByteBuffer, obj?:PropertySetDefinition):PropertySetDefinition {\r\n  return (obj || new PropertySetDefinition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PropertySetDefinition= obj\r\n * @returns PropertySetDefinition\r\n */\r\nstatic getSizePrefixedRootAsPropertySetDefinition(bb:flatbuffers.ByteBuffer, obj?:PropertySetDefinition):PropertySetDefinition {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PropertySetDefinition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nname():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_name(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition\r\n */\r\nproperties(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition):Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SinglePropertyDefinition()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npropertiesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPropertySetDefinition(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number name\r\n */\r\nstatic addName(builder:flatbuffers.Builder, name:number) {\r\n  builder.addFieldInt32(0, name, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset propertiesOffset\r\n */\r\nstatic addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, propertiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPropertiesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPropertySetDefinition(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // properties\r\n  return offset;\r\n};\r\n\r\nstatic createPropertySetDefinition(builder:flatbuffers.Builder, name:number, propertiesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PropertySetDefinition.startPropertySetDefinition(builder);\r\n  PropertySetDefinition.addName(builder, name);\r\n  PropertySetDefinition.addProperties(builder, propertiesOffset);\r\n  return PropertySetDefinition.endPropertySetDefinition(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class PropertySet {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PropertySet\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PropertySet {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PropertySet= obj\r\n * @returns PropertySet\r\n */\r\nstatic getRootAsPropertySet(bb:flatbuffers.ByteBuffer, obj?:PropertySet):PropertySet {\r\n  return (obj || new PropertySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PropertySet= obj\r\n * @returns PropertySet\r\n */\r\nstatic getSizePrefixedRootAsPropertySet(bb:flatbuffers.ByteBuffer, obj?:PropertySet):PropertySet {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PropertySet()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndefinition():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_definition(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nvalues(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nvaluesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint32Array\r\n */\r\nvaluesArray():Uint32Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nentities(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nentitiesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Uint32Array\r\n */\r\nentitiesArray():Uint32Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPropertySet(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number definition\r\n */\r\nstatic addDefinition(builder:flatbuffers.Builder, definition:number) {\r\n  builder.addFieldInt32(0, definition, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset valuesOffset\r\n */\r\nstatic addValues(builder:flatbuffers.Builder, valuesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, valuesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createValuesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt32(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startValuesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset entitiesOffset\r\n */\r\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, entitiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createEntitiesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt32(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startEntitiesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPropertySet(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // values\r\n  builder.requiredField(offset, 8); // entities\r\n  return offset;\r\n};\r\n\r\nstatic createPropertySet(builder:flatbuffers.Builder, definition:number, valuesOffset:flatbuffers.Offset, entitiesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PropertySet.startPropertySet(builder);\r\n  PropertySet.addDefinition(builder, definition);\r\n  PropertySet.addValues(builder, valuesOffset);\r\n  PropertySet.addEntities(builder, entitiesOffset);\r\n  return PropertySet.endPropertySet(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class ModelProperties {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ModelProperties\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelProperties {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelProperties= obj\r\n * @returns ModelProperties\r\n */\r\nstatic getRootAsModelProperties(bb:flatbuffers.ByteBuffer, obj?:ModelProperties):ModelProperties {\r\n  return (obj || new ModelProperties()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelProperties= obj\r\n * @returns ModelProperties\r\n */\r\nstatic getSizePrefixedRootAsModelProperties(bb:flatbuffers.ByteBuffer, obj?:ModelProperties):ModelProperties {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ModelProperties()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.ProductBinding= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.ProductBinding\r\n */\r\nproductBindings(index: number, obj?:Trimble.Technology.TrimBim.Fbs.ProductBinding):Trimble.Technology.TrimBim.Fbs.ProductBinding|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ProductBinding()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nproductBindingsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Product= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Product\r\n */\r\nproducts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Product):Trimble.Technology.TrimBim.Fbs.Product|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Product()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nproductsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Owner= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Owner\r\n */\r\nowners(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Owner):Trimble.Technology.TrimBim.Fbs.Owner|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Owner()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nownersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.History= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.History\r\n */\r\nhistories(index: number, obj?:Trimble.Technology.TrimBim.Fbs.History):Trimble.Technology.TrimBim.Fbs.History|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.History()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhistoriesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nnames(index: number):string\r\nnames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nnames(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnamesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\ndescriptions(index: number):string\r\ndescriptions(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\ndescriptions(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndescriptionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nobjectTypes(index: number):string\r\nobjectTypes(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nobjectTypes(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nobjectTypesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.PropertySet= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.PropertySet\r\n */\r\npropertySetBindings(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PropertySet):Trimble.Technology.TrimBim.Fbs.PropertySet|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PropertySet()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npropertySetBindingsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\npropertySetNames(index: number):string\r\npropertySetNames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\npropertySetNames(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npropertySetNamesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\npropertyNames(index: number):string\r\npropertyNames(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\npropertyNames(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npropertyNamesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.PropertySetDefinition= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.PropertySetDefinition\r\n */\r\ndefinitions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.PropertySetDefinition):Trimble.Technology.TrimBim.Fbs.PropertySetDefinition|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.PropertySetDefinition()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndefinitionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nlengthMeasures(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlengthMeasuresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nlengthMeasuresArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nareaMeasures(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nareaMeasuresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nareaMeasuresArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nvolumeMeasures(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nvolumeMeasuresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nvolumeMeasuresArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nmassMeasures(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmassMeasuresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nmassMeasuresArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nangleMeasures(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nangleMeasuresLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\nangleMeasuresArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nstringValues(index: number):string\r\nstringValues(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nstringValues(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 36);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstringValuesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 36);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\ndoubleValues(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 38);\r\n  return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndoubleValuesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 38);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Float64Array\r\n */\r\ndoubleValuesArray():Float64Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 38);\r\n  return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns flatbuffers.Long\r\n */\r\ndateTimeValues(index: number):flatbuffers.Long|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndateTimeValuesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startModelProperties(builder:flatbuffers.Builder) {\r\n  builder.startObject(19);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset productBindingsOffset\r\n */\r\nstatic addProductBindings(builder:flatbuffers.Builder, productBindingsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, productBindingsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startProductBindingsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset productsOffset\r\n */\r\nstatic addProducts(builder:flatbuffers.Builder, productsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, productsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startProductsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(20, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset ownersOffset\r\n */\r\nstatic addOwners(builder:flatbuffers.Builder, ownersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, ownersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createOwnersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startOwnersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset historiesOffset\r\n */\r\nstatic addHistories(builder:flatbuffers.Builder, historiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, historiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startHistoriesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(24, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset namesOffset\r\n */\r\nstatic addNames(builder:flatbuffers.Builder, namesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, namesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNamesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset descriptionsOffset\r\n */\r\nstatic addDescriptions(builder:flatbuffers.Builder, descriptionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, descriptionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDescriptionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDescriptionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset objectTypesOffset\r\n */\r\nstatic addObjectTypes(builder:flatbuffers.Builder, objectTypesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, objectTypesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createObjectTypesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startObjectTypesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset propertySetBindingsOffset\r\n */\r\nstatic addPropertySetBindings(builder:flatbuffers.Builder, propertySetBindingsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(7, propertySetBindingsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPropertySetBindingsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPropertySetBindingsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset propertySetNamesOffset\r\n */\r\nstatic addPropertySetNames(builder:flatbuffers.Builder, propertySetNamesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(8, propertySetNamesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPropertySetNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPropertySetNamesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset propertyNamesOffset\r\n */\r\nstatic addPropertyNames(builder:flatbuffers.Builder, propertyNamesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(9, propertyNamesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPropertyNamesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPropertyNamesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset definitionsOffset\r\n */\r\nstatic addDefinitions(builder:flatbuffers.Builder, definitionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(10, definitionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDefinitionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDefinitionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lengthMeasuresOffset\r\n */\r\nstatic addLengthMeasures(builder:flatbuffers.Builder, lengthMeasuresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(11, lengthMeasuresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLengthMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLengthMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset areaMeasuresOffset\r\n */\r\nstatic addAreaMeasures(builder:flatbuffers.Builder, areaMeasuresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(12, areaMeasuresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createAreaMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startAreaMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset volumeMeasuresOffset\r\n */\r\nstatic addVolumeMeasures(builder:flatbuffers.Builder, volumeMeasuresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(13, volumeMeasuresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVolumeMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startVolumeMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset massMeasuresOffset\r\n */\r\nstatic addMassMeasures(builder:flatbuffers.Builder, massMeasuresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(14, massMeasuresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createMassMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startMassMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset angleMeasuresOffset\r\n */\r\nstatic addAngleMeasures(builder:flatbuffers.Builder, angleMeasuresOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(15, angleMeasuresOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createAngleMeasuresVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startAngleMeasuresVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset stringValuesOffset\r\n */\r\nstatic addStringValues(builder:flatbuffers.Builder, stringValuesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(16, stringValuesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createStringValuesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startStringValuesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset doubleValuesOffset\r\n */\r\nstatic addDoubleValues(builder:flatbuffers.Builder, doubleValuesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(17, doubleValuesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDoubleValuesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addFloat64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDoubleValuesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset dateTimeValuesOffset\r\n */\r\nstatic addDateTimeValues(builder:flatbuffers.Builder, dateTimeValuesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(18, dateTimeValuesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Long> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDateTimeValuesVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDateTimeValuesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endModelProperties(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // productBindings\r\n  builder.requiredField(offset, 6); // products\r\n  builder.requiredField(offset, 8); // owners\r\n  builder.requiredField(offset, 10); // histories\r\n  builder.requiredField(offset, 12); // names\r\n  builder.requiredField(offset, 14); // descriptions\r\n  builder.requiredField(offset, 16); // objectTypes\r\n  builder.requiredField(offset, 18); // propertySetBindings\r\n  builder.requiredField(offset, 20); // propertySetNames\r\n  builder.requiredField(offset, 22); // propertyNames\r\n  builder.requiredField(offset, 24); // definitions\r\n  builder.requiredField(offset, 26); // lengthMeasures\r\n  builder.requiredField(offset, 28); // areaMeasures\r\n  builder.requiredField(offset, 30); // volumeMeasures\r\n  builder.requiredField(offset, 32); // massMeasures\r\n  builder.requiredField(offset, 34); // angleMeasures\r\n  builder.requiredField(offset, 36); // stringValues\r\n  builder.requiredField(offset, 38); // doubleValues\r\n  builder.requiredField(offset, 40); // dateTimeValues\r\n  return offset;\r\n};\r\n\r\nstatic createModelProperties(builder:flatbuffers.Builder, productBindingsOffset:flatbuffers.Offset, productsOffset:flatbuffers.Offset, ownersOffset:flatbuffers.Offset, historiesOffset:flatbuffers.Offset, namesOffset:flatbuffers.Offset, descriptionsOffset:flatbuffers.Offset, objectTypesOffset:flatbuffers.Offset, propertySetBindingsOffset:flatbuffers.Offset, propertySetNamesOffset:flatbuffers.Offset, propertyNamesOffset:flatbuffers.Offset, definitionsOffset:flatbuffers.Offset, lengthMeasuresOffset:flatbuffers.Offset, areaMeasuresOffset:flatbuffers.Offset, volumeMeasuresOffset:flatbuffers.Offset, massMeasuresOffset:flatbuffers.Offset, angleMeasuresOffset:flatbuffers.Offset, stringValuesOffset:flatbuffers.Offset, doubleValuesOffset:flatbuffers.Offset, dateTimeValuesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  ModelProperties.startModelProperties(builder);\r\n  ModelProperties.addProductBindings(builder, productBindingsOffset);\r\n  ModelProperties.addProducts(builder, productsOffset);\r\n  ModelProperties.addOwners(builder, ownersOffset);\r\n  ModelProperties.addHistories(builder, historiesOffset);\r\n  ModelProperties.addNames(builder, namesOffset);\r\n  ModelProperties.addDescriptions(builder, descriptionsOffset);\r\n  ModelProperties.addObjectTypes(builder, objectTypesOffset);\r\n  ModelProperties.addPropertySetBindings(builder, propertySetBindingsOffset);\r\n  ModelProperties.addPropertySetNames(builder, propertySetNamesOffset);\r\n  ModelProperties.addPropertyNames(builder, propertyNamesOffset);\r\n  ModelProperties.addDefinitions(builder, definitionsOffset);\r\n  ModelProperties.addLengthMeasures(builder, lengthMeasuresOffset);\r\n  ModelProperties.addAreaMeasures(builder, areaMeasuresOffset);\r\n  ModelProperties.addVolumeMeasures(builder, volumeMeasuresOffset);\r\n  ModelProperties.addMassMeasures(builder, massMeasuresOffset);\r\n  ModelProperties.addAngleMeasures(builder, angleMeasuresOffset);\r\n  ModelProperties.addStringValues(builder, stringValuesOffset);\r\n  ModelProperties.addDoubleValues(builder, doubleValuesOffset);\r\n  ModelProperties.addDateTimeValues(builder, dateTimeValuesOffset);\r\n  return ModelProperties.endModelProperties(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class SurfaceMaterial {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns SurfaceMaterial\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SurfaceMaterial {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nr():number {\r\n  return this.bb!.readUint8(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_r(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ng():number {\r\n  return this.bb!.readUint8(this.bb_pos + 1);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_g(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 1);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nb():number {\r\n  return this.bb!.readUint8(this.bb_pos + 2);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_b(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 2);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\na():number {\r\n  return this.bb!.readUint8(this.bb_pos + 3);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_a(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 3);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntextureId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_textureId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.Sidedness\r\n */\r\nsidedness():Trimble.Technology.TrimBim.Fbs.Sidedness {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 8));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Sidedness value\r\n * @returns boolean\r\n */\r\nmutate_sidedness(value:Trimble.Technology.TrimBim.Fbs.Sidedness):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.LineStyle\r\n */\r\nlineStyle():Trimble.Technology.TrimBim.Fbs.LineStyle {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 9));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.LineStyle value\r\n * @returns boolean\r\n */\r\nmutate_lineStyle(value:Trimble.Technology.TrimBim.Fbs.LineStyle):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 9);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmetallic():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_metallic(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nroughness():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_roughness(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number r\r\n * @param number g\r\n * @param number b\r\n * @param number a\r\n * @param number textureId\r\n * @param Trimble.Technology.TrimBim.Fbs.Sidedness sidedness\r\n * @param Trimble.Technology.TrimBim.Fbs.LineStyle lineStyle\r\n * @param number metallic\r\n * @param number roughness\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSurfaceMaterial(builder:flatbuffers.Builder, r: number, g: number, b: number, a: number, textureId: number, sidedness: Trimble.Technology.TrimBim.Fbs.Sidedness, lineStyle: Trimble.Technology.TrimBim.Fbs.LineStyle, metallic: number, roughness: number):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.writeFloat32(roughness);\r\n  builder.writeFloat32(metallic);\r\n  builder.pad(2);\r\n  builder.writeInt8(lineStyle);\r\n  builder.writeInt8(sidedness);\r\n  builder.writeInt32(textureId);\r\n  builder.writeInt8(a);\r\n  builder.writeInt8(b);\r\n  builder.writeInt8(g);\r\n  builder.writeInt8(r);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Entity {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Entity\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Entity {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.IdentifierType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.IdentifierType {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.IdentifierType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.IdentifierType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nidentifierIndex():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_identifierIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nclassIndex():number {\r\n  return this.bb!.readUint32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_classIndex(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Placement3= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Placement3|null\r\n */\r\nglobalPlacement(obj?:Trimble.Technology.TrimBim.Fbs.Placement3):Trimble.Technology.TrimBim.Fbs.Placement3|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Placement3()).__init(this.bb_pos + 16, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.IdentifierType type\r\n * @param number identifierIndex\r\n * @param number classIndex\r\n * @param number globalPlacement_origin_x\r\n * @param number globalPlacement_origin_y\r\n * @param number globalPlacement_origin_z\r\n * @param number globalPlacement_xAxis_x\r\n * @param number globalPlacement_xAxis_y\r\n * @param number globalPlacement_xAxis_z\r\n * @param number globalPlacement_yAxis_x\r\n * @param number globalPlacement_yAxis_y\r\n * @param number globalPlacement_yAxis_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createEntity(builder:flatbuffers.Builder, type: Trimble.Technology.TrimBim.Fbs.IdentifierType, identifierIndex: number, classIndex: number, globalPlacement_origin_x: number, globalPlacement_origin_y: number, globalPlacement_origin_z: number, globalPlacement_xAxis_x: number, globalPlacement_xAxis_y: number, globalPlacement_xAxis_z: number, globalPlacement_yAxis_x: number, globalPlacement_yAxis_y: number, globalPlacement_yAxis_z: number):flatbuffers.Offset {\r\n  builder.prep(8, 64);\r\n  builder.prep(8, 48);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(globalPlacement_yAxis_z);\r\n  builder.writeFloat32(globalPlacement_yAxis_y);\r\n  builder.writeFloat32(globalPlacement_yAxis_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(globalPlacement_xAxis_z);\r\n  builder.writeFloat32(globalPlacement_xAxis_y);\r\n  builder.writeFloat32(globalPlacement_xAxis_x);\r\n  builder.prep(8, 24);\r\n  builder.writeFloat64(globalPlacement_origin_z);\r\n  builder.writeFloat64(globalPlacement_origin_y);\r\n  builder.writeFloat64(globalPlacement_origin_x);\r\n  builder.pad(4);\r\n  builder.writeInt32(classIndex);\r\n  builder.writeInt32(identifierIndex);\r\n  builder.pad(3);\r\n  builder.writeInt8(type);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GeometryDefinition {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GeometryDefinition\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GeometryDefinition {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.GeometryType {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.GeometryType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.GeometryType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nindex():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_index(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.AABB3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.AABB3f|null\r\n */\r\nboundingBox(obj?:Trimble.Technology.TrimBim.Fbs.AABB3f):Trimble.Technology.TrimBim.Fbs.AABB3f|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.AABB3f()).__init(this.bb_pos + 8, this.bb!);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.GeometryType type\r\n * @param number index\r\n * @param number boundingBox_min_x\r\n * @param number boundingBox_min_y\r\n * @param number boundingBox_min_z\r\n * @param number boundingBox_max_x\r\n * @param number boundingBox_max_y\r\n * @param number boundingBox_max_z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGeometryDefinition(builder:flatbuffers.Builder, type: Trimble.Technology.TrimBim.Fbs.GeometryType, index: number, boundingBox_min_x: number, boundingBox_min_y: number, boundingBox_min_z: number, boundingBox_max_x: number, boundingBox_max_y: number, boundingBox_max_z: number):flatbuffers.Offset {\r\n  builder.prep(4, 32);\r\n  builder.prep(4, 24);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(boundingBox_max_z);\r\n  builder.writeFloat32(boundingBox_max_y);\r\n  builder.writeFloat32(boundingBox_max_x);\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(boundingBox_min_z);\r\n  builder.writeFloat32(boundingBox_min_y);\r\n  builder.writeFloat32(boundingBox_min_x);\r\n  builder.writeInt32(index);\r\n  builder.pad(3);\r\n  builder.writeInt8(type);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GeometryInstance {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GeometryInstance\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GeometryInstance {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlocalPlacementId():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_localPlacementId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nentityId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_entityId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndefinitionId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_definitionId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsurfaceMaterialId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_surfaceMaterialId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlayerId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_layerId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number localPlacementId\r\n * @param number entityId\r\n * @param number definitionId\r\n * @param number surfaceMaterialId\r\n * @param number layerId\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGeometryInstance(builder:flatbuffers.Builder, localPlacementId: number, entityId: number, definitionId: number, surfaceMaterialId: number, layerId: number):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.writeInt32(layerId);\r\n  builder.writeInt32(surfaceMaterialId);\r\n  builder.writeInt32(definitionId);\r\n  builder.writeInt32(entityId);\r\n  builder.writeInt32(localPlacementId);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Texture {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Texture\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Texture {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Texture= obj\r\n * @returns Texture\r\n */\r\nstatic getRootAsTexture(bb:flatbuffers.ByteBuffer, obj?:Texture):Texture {\r\n  return (obj || new Texture()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Texture= obj\r\n * @returns Texture\r\n */\r\nstatic getSizePrefixedRootAsTexture(bb:flatbuffers.ByteBuffer, obj?:Texture):Texture {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Texture()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.TextureType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.TextureType {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.TextureType.None;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.TextureType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.TextureType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns number\r\n */\r\nbytes(index: number):number|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbytesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns Int8Array\r\n */\r\nbytesArray():Int8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTexture(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.TextureType type\r\n */\r\nstatic addType(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.TextureType) {\r\n  builder.addFieldInt8(0, type, Trimble.Technology.TrimBim.Fbs.TextureType.None);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset bytesOffset\r\n */\r\nstatic addBytes(builder:flatbuffers.Builder, bytesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, bytesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<number> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBytesVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {\r\n  builder.startVector(1, data.length, 1);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt8(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBytesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(1, numElems, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTexture(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // bytes\r\n  return offset;\r\n};\r\n\r\nstatic createTexture(builder:flatbuffers.Builder, type:Trimble.Technology.TrimBim.Fbs.TextureType, bytesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Texture.startTexture(builder);\r\n  Texture.addType(builder, type);\r\n  Texture.addBytes(builder, bytesOffset);\r\n  return Texture.endTexture(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class GraphicsContainer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GraphicsContainer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GraphicsContainer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GraphicsContainer= obj\r\n * @returns GraphicsContainer\r\n */\r\nstatic getRootAsGraphicsContainer(bb:flatbuffers.ByteBuffer, obj?:GraphicsContainer):GraphicsContainer {\r\n  return (obj || new GraphicsContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GraphicsContainer= obj\r\n * @returns GraphicsContainer\r\n */\r\nstatic getSizePrefixedRootAsGraphicsContainer(bb:flatbuffers.ByteBuffer, obj?:GraphicsContainer):GraphicsContainer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GraphicsContainer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Line3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Line3f\r\n */\r\nlineSegments(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Line3f):Trimble.Technology.TrimBim.Fbs.Line3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Line3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlineSegmentsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Arc3f= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Arc3f\r\n */\r\narcs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Arc3f):Trimble.Technology.TrimBim.Fbs.Arc3f|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Arc3f()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 44, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\narcsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGraphicsContainer(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset lineSegmentsOffset\r\n */\r\nstatic addLineSegments(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, lineSegmentsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLineSegmentsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(24, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset arcsOffset\r\n */\r\nstatic addArcs(builder:flatbuffers.Builder, arcsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, arcsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startArcsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(44, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGraphicsContainer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // lineSegments\r\n  builder.requiredField(offset, 6); // arcs\r\n  return offset;\r\n};\r\n\r\nstatic createGraphicsContainer(builder:flatbuffers.Builder, lineSegmentsOffset:flatbuffers.Offset, arcsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GraphicsContainer.startGraphicsContainer(builder);\r\n  GraphicsContainer.addLineSegments(builder, lineSegmentsOffset);\r\n  GraphicsContainer.addArcs(builder, arcsOffset);\r\n  return GraphicsContainer.endGraphicsContainer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class CoordinateGeometryPoint {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns CoordinateGeometryPoint\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):CoordinateGeometryPoint {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param CoordinateGeometryPoint= obj\r\n * @returns CoordinateGeometryPoint\r\n */\r\nstatic getRootAsCoordinateGeometryPoint(bb:flatbuffers.ByteBuffer, obj?:CoordinateGeometryPoint):CoordinateGeometryPoint {\r\n  return (obj || new CoordinateGeometryPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param CoordinateGeometryPoint= obj\r\n * @returns CoordinateGeometryPoint\r\n */\r\nstatic getSizePrefixedRootAsCoordinateGeometryPoint(bb:flatbuffers.ByteBuffer, obj?:CoordinateGeometryPoint):CoordinateGeometryPoint {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new CoordinateGeometryPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nname():string|null\r\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nname(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nsymbol():string|null\r\nsymbol(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nsymbol(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startCoordinateGeometryPoint(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset nameOffset\r\n */\r\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, nameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset symbolOffset\r\n */\r\nstatic addSymbol(builder:flatbuffers.Builder, symbolOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, symbolOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endCoordinateGeometryPoint(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // name\r\n  builder.requiredField(offset, 6); // symbol\r\n  return offset;\r\n};\r\n\r\nstatic createCoordinateGeometryPoint(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, symbolOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  CoordinateGeometryPoint.startCoordinateGeometryPoint(builder);\r\n  CoordinateGeometryPoint.addName(builder, nameOffset);\r\n  CoordinateGeometryPoint.addSymbol(builder, symbolOffset);\r\n  return CoordinateGeometryPoint.endCoordinateGeometryPoint(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class BillboardText {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BillboardText\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BillboardText {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BillboardText= obj\r\n * @returns BillboardText\r\n */\r\nstatic getRootAsBillboardText(bb:flatbuffers.ByteBuffer, obj?:BillboardText):BillboardText {\r\n  return (obj || new BillboardText()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BillboardText= obj\r\n * @returns BillboardText\r\n */\r\nstatic getSizePrefixedRootAsBillboardText(bb:flatbuffers.ByteBuffer, obj?:BillboardText):BillboardText {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BillboardText()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntextStyleId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_textStyleId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\ntext():string|null\r\ntext(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\ntext(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBillboardText(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number textStyleId\r\n */\r\nstatic addTextStyleId(builder:flatbuffers.Builder, textStyleId:number) {\r\n  builder.addFieldInt32(0, textStyleId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset textOffset\r\n */\r\nstatic addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, textOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBillboardText(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // text\r\n  return offset;\r\n};\r\n\r\nstatic createBillboardText(builder:flatbuffers.Builder, textStyleId:number, textOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BillboardText.startBillboardText(builder);\r\n  BillboardText.addTextStyleId(builder, textStyleId);\r\n  BillboardText.addText(builder, textOffset);\r\n  return BillboardText.endBillboardText(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TextStyle {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TextStyle\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TextStyle {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TextStyle= obj\r\n * @returns TextStyle\r\n */\r\nstatic getRootAsTextStyle(bb:flatbuffers.ByteBuffer, obj?:TextStyle):TextStyle {\r\n  return (obj || new TextStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TextStyle= obj\r\n * @returns TextStyle\r\n */\r\nstatic getSizePrefixedRootAsTextStyle(bb:flatbuffers.ByteBuffer, obj?:TextStyle):TextStyle {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TextStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nfont():string|null\r\nfont(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nfont(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsize():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_size(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\noptions():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_options(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticalAlign():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_verticalAlign(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhorizontalAlign():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_horizontalAlign(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nrotationAngle():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_rotationAngle(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.LayoutType\r\n */\r\nlayout():Trimble.Technology.TrimBim.Fbs.LayoutType {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.LayoutType.Invalid;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.LayoutType value\r\n * @returns boolean\r\n */\r\nmutate_layout(value:Trimble.Technology.TrimBim.Fbs.LayoutType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.AlignmentType\r\n */\r\nalignment():Trimble.Technology.TrimBim.Fbs.AlignmentType {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : Trimble.Technology.TrimBim.Fbs.AlignmentType.Invalid;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentType value\r\n * @returns boolean\r\n */\r\nmutate_alignment(value:Trimble.Technology.TrimBim.Fbs.AlignmentType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmaxAutoScale():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_maxAutoScale(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nverticalDistanceToObject():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_verticalDistanceToObject(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTextStyle(builder:flatbuffers.Builder) {\r\n  builder.startObject(10);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset fontOffset\r\n */\r\nstatic addFont(builder:flatbuffers.Builder, fontOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, fontOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number size\r\n */\r\nstatic addSize(builder:flatbuffers.Builder, size:number) {\r\n  builder.addFieldFloat64(1, size, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number options\r\n */\r\nstatic addOptions(builder:flatbuffers.Builder, options:number) {\r\n  builder.addFieldInt32(2, options, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number verticalAlign\r\n */\r\nstatic addVerticalAlign(builder:flatbuffers.Builder, verticalAlign:number) {\r\n  builder.addFieldFloat64(3, verticalAlign, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number horizontalAlign\r\n */\r\nstatic addHorizontalAlign(builder:flatbuffers.Builder, horizontalAlign:number) {\r\n  builder.addFieldFloat64(4, horizontalAlign, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number rotationAngle\r\n */\r\nstatic addRotationAngle(builder:flatbuffers.Builder, rotationAngle:number) {\r\n  builder.addFieldFloat64(5, rotationAngle, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.LayoutType layout\r\n */\r\nstatic addLayout(builder:flatbuffers.Builder, layout:Trimble.Technology.TrimBim.Fbs.LayoutType) {\r\n  builder.addFieldInt8(6, layout, Trimble.Technology.TrimBim.Fbs.LayoutType.Invalid);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentType alignment\r\n */\r\nstatic addAlignment(builder:flatbuffers.Builder, alignment:Trimble.Technology.TrimBim.Fbs.AlignmentType) {\r\n  builder.addFieldInt8(7, alignment, Trimble.Technology.TrimBim.Fbs.AlignmentType.Invalid);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number maxAutoScale\r\n */\r\nstatic addMaxAutoScale(builder:flatbuffers.Builder, maxAutoScale:number) {\r\n  builder.addFieldFloat64(8, maxAutoScale, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number verticalDistanceToObject\r\n */\r\nstatic addVerticalDistanceToObject(builder:flatbuffers.Builder, verticalDistanceToObject:number) {\r\n  builder.addFieldFloat64(9, verticalDistanceToObject, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTextStyle(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTextStyle(builder:flatbuffers.Builder, fontOffset:flatbuffers.Offset, size:number, options:number, verticalAlign:number, horizontalAlign:number, rotationAngle:number, layout:Trimble.Technology.TrimBim.Fbs.LayoutType, alignment:Trimble.Technology.TrimBim.Fbs.AlignmentType, maxAutoScale:number, verticalDistanceToObject:number):flatbuffers.Offset {\r\n  TextStyle.startTextStyle(builder);\r\n  TextStyle.addFont(builder, fontOffset);\r\n  TextStyle.addSize(builder, size);\r\n  TextStyle.addOptions(builder, options);\r\n  TextStyle.addVerticalAlign(builder, verticalAlign);\r\n  TextStyle.addHorizontalAlign(builder, horizontalAlign);\r\n  TextStyle.addRotationAngle(builder, rotationAngle);\r\n  TextStyle.addLayout(builder, layout);\r\n  TextStyle.addAlignment(builder, alignment);\r\n  TextStyle.addMaxAutoScale(builder, maxAutoScale);\r\n  TextStyle.addVerticalDistanceToObject(builder, verticalDistanceToObject);\r\n  return TextStyle.endTextStyle(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Billboard {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Billboard\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Billboard {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Billboard= obj\r\n * @returns Billboard\r\n */\r\nstatic getRootAsBillboard(bb:flatbuffers.ByteBuffer, obj?:Billboard):Billboard {\r\n  return (obj || new Billboard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Billboard= obj\r\n * @returns Billboard\r\n */\r\nstatic getSizePrefixedRootAsBillboard(bb:flatbuffers.ByteBuffer, obj?:Billboard):Billboard {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Billboard()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBillboard(builder:flatbuffers.Builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBillboard(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBillboard(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  Billboard.startBillboard(builder);\r\n  return Billboard.endBillboard(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class TexturedBillboard {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TexturedBillboard\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TexturedBillboard {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nleftUpXY(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nleftUpUV(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 16, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nrightDownXY(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 32, this.bb!);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec2d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec2d|null\r\n */\r\nrightDownUV(obj?:Trimble.Technology.TrimBim.Fbs.Vec2d):Trimble.Technology.TrimBim.Fbs.Vec2d|null {\r\n  return (obj || new Trimble.Technology.TrimBim.Fbs.Vec2d()).__init(this.bb_pos + 48, this.bb!);\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nIsInWorldUnits():boolean {\r\n  return !!this.bb!.readInt8(this.bb_pos + 64);\r\n};\r\n\r\n/**\r\n * @param boolean value\r\n * @returns boolean\r\n */\r\nmutate_IsInWorldUnits(value:boolean):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 64);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, +value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number leftUpXY_x\r\n * @param number leftUpXY_y\r\n * @param number leftUpUV_x\r\n * @param number leftUpUV_y\r\n * @param number rightDownXY_x\r\n * @param number rightDownXY_y\r\n * @param number rightDownUV_x\r\n * @param number rightDownUV_y\r\n * @param boolean IsInWorldUnits\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTexturedBillboard(builder:flatbuffers.Builder, leftUpXY_x: number, leftUpXY_y: number, leftUpUV_x: number, leftUpUV_y: number, rightDownXY_x: number, rightDownXY_y: number, rightDownUV_x: number, rightDownUV_y: number, IsInWorldUnits: boolean):flatbuffers.Offset {\r\n  builder.prep(8, 72);\r\n  builder.pad(7);\r\n  builder.writeInt8(+IsInWorldUnits);\r\n  builder.prep(8, 16);\r\n  builder.writeFloat64(rightDownUV_y);\r\n  builder.writeFloat64(rightDownUV_x);\r\n  builder.prep(8, 16);\r\n  builder.writeFloat64(rightDownXY_y);\r\n  builder.writeFloat64(rightDownXY_x);\r\n  builder.prep(8, 16);\r\n  builder.writeFloat64(leftUpUV_y);\r\n  builder.writeFloat64(leftUpUV_x);\r\n  builder.prep(8, 16);\r\n  builder.writeFloat64(leftUpXY_y);\r\n  builder.writeFloat64(leftUpXY_x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class BoltTop {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BoltTop\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BoltTop {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntopDiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_topDiameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nthickness():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_thickness(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_diameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlength():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_length(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.BoltType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.BoltType {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 16));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.BoltType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.BoltType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number topDiameter\r\n * @param number thickness\r\n * @param number diameter\r\n * @param number length\r\n * @param Trimble.Technology.TrimBim.Fbs.BoltType type\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBoltTop(builder:flatbuffers.Builder, topDiameter: number, thickness: number, diameter: number, length: number, type: Trimble.Technology.TrimBim.Fbs.BoltType):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.pad(3);\r\n  builder.writeInt8(type);\r\n  builder.writeFloat32(length);\r\n  builder.writeFloat32(diameter);\r\n  builder.writeFloat32(thickness);\r\n  builder.writeFloat32(topDiameter);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Washer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Washer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Washer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\noffset():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_offset(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninnerDiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_innerDiameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterDiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_outerDiameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nthickness():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_thickness(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number offset\r\n * @param number innerDiameter\r\n * @param number outerDiameter\r\n * @param number thickness\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createWasher(builder:flatbuffers.Builder, offset: number, innerDiameter: number, outerDiameter: number, thickness: number):flatbuffers.Offset {\r\n  builder.prep(4, 16);\r\n  builder.writeFloat32(thickness);\r\n  builder.writeFloat32(outerDiameter);\r\n  builder.writeFloat32(innerDiameter);\r\n  builder.writeFloat32(offset);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Nut {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Nut\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Nut {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\noffset():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_offset(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninnerDiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_innerDiameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nouterDiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_outerDiameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nthickness():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_thickness(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number offset\r\n * @param number innerDiameter\r\n * @param number outerDiameter\r\n * @param number thickness\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createNut(builder:flatbuffers.Builder, offset: number, innerDiameter: number, outerDiameter: number, thickness: number):flatbuffers.Offset {\r\n  builder.prep(4, 16);\r\n  builder.writeFloat32(thickness);\r\n  builder.writeFloat32(outerDiameter);\r\n  builder.writeFloat32(innerDiameter);\r\n  builder.writeFloat32(offset);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Hole {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Hole\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Hole {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\noffset():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_offset(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlength():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_length(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndiameter():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_diameter(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nxslot():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_xslot(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nyslot():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 16);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_yslot(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number offset\r\n * @param number length\r\n * @param number diameter\r\n * @param number xslot\r\n * @param number yslot\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createHole(builder:flatbuffers.Builder, offset: number, length: number, diameter: number, xslot: number, yslot: number):flatbuffers.Offset {\r\n  builder.prep(4, 20);\r\n  builder.writeFloat32(yslot);\r\n  builder.writeFloat32(xslot);\r\n  builder.writeFloat32(diameter);\r\n  builder.writeFloat32(length);\r\n  builder.writeFloat32(offset);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Bolt {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Bolt\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Bolt {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Bolt= obj\r\n * @returns Bolt\r\n */\r\nstatic getRootAsBolt(bb:flatbuffers.ByteBuffer, obj?:Bolt):Bolt {\r\n  return (obj || new Bolt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Bolt= obj\r\n * @returns Bolt\r\n */\r\nstatic getSizePrefixedRootAsBolt(bb:flatbuffers.ByteBuffer, obj?:Bolt):Bolt {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Bolt()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.BoltTop= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.BoltTop|null\r\n */\r\ntop(obj?:Trimble.Technology.TrimBim.Fbs.BoltTop):Trimble.Technology.TrimBim.Fbs.BoltTop|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BoltTop()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Washer= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Washer\r\n */\r\nwashers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Washer):Trimble.Technology.TrimBim.Fbs.Washer|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Washer()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nwashersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Nut= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Nut\r\n */\r\nnuts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Nut):Trimble.Technology.TrimBim.Fbs.Nut|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Nut()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnutsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Hole= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Hole\r\n */\r\nholes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Hole):Trimble.Technology.TrimBim.Fbs.Hole|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Hole()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nholesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBolt(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset topOffset\r\n */\r\nstatic addTop(builder:flatbuffers.Builder, topOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, topOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset washersOffset\r\n */\r\nstatic addWashers(builder:flatbuffers.Builder, washersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, washersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startWashersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(16, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset nutsOffset\r\n */\r\nstatic addNuts(builder:flatbuffers.Builder, nutsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, nutsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startNutsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(16, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset holesOffset\r\n */\r\nstatic addHoles(builder:flatbuffers.Builder, holesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, holesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startHolesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(20, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBolt(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 6); // washers\r\n  builder.requiredField(offset, 8); // nuts\r\n  builder.requiredField(offset, 10); // holes\r\n  return offset;\r\n};\r\n\r\nstatic createBolt(builder:flatbuffers.Builder, topOffset:flatbuffers.Offset, washersOffset:flatbuffers.Offset, nutsOffset:flatbuffers.Offset, holesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Bolt.startBolt(builder);\r\n  Bolt.addTop(builder, topOffset);\r\n  Bolt.addWashers(builder, washersOffset);\r\n  Bolt.addNuts(builder, nutsOffset);\r\n  Bolt.addHoles(builder, holesOffset);\r\n  return Bolt.endBolt(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class MapConversion {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns MapConversion\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):MapConversion {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MapConversion= obj\r\n * @returns MapConversion\r\n */\r\nstatic getRootAsMapConversion(bb:flatbuffers.ByteBuffer, obj?:MapConversion):MapConversion {\r\n  return (obj || new MapConversion()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MapConversion= obj\r\n * @returns MapConversion\r\n */\r\nstatic getSizePrefixedRootAsMapConversion(bb:flatbuffers.ByteBuffer, obj?:MapConversion):MapConversion {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new MapConversion()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\neastings():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_eastings(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nnorthings():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_northings(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\northogonalHeight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_orthogonalHeight(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nxAxisAbscissa():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_xAxisAbscissa(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nxAxisOrdinate():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_xAxisOrdinate(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nscaleToMapProjection():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_scaleToMapProjection(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionName():string|null\r\nprojectionName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionDescription():string|null\r\nprojectionDescription(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionDescription(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionGeodeticDatum():string|null\r\nprojectionGeodeticDatum(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionGeodeticDatum(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionVerticalDatum():string|null\r\nprojectionVerticalDatum(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionVerticalDatum(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionProjectionType():string|null\r\nprojectionProjectionType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionProjectionType(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionZone():string|null\r\nprojectionZone(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionZone(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nprojectionUnitName():string|null\r\nprojectionUnitName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nprojectionUnitName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nprojectionScaleToMetric():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_projectionScaleToMetric(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeFloat64(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.Vec3d= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Vec3d|null\r\n */\r\nsourceOrigin(obj?:Trimble.Technology.TrimBim.Fbs.Vec3d):Trimble.Technology.TrimBim.Fbs.Vec3d|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Vec3d()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startMapConversion(builder:flatbuffers.Builder) {\r\n  builder.startObject(15);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number eastings\r\n */\r\nstatic addEastings(builder:flatbuffers.Builder, eastings:number) {\r\n  builder.addFieldFloat64(0, eastings, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number northings\r\n */\r\nstatic addNorthings(builder:flatbuffers.Builder, northings:number) {\r\n  builder.addFieldFloat64(1, northings, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number orthogonalHeight\r\n */\r\nstatic addOrthogonalHeight(builder:flatbuffers.Builder, orthogonalHeight:number) {\r\n  builder.addFieldFloat64(2, orthogonalHeight, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number xAxisAbscissa\r\n */\r\nstatic addXAxisAbscissa(builder:flatbuffers.Builder, xAxisAbscissa:number) {\r\n  builder.addFieldFloat64(3, xAxisAbscissa, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number xAxisOrdinate\r\n */\r\nstatic addXAxisOrdinate(builder:flatbuffers.Builder, xAxisOrdinate:number) {\r\n  builder.addFieldFloat64(4, xAxisOrdinate, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number scaleToMapProjection\r\n */\r\nstatic addScaleToMapProjection(builder:flatbuffers.Builder, scaleToMapProjection:number) {\r\n  builder.addFieldFloat64(5, scaleToMapProjection, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionNameOffset\r\n */\r\nstatic addProjectionName(builder:flatbuffers.Builder, projectionNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, projectionNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionDescriptionOffset\r\n */\r\nstatic addProjectionDescription(builder:flatbuffers.Builder, projectionDescriptionOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(7, projectionDescriptionOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionGeodeticDatumOffset\r\n */\r\nstatic addProjectionGeodeticDatum(builder:flatbuffers.Builder, projectionGeodeticDatumOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(8, projectionGeodeticDatumOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionVerticalDatumOffset\r\n */\r\nstatic addProjectionVerticalDatum(builder:flatbuffers.Builder, projectionVerticalDatumOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(9, projectionVerticalDatumOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionProjectionTypeOffset\r\n */\r\nstatic addProjectionProjectionType(builder:flatbuffers.Builder, projectionProjectionTypeOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(10, projectionProjectionTypeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionZoneOffset\r\n */\r\nstatic addProjectionZone(builder:flatbuffers.Builder, projectionZoneOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(11, projectionZoneOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset projectionUnitNameOffset\r\n */\r\nstatic addProjectionUnitName(builder:flatbuffers.Builder, projectionUnitNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(12, projectionUnitNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number projectionScaleToMetric\r\n */\r\nstatic addProjectionScaleToMetric(builder:flatbuffers.Builder, projectionScaleToMetric:number) {\r\n  builder.addFieldFloat64(13, projectionScaleToMetric, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset sourceOriginOffset\r\n */\r\nstatic addSourceOrigin(builder:flatbuffers.Builder, sourceOriginOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(14, sourceOriginOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endMapConversion(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createMapConversion(builder:flatbuffers.Builder, eastings:number, northings:number, orthogonalHeight:number, xAxisAbscissa:number, xAxisOrdinate:number, scaleToMapProjection:number, projectionNameOffset:flatbuffers.Offset, projectionDescriptionOffset:flatbuffers.Offset, projectionGeodeticDatumOffset:flatbuffers.Offset, projectionVerticalDatumOffset:flatbuffers.Offset, projectionProjectionTypeOffset:flatbuffers.Offset, projectionZoneOffset:flatbuffers.Offset, projectionUnitNameOffset:flatbuffers.Offset, projectionScaleToMetric:number, sourceOriginOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  MapConversion.startMapConversion(builder);\r\n  MapConversion.addEastings(builder, eastings);\r\n  MapConversion.addNorthings(builder, northings);\r\n  MapConversion.addOrthogonalHeight(builder, orthogonalHeight);\r\n  MapConversion.addXAxisAbscissa(builder, xAxisAbscissa);\r\n  MapConversion.addXAxisOrdinate(builder, xAxisOrdinate);\r\n  MapConversion.addScaleToMapProjection(builder, scaleToMapProjection);\r\n  MapConversion.addProjectionName(builder, projectionNameOffset);\r\n  MapConversion.addProjectionDescription(builder, projectionDescriptionOffset);\r\n  MapConversion.addProjectionGeodeticDatum(builder, projectionGeodeticDatumOffset);\r\n  MapConversion.addProjectionVerticalDatum(builder, projectionVerticalDatumOffset);\r\n  MapConversion.addProjectionProjectionType(builder, projectionProjectionTypeOffset);\r\n  MapConversion.addProjectionZone(builder, projectionZoneOffset);\r\n  MapConversion.addProjectionUnitName(builder, projectionUnitNameOffset);\r\n  MapConversion.addProjectionScaleToMetric(builder, projectionScaleToMetric);\r\n  MapConversion.addSourceOrigin(builder, sourceOriginOffset);\r\n  return MapConversion.endMapConversion(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class ModelGeometry {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ModelGeometry\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelGeometry {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelGeometry= obj\r\n * @returns ModelGeometry\r\n */\r\nstatic getRootAsModelGeometry(bb:flatbuffers.ByteBuffer, obj?:ModelGeometry):ModelGeometry {\r\n  return (obj || new ModelGeometry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelGeometry= obj\r\n * @returns ModelGeometry\r\n */\r\nstatic getSizePrefixedRootAsModelGeometry(bb:flatbuffers.ByteBuffer, obj?:ModelGeometry):ModelGeometry {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ModelGeometry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Placement3= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Placement3\r\n */\r\nlocalPlacements(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Placement3):Trimble.Technology.TrimBim.Fbs.Placement3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Placement3()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 48, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlocalPlacementsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.SurfaceMaterial= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.SurfaceMaterial\r\n */\r\nsurfaceMaterials(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SurfaceMaterial):Trimble.Technology.TrimBim.Fbs.SurfaceMaterial|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SurfaceMaterial()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsurfaceMaterialsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nlayers(index: number):string\r\nlayers(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nlayers(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlayersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GeometryDefinition= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryDefinition\r\n */\r\ndefinitions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GeometryDefinition):Trimble.Technology.TrimBim.Fbs.GeometryDefinition|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GeometryDefinition()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 32, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndefinitionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GeometryInstance= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GeometryInstance\r\n */\r\ninstances(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GeometryInstance):Trimble.Technology.TrimBim.Fbs.GeometryInstance|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GeometryInstance()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 20, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ninstancesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Texture= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Texture\r\n */\r\ntextures(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Texture):Trimble.Technology.TrimBim.Fbs.Texture|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Texture()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntexturesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.BRep= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.BRep\r\n */\r\nbReps(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRep):Trimble.Technology.TrimBim.Fbs.BRep|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRep()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbRepsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TriangleMesh= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TriangleMesh\r\n */\r\ntriangleMeshes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TriangleMesh):Trimble.Technology.TrimBim.Fbs.TriangleMesh|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TriangleMesh()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntriangleMeshesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TriangleMesh8= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TriangleMesh8\r\n */\r\ntriangleMeshes8(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TriangleMesh8):Trimble.Technology.TrimBim.Fbs.TriangleMesh8|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TriangleMesh8()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntriangleMeshes8Length():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh\r\n */\r\ntexturedTriangleMeshes(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh):Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntexturedTriangleMeshesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8\r\n */\r\ntexturedTriangleMeshes8(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8):Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedTriangleMesh8()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntexturedTriangleMeshes8Length():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer\r\n */\r\nsweptDiskSolids(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer):Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SweptDiskSolidContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsweptDiskSolidsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.BRepWithUV= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.BRepWithUV\r\n */\r\nbRepWithUVs(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRepWithUV):Trimble.Technology.TrimBim.Fbs.BRepWithUV|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRepWithUV()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbRepWithUVsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.BRepWithNormal= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.BRepWithNormal\r\n */\r\nbRepWithNormals(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BRepWithNormal):Trimble.Technology.TrimBim.Fbs.BRepWithNormal|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BRepWithNormal()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbRepWithNormalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GraphicsContainer= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GraphicsContainer\r\n */\r\ngraphicsContainers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GraphicsContainer):Trimble.Technology.TrimBim.Fbs.GraphicsContainer|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GraphicsContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngraphicsContainersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.AlignmentCurve= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.AlignmentCurve\r\n */\r\nalignmentCurves(index: number, obj?:Trimble.Technology.TrimBim.Fbs.AlignmentCurve):Trimble.Technology.TrimBim.Fbs.AlignmentCurve|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.AlignmentCurve()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nalignmentCurvesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.GridLineContainer= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.GridLineContainer\r\n */\r\ngridLineContainers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.GridLineContainer):Trimble.Technology.TrimBim.Fbs.GridLineContainer|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 36);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.GridLineContainer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngridLineContainersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 36);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint\r\n */\r\ncoordinateGeometryPoints(index: number, obj?:Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint):Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 38);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.CoordinateGeometryPoint()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncoordinateGeometryPointsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 38);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.BillboardText= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.BillboardText\r\n */\r\nbillboardTexts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.BillboardText):Trimble.Technology.TrimBim.Fbs.BillboardText|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.BillboardText()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbillboardTextsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 40);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TextStyle= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TextStyle\r\n */\r\ntextStyles(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TextStyle):Trimble.Technology.TrimBim.Fbs.TextStyle|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 42);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TextStyle()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntextStylesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 42);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Billboard= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Billboard\r\n */\r\nbillboards(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Billboard):Trimble.Technology.TrimBim.Fbs.Billboard|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 44);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Billboard()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbillboardsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 44);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.TexturedBillboard= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.TexturedBillboard\r\n */\r\ntexturedBillboards(index: number, obj?:Trimble.Technology.TrimBim.Fbs.TexturedBillboard):Trimble.Technology.TrimBim.Fbs.TexturedBillboard|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 46);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.TexturedBillboard()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 72, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntexturedBillboardsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 46);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Bolt= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Bolt\r\n */\r\nbolts(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Bolt):Trimble.Technology.TrimBim.Fbs.Bolt|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 48);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Bolt()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboltsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 48);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startModelGeometry(builder:flatbuffers.Builder) {\r\n  builder.startObject(23);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset localPlacementsOffset\r\n */\r\nstatic addLocalPlacements(builder:flatbuffers.Builder, localPlacementsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, localPlacementsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLocalPlacementsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(48, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset surfaceMaterialsOffset\r\n */\r\nstatic addSurfaceMaterials(builder:flatbuffers.Builder, surfaceMaterialsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, surfaceMaterialsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSurfaceMaterialsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(20, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset layersOffset\r\n */\r\nstatic addLayers(builder:flatbuffers.Builder, layersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, layersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createLayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startLayersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset definitionsOffset\r\n */\r\nstatic addDefinitions(builder:flatbuffers.Builder, definitionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, definitionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDefinitionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(32, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset instancesOffset\r\n */\r\nstatic addInstances(builder:flatbuffers.Builder, instancesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, instancesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startInstancesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(20, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset texturesOffset\r\n */\r\nstatic addTextures(builder:flatbuffers.Builder, texturesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, texturesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTexturesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTexturesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset bRepsOffset\r\n */\r\nstatic addBReps(builder:flatbuffers.Builder, bRepsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, bRepsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBRepsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBRepsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset triangleMeshesOffset\r\n */\r\nstatic addTriangleMeshes(builder:flatbuffers.Builder, triangleMeshesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(7, triangleMeshesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTriangleMeshesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTriangleMeshesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset triangleMeshes8Offset\r\n */\r\nstatic addTriangleMeshes8(builder:flatbuffers.Builder, triangleMeshes8Offset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(8, triangleMeshes8Offset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTriangleMeshes8Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTriangleMeshes8Vector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset texturedTriangleMeshesOffset\r\n */\r\nstatic addTexturedTriangleMeshes(builder:flatbuffers.Builder, texturedTriangleMeshesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(9, texturedTriangleMeshesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTexturedTriangleMeshesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTexturedTriangleMeshesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset texturedTriangleMeshes8Offset\r\n */\r\nstatic addTexturedTriangleMeshes8(builder:flatbuffers.Builder, texturedTriangleMeshes8Offset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(10, texturedTriangleMeshes8Offset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTexturedTriangleMeshes8Vector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTexturedTriangleMeshes8Vector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset sweptDiskSolidsOffset\r\n */\r\nstatic addSweptDiskSolids(builder:flatbuffers.Builder, sweptDiskSolidsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(11, sweptDiskSolidsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSweptDiskSolidsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSweptDiskSolidsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset bRepWithUVsOffset\r\n */\r\nstatic addBRepWithUVs(builder:flatbuffers.Builder, bRepWithUVsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(12, bRepWithUVsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBRepWithUVsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBRepWithUVsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset bRepWithNormalsOffset\r\n */\r\nstatic addBRepWithNormals(builder:flatbuffers.Builder, bRepWithNormalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(13, bRepWithNormalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBRepWithNormalsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBRepWithNormalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset graphicsContainersOffset\r\n */\r\nstatic addGraphicsContainers(builder:flatbuffers.Builder, graphicsContainersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(14, graphicsContainersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGraphicsContainersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGraphicsContainersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset alignmentCurvesOffset\r\n */\r\nstatic addAlignmentCurves(builder:flatbuffers.Builder, alignmentCurvesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(15, alignmentCurvesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createAlignmentCurvesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startAlignmentCurvesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gridLineContainersOffset\r\n */\r\nstatic addGridLineContainers(builder:flatbuffers.Builder, gridLineContainersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(16, gridLineContainersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGridLineContainersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGridLineContainersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset coordinateGeometryPointsOffset\r\n */\r\nstatic addCoordinateGeometryPoints(builder:flatbuffers.Builder, coordinateGeometryPointsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(17, coordinateGeometryPointsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createCoordinateGeometryPointsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startCoordinateGeometryPointsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset billboardTextsOffset\r\n */\r\nstatic addBillboardTexts(builder:flatbuffers.Builder, billboardTextsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(18, billboardTextsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBillboardTextsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBillboardTextsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset textStylesOffset\r\n */\r\nstatic addTextStyles(builder:flatbuffers.Builder, textStylesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(19, textStylesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTextStylesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTextStylesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset billboardsOffset\r\n */\r\nstatic addBillboards(builder:flatbuffers.Builder, billboardsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(20, billboardsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBillboardsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBillboardsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset texturedBillboardsOffset\r\n */\r\nstatic addTexturedBillboards(builder:flatbuffers.Builder, texturedBillboardsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(21, texturedBillboardsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTexturedBillboardsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(72, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset boltsOffset\r\n */\r\nstatic addBolts(builder:flatbuffers.Builder, boltsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(22, boltsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBoltsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBoltsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endModelGeometry(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // localPlacements\r\n  builder.requiredField(offset, 6); // surfaceMaterials\r\n  builder.requiredField(offset, 8); // layers\r\n  builder.requiredField(offset, 10); // definitions\r\n  builder.requiredField(offset, 12); // instances\r\n  builder.requiredField(offset, 14); // textures\r\n  builder.requiredField(offset, 16); // bReps\r\n  builder.requiredField(offset, 18); // triangleMeshes\r\n  builder.requiredField(offset, 20); // triangleMeshes8\r\n  builder.requiredField(offset, 22); // texturedTriangleMeshes\r\n  builder.requiredField(offset, 24); // texturedTriangleMeshes8\r\n  builder.requiredField(offset, 26); // sweptDiskSolids\r\n  builder.requiredField(offset, 28); // bRepWithUVs\r\n  builder.requiredField(offset, 30); // bRepWithNormals\r\n  builder.requiredField(offset, 32); // graphicsContainers\r\n  builder.requiredField(offset, 34); // alignmentCurves\r\n  builder.requiredField(offset, 36); // gridLineContainers\r\n  builder.requiredField(offset, 38); // coordinateGeometryPoints\r\n  builder.requiredField(offset, 40); // billboardTexts\r\n  builder.requiredField(offset, 42); // textStyles\r\n  builder.requiredField(offset, 44); // billboards\r\n  builder.requiredField(offset, 46); // texturedBillboards\r\n  builder.requiredField(offset, 48); // bolts\r\n  return offset;\r\n};\r\n\r\nstatic createModelGeometry(builder:flatbuffers.Builder, localPlacementsOffset:flatbuffers.Offset, surfaceMaterialsOffset:flatbuffers.Offset, layersOffset:flatbuffers.Offset, definitionsOffset:flatbuffers.Offset, instancesOffset:flatbuffers.Offset, texturesOffset:flatbuffers.Offset, bRepsOffset:flatbuffers.Offset, triangleMeshesOffset:flatbuffers.Offset, triangleMeshes8Offset:flatbuffers.Offset, texturedTriangleMeshesOffset:flatbuffers.Offset, texturedTriangleMeshes8Offset:flatbuffers.Offset, sweptDiskSolidsOffset:flatbuffers.Offset, bRepWithUVsOffset:flatbuffers.Offset, bRepWithNormalsOffset:flatbuffers.Offset, graphicsContainersOffset:flatbuffers.Offset, alignmentCurvesOffset:flatbuffers.Offset, gridLineContainersOffset:flatbuffers.Offset, coordinateGeometryPointsOffset:flatbuffers.Offset, billboardTextsOffset:flatbuffers.Offset, textStylesOffset:flatbuffers.Offset, billboardsOffset:flatbuffers.Offset, texturedBillboardsOffset:flatbuffers.Offset, boltsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  ModelGeometry.startModelGeometry(builder);\r\n  ModelGeometry.addLocalPlacements(builder, localPlacementsOffset);\r\n  ModelGeometry.addSurfaceMaterials(builder, surfaceMaterialsOffset);\r\n  ModelGeometry.addLayers(builder, layersOffset);\r\n  ModelGeometry.addDefinitions(builder, definitionsOffset);\r\n  ModelGeometry.addInstances(builder, instancesOffset);\r\n  ModelGeometry.addTextures(builder, texturesOffset);\r\n  ModelGeometry.addBReps(builder, bRepsOffset);\r\n  ModelGeometry.addTriangleMeshes(builder, triangleMeshesOffset);\r\n  ModelGeometry.addTriangleMeshes8(builder, triangleMeshes8Offset);\r\n  ModelGeometry.addTexturedTriangleMeshes(builder, texturedTriangleMeshesOffset);\r\n  ModelGeometry.addTexturedTriangleMeshes8(builder, texturedTriangleMeshes8Offset);\r\n  ModelGeometry.addSweptDiskSolids(builder, sweptDiskSolidsOffset);\r\n  ModelGeometry.addBRepWithUVs(builder, bRepWithUVsOffset);\r\n  ModelGeometry.addBRepWithNormals(builder, bRepWithNormalsOffset);\r\n  ModelGeometry.addGraphicsContainers(builder, graphicsContainersOffset);\r\n  ModelGeometry.addAlignmentCurves(builder, alignmentCurvesOffset);\r\n  ModelGeometry.addGridLineContainers(builder, gridLineContainersOffset);\r\n  ModelGeometry.addCoordinateGeometryPoints(builder, coordinateGeometryPointsOffset);\r\n  ModelGeometry.addBillboardTexts(builder, billboardTextsOffset);\r\n  ModelGeometry.addTextStyles(builder, textStylesOffset);\r\n  ModelGeometry.addBillboards(builder, billboardsOffset);\r\n  ModelGeometry.addTexturedBillboards(builder, texturedBillboardsOffset);\r\n  ModelGeometry.addBolts(builder, boltsOffset);\r\n  return ModelGeometry.endModelGeometry(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class HierarchyNode {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HierarchyNode\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HierarchyNode {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nparentElementId():number {\r\n  return this.bb!.readUint32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_parentElementId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 0);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nchildElementId():number {\r\n  return this.bb!.readUint32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @param number value\r\n * @returns boolean\r\n */\r\nmutate_childElementId(value:number):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeUint32(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @returns Trimble.Technology.TrimBim.Fbs.HierarchyType\r\n */\r\ntype():Trimble.Technology.TrimBim.Fbs.HierarchyType {\r\n  return /**  */ (this.bb!.readInt8(this.bb_pos + 8));\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyType value\r\n * @returns boolean\r\n */\r\nmutate_type(value:Trimble.Technology.TrimBim.Fbs.HierarchyType):boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n\r\n  if (offset === 0) {\r\n    return false;\r\n  }\r\n\r\n  this.bb!.writeInt8(this.bb_pos + offset, value);\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number parentElementId\r\n * @param number childElementId\r\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyType type\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createHierarchyNode(builder:flatbuffers.Builder, parentElementId: number, childElementId: number, type: Trimble.Technology.TrimBim.Fbs.HierarchyType):flatbuffers.Offset {\r\n  builder.prep(4, 12);\r\n  builder.pad(3);\r\n  builder.writeInt8(type);\r\n  builder.writeInt32(childElementId);\r\n  builder.writeInt32(parentElementId);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class ModelEntities {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ModelEntities\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ModelEntities {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelEntities= obj\r\n * @returns ModelEntities\r\n */\r\nstatic getRootAsModelEntities(bb:flatbuffers.ByteBuffer, obj?:ModelEntities):ModelEntities {\r\n  return (obj || new ModelEntities()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ModelEntities= obj\r\n * @returns ModelEntities\r\n */\r\nstatic getSizePrefixedRootAsModelEntities(bb:flatbuffers.ByteBuffer, obj?:ModelEntities):ModelEntities {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ModelEntities()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Entity= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Entity\r\n */\r\nentities(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Entity):Trimble.Technology.TrimBim.Fbs.Entity|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Entity()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 64, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nentitiesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.HierarchyNode= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.HierarchyNode\r\n */\r\nhierarchies(index: number, obj?:Trimble.Technology.TrimBim.Fbs.HierarchyNode):Trimble.Technology.TrimBim.Fbs.HierarchyNode|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.HierarchyNode()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhierarchiesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.Guid= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.Guid\r\n */\r\nguidIdentifiers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.Guid):Trimble.Technology.TrimBim.Fbs.Guid|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.Guid()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nguidIdentifiersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nstringIdentifiers(index: number):string\r\nstringIdentifiers(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nstringIdentifiers(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nstringIdentifiersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.SpatialHash= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.SpatialHash\r\n */\r\nspatialHashIdentifiers(index: number, obj?:Trimble.Technology.TrimBim.Fbs.SpatialHash):Trimble.Technology.TrimBim.Fbs.SpatialHash|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.SpatialHash()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 88, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nspatialHashIdentifiersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @returns flatbuffers.Long\r\n */\r\ndwgHandleIdentifiers(index: number):flatbuffers.Long|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndwgHandleIdentifiersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array\r\n */\r\nentityClasses(index: number):string\r\nentityClasses(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array\r\nentityClasses(index: number,optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nentityClassesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startModelEntities(builder:flatbuffers.Builder) {\r\n  builder.startObject(7);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset entitiesOffset\r\n */\r\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, entitiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startEntitiesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(64, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset hierarchiesOffset\r\n */\r\nstatic addHierarchies(builder:flatbuffers.Builder, hierarchiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, hierarchiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startHierarchiesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(12, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset guidIdentifiersOffset\r\n */\r\nstatic addGuidIdentifiers(builder:flatbuffers.Builder, guidIdentifiersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, guidIdentifiersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGuidIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(16, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset stringIdentifiersOffset\r\n */\r\nstatic addStringIdentifiers(builder:flatbuffers.Builder, stringIdentifiersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, stringIdentifiersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createStringIdentifiersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startStringIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset spatialHashIdentifiersOffset\r\n */\r\nstatic addSpatialHashIdentifiers(builder:flatbuffers.Builder, spatialHashIdentifiersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, spatialHashIdentifiersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSpatialHashIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(88, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset dwgHandleIdentifiersOffset\r\n */\r\nstatic addDwgHandleIdentifiers(builder:flatbuffers.Builder, dwgHandleIdentifiersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, dwgHandleIdentifiersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Long> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createDwgHandleIdentifiersVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\r\n  builder.startVector(8, data.length, 8);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addInt64(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startDwgHandleIdentifiersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(8, numElems, 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset entityClassesOffset\r\n */\r\nstatic addEntityClasses(builder:flatbuffers.Builder, entityClassesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, entityClassesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createEntityClassesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startEntityClassesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endModelEntities(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // entities\r\n  builder.requiredField(offset, 6); // hierarchies\r\n  builder.requiredField(offset, 8); // guidIdentifiers\r\n  builder.requiredField(offset, 10); // stringIdentifiers\r\n  builder.requiredField(offset, 12); // spatialHashIdentifiers\r\n  builder.requiredField(offset, 14); // dwgHandleIdentifiers\r\n  builder.requiredField(offset, 16); // entityClasses\r\n  return offset;\r\n};\r\n\r\nstatic createModelEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset, hierarchiesOffset:flatbuffers.Offset, guidIdentifiersOffset:flatbuffers.Offset, stringIdentifiersOffset:flatbuffers.Offset, spatialHashIdentifiersOffset:flatbuffers.Offset, dwgHandleIdentifiersOffset:flatbuffers.Offset, entityClassesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  ModelEntities.startModelEntities(builder);\r\n  ModelEntities.addEntities(builder, entitiesOffset);\r\n  ModelEntities.addHierarchies(builder, hierarchiesOffset);\r\n  ModelEntities.addGuidIdentifiers(builder, guidIdentifiersOffset);\r\n  ModelEntities.addStringIdentifiers(builder, stringIdentifiersOffset);\r\n  ModelEntities.addSpatialHashIdentifiers(builder, spatialHashIdentifiersOffset);\r\n  ModelEntities.addDwgHandleIdentifiers(builder, dwgHandleIdentifiersOffset);\r\n  ModelEntities.addEntityClasses(builder, entityClassesOffset);\r\n  return ModelEntities.endModelEntities(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class MetadataEntry {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns MetadataEntry\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):MetadataEntry {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MetadataEntry= obj\r\n * @returns MetadataEntry\r\n */\r\nstatic getRootAsMetadataEntry(bb:flatbuffers.ByteBuffer, obj?:MetadataEntry):MetadataEntry {\r\n  return (obj || new MetadataEntry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MetadataEntry= obj\r\n * @returns MetadataEntry\r\n */\r\nstatic getSizePrefixedRootAsMetadataEntry(bb:flatbuffers.ByteBuffer, obj?:MetadataEntry):MetadataEntry {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new MetadataEntry()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nkey():string|null\r\nkey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nkey(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nvalue():string|null\r\nvalue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nvalue(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startMetadataEntry(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset keyOffset\r\n */\r\nstatic addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, keyOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset valueOffset\r\n */\r\nstatic addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, valueOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endMetadataEntry(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // key\r\n  builder.requiredField(offset, 6); // value\r\n  return offset;\r\n};\r\n\r\nstatic createMetadataEntry(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  MetadataEntry.startMetadataEntry(builder);\r\n  MetadataEntry.addKey(builder, keyOffset);\r\n  MetadataEntry.addValue(builder, valueOffset);\r\n  return MetadataEntry.endMetadataEntry(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace Trimble.Technology.TrimBim.Fbs{\r\nexport class Model {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Model\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Model {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Model= obj\r\n * @returns Model\r\n */\r\nstatic getRootAsModel(bb:flatbuffers.ByteBuffer, obj?:Model):Model {\r\n  return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Model= obj\r\n * @returns Model\r\n */\r\nstatic getSizePrefixedRootAsModel(bb:flatbuffers.ByteBuffer, obj?:Model):Model {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns boolean\r\n */\r\nstatic bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {\r\n  return bb.__has_identifier('TRB8');\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.ModelEntities= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.ModelEntities|null\r\n */\r\nentities(obj?:Trimble.Technology.TrimBim.Fbs.ModelEntities):Trimble.Technology.TrimBim.Fbs.ModelEntities|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelEntities()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.ModelProperties= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.ModelProperties|null\r\n */\r\nproperties(obj?:Trimble.Technology.TrimBim.Fbs.ModelProperties):Trimble.Technology.TrimBim.Fbs.ModelProperties|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelProperties()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param Trimble.Technology.TrimBim.Fbs.ModelGeometry= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.ModelGeometry|null\r\n */\r\ngeometry(obj?:Trimble.Technology.TrimBim.Fbs.ModelGeometry):Trimble.Technology.TrimBim.Fbs.ModelGeometry|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.ModelGeometry()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.MapConversion= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.MapConversion\r\n */\r\nmapConversions(index: number, obj?:Trimble.Technology.TrimBim.Fbs.MapConversion):Trimble.Technology.TrimBim.Fbs.MapConversion|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.MapConversion()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmapConversionsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param Trimble.Technology.TrimBim.Fbs.MetadataEntry= obj\r\n * @returns Trimble.Technology.TrimBim.Fbs.MetadataEntry\r\n */\r\nmetadata(index: number, obj?:Trimble.Technology.TrimBim.Fbs.MetadataEntry):Trimble.Technology.TrimBim.Fbs.MetadataEntry|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new Trimble.Technology.TrimBim.Fbs.MetadataEntry()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmetadataLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startModel(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset entitiesOffset\r\n */\r\nstatic addEntities(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, entitiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset propertiesOffset\r\n */\r\nstatic addProperties(builder:flatbuffers.Builder, propertiesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, propertiesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset geometryOffset\r\n */\r\nstatic addGeometry(builder:flatbuffers.Builder, geometryOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, geometryOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset mapConversionsOffset\r\n */\r\nstatic addMapConversions(builder:flatbuffers.Builder, mapConversionsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, mapConversionsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createMapConversionsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startMapConversionsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset metadataOffset\r\n */\r\nstatic addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, metadataOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startMetadataVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endModel(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  builder.requiredField(offset, 4); // entities\r\n  builder.requiredField(offset, 6); // properties\r\n  builder.requiredField(offset, 8); // geometry\r\n  builder.requiredField(offset, 10); // mapConversions\r\n  builder.requiredField(offset, 12); // metadata\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset offset\r\n */\r\nstatic finishModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, 'TRB8');\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset offset\r\n */\r\nstatic finishSizePrefixedModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, 'TRB8', true);\r\n};\r\n\r\nstatic createModel(builder:flatbuffers.Builder, entitiesOffset:flatbuffers.Offset, propertiesOffset:flatbuffers.Offset, geometryOffset:flatbuffers.Offset, mapConversionsOffset:flatbuffers.Offset, metadataOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Model.startModel(builder);\r\n  Model.addEntities(builder, entitiesOffset);\r\n  Model.addProperties(builder, propertiesOffset);\r\n  Model.addGeometry(builder, geometryOffset);\r\n  Model.addMapConversions(builder, mapConversionsOffset);\r\n  Model.addMetadata(builder, metadataOffset);\r\n  return Model.endModel(builder);\r\n}\r\n}\r\n}\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author thezwap\n */\n\nvar _lut = [];\n\nfor ( var i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nvar MathUtils = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * MathUtils.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * MathUtils.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tsetQuaternionFromProperEuler: function ( q, a, b, c, order ) {\n\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c2 = cos( b / 2 );\n\t\tvar s2 = sin( b / 2 );\n\n\t\tvar c13 = cos( ( a + c ) / 2 );\n\t\tvar s13 = sin( ( a + c ) / 2 );\n\n\t\tvar c1_3 = cos( ( a - c ) / 2 );\n\t\tvar s1_3 = sin( ( a - c ) / 2 );\n\n\t\tvar c3_1 = cos( ( c - a ) / 2 );\n\t\tvar s3_1 = sin( ( c - a ) / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYX':\n\t\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t}\n\n};\n\n\nexport { MathUtils };\n","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { MathUtils } from './MathUtils.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t},\n\n\tmultiplyQuaternionsFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tvar x0 = src0[ srcOffset0 ];\n\t\tvar y0 = src0[ srcOffset0 + 1 ];\n\t\tvar z0 = src0[ srcOffset0 + 2 ];\n\t\tvar w0 = src0[ srcOffset0 + 3 ];\n\n\t\tvar x1 = src1[ srcOffset1 ];\n\t\tvar y1 = src1[ srcOffset1 + 1 ];\n\t\tvar z1 = src1[ srcOffset1 + 2 ];\n\t\tvar w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };\n","import { MathUtils } from './MathUtils.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _vector = new Vector3();\nvar _quaternion = new Quaternion();\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t},\n\n\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( v ) {\n\n\t\tvar denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tvar scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t},\n\n\treflect: function ( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t},\n\n\tangleTo: function ( v ) {\n\n\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tsetFromMatrix3Column: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t},\n\n\trandom: function () {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n\nexport { Matrix3 };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector1 = new Vector3();\nvar _vector2 = new Vector3();\nvar _normalMatrix = new Matrix3();\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tisPlane: true,\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function ( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar direction = line.delta( _vector1 );\n\n\t\tvar denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t},\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n\nexport { Plane };\n","import { Vector3 } from './Vector3.js';\nimport { Plane } from './Plane.js';\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _v0 = new Vector3();\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _v3 = new Vector3();\n\nvar _vab = new Vector3();\nvar _vac = new Vector3();\nvar _vbc = new Vector3();\nvar _vap = new Vector3();\nvar _vbp = new Vector3();\nvar _vcp = new Vector3();\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function ( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0.subVectors( a, b );\n\t\ttarget.cross( _v0 );\n\n\t\tvar targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t},\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t_v0.subVectors( c, a );\n\t\t_v1.subVectors( b, a );\n\t\t_v2.subVectors( point, a );\n\n\t\tvar dot00 = _v0.dot( _v0 );\n\t\tvar dot01 = _v0.dot( _v1 );\n\t\tvar dot02 = _v0.dot( _v2 );\n\t\tvar dot11 = _v1.dot( _v1 );\n\t\tvar dot12 = _v1.dot( _v2 );\n\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tvar invDenom = 1 / denom;\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t},\n\n\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t},\n\n\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t},\n\n\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t_v0.subVectors( c, b );\n\t\t_v1.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\t_v0.subVectors( this.c, this.b );\n\t\t_v1.subVectors( this.a, this.b );\n\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\n\n\t},\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function ( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar a = this.a, b = this.b, c = this.c;\n\t\tvar v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tvar d1 = _vab.dot( _vap );\n\t\tvar d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tvar d3 = _vab.dot( _vbp );\n\t\tvar d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tvar vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tvar d5 = _vab.dot( _vcp );\n\t\tvar d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tvar vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tvar va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tvar denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t},\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n\nexport { Triangle };\n","import { MathUtils } from './MathUtils.js';\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Spherical };\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Cylindrical };\n","import { Vector3 } from './Vector3.js';\n\nvar _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nvar _vector = new Vector3();\n\nvar _box = new Box3();\n\n// triangle centered vertices\n\nvar _v0 = new Vector3();\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\n\n// triangle edge vectors\n\nvar _f0 = new Vector3();\nvar _f1 = new Vector3();\nvar _f2 = new Vector3();\n\nvar _center = new Vector3();\nvar _extents = new Vector3();\nvar _triangleNormal = new Vector3();\nvar _testAxis = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function ( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: function ( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tvar axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tgetBoundingSphere: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tvar i, j;\n\n\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tvar p0 = v0.dot( _testAxis );\n\t\tvar p1 = v1.dot( _testAxis );\n\t\tvar p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nvar _box = new Box3();\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : - 1;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\tvar center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tvar maxRadiusSq = 0;\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\treturn ( this.radius < 0 );\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n\nexport { Sphere };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nvar _sphere = new Sphere();\nvar _vector = new Vector3();\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromProjectionMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSprite: function ( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n\nexport { Frustum };\n","import { Vector3 } from './Vector3.js';\n\nvar _vector = new Vector3();\nvar _segCenter = new Vector3();\nvar _segDir = new Vector3();\nvar _diff = new Vector3();\n\nvar _edge1 = new Vector3();\nvar _edge2 = new Vector3();\nvar _normal = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function ( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t},\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function ( point ) {\n\n\t\tvar directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t},\n\n\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tvar a01 = - this.direction.dot( _segDir );\n\t\tvar b0 = _diff.dot( this.direction );\n\t\tvar b1 = - _diff.dot( _segDir );\n\t\tvar c = _diff.lengthSq();\n\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\tvar s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t},\n\n\tintersectSphere: function ( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tvar tca = _vector.dot( this.direction );\n\t\tvar d2 = _vector.dot( _vector ) - tca * tca;\n\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tvar t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tvar t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t},\n\n\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tvar DdN = this.direction.dot( _normal );\n\t\tvar sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t},\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n\nexport { Ray };\n","import { Vector3 } from './Vector3.js';\n\nvar _v1 = new Vector3();\nvar _m1 = new Matrix4();\nvar _zero = new Vector3( 0, 0, 0 );\nvar _one = new Vector3( 1, 1, 1 );\nvar _x = new Vector3();\nvar _y = new Vector3();\nvar _z = new Vector3();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function ( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t},\n\n\tlookAt: function ( eye, target, up ) {\n\n\t\tvar te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\tif ( throwOnDegenerate !== undefined ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.\" );\n\n\t\t}\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tvar det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tvar invSX = 1 / sx;\n\t\tvar invSY = 1 / sy;\n\t\tvar invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n\nexport { Matrix4 };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t},\n\n\trandom: function () {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector2 };\n","import { Vector2 } from './Vector2.js';\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector = new Vector2();\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n\nexport { Box2 };\n","import { Vector3 } from './Vector3.js';\nimport { MathUtils } from './MathUtils.js';\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _startP = new Vector3();\nvar _startEnd = new Vector3();\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\tvar t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = MathUtils.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t},\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n\nexport { Line3 };\n","import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { MathUtils } from './MathUtils.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nvar _matrix = new Matrix4();\nvar _quaternion = new Quaternion();\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = MathUtils.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t},\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function ( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\n\n\t},\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Euler };\n","/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.defineProperties( Vector4.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.z = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.w = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t},\n\n\trandom: function () {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector4 };\n","import { MathUtils } from './MathUtils.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nvar _hslA = { h: 0, s: 0, l: 0 };\nvar _hslB = { h: 0, s: 0, l: 0 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function ( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetColorName: function ( style ) {\n\n\t\t// color keywords\n\t\tvar hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function ( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToSRGB: function ( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function ( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tvar h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tvar s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tvar l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\nColor.NAMES = _colorKeywords;\n\nexport { Color };\n","import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Face3 };\n","/*\r\n * These are separately exported to create smaller threadworker bundle\r\n */\r\nimport { Vector3 } from \"three/src/math/Vector3\";\r\nexport { Triangle } from \"three/src/math/Triangle\";\r\nexport { Spherical } from \"three/src/math/Spherical\";\r\nexport { Cylindrical } from \"three/src/math/Cylindrical\";\r\nexport { Plane } from \"three/src/math/Plane\";\r\nexport { Frustum } from \"three/src/math/Frustum\";\r\nexport { Sphere } from \"three/src/math/Sphere\";\r\nexport { Ray } from \"three/src/math/Ray\";\r\nexport { Matrix4 } from \"three/src/math/Matrix4\";\r\nexport { Matrix3 } from \"three/src/math/Matrix3\";\r\nexport { Box3 } from \"three/src/math/Box3\";\r\nexport { Box2 } from \"three/src/math/Box2\";\r\nexport { Line3 } from \"three/src/math/Line3\";\r\nexport { Euler } from \"three/src/math/Euler\";\r\nexport { Vector4 } from \"three/src/math/Vector4\";\r\nexport { Vector3 } from \"three/src/math/Vector3\";\r\nexport { Vector2 } from \"three/src/math/Vector2\";\r\nexport { Quaternion } from \"three/src/math/Quaternion\";\r\nexport { Color } from \"three/src/math/Color\";\r\nexport { Face3 } from \"three/src/core/Face3\";\r\nexport { TypedArray } from \"three/src/polyfills\";\r\n\r\n// Copy of Vector3Const with different Vector3 dependency\r\nexport class Vector3Const {\r\n    static zero = Object.freeze(new Vector3(0, 0, 0));\r\n    static one = Object.freeze(new Vector3(1, 1, 1));\r\n    static up = Object.freeze(new Vector3(0, 0, 1));\r\n    static down = Object.freeze(new Vector3(0, 0, -1));\r\n    static forward = Object.freeze(new Vector3(0, 1, 0));\r\n    static back = Object.freeze(new Vector3(0, -1, 0));\r\n    static right = Object.freeze(new Vector3(1, 0, 0));\r\n    static left = Object.freeze(new Vector3(-1, 0, 0));\r\n}\r\n","import { Trimble } from \"./TrimBim_generated\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nexport import HierarchyType = Fbs.HierarchyType;\r\nexport import PropertyType = Fbs.PropertyType;\r\nexport import TrimbimGeometryType = Fbs.GeometryType;\r\nexport import IdentifierType = Fbs.IdentifierType;\r\nimport {UUID} from \"./UUID\";\r\nimport {IColor} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport interface TrimbimSettings {\r\n    workerRootUrl?: string;\r\n    // By default mesh textures are rendered fully opaque (performance reasons), set this to true if trb contains png textures with transparent pixels\r\n    transparentMeshTextures?: boolean;\r\n}\r\n\r\nexport interface EntityInfo {\r\n    id: number;\r\n    entity?: Entity;\r\n    product?: Product;\r\n    properties?: PropertySet[];\r\n    children?: EntityInfo[];\r\n}\r\n\r\nexport interface Entity {\r\n    id: number;\r\n    identifierType: IdentifierType;\r\n    identifier: string | UUID | number[];\r\n    class: string;\r\n}\r\n\r\nexport interface Material {\r\n    color?: IColor;\r\n    opacity?: number;\r\n}\r\n\r\nexport const enum TrimbimPickPriority {\r\n    NORMAL = 0,\r\n    HIGH = 1,\r\n    NO_PICK = 2,\r\n}\r\n\r\nexport interface HierarchyOptions {\r\n    parentId?: number;\r\n    product?: boolean;\r\n    entity?: boolean;\r\n    properties?: boolean;\r\n}\r\n\r\nexport interface TextStyle {\r\n    font: string;\r\n    size: number;\r\n    alignment: Fbs.AlignmentType;\r\n    verticalAlign: number;\r\n    horizontalAlign: number;\r\n}\r\n\r\nexport interface IText {\r\n    string: string,\r\n    style?: TextStyle,\r\n    checksum: number,\r\n}\r\n\r\nexport interface Property {\r\n    name: string;\r\n    value: string | number;\r\n    type: PropertyType;\r\n}\r\n\r\nexport interface PropertyDefinition {\r\n    name: string;\r\n    type: PropertyType;\r\n}\r\n\r\nexport interface PropertySet {\r\n    name?: string;\r\n    properties?: Property[];\r\n}\r\n\r\nexport interface Product {\r\n    name?: string;\r\n    description: string;\r\n    objectType: string;\r\n}\r\n\r\nexport const enum AggregationOperator {\r\n    SUM,\r\n    SHARED\r\n}\r\n\r\nexport interface PropertyAggregation {\r\n    propertySetName: string;\r\n    propertyName: string;\r\n    operator: AggregationOperator;\r\n    value?: string | number;\r\n    type?: PropertyType;\r\n}\r\n\r\nexport interface Query {\r\n    find?: {\r\n        // use output.find.callback to get result instead of output.find.entityIds\r\n        stream?: boolean;\r\n\r\n        // find by entity properties\r\n        // $filter: {\r\n        //     $and: [\r\n        //         {'CalculatedGeometryValues.Area': {$gt: 0}},\r\n        //         {'CalculatedGeometryValues.Area': {$lt: 100}},\r\n        //     ]\r\n        // },\r\n        $filter?: any;\r\n\r\n        // find children and parents of entities\r\n        // $hierarchy: {\r\n        //   $uniqueIdentifiers: [\"19uM$S000K4J4oCparCJGu\"], $scope: 'DescendantsAndSelf', $hierarchyType: 'ElementAssembly'\r\n        // }\r\n        $hierarchy?: any;\r\n\r\n        // limit the result entities to specific entity propertySet\r\n        // $selector: {\r\n        //     'CalculatedGeometryValues': {}\r\n        // }\r\n        $selector?: any;\r\n\r\n        // find entities belonging to Ifc products, filter product parameters (NOT IMPLEMENTED)\r\n        // $product: {\r\n        //   name: 'Insulation'\r\n        // }\r\n        $product?: any;\r\n\r\n        // find entities by entity parameters\r\n        // $entity: {\r\n        //   class: 'IFCSLAB'\r\n        // }\r\n        $entity?: any;\r\n\r\n        // find by entity instance definition\r\n        // $definition: {geometryType: TrimbimGeometryType.AlignmentCurve}\r\n        $definition?: any;\r\n    };\r\n\r\n    output?: {\r\n        find?: {\r\n            streamId?: number;\r\n            length?: number;\r\n            entityIds?: number[];\r\n            callback?: (params: { page: number; pageSize: number }) => Promise<any[]>; // rename to getResult, used when find.stream === true\r\n        };\r\n    };\r\n}\r\n\r\nexport const enum ClipPlaneEventName {\r\n    Added = \"clipplaneadded\"\r\n}\r\n","import {\r\n    GeometryBuilder,\r\n    GeometryData, normalLength\r\n} from \"./GeometryBuilder\";\r\n\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport {Ray, Vector3, Triangle, Frustum, Plane} from \"../ThreeMath\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport { TrimbimGeometryType } from \"../../common\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class MeshGeometryBuilder extends GeometryBuilder {\r\n    geometryType = TrimbimGeometryType.TriangleMesh;\r\n    readonly snapGeometryType = GeometryType.MESH;\r\n    protected buffers: GeometryData[] = [];\r\n\r\n    triangleMeshes: (n: number) => Fbs.TriangleMesh | Fbs.TriangleMesh8 | Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 = this.geometry.triangleMeshes.bind(this.geometry);\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    public getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n\r\n        if (!geometry.positions && buildIfEmpty) {\r\n            const mesh = this.triangleMeshes(geometryIndex);\r\n            this.build(mesh, geometry);\r\n        }\r\n\r\n        return [geometry];\r\n    }\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.triangleMeshesLength(); i < l; i++) {\r\n            const mesh = this.geometry.triangleMeshes(i);\r\n            this.buffers.push(this.calculateBufferSizes(mesh));\r\n        }\r\n    }\r\n\r\n    calculateBufferSizes(\r\n        mesh:\r\n            | Fbs.TriangleMesh\r\n            | Fbs.TriangleMesh8\r\n            | Fbs.TexturedTriangleMesh\r\n            | Fbs.TexturedTriangleMesh8\r\n    ): GeometryData {\r\n        const indicesLength = mesh.indicesLength();\r\n\r\n        if (indicesLength > 65535) {\r\n            throw new Error(\"Indices buffer larger than 65535\");\r\n        }\r\n\r\n        if (mesh instanceof Fbs.TriangleMesh || mesh instanceof Fbs.TriangleMesh8) {\r\n            return {\r\n                objectType: ObjectType.MESH,\r\n                indicesLength: indicesLength,\r\n                positionsLength: mesh.verticesLength() * 3,\r\n                normalsLength: mesh.verticesLength() * 3,\r\n                uvsLength: 0,\r\n                pointSizesLength: 0,\r\n            };\r\n        } else if (\r\n            mesh instanceof Fbs.TexturedTriangleMesh ||\r\n            mesh instanceof Fbs.TexturedTriangleMesh8\r\n        ) {\r\n            return {\r\n                objectType: ObjectType.MESH,\r\n                indicesLength: indicesLength,\r\n                positionsLength: mesh.verticesLength() * 3,\r\n                normalsLength: mesh.verticesLength() * 3,\r\n                uvsLength: indicesLength * 2,\r\n                pointSizesLength: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Build base meshes from meshes\r\n     */\r\n    build(\r\n        mesh:\r\n            Fbs.TriangleMesh\r\n            | Fbs.TriangleMesh8,\r\n        bufferGeometry: GeometryData\r\n    ): void {\r\n        const pos = new Fbs.Vec3f();\r\n        const normal = new Fbs.Vec3f();\r\n        const vertex = createIndexedVertex(this.geometryType);\r\n\r\n        const verticesLength = mesh.verticesLength();\r\n        const indices = mesh.indicesArray();\r\n        const vertices = new Float32Array(mesh.verticesLength() * 3);\r\n        const normals = new Int16Array(mesh.verticesLength() * 3);\r\n\r\n        for (let i = 0; i < verticesLength; i++) {\r\n            mesh.vertices(i, vertex);\r\n            mesh.positions(vertex.positionIndex(), pos);\r\n            mesh.normals(vertex.normalIndex(), normal);\r\n\r\n            vertices[i * 3    ] = pos.x();\r\n            vertices[i * 3 + 1] = pos.y();\r\n            vertices[i * 3 + 2] = pos.z();\r\n\r\n            normals[i * 3    ] = normal.x() * normalLength;\r\n            normals[i * 3 + 1] = normal.y() * normalLength;\r\n            normals[i * 3 + 2] = normal.z() * normalLength;\r\n        }\r\n\r\n        bufferGeometry.indices = indices;\r\n        bufferGeometry.positions = vertices;\r\n        bufferGeometry.normals = normals;\r\n        bufferGeometry.uvs = new Float32Array(0);\r\n    }\r\n\r\n    buildTexured(\r\n        mesh: Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8,\r\n        type: TrimbimGeometryType,\r\n        bufferGeometry: GeometryData\r\n    ): GeometryData {\r\n        const pos = new Fbs.Vec3f();\r\n        const normal = new Fbs.Vec3f();\r\n        const uv = new Fbs.UV();\r\n        const vertex = createIndexedVertex(type);\r\n\r\n        const verticesLength = mesh.verticesLength();\r\n        const indices = mesh.indicesArray();\r\n        const vertices = new Float32Array(mesh.verticesLength() * 3);\r\n        const normals = new Int16Array(mesh.verticesLength() * 3);\r\n        const uvs = new Float32Array(mesh.verticesLength() * 2);\r\n\r\n        for (let i = 0; i < verticesLength; i++) {\r\n            mesh.vertices(i, vertex);\r\n            mesh.positions(vertex.positionIndex(), pos);\r\n            mesh.normals(vertex.normalIndex(), normal);\r\n            mesh.uvs(vertex.positionIndex(), uv);\r\n\r\n            vertices[i * 3] = pos.x();\r\n            vertices[i * 3 + 1] = pos.y();\r\n            vertices[i * 3 + 2] = pos.z();\r\n\r\n            normals[i * 3] = normal.x() * normalLength;\r\n            normals[i * 3 + 1] = normal.y() * normalLength;\r\n            normals[i * 3 + 2] = normal.z() * normalLength;\r\n\r\n            uvs[i * 2] = uv.u();\r\n            uvs[i * 2 + 1] = uv.v();\r\n        }\r\n\r\n        bufferGeometry.indices = indices;\r\n        bufferGeometry.positions = vertices;\r\n        bufferGeometry.normals = normals;\r\n        bufferGeometry.uvs = uvs;\r\n\r\n        return bufferGeometry;\r\n    }\r\n\r\n    getVertex = (() => {\r\n        const pos = new Fbs.Vec3f();\r\n        let vertex: Fbs.IndexedVertex;\r\n\r\n        return (mesh: Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 | Fbs.TriangleMesh | Fbs.TriangleMesh8, type: TrimbimGeometryType, i: number, out: Vector3): void => {\r\n            const index = mesh.indices(i);\r\n            if (!vertex) vertex = createIndexedVertex(type);\r\n            mesh.vertices(index, vertex);\r\n            mesh.positions(vertex.positionIndex(), pos);\r\n            out.set(pos.x(), pos.y(), pos.z());\r\n        };\r\n    })();\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickFace(geometryIndex, ray);\r\n    }\r\n\r\n    pickFace = (() => {\r\n        const vecA = new Vector3();\r\n        const vecB = new Vector3();\r\n        const vecC = new Vector3();\r\n        const triangle = new Triangle();\r\n\r\n        const target = new Vector3();\r\n\r\n        return (meshIndex: number, ray: Ray): HitPoint[] => {\r\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\r\n            const indicesLength = mesh.indicesLength();\r\n            const result: HitPoint[] = [];\r\n\r\n            for (let i = 0; i < indicesLength; i += 3) {\r\n                this.getVertex(mesh, this.geometryType, i, vecA);\r\n                this.getVertex(mesh, this.geometryType, i + 1, vecB);\r\n                this.getVertex(mesh, this.geometryType, i + 2, vecC);\r\n\r\n                if (ray.intersectTriangle(vecA, vecB, vecC, false, target)) {\r\n                    triangle.set(vecA, vecB, vecC);\r\n                    result.push({\r\n                        point: target.clone(),\r\n                        normal: triangle.getNormal(new Vector3())\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    })();\r\n\r\n    pickLine = (() => {\r\n        const vecA = new Vector3();\r\n        const vecB = new Vector3();\r\n        const vecC = new Vector3();\r\n        const point = new Vector3();\r\n        const plane = new Plane();\r\n\r\n        return (meshIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\r\n            const indicesLength = mesh.indicesLength();\r\n\r\n            const result: HitPoint[] = [];\r\n\r\n            const addPoint = (v1: Vector3, v2: Vector3, normal: Vector3): void => {\r\n                if (frustum.containsPoint(point))\r\n                    result.push({point: point.clone(), normal: normal.clone(), snapLineStart: v1.clone(), snapLineEnd: v2.clone()})\r\n            };\r\n\r\n            for (let i = 0; i < indicesLength; i += 3) {\r\n                this.getVertex(mesh, this.geometryType, i, vecA);\r\n                this.getVertex(mesh, this.geometryType, i + 1, vecB);\r\n                this.getVertex(mesh, this.geometryType, i + 2, vecC);\r\n                plane.setFromCoplanarPoints(vecA, vecB, vecC);\r\n\r\n                ray.distanceSqToSegment(vecA, vecB, undefined, point); addPoint(vecA, vecB, plane.normal);\r\n                ray.distanceSqToSegment(vecA, vecC, undefined, point); addPoint(vecA, vecC, plane.normal);\r\n                ray.distanceSqToSegment(vecB, vecC, undefined, point); addPoint(vecB, vecC, plane.normal);\r\n            }\r\n\r\n            return result;\r\n        };\r\n    })();\r\n\r\n    pickPoint = (() => {\r\n        const pos = new Fbs.Vec3f();\r\n        const position = new Vector3();\r\n\r\n        return (meshIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            const vertex = createIndexedVertex(this.geometryType);\r\n            const mesh = getMesh(meshIndex, this.geometryType, this.geometry);\r\n\r\n            const result: HitPoint[] = [];\r\n            for (let i = 0; i < mesh.verticesLength(); i++) {\r\n                mesh.vertices(i, vertex);\r\n                mesh.positions(vertex.positionIndex(), pos);\r\n                position.set(pos.x(), pos.y(), pos.z());\r\n\r\n                if (frustum.containsPoint(position))\r\n                    result.push({point: position.clone()})\r\n            }\r\n\r\n            return result;\r\n        };\r\n    })();\r\n}\r\n\r\nfunction createIndexedVertex(type: TrimbimGeometryType): Fbs.IndexedVertex {\r\n    if (type === TrimbimGeometryType.TriangleMesh8 || type === TrimbimGeometryType.TexturedTriangleMesh8) {\r\n        return new Fbs.IndexedVertex8();\r\n    } else if (type === TrimbimGeometryType.TriangleMesh || type === TrimbimGeometryType.TexturedTriangleMesh) {\r\n        return new Fbs.IndexedVertex();\r\n    } else {\r\n        throw new Error(\"Unkown index type for mesh\");\r\n    }\r\n}\r\n\r\nexport function getMesh(idx: number, type: TrimbimGeometryType, geometry: Fbs.ModelGeometry): Fbs.TexturedTriangleMesh | Fbs.TexturedTriangleMesh8 | Fbs.TriangleMesh | Fbs.TriangleMesh8 {\r\n    if (type === TrimbimGeometryType.TriangleMesh8) {\r\n        return geometry.triangleMeshes8(idx);\r\n    } else if (type === TrimbimGeometryType.TriangleMesh) {\r\n        return geometry.triangleMeshes(idx);\r\n    } else if (type === TrimbimGeometryType.TexturedTriangleMesh8) {\r\n        return geometry.texturedTriangleMeshes8(idx);\r\n    } else if (type === TrimbimGeometryType.TexturedTriangleMesh) {\r\n        return geometry.texturedTriangleMeshes(idx);\r\n    } else {\r\n        throw new Error(`Unknown Mesh type: ${type}`);\r\n    }\r\n}\r\n\r\nexport class Mesh8GeometryBuilder extends MeshGeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.TriangleMesh8;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.triangleMeshes = geometry.triangleMeshes8.bind(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.triangleMeshes8Length(); i < l; i++) {\r\n            const mesh = this.geometry.triangleMeshes8(i);\r\n            this.buffers.push(this.calculateBufferSizes(mesh));\r\n        }\r\n    }\r\n}\r\n\r\nexport class MeshTexturedGeometryBuilder extends MeshGeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.TexturedTriangleMesh;\r\n    readonly producedType = ObjectType.MESH;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.triangleMeshes = geometry.texturedTriangleMeshes.bind(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.texturedTriangleMeshesLength(); i < l; i++) {\r\n            const mesh = this.geometry.texturedTriangleMeshes(i);\r\n            this.buffers.push(\r\n                this.calculateBufferSizes(mesh)\r\n            );\r\n        }\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n        if (!geometry.positions && buildIfEmpty) {\r\n            const mesh = this.triangleMeshes(geometryIndex) as Fbs.TexturedTriangleMesh;\r\n            this.buffers[geometryIndex] = this.buildTexured(mesh, this.geometryType, geometry);\r\n        }\r\n        return [geometry];\r\n    }\r\n}\r\n\r\nexport class Mesh8TexturedGeometryBuilder extends MeshGeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.TexturedTriangleMesh8;\r\n    readonly producedType = ObjectType.MESH;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.triangleMeshes = geometry.texturedTriangleMeshes8.bind(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.texturedTriangleMeshes8Length(); i < l; i++) {\r\n            const mesh = this.geometry.texturedTriangleMeshes8(i);\r\n            this.buffers.push(this.calculateBufferSizes(mesh));\r\n        }\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        let object: GeometryData = this.buffers[geometryIndex];\r\n        if (!object.positions && buildIfEmpty) {\r\n            const mesh = this.triangleMeshes(geometryIndex) as Fbs.TexturedTriangleMesh8;\r\n            this.buffers[geometryIndex] = this.buildTexured(mesh, this.geometryType, object);\r\n        }\r\n        return [object];\r\n    }\r\n}\r\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tvar p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tvar a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tvar a = start;\n\tdo {\n\n\t\tvar b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [],\n\t\ti, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tvar p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tvar o1 = sign( area( p1, q1, p2 ) );\n\tvar o2 = sign( area( p1, q1, q2 ) );\n\tvar o3 = sign( area( p2, q2, p1 ) );\n\tvar o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nexport { Earcut };\n","import { GeometryData, GeometryBuilder, normalLength } from \"./GeometryBuilder\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport { Frustum, Plane, Ray, Triangle, Vector3 } from \"../ThreeMath\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport BRep = Trimble.Technology.TrimBim.Fbs.BRep;\r\nimport BRepWithUV = Trimble.Technology.TrimBim.Fbs.BRepWithUV;\r\nimport BRepWithNormal = Trimble.Technology.TrimBim.Fbs.BRepWithNormal;\r\nimport { TrimbimGeometryType } from \"../../common\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n// @ts-ignore - no declaration\r\nimport { Earcut } from \"three/src/extras/Earcut\";\r\n\r\ninterface BRepHole { vertices: number[]; uvs?: number[]; normals?: number[]; indices: number[] }\r\n\r\ninterface ICounters {\r\n    index_count: number;\r\n    vertex_count: number;\r\n    vertex_length: number;\r\n    uv_length: number;\r\n    normal_count: number;\r\n    normal_length: number;\r\n}\r\n\r\nenum polyType {\r\n    triangle = 3,\r\n    rectangle = 4\r\n}\r\n\r\nabstract class AbstractBRepGeometryBuilder extends GeometryBuilder {\r\n    abstract geometryType: TrimbimGeometryType;\r\n    readonly snapGeometryType = GeometryType.MESH;\r\n\r\n    protected abstract getBRep(idx: number): BRep | BRepWithUV | BRepWithNormal;\r\n\r\n    abstract prepareModelTypes(): void;\r\n\r\n    private v0 = new Vector3();\r\n    private v1 = new Vector3();\r\n    private v2 = new Vector3();\r\n    private n1 = new Vector3();\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n\r\n        if (!geometry.positions && buildIfEmpty) {\r\n            const poly = this.getBRep(geometryIndex);\r\n            this.build(poly, geometry);\r\n        }\r\n\r\n        return [geometry];\r\n    }\r\n\r\n    calculateBufferSizes = (() => {\r\n        const innerWire = new Fbs.InnerWire();\r\n        const outerWire = new Fbs.OuterWire();\r\n        const MAX_SIZE = 1 << 16;       // InnerWire.outerWire is a ushort in the TrimBIM schema\r\n        const indicesLength = new Uint16Array(MAX_SIZE);\r\n        const verticesLength = new Uint16Array(MAX_SIZE);\r\n\r\n        return (brep: BRep | BRepWithUV | BRepWithNormal): GeometryData => {\r\n            let innerVertex_length = 0;\r\n\r\n            for (let i = 0, length = brep.innerWiresLength(); i < length; i++) {\r\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\r\n                ++indicesLength[outerWireId];\r\n                verticesLength[outerWireId] += innerWire.vertexIndicesLength() * 3;\r\n                innerVertex_length += innerWire.vertexIndicesLength();\r\n            }\r\n\r\n            let all_outerVertices_length = 0;\r\n            let indices_length = 0;\r\n\r\n            for (let i = 0, outerLength = brep.outerWiresLength(); i < outerLength; i++) {\r\n                const vertexIndicesLength = brep.outerWires(i, outerWire).vertexIndicesLength();\r\n                all_outerVertices_length += vertexIndicesLength;\r\n\r\n                if (indicesLength[i]) {\r\n                    indices_length += 3 * (\r\n                        vertexIndicesLength +\r\n                        verticesLength[i] / 3 -\r\n                        2 +\r\n                        2 * indicesLength[i]\r\n                    );\r\n                } else {\r\n                    indices_length += (vertexIndicesLength - 2) * 3;\r\n                }\r\n            }\r\n\r\n            // Cleaning the hole buffer after use\r\n            for (let i = 0, length = brep.innerWiresLength(); i < length; ++i) {\r\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\r\n                indicesLength[outerWireId] = 0;\r\n                verticesLength[outerWireId] = 0;\r\n            }\r\n\r\n            const bufferGeometry: GeometryData = {\r\n                objectType: ObjectType.MESH,\r\n                indicesLength: indices_length,\r\n                positionsLength: (innerVertex_length + all_outerVertices_length) * 3,\r\n                normalsLength: (innerVertex_length + all_outerVertices_length) * 3,\r\n                uvsLength: 0,\r\n                pointSizesLength: 0\r\n            };\r\n\r\n            if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\r\n                bufferGeometry.uvsLength = (innerVertex_length + all_outerVertices_length) * 2;\r\n            }\r\n\r\n            return bufferGeometry;\r\n        }\r\n    })();\r\n\r\n    private getVertexDataSize(geometryType: TrimbimGeometryType): number {\r\n        if (geometryType === TrimbimGeometryType.BRepWithUV) {\r\n            return 5;\r\n        } else if (geometryType === TrimbimGeometryType.BRepWithNormals) {\r\n            return 6;\r\n        } else {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    private getBrepData(brep: BRep | BRepWithUV | BRepWithNormal, vertexDataSize: number): Float32Array {\r\n        const brepOffset = brep.bb.__offset(brep.bb_pos, 8);\r\n        return new Float32Array(\r\n            brep.bb.bytes().buffer,\r\n            brep.bb.__vector(brep.bb_pos + brepOffset),\r\n            brep.verticesLength() * vertexDataSize\r\n        );\r\n    }\r\n\r\n    build = (() => {\r\n        const outerWire = new Fbs.OuterWire();\r\n\r\n        return (brep: BRep | BRepWithUV | BRepWithNormal, bufferGeometry: GeometryData): void => {\r\n            const counters = {\r\n                vertex_count: 0,\r\n                index_count: 0,\r\n                vertex_length: 0,\r\n                uv_length: 0,\r\n                normal_length: 0,\r\n                normal_count: 0\r\n            };\r\n\r\n            bufferGeometry.indices = new Uint16Array(bufferGeometry.indicesLength);\r\n            bufferGeometry.positions = new Float32Array(bufferGeometry.positionsLength);\r\n            bufferGeometry.normals = new Int16Array(bufferGeometry.normalsLength);\r\n            bufferGeometry.uvs = new Float32Array(bufferGeometry.uvsLength);\r\n\r\n            Object.seal(bufferGeometry);\r\n\r\n            const data = this.getBrepData(brep, this.getVertexDataSize(this.geometryType));\r\n            const holes = this.buildHoles(brep);\r\n\r\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\r\n                brep.outerWires(i, outerWire);\r\n                const vertexIndices = outerWire.vertexIndicesArray();\r\n\r\n                if (\r\n                    outerWire.vertexIndicesLength() === polyType.triangle &&\r\n                    !holes.has(i)\r\n                ) {\r\n                    buildTriangle(vertexIndices, data, this.geometryType, bufferGeometry, counters);\r\n                } else if (\r\n                    outerWire.vertexIndicesLength() === polyType.rectangle &&\r\n                    !holes.has(i)\r\n                ) {\r\n                    buildQuad(vertexIndices, data, i, this.geometryType, bufferGeometry, counters);\r\n                } else {\r\n                    buildPoly(vertexIndices, data, i, this.geometryType, bufferGeometry, holes, counters);\r\n                }\r\n            }\r\n\r\n            if (this.geometryType !== TrimbimGeometryType.BRepWithNormals) {\r\n                BRepGeometryBuilder.computeNormals(bufferGeometry);\r\n            }\r\n        }\r\n    })();\r\n\r\n    private buildHoles = (() => {\r\n        const vertex = new Fbs.Vec3f();\r\n        const vertexUv = new Fbs.PositionUV();\r\n        const vertexNormal = new Fbs.PositionNormal();\r\n        const innerWire = new Fbs.InnerWire();\r\n        const holes = new Map<number, BRepHole>();\r\n\r\n        return (brep: BRep | BRepWithUV | BRepWithNormal): Map<number, BRepHole> => {\r\n            holes.clear();\r\n\r\n            for (let i = 0, length = brep.innerWiresLength(); i < length; i++) {\r\n                const outerWireId = brep.innerWires(i, innerWire).outerWire();\r\n\r\n                if (holes.has(outerWireId)) {\r\n                    const tmp = holes.get(outerWireId);\r\n\r\n                    tmp.indices.push(tmp.vertices.length / 3);\r\n                    holes.set(outerWireId, tmp);\r\n                } else {\r\n                    if (this.geometryType === TrimbimGeometryType.BRep) {\r\n                        holes.set(outerWireId, { indices: [0], vertices: [] });\r\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals) {\r\n                        holes.set(outerWireId, { indices: [0], vertices: [], normals: [] });\r\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\r\n                        holes.set(outerWireId, { indices: [0], vertices: [], uvs: [] });\r\n                    }\r\n                }\r\n\r\n                const hole = holes.get(outerWireId);\r\n                for (let j = 0, innerlength = innerWire.vertexIndicesLength(); j < innerlength; j++) {\r\n                    if (this.geometryType === TrimbimGeometryType.BRep && brep instanceof BRep) {\r\n                        brep.vertices(innerWire.vertexIndices(j), vertex);\r\n                        hole.vertices.push(vertex.x(), vertex.y(), vertex.z());\r\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithUV && brep instanceof BRepWithUV) {\r\n                        brep.vertices(innerWire.vertexIndices(j), vertexUv);\r\n                        hole.vertices.push(\r\n                            vertexUv.position().x(),\r\n                            vertexUv.position().y(),\r\n                            vertexUv.position().z()\r\n                        );\r\n                        hole.uvs.push(vertexUv.uv().u(), vertexUv.uv().v());\r\n                    } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals && brep instanceof BRepWithNormal) {\r\n                        brep.vertices(innerWire.vertexIndices(j), vertexNormal);\r\n                        hole.vertices.push(\r\n                            vertexNormal.position().x(),\r\n                            vertexNormal.position().y(),\r\n                            vertexNormal.position().z()\r\n                        );\r\n                        hole.normals.push(\r\n                            vertexNormal.normal().x() * normalLength,\r\n                            vertexNormal.normal().y() * normalLength,\r\n                            vertexNormal.normal().z() * normalLength\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            return holes;\r\n        }\r\n    })();\r\n\r\n    static computeNormals = (() => {\r\n        const pA = new Vector3();\r\n        const pB = new Vector3();\r\n        const pC = new Vector3();\r\n        const ab = new Vector3();\r\n        const cb = new Vector3();\r\n        let vA = 0;\r\n        let vB = 0;\r\n        let vC = 0;\r\n        let normals: Float32Array;\r\n\r\n        return (geometry: GeometryData) => {\r\n\r\n            const indices = geometry.indices;\r\n            const positions = geometry.positions;\r\n            if (!normals || normals.length < geometry.normals.length)\r\n                normals = new Float32Array(geometry.normals.length);\r\n            else\r\n                normals.fill(0);\r\n\r\n            for (let i = 0, il = geometry.indices.length; i < il; i += 3) {\r\n                vA = indices[i] * 3;\r\n                vB = indices[i + 1] * 3;\r\n                vC = indices[i + 2] * 3;\r\n\r\n                pA.fromArray(positions, vA);\r\n                pB.fromArray(positions, vB);\r\n                pC.fromArray(positions, vC);\r\n\r\n                cb.subVectors(pC, pB);\r\n                ab.subVectors(pA, pB);\r\n                cb.cross(ab);\r\n\r\n                normals[ vA ] += cb.x;\r\n                normals[ vA + 1 ] += cb.y;\r\n                normals[ vA + 2 ] += cb.z;\r\n\r\n                normals[ vB ] += cb.x;\r\n                normals[ vB + 1 ] += cb.y;\r\n                normals[ vB + 2 ] += cb.z;\r\n\r\n                normals[ vC ] += cb.x;\r\n                normals[ vC + 1 ] += cb.y;\r\n                normals[ vC + 2 ] += cb.z;\r\n            }\r\n\r\n            for (let i = 0, il = geometry.normals.length; i < il; i += 3) {\r\n                cb.fromArray(normals, i);\r\n                cb.normalize();\r\n                cb.multiplyScalar(normalLength);\r\n                cb.toArray(geometry.normals, i);\r\n            }\r\n        };\r\n    })();\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickFace(geometryIndex, ray);\r\n    }\r\n\r\n    pickFace = (() => {\r\n        const plane = new Plane();\r\n        const pointsInside = <HitPoint[]>[];\r\n        const innerWiresLUT: Map<number, number[]> = new Map();\r\n\r\n        const v0 = new Vector3();\r\n        const v1 = new Vector3();\r\n        const v2 = new Vector3();\r\n\r\n        return (geometryIndex: number, ray: Ray): HitPoint[] => {\r\n            const brep = this.getBRep(geometryIndex);\r\n            pointsInside.length = 0;\r\n            innerWiresLUT.clear();\r\n\r\n            for (let i = 0; i < brep.innerWiresLength(); i++) {\r\n                const index = brep.innerWires(i).outerWire();\r\n                if (innerWiresLUT.has(index)) {\r\n                    innerWiresLUT.get(index).push(i);\r\n                } else {\r\n                    innerWiresLUT.set(brep.innerWires(i).outerWire(), [i]);\r\n                }\r\n            }\r\n\r\n            const indexOffset = this.getVertexDataSize(this.geometryType);\r\n            const data = this.getBrepData(brep, indexOffset);\r\n\r\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\r\n                const vertexIndices = brep.outerWires(i).vertexIndicesArray();\r\n\r\n                this.v0.set(0, 0, 0);\r\n                this.v1.set(0, 0, 0);\r\n                this.v2.set(0, 0, 0);\r\n                this.n1.set(0, 0, 0);\r\n\r\n                const outerWireIndicesLength = vertexIndices.length;\r\n\r\n                if (outerWireIndicesLength === 3) {\r\n                    let idx0 = vertexIndices[0];\r\n                    let idx1 = vertexIndices[1];\r\n                    let idx2 = vertexIndices[2];\r\n\r\n                    idx0 *= indexOffset;\r\n                    idx1 *= indexOffset;\r\n                    idx2 *= indexOffset;\r\n\r\n                    v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\r\n                    v1.set(data[idx1], data[idx1 + 1], data[idx1 + 2]);\r\n                    v2.set(data[idx2], data[idx2 + 1], data[idx2 + 2]);\r\n\r\n                    const result = this.intersectTriangle(ray, v0, v1, v2);\r\n\r\n                    if (result) {\r\n                        pointsInside.push(result);\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                const idx0 = vertexIndices[0] * indexOffset;\r\n\r\n                this.v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\r\n\r\n                getNormalFromTrimBIM(this.n1, data, vertexIndices, indexOffset);\r\n\r\n                plane.setFromNormalAndCoplanarPoint(this.n1, this.v0);\r\n\r\n                if (!ray.intersectPlane(plane, this.v1)) {\r\n                    continue;\r\n                }\r\n\r\n                if (innerWiresLUT.has(i)) {\r\n                    const innerWires = innerWiresLUT.get(i);\r\n\r\n                    if (this.insideHole(this.v1, plane, innerWires, brep, data)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (this.pointInsidePolygon(this.v1, data, vertexIndices, indexOffset, plane)) {\r\n                    pointsInside.push({\r\n                        point: this.v1.clone(),\r\n                        normal: plane.normal.clone()\r\n                    });\r\n                }\r\n            }\r\n\r\n            return pointsInside;\r\n        };\r\n    })();\r\n\r\n    pickLine = (() => {\r\n        const outerWire = new Fbs.OuterWire();\r\n        const vecA = new Vector3();\r\n        const vecB = new Vector3();\r\n        const point = new Vector3();\r\n        const plane = new Plane();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            const brep = this.getBRep(geometryIndex);\r\n            const result: HitPoint[] = [];\r\n\r\n            for (let i = 0, length = brep.outerWiresLength(); i < length; i++) {\r\n                brep.outerWires(i, outerWire);\r\n\r\n                this.getVertex(brep, outerWire.vertexIndices(0), vecA);\r\n                this.getVertex(brep, outerWire.vertexIndices(1), point);\r\n                this.getVertex(brep, outerWire.vertexIndices(outerWire.vertexIndicesLength() - 1), vecB);\r\n                plane.setFromCoplanarPoints(vecA, vecB, point);\r\n\r\n                for (let j = 0, l = outerWire.vertexIndicesLength(); j < l; j++) {\r\n                    this.getVertex(brep, outerWire.vertexIndices(j), vecA);\r\n                    ray.distanceSqToSegment(vecA, vecB, undefined, point);\r\n                    if (frustum.containsPoint(point)) {\r\n                        result.push({ point: point.clone(), normal: plane.normal.clone(), snapLineStart: vecA.clone(), snapLineEnd: vecB.clone()})\r\n                    }\r\n                    vecB.copy(vecA);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    })();\r\n\r\n    pickPoint = (() => {\r\n        const position = new Vector3();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            const brep = this.getBRep(geometryIndex);\r\n            const result: HitPoint[] = [];\r\n\r\n            for (let i = 0, length = brep.verticesLength(); i < length; i++) {\r\n                this.getVertex(brep, i, position);\r\n                if (frustum.containsPoint(position)) {\r\n                    result.push({ point: position.clone() })\r\n                }\r\n            }\r\n\r\n            return result;\r\n        };\r\n    })();\r\n\r\n    getVertex = (() => {\r\n        const vertex = new Fbs.Vec3f();\r\n        const vertexUv = new Fbs.PositionUV();\r\n        const vertexNormal = new Fbs.PositionNormal();\r\n\r\n        return (brep: BRep | BRepWithUV | BRepWithNormal, i: number, out: Vector3): void => {\r\n            if (brep instanceof BRep)\r\n                brep.vertices(i, vertex);\r\n            else if (brep instanceof BRepWithNormal)\r\n                brep.vertices(i, vertexNormal).position(vertex);\r\n            else if (brep instanceof BRepWithUV)\r\n                brep.vertices(i, vertexUv).position(vertex);\r\n            out.set(vertex.x(), vertex.y(), vertex.z());\r\n        };\r\n    })();\r\n\r\n\r\n    public insideHole = (() => {\r\n        return (\r\n            point: Vector3,\r\n            plane: Plane,\r\n            indices: number[],\r\n            brep: BRep | BRepWithUV | BRepWithNormal,\r\n            data: Float32Array\r\n        ) => {\r\n            let indexOffset: number;\r\n\r\n            if (this.geometryType === TrimbimGeometryType.BRepWithUV) {\r\n                indexOffset = 5;\r\n            } else if (this.geometryType === TrimbimGeometryType.BRepWithNormals) {\r\n                indexOffset = 6;\r\n            } else {\r\n                indexOffset = 3;\r\n            }\r\n\r\n            for (let j = 0, l = indices.length; j < l; j++) {\r\n                const vertexIndices = brep.innerWires(indices[j]).vertexIndicesArray();\r\n\r\n                if (this.pointInsidePolygon(point, data, vertexIndices, indexOffset, plane)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n    })();\r\n\r\n    public intersectTriangle = (() => {\r\n        const triangle = new Triangle();\r\n        const v0 = new Vector3();\r\n\r\n        return (ray: Ray, a: Vector3, b: Vector3, c: Vector3): HitPoint => {\r\n            triangle.a = a;\r\n            triangle.b = b;\r\n            triangle.c = c;\r\n\r\n            if (ray.intersectTriangle(a, b, c, false, v0))\r\n                return { point: v0.clone(), normal: triangle.getNormal(new Vector3()) };\r\n        };\r\n    })();\r\n\r\n    public createOrthonormalBasis(refAxis: Vector3, axis0: Vector3, axis1: Vector3): void {\r\n        if (Math.abs(refAxis.x) >= Math.abs(refAxis.y)) {\r\n            // w.x or w.z is the largest magnitude component, swap them\r\n            const invLength = 1.0 / Math.sqrt(refAxis.x * refAxis.x + refAxis.z * refAxis.z);\r\n            axis0.set(-refAxis.z * invLength, 0.0, refAxis.x * invLength);\r\n            axis1.set(\r\n                refAxis.y * axis0.z,\r\n                refAxis.z * axis0.x - refAxis.x * axis0.z,\r\n                -refAxis.y * axis0.x\r\n            );\r\n        } else {\r\n            // w.y or w.z is the largest magnitude component, swap them\r\n            const invLength = 1.0 / Math.sqrt(refAxis.y * refAxis.y + refAxis.z * refAxis.z);\r\n            axis0.set(0.0, refAxis.z * invLength, -refAxis.y * invLength);\r\n            axis1.set(\r\n                refAxis.y * axis0.z - refAxis.z * axis0.y,\r\n                -refAxis.x * axis0.z,\r\n                refAxis.x * axis0.y\r\n            );\r\n        }\r\n\r\n        axis0.normalize();\r\n        axis1.normalize();\r\n    }\r\n\r\n    private pointInsidePolygon = (() => {\r\n        const axis1 = new Vector3();\r\n        const axis0 = new Vector3();\r\n        const vector3 = new Vector3();\r\n\r\n        // Optimized version of https://wrf.ecse.rpi.edu//Research/Short_Notes/pnpoly.html\r\n        return (\r\n            point: Vector3,\r\n            data: Float32Array,\r\n            vertexIndices: Uint16Array,\r\n            indexOffset: number,\r\n            plane: Plane\r\n        ): boolean => {\r\n            this.createOrthonormalBasis(plane.normal, axis0, axis1);\r\n\r\n            const count = vertexIndices.length;\r\n            const lastIndex = vertexIndices[count - 1] * indexOffset;\r\n\r\n            const pj = vector3\r\n                .set(data[lastIndex], data[lastIndex + 1], data[lastIndex + 2])\r\n                .sub(point);\r\n\r\n            let jx = pj.dot(axis1);\r\n            let jy = pj.dot(axis0);\r\n            let c = false;\r\n\r\n            for (let i = 0; i < count; i++) {\r\n                const index = vertexIndices[i] * indexOffset;\r\n                const pi = vector3.set(data[index], data[index + 1], data[index + 2]).sub(point);\r\n\r\n                const ix = pi.dot(axis1);\r\n                const iy = pi.dot(axis0);\r\n\r\n                if (iy > 0 !== jy > 0) {\r\n                    if (0 < ((jx - ix) * -iy) / (jy - iy) + ix) {\r\n                        c = !c;\r\n                    }\r\n                }\r\n\r\n                jx = ix;\r\n                jy = iy;\r\n            }\r\n            return c;\r\n        };\r\n    })();\r\n}\r\n\r\nexport class BRepGeometryBuilder extends AbstractBRepGeometryBuilder {\r\n    geometryType = TrimbimGeometryType.BRep;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    protected getBRep = (() => {\r\n        const bRep = new BRep();\r\n        return (idx: number): BRep => {\r\n            return this.geometry.bReps(idx, bRep);\r\n        }\r\n    })();\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.bRepsLength(); i < l; i++) {\r\n            const poly = this.getBRep(i);\r\n            this.buffers.push(this.calculateBufferSizes(poly));\r\n        }\r\n    }\r\n}\r\n\r\nexport class BRepWithUVGeometryBuilder extends AbstractBRepGeometryBuilder {\r\n    geometryType = TrimbimGeometryType.BRepWithUV;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    protected getBRep = (() => {\r\n        const bRep = new BRepWithUV();\r\n        return (idx: number): BRepWithUV => {\r\n            return this.geometry.bRepWithUVs(idx, bRep);\r\n        }\r\n    })();\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.bRepWithUVsLength(); i < l; i++) {\r\n            const poly = this.getBRep(i);\r\n            this.buffers.push(this.calculateBufferSizes(poly));\r\n        }\r\n    }\r\n}\r\n\r\nexport class BRepWithNormalsGeometryBuilder extends AbstractBRepGeometryBuilder {\r\n    geometryType = TrimbimGeometryType.BRepWithNormals;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    protected getBRep = (() => {\r\n        const bRep = new BRepWithNormal();\r\n        return (idx: number): BRepWithNormal => {\r\n            return this.geometry.bRepWithNormals(idx, bRep);\r\n        }\r\n    })();\r\n\r\n    prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.bRepWithNormalsLength(); i < l; i++) {\r\n            const poly = this.getBRep(i);\r\n            this.buffers.push(this.calculateBufferSizes(poly));\r\n        }\r\n    }\r\n}\r\n\r\nconst buildQuad = (() => {\r\n    const v0 = new Vector3();\r\n    const v1 = new Vector3();\r\n    const v2 = new Vector3();\r\n    const v3 = new Vector3();\r\n\r\n    const v4 = new Vector3();\r\n    const v5 = new Vector3();\r\n    const v6 = new Vector3();\r\n\r\n    const n1 = new Vector3();\r\n    const n2 = new Vector3();\r\n\r\n    let idx0 = 0;\r\n    let idx1 = 0;\r\n    let idx2 = 0;\r\n    let idx3 = 0;\r\n\r\n    return (\r\n        vertexIndices: Uint16Array,\r\n        data: Float32Array,\r\n        i: number,\r\n        type: TrimbimGeometryType,\r\n        geometry: GeometryData,\r\n        counters: ICounters\r\n    ) => {\r\n        idx0 = vertexIndices[0];\r\n        idx1 = vertexIndices[1];\r\n        idx2 = vertexIndices[2];\r\n        idx3 = vertexIndices[3];\r\n\r\n        if (type === TrimbimGeometryType.BRep) {\r\n            idx0 *= 3;\r\n            idx1 *= 3;\r\n            idx2 *= 3;\r\n            idx3 *= 3;\r\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\r\n            idx0 *= 5;\r\n            idx1 *= 5;\r\n            idx2 *= 5;\r\n            idx3 *= 5;\r\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\r\n            idx0 *= 6;\r\n            idx1 *= 6;\r\n            idx2 *= 6;\r\n            idx3 *= 6;\r\n        }\r\n\r\n        v0.set(data[idx0], data[idx0 + 1], data[idx0 + 2]);\r\n        v1.set(data[idx1], data[idx1 + 1], data[idx1 + 2]);\r\n        v2.set(data[idx2], data[idx2 + 1], data[idx2 + 2]);\r\n        v3.set(data[idx3], data[idx3 + 1], data[idx3 + 2]);\r\n\r\n        v4.copy(v1);\r\n        v5.copy(v2);\r\n        v6.copy(v3);\r\n\r\n        v4.sub(v0);\r\n        v5.sub(v0);\r\n        v6.sub(v0);\r\n\r\n        n1.crossVectors(v4, v5);\r\n        n2.crossVectors(v5, v6);\r\n\r\n        //Check if convex\r\n        if (n1.dot(n2) > 0) {\r\n            geometry.indices[counters.index_count] = counters.vertex_count;\r\n            geometry.indices[counters.index_count + 1] = counters.vertex_count + 1;\r\n            geometry.indices[counters.index_count + 2] = counters.vertex_count + 3;\r\n\r\n            geometry.indices[counters.index_count + 3] = counters.vertex_count + 3;\r\n            geometry.indices[counters.index_count + 4] = counters.vertex_count + 1;\r\n            geometry.indices[counters.index_count + 5] = counters.vertex_count + 2;\r\n\r\n            counters.index_count += 6;\r\n\r\n            geometry.positions[counters.vertex_length     ] = v0.x;\r\n            geometry.positions[counters.vertex_length +  1] = v0.y;\r\n            geometry.positions[counters.vertex_length +  2] = v0.z;\r\n            geometry.positions[counters.vertex_length +  3] = v1.x;\r\n            geometry.positions[counters.vertex_length +  4] = v1.y;\r\n            geometry.positions[counters.vertex_length +  5] = v1.z;\r\n            geometry.positions[counters.vertex_length +  6] = v2.x;\r\n            geometry.positions[counters.vertex_length +  7] = v2.y;\r\n            geometry.positions[counters.vertex_length +  8] = v2.z;\r\n            geometry.positions[counters.vertex_length +  9] = v3.x;\r\n            geometry.positions[counters.vertex_length + 10] = v3.y;\r\n            geometry.positions[counters.vertex_length + 11] = v3.z;\r\n\r\n            counters.vertex_count += 4;\r\n            counters.vertex_length += 12;\r\n\r\n            if (type === TrimbimGeometryType.BRepWithUV) {\r\n                geometry.uvs[counters.uv_length    ] = data[idx0 + 3];\r\n                geometry.uvs[counters.uv_length + 1] = data[idx0 + 4];\r\n                geometry.uvs[counters.uv_length + 2] = data[idx1 + 3];\r\n                geometry.uvs[counters.uv_length + 3] = data[idx1 + 4];\r\n                geometry.uvs[counters.uv_length + 4] = data[idx2 + 3];\r\n                geometry.uvs[counters.uv_length + 5] = data[idx2 + 4];\r\n                geometry.uvs[counters.uv_length + 6] = data[idx3 + 3];\r\n                geometry.uvs[counters.uv_length + 7] = data[idx3 + 4];\r\n                counters.uv_length += 8;\r\n            } else if (type === TrimbimGeometryType.BRepWithNormals) {\r\n                geometry.normals[counters.normal_length     ] = data[idx0 + 3] * normalLength;\r\n                geometry.normals[counters.normal_length +  1] = data[idx0 + 4] * normalLength;\r\n                geometry.normals[counters.normal_length +  2] = data[idx0 + 5] * normalLength;\r\n                geometry.normals[counters.normal_length +  3] = data[idx1 + 3] * normalLength;\r\n                geometry.normals[counters.normal_length +  4] = data[idx1 + 4] * normalLength;\r\n                geometry.normals[counters.normal_length +  5] = data[idx1 + 5] * normalLength;\r\n                geometry.normals[counters.normal_length +  6] = data[idx2 + 3] * normalLength;\r\n                geometry.normals[counters.normal_length +  7] = data[idx2 + 4] * normalLength;\r\n                geometry.normals[counters.normal_length +  8] = data[idx2 + 5] * normalLength;\r\n                geometry.normals[counters.normal_length +  9] = data[idx3 + 3] * normalLength;\r\n                geometry.normals[counters.normal_length + 10] = data[idx3 + 4] * normalLength;\r\n                geometry.normals[counters.normal_length + 11] = data[idx3 + 5] * normalLength;\r\n                counters.normal_length += 12;\r\n            }\r\n        } else {\r\n            buildPoly(vertexIndices, data, i, type, geometry, undefined, counters);\r\n        }\r\n    };\r\n})();\r\n\r\nconst buildTriangle = (() => {\r\n    return (\r\n        vertexIndices: Uint16Array,\r\n        data: Float32Array,\r\n        type: TrimbimGeometryType,\r\n        geometry: GeometryData,\r\n        counters: ICounters\r\n    ) => {\r\n        let idx0 = vertexIndices[0];\r\n        let idx1 = vertexIndices[1];\r\n        let idx2 = vertexIndices[2];\r\n\r\n        if (type === TrimbimGeometryType.BRep) {\r\n            idx0 *= 3;\r\n            idx1 *= 3;\r\n            idx2 *= 3;\r\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\r\n            idx0 *= 5;\r\n            idx1 *= 5;\r\n            idx2 *= 5;\r\n\r\n            geometry.uvs[counters.uv_length    ] = data[idx0 + 3];\r\n            geometry.uvs[counters.uv_length + 1] = data[idx0 + 4];\r\n            geometry.uvs[counters.uv_length + 2] = data[idx1 + 3];\r\n            geometry.uvs[counters.uv_length + 3] = data[idx1 + 4];\r\n            geometry.uvs[counters.uv_length + 4] = data[idx2 + 3];\r\n            geometry.uvs[counters.uv_length + 5] = data[idx2 + 4];\r\n\r\n            counters.uv_length += 6;\r\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\r\n            idx0 *= 6;\r\n            idx1 *= 6;\r\n            idx2 *= 6;\r\n\r\n            geometry.normals.set(\r\n                [\r\n                    geometry.normals[counters.normal_length    ] = data[idx0 + 3] * normalLength,\r\n                    geometry.normals[counters.normal_length + 1] = data[idx0 + 4] * normalLength,\r\n                    geometry.normals[counters.normal_length + 2] = data[idx0 + 5] * normalLength,\r\n                    geometry.normals[counters.normal_length + 3] = data[idx1 + 3] * normalLength,\r\n                    geometry.normals[counters.normal_length + 4] = data[idx1 + 4] * normalLength,\r\n                    geometry.normals[counters.normal_length + 5] = data[idx1 + 5] * normalLength,\r\n                    geometry.normals[counters.normal_length + 6] = data[idx2 + 3] * normalLength,\r\n                    geometry.normals[counters.normal_length + 7] = data[idx2 + 4] * normalLength,\r\n                    geometry.normals[counters.normal_length + 8] = data[idx2 + 5] * normalLength\r\n                ],\r\n                counters.normal_length\r\n            );\r\n\r\n            counters.normal_length += 9;\r\n        }\r\n\r\n        geometry.indices[counters.index_count] = counters.vertex_count;\r\n        geometry.indices[counters.index_count + 1] = counters.vertex_count + 1;\r\n        geometry.indices[counters.index_count + 2] = counters.vertex_count + 2;\r\n\r\n        counters.index_count += 3;\r\n\r\n        geometry.positions[counters.vertex_length] = data[idx0 + 0];\r\n        geometry.positions[counters.vertex_length + 1] = data[idx0 + 1];\r\n        geometry.positions[counters.vertex_length + 2] = data[idx0 + 2];\r\n\r\n        geometry.positions[counters.vertex_length + 3] = data[idx1 + 0];\r\n        geometry.positions[counters.vertex_length + 4] = data[idx1 + 1];\r\n        geometry.positions[counters.vertex_length + 5] = data[idx1 + 2];\r\n\r\n        geometry.positions[counters.vertex_length + 6] = data[idx2 + 0];\r\n        geometry.positions[counters.vertex_length + 7] = data[idx2 + 1];\r\n        geometry.positions[counters.vertex_length + 8] = data[idx2 + 2];\r\n\r\n        counters.vertex_count += 3;\r\n        counters.vertex_length += 9;\r\n    };\r\n})();\r\n\r\nconst buildPoly = (() => {\r\n    const n1 = new Vector3();\r\n\r\n    return (\r\n        vertexIndices: Uint16Array,\r\n        data: Float32Array,\r\n        i: number,\r\n        type: TrimbimGeometryType,\r\n        geometry: GeometryData,\r\n        holes: Map<number, BRepHole>,\r\n        counters: ICounters\r\n    ) => {\r\n        const outer_length = vertexIndices.length;\r\n        const offset = counters.vertex_length;\r\n\r\n        if (type === TrimbimGeometryType.BRep) {\r\n            for (let j = 0; j < outer_length; j++) {\r\n                const index = vertexIndices[j] * 3;\r\n\r\n                geometry.positions[counters.vertex_length] = data[index];\r\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\r\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\r\n\r\n                counters.vertex_count += 1;\r\n                counters.vertex_length += 3;\r\n            }\r\n        } else if (type === TrimbimGeometryType.BRepWithUV) {\r\n            for (let j = 0; j < outer_length; j++) {\r\n                const index = vertexIndices[j] * 5;\r\n\r\n                geometry.positions[counters.vertex_length] = data[index];\r\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\r\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\r\n\r\n                counters.vertex_count += 1;\r\n                counters.vertex_length += 3;\r\n\r\n                geometry.uvs[counters.uv_length] = data[index + 3];\r\n                geometry.uvs[counters.uv_length + 1] = data[index + 4];\r\n\r\n                counters.uv_length += 2;\r\n            }\r\n        } else if (type === TrimbimGeometryType.BRepWithNormals) {\r\n            for (let j = 0; j < outer_length; j++) {\r\n                const index = vertexIndices[j] * 6;\r\n\r\n                geometry.positions[counters.vertex_length] = data[index];\r\n                geometry.positions[counters.vertex_length + 1] = data[index + 1];\r\n                geometry.positions[counters.vertex_length + 2] = data[index + 2];\r\n\r\n                counters.vertex_count += 1;\r\n                counters.vertex_length += 3;\r\n\r\n                geometry.normals[counters.normal_length] = data[index + 3] * normalLength;\r\n                geometry.normals[counters.normal_length + 1] = data[index + 4] * normalLength;\r\n                geometry.normals[counters.normal_length + 2] = data[index + 5] * normalLength;\r\n\r\n                counters.normal_length += 3;\r\n            }\r\n        }\r\n\r\n        let holes_idx: number[];\r\n\r\n        if (holes && holes.has(i)) {\r\n            const hole = holes.get(i);\r\n\r\n            holes_idx = hole.indices.map(x => x + outer_length);\r\n            geometry.positions.set(hole.vertices, counters.vertex_length);\r\n            counters.vertex_length += hole.vertices.length;\r\n            counters.vertex_count += hole.vertices.length / 3;\r\n\r\n            if (type === TrimbimGeometryType.BRepWithNormals) {\r\n                geometry.normals.set(hole.normals, counters.normal_length);\r\n                counters.normal_length += hole.vertices.length;\r\n            } else if (type === TrimbimGeometryType.BRepWithUV) {\r\n                geometry.uvs.set(hole.uvs, counters.uv_length);\r\n                counters.uv_length += (hole.vertices.length / 3) * 2;\r\n            }\r\n        }\r\n\r\n        getNormal(geometry.positions, n1, (counters.vertex_length - offset) / 3, offset);\r\n        const twoD = projectPoints(geometry.positions, n1, counters.vertex_length - offset, offset);\r\n        const indices = Earcut.triangulate(twoD, holes_idx, 2);\r\n\r\n        for (let j = 0, length = indices.length; j < length; j++) {\r\n            indices[j] = indices[j] + offset / 3;\r\n        }\r\n\r\n        geometry.indices.set(indices, counters.index_count);\r\n\r\n        counters.index_count += indices.length;\r\n    };\r\n})();\r\n\r\nconst getNormal = (points: Float32Array | Float64Array, target: Vector3, count: number, offset = 0) => {\r\n    target.set(0, 0, 0);\r\n    let j = 0;\r\n\r\n    for (let i = 0, length = count; i < length; i++) {\r\n        j = (i + 1) % count;\r\n\r\n        target.x +=\r\n            (points[offset + i * 3 + 1] - points[offset + j * 3 + 1]) *\r\n            (points[offset + i * 3 + 2] + points[offset + j * 3 + 2]);\r\n        target.y +=\r\n            (points[offset + i * 3 + 2] - points[offset + j * 3 + 2]) *\r\n            (points[offset + i * 3    ] + points[offset + j * 3    ]);\r\n        target.z +=\r\n            (points[offset + i * 3    ] - points[offset + j * 3    ]) *\r\n            (points[offset + i * 3 + 1] + points[offset + j * 3 + 1]);\r\n    }\r\n\r\n    target.normalize();\r\n};\r\n\r\nconst getNormalFromTrimBIM = (\r\n    target: Vector3,\r\n    data: Float32Array,\r\n    vertexIndices: Uint16Array,\r\n    indexOffset: number\r\n) => {\r\n    target.set(0, 0, 0);\r\n\r\n    for (let i = 0, length = vertexIndices.length; i < length; i++) {\r\n        const j = (i + 1) % length;\r\n        const iIndex = vertexIndices[i] * indexOffset;\r\n        const jIndex = vertexIndices[j] * indexOffset;\r\n\r\n        target.x += (data[iIndex + 1] - data[jIndex + 1]) * (data[iIndex + 2] + data[jIndex + 2]);\r\n        target.y += (data[iIndex + 2] - data[jIndex + 2]) * (data[iIndex    ] + data[jIndex    ]);\r\n        target.z += (data[iIndex    ] - data[jIndex    ]) * (data[iIndex + 1] + data[jIndex + 1]);\r\n    }\r\n\r\n    target.normalize();\r\n};\r\n\r\n/*\r\n * Convert 3d points to 2d\r\n */\r\nconst projectPoints = (() => {\r\n    const locx = new Vector3();\r\n    const locy = new Vector3();\r\n\r\n    const tmp0 = new Vector3();\r\n    const tmp1 = new Vector3();\r\n\r\n    const v0 = new Vector3();\r\n    const v1 = new Vector3();\r\n\r\n    const MAX_SIZE = 1 << 16;\r\n\r\n    // Defining one buffer to be reused by multiple Float32Array views, to avoid allocating memory\r\n    // on each function call.\r\n    // The parameter below should correspond to the theoretical maximum size of this buffer:\r\n    const coordsBuffer = new ArrayBuffer(\r\n        ~~(                 // floor\r\n            MAX_SIZE *      // vertexIndices is a ushort in the TrimBIM schema; count should never exceed this value\r\n            4 *             // bytes per Float32 element\r\n            2               // coordinates in the plane\r\n            / 3             // coordinates in 3D space\r\n        )\r\n    );\r\n\r\n    return (points: Float32Array | Float64Array, normal: Vector3, count: number, offset = 0) => {\r\n        const planeCoords = new Float32Array(coordsBuffer, 0, count * 2 / 3);\r\n\r\n        v0.set(points[offset    ], points[offset + 1], points[offset + 2]);\r\n        v1.set(points[offset + 3], points[offset + 4], points[offset + 5]);\r\n\r\n        locx.subVectors(v0, v1);\r\n        locy.crossVectors(normal, locx);\r\n\r\n        locx.normalize();\r\n        locy.normalize();\r\n\r\n        for (let i = 0, l = count / 3; i < l; i++) {\r\n            tmp0.set(\r\n                points[offset + i * 3],\r\n                points[offset + i * 3 + 1],\r\n                points[offset + i * 3 + 2]\r\n            );\r\n            tmp1.set(\r\n                points[offset + i * 3],\r\n                points[offset + i * 3 + 1],\r\n                points[offset + i * 3 + 2]\r\n            );\r\n\r\n            planeCoords[i * 2] = tmp0.sub(v0).dot(locx);\r\n            planeCoords[i * 2 + 1] = tmp1.sub(v0).dot(locy);\r\n        }\r\n\r\n        return planeCoords;\r\n    };\r\n})();\r\n","import { Trimble } from \"../TrimBim_generated\";\r\nimport { Hit, HitPoint } from \"./HitPoint\";\r\nimport { Vector3, Matrix4, Ray } from \"./ThreeMath\";\r\n\r\nfunction getArcSectionsCount(arc: Trimble.Technology.TrimBim.Fbs.Arc3f, sectionsPerRadianForUnitRadius: number, min: number): number {\r\n    // amount of arc sections depends on arc radius, so small arcs are approximated, larger one are more precise\r\n    // sectionsPerRadianForUnitRadius is used by line graphic geometry, as it can afford to have more vertices\r\n    const count = Math.round(arc.angle() * arc.radius() * sectionsPerRadianForUnitRadius);\r\n    return Math.min(Math.max(count, min), 30);\r\n}\r\n\r\nexport function get3DArcSectionsCount(arc: Trimble.Technology.TrimBim.Fbs.Arc3f): number {\r\n   return getArcSectionsCount(arc, 5, 4);\r\n}\r\n\r\nexport function get2DArcSectionsCount(arc: Trimble.Technology.TrimBim.Fbs.Arc3f): number {\r\n    // higher min value required for better representation of 2D autocad dwg markups\r\n    return getArcSectionsCount(arc, 10, 8);\r\n}\r\n\r\nexport const forEachSegment = (() => {\r\n    const start: Vector3 = new Vector3();\r\n    const end: Vector3 = new Vector3();\r\n    const tmp = new Trimble.Technology.TrimBim.Fbs.Vec3f();\r\n    const segment = new Trimble.Technology.TrimBim.Fbs.Line3f();\r\n\r\n    return (\r\n        lines: Trimble.Technology.TrimBim.Fbs.GraphicsContainer | Trimble.Technology.TrimBim.Fbs.Directrix,\r\n        f: (start: Vector3, end: Vector3) => void\r\n    ): void => {\r\n        const lineSegmentsLength = lines.lineSegmentsLength();\r\n        for (let i = 0; i < lineSegmentsLength; i++) {\r\n            lines.lineSegments(i, segment);\r\n            segment.start(tmp);\r\n            start.set(tmp.x(), tmp.y(), tmp.z());\r\n            segment.end(tmp);\r\n            end.set(tmp.x(), tmp.y(), tmp.z());\r\n            f(start, end);\r\n        }\r\n    };\r\n})();\r\n\r\nexport const forEachArc = (() => {\r\n    const arcStart = new Vector3();\r\n    const arcEnd = new Vector3();\r\n    const arcMids: Vector3[] = [];\r\n    const arcCenter = new Vector3();\r\n    const arcAxis = new Vector3();\r\n    const arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\r\n\r\n    return (\r\n        directrix: Trimble.Technology.TrimBim.Fbs.Directrix | Trimble.Technology.TrimBim.Fbs.GraphicsContainer,\r\n        f: (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => void,\r\n        getArcSectionsCount: (arc: Trimble.Technology.TrimBim.Fbs.Arc3f) => number\r\n    ): void => {\r\n        const arcsLength = directrix.arcsLength();\r\n        for (let i = 0; i < arcsLength; i++) {\r\n            directrix.arcs(i, arc);\r\n            const arcCrossSectionCount = getArcSectionsCount(arc);\r\n\r\n            arcCenter.set(arc.center().x(), arc.center().y(), arc.center().z());\r\n            arcAxis.set(arc.axis().x(), arc.axis().y(), arc.axis().z());\r\n            arcStart.set(arc.refDirection().x(), arc.refDirection().y(), arc.refDirection().z());\r\n\r\n            arcMids.length = arcCrossSectionCount - 2;\r\n            for (let j = 0; j < arcMids.length; j++) {\r\n                arcMids[j] = new Vector3();\r\n                arcMids[j].copy(arcStart);\r\n                arcMids[j].applyAxisAngle(arcAxis, arc.angle() * (j + 1) / (arcCrossSectionCount - 1));\r\n                arcMids[j].multiplyScalar(arc.radius());\r\n                arcMids[j].add(arcCenter);\r\n            }\r\n\r\n            arcEnd.copy(arcStart);\r\n            arcEnd.applyAxisAngle(arcAxis, arc.angle());\r\n            arcEnd.multiplyScalar(arc.radius());\r\n            arcEnd.add(arcCenter);\r\n\r\n            arcStart.multiplyScalar(arc.radius());\r\n            arcStart.add(arcCenter);\r\n\r\n            f(arcStart, arcMids, arcEnd);\r\n        }\r\n    };\r\n})();\r\n\r\nexport const forEachPolyline = (() => {\r\n    const polyPoint = new Vector3();\r\n    const nextPolyPoint = new Vector3();\r\n    const polyline = new Trimble.Technology.TrimBim.Fbs.Polyline3f();\r\n\r\n    return (\r\n        directrix: Trimble.Technology.TrimBim.Fbs.Directrix,\r\n        f: (polyPoint: Vector3, nextPolyPoint: Vector3) => void\r\n    ): void => {\r\n        const polylinesLength = directrix.polyLinesLength();\r\n        for (let i = 0; i < polylinesLength; i++) {\r\n            directrix.polyLines(i, polyline);\r\n            for (let j = 0, innerLength = polyline.pointsLength() - 1; j < innerLength; j++) {\r\n                polyPoint.set(polyline.points(j).x(), polyline.points(j).y(), polyline.points(j).z());\r\n                nextPolyPoint.set(polyline.points(j + 1).x(), polyline.points(j + 1).y(), polyline.points(j + 1).z());\r\n                f(polyPoint, nextPolyPoint);\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\nexport const pickOnSegment = (() => {\r\n    const intersections = <Hit[]>[];\r\n\r\n    return (\r\n        lines: Trimble.Technology.TrimBim.Fbs.GraphicsContainer | Trimble.Technology.TrimBim.Fbs.Directrix,\r\n        ray: Ray, precision = 1\r\n    ): Hit[] => {\r\n        intersections.length = 0;\r\n\r\n        forEachSegment(lines, (start: Vector3, end: Vector3) => {\r\n            intersectLine(intersections, start, end, ray, precision);\r\n        });\r\n\r\n        return intersections;\r\n    };\r\n})();\r\n\r\nexport const pickOnArc = (() => {\r\n    const intersections = <Hit[]>[];\r\n    return (\r\n        directrix: Trimble.Technology.TrimBim.Fbs.Directrix | Trimble.Technology.TrimBim.Fbs.GraphicsContainer,\r\n        ray: Ray,\r\n        precision = 1,\r\n        getArcSectionsCount: (arc: Trimble.Technology.TrimBim.Fbs.Arc3f) => number\r\n    ): Hit[] => {\r\n        intersections.length = 0;\r\n        forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\r\n            intersectLine(intersections, arcStart, arcMids[0], ray, precision);\r\n            arcMids.forEach((mid, index) => {\r\n               if(index > 0) intersectLine(intersections,  arcMids[index - 1], mid, ray, precision);\r\n            });\r\n            intersectLine(intersections, arcMids[arcMids.length - 1], arcEnd, ray, precision);\r\n        }, getArcSectionsCount);\r\n        return intersections;\r\n    };\r\n})();\r\n\r\nexport const pickOnPolyline = (() => {\r\n    const intersections = <Hit[]>[];\r\n\r\n    return (\r\n        directrix: Trimble.Technology.TrimBim.Fbs.Directrix,\r\n        ray: Ray,\r\n        precision = 1\r\n    ): Hit[] => {\r\n        intersections.length = 0;\r\n        forEachPolyline(directrix, (polyPoint: Vector3, nextPolyPoint: Vector3) => {\r\n            intersectLine(intersections, polyPoint, nextPolyPoint, ray, precision);\r\n        });\r\n        return intersections;\r\n    };\r\n})();\r\n\r\nexport const pickOnLineString = (() => {\r\n    const intersections = <HitPoint[]>[];\r\n\r\n    const start = new Vector3();\r\n    const end = new Vector3();\r\n\r\n    return (lineStringVertices: Float32Array | Float64Array, ray: Ray): HitPoint[] => {\r\n        if (lineStringVertices) {\r\n            intersections.length = 0;\r\n\r\n            const vertexCount = lineStringVertices.length / 3;\r\n\r\n            for (let i = 1; i < vertexCount; i++) {\r\n                end.set(\r\n                    lineStringVertices[i * 3],\r\n                    lineStringVertices[i * 3 + 1],\r\n                    lineStringVertices[i * 3 + 2]\r\n                );\r\n                start.set(\r\n                    lineStringVertices[(i - 1) * 3],\r\n                    lineStringVertices[(i - 1) * 3 + 1],\r\n                    lineStringVertices[(i - 1) * 3 + 2]\r\n                );\r\n                intersectLine(intersections, start, end, ray, Infinity);\r\n            }\r\n\r\n            return intersections;\r\n        }\r\n    };\r\n})();\r\n\r\nexport const intersectLine = (() => {\r\n    const interRay: Vector3 = new Vector3();\r\n    const interSegment: Vector3 = new Vector3();\r\n\r\n    return (intersections: HitPoint[], start: Vector3, end: Vector3, ray: Ray, precision: number): number => {\r\n        const distSq = ray.distanceSqToSegment(start, end, interRay, interSegment);\r\n        addHit(intersections, start, end, ray, precision, distSq, interSegment);\r\n        return distSq;\r\n    };\r\n})();\r\n\r\nconst addHit = (intersections: HitPoint[], start: Vector3, end: Vector3, ray: Ray, precision: number, distSq: number, point: Vector3): HitPoint => {\r\n    if (distSq > precision)\r\n        return;\r\n    intersections.push({\r\n        point: point.clone(),\r\n        snapLineStart: start.clone(),\r\n        snapLineEnd: end.clone()\r\n    });\r\n};\r\n\r\n/**\r\n * Intersects the given ray with a cylinder with its axis from start to end, with the given radius.\r\n */\r\nexport const intersectCylinder = (() => {\r\n    const zAxis = new Vector3();\r\n    const yAxis = new Vector3();\r\n    const xAxis = new Vector3();\r\n    const m = new Matrix4();\r\n    const mInv = new Matrix4();\r\n    const rayTr = new Ray();\r\n    const point = new Vector3();\r\n    const normal = new Vector3();\r\n    const scaleFactor = new Vector3();\r\n    const points: HitPoint[] = [];\r\n\r\n    /**\r\n     * Finds an (arbitrary) unit vector perpendicular to source, and sets it to target.\r\n     */\r\n    const getPerpendicular = (() => {\r\n        const zz = new Vector3(0, 0, 1);\r\n        const xx = new Vector3(1, 0, 0);\r\n        return (source: Vector3, target: Vector3) => {\r\n            if (Math.abs(source.dot(zz)) > 0.9)\r\n                target.crossVectors(source, xx).normalize();\r\n            else target.crossVectors(source, zz).normalize();\r\n        };\r\n    })();\r\n\r\n    const makeHit = (t: number, length: number, radius: number) => {\r\n        point.copy(rayTr.direction).normalize().multiplyScalar(t).add(rayTr.origin);\r\n        if (point.z >= 0 && point.z <= length / radius) {\r\n            normal.set(point.x, point.y, 0).applyMatrix4(mInv).normalize();\r\n            point.applyMatrix4(m);\r\n            points.push({\r\n                point: point.clone(),\r\n                normal: normal.clone(),\r\n            } as HitPoint);\r\n        }\r\n    };\r\n\r\n    return (start: Vector3, end: Vector3, ray: Ray, radius: number): HitPoint[] => {\r\n        const length = end.distanceTo(start);\r\n        zAxis.copy(end).sub(start).normalize();\r\n        getPerpendicular(zAxis, xAxis);\r\n        yAxis.crossVectors(zAxis, xAxis);\r\n        m.identity().makeBasis(xAxis, yAxis, zAxis);\r\n        m.setPosition(start);\r\n        m.scale(scaleFactor.set(radius, radius, radius));\r\n        mInv.getInverse(m);\r\n        rayTr.copy(ray).applyMatrix4(mInv);\r\n\r\n        const a = rayTr.direction.x * rayTr.direction.x + rayTr.direction.y * rayTr.direction.y;\r\n        const b = 2 * rayTr.origin.x * rayTr.direction.x + 2 * rayTr.origin.y * rayTr.direction.y;\r\n        const c = rayTr.origin.x * rayTr.origin.x + rayTr.origin.y * rayTr.origin.y - 1;\r\n        if (4 * a * c > b * b) return [];                // No intersection\r\n\r\n        const t1 = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);\r\n        const t2 = (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a);\r\n\r\n        points.length = 0;\r\n        mInv.transpose();\r\n        makeHit(t1, length, radius);\r\n        makeHit(t2, length, radius);\r\n        return points;\r\n    };\r\n})();\r\n","import { Trimble } from \"../../TrimBim_generated\";\r\nimport { GeometryData } from \"./GeometryBuilder\";\r\nimport { Vector3 } from \"../ThreeMath\";\r\n\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { get2DArcSectionsCount } from \"../Pickers\";\r\n\r\nexport class LinePrimitiveBuilder {\r\n    public static buildSegments(\r\n        lines: Fbs.GraphicsContainer | Fbs.Directrix,\r\n        buffer: GeometryData\r\n    ): GeometryData {\r\n        const lineSegmentsLength = lines.lineSegmentsLength();\r\n\r\n        for (let i = 0; i < lineSegmentsLength; i++) {\r\n            const segment = lines.lineSegments(i);\r\n\r\n            LinePrimitiveBuilder.buildLine(segment, buffer);\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n    public static buildLine(segment: Fbs.Line3d | Fbs.Line3f, buffer: GeometryData): void {\r\n        const start = segment.start();\r\n        const end = segment.end();\r\n\r\n        buffer.positions[buffer.positionPointer] = start.x();\r\n        buffer.positions[buffer.positionPointer + 1] = start.y();\r\n        buffer.positions[buffer.positionPointer + 2] = start.z();\r\n\r\n        buffer.positions[buffer.positionPointer + 3] = end.x();\r\n        buffer.positions[buffer.positionPointer + 4] = end.y();\r\n        buffer.positions[buffer.positionPointer + 5] = end.z();\r\n\r\n        buffer.positionPointer += 6;\r\n    }\r\n\r\n    public static getTotalArcSectionsCount(lines: Fbs.GraphicsContainer | Fbs.Directrix): number {\r\n        let crossSectionCount = 0;\r\n        const arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\r\n        for (let i = 0; i < lines.arcsLength(); i++) {\r\n            lines.arcs(i, arc);\r\n            crossSectionCount += get2DArcSectionsCount(arc);\r\n        }\r\n        return crossSectionCount;\r\n    }\r\n\r\n    public static buildArcs(lines: Fbs.GraphicsContainer | Fbs.Directrix, buffer: GeometryData): GeometryData {\r\n        const arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\r\n        let arcCrossSections: Vector3[] = [];\r\n\r\n        for (let i = 0, l = lines.arcsLength(); i < l; i++) {\r\n            lines.arcs(i, arc);\r\n            const crossSectionCount = get2DArcSectionsCount(arc);\r\n            arcCrossSections = createCrossSections(arc, crossSectionCount);\r\n\r\n            buffer.positions[buffer.positionPointer] = arcCrossSections[0].x;\r\n            buffer.positions[buffer.positionPointer + 1] = arcCrossSections[0].y;\r\n            buffer.positions[buffer.positionPointer + 2] = arcCrossSections[0].z;\r\n            buffer.positionPointer += 3;\r\n\r\n            for (let j = 1; j < crossSectionCount - 1; j++) {\r\n                buffer.positions[buffer.positionPointer] = arcCrossSections[j].x;\r\n                buffer.positions[buffer.positionPointer + 1] = arcCrossSections[j].y;\r\n                buffer.positions[buffer.positionPointer + 2] = arcCrossSections[j].z;\r\n                buffer.positions[buffer.positionPointer + 3] = arcCrossSections[j].x;\r\n                buffer.positions[buffer.positionPointer + 4] = arcCrossSections[j].y;\r\n                buffer.positions[buffer.positionPointer + 5] = arcCrossSections[j].z;\r\n                buffer.positionPointer += 6;\r\n            }\r\n\r\n            buffer.positions[buffer.positionPointer + 0] = arcCrossSections[crossSectionCount - 1].x;\r\n            buffer.positions[buffer.positionPointer + 1] = arcCrossSections[crossSectionCount - 1].y;\r\n            buffer.positions[buffer.positionPointer + 2] = arcCrossSections[crossSectionCount - 1].z;\r\n            buffer.positionPointer += 3;\r\n        }\r\n        return buffer;\r\n    }\r\n}\r\n\r\nexport function createCrossSections(arc: Fbs.Arc3f, arcCrossSectionCount: number): Vector3[] {\r\n    const arcCenter = new Vector3();\r\n    const arcAxis = new Vector3();\r\n    const arcStart = new Vector3();\r\n    const arcEnd = new Vector3();\r\n    const arcMids: Vector3[] = [];\r\n    const arcCrossSections: Vector3[] = [];\r\n\r\n    arcCenter.set(arc.center().x(), arc.center().y(), arc.center().z());\r\n    arcAxis.set(arc.axis().x(), arc.axis().y(), arc.axis().z());\r\n    arcStart.set(arc.refDirection().x(), arc.refDirection().y(), arc.refDirection().z());\r\n\r\n    for (let j = 0; j < arcCrossSectionCount - 2; j++) {\r\n        arcMids[j] = new Vector3();\r\n        arcMids[j].copy(arcStart);\r\n        arcMids[j].applyAxisAngle(arcAxis, arc.angle() * (j + 1) / (arcCrossSectionCount - 1));\r\n        arcMids[j].multiplyScalar(arc.radius());\r\n        arcMids[j].add(arcCenter);\r\n\r\n    }\r\n\r\n    arcEnd.copy(arcStart);\r\n    arcEnd.applyAxisAngle(arcAxis, arc.angle());\r\n    arcEnd.multiplyScalar(arc.radius());\r\n    arcEnd.add(arcCenter);\r\n\r\n    arcStart.multiplyScalar(arc.radius());\r\n    arcStart.add(arcCenter);\r\n\r\n    arcCrossSections.push(arcStart);\r\n    arcCrossSections.push(...arcMids);\r\n    arcCrossSections.push(arcEnd);\r\n\r\n    return arcCrossSections;\r\n}\r\n\r\n","import { GeometryBuilder, GeometryData } from \"./GeometryBuilder\";\r\nimport { LinePrimitiveBuilder } from \"./LinePrimitiveBuilder\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport {Frustum, Ray, Vector3} from \"../ThreeMath\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { TrimbimGeometryType } from \"../../common\";\r\nimport {\r\n    pickOnSegment,\r\n    pickOnArc,\r\n    get2DArcSectionsCount,\r\n    forEachSegment,\r\n    forEachArc,\r\n    get3DArcSectionsCount\r\n} from \"../Pickers\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class GraphicsGeometryBuilder extends GeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.GraphicsContainer;\r\n    readonly snapGeometryType = GeometryType.LINE;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n\r\n        if (!geometry.positions && buildIfEmpty) {\r\n            const line = this.geometry.graphicsContainers(geometryIndex);\r\n            this.build(line, geometry);\r\n        }\r\n\r\n        return [geometry];\r\n    }\r\n\r\n    public prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.graphicsContainersLength(); i < l; i++) {\r\n            const line = this.geometry.graphicsContainers(i);\r\n            this.buffers.push(this.calculateBufferSizes(line));\r\n        }\r\n    }\r\n\r\n    calculateBufferSizes(lines: Fbs.GraphicsContainer): GeometryData {\r\n        const lineSegmentsLength = lines.lineSegmentsLength();\r\n        const arcsLength = lines.arcsLength();\r\n        const totalLength = lineSegmentsLength * 6 + (LinePrimitiveBuilder.getTotalArcSectionsCount(lines) - 2 * arcsLength) * 6 + 6 * arcsLength;\r\n\r\n        return {\r\n            objectType: ObjectType.LINE,\r\n            indicesLength: 0,\r\n            positionsLength: totalLength,\r\n            normalsLength: 0,\r\n            uvsLength: 0,\r\n            pointSizesLength: 0,\r\n            indexPointer: 0,\r\n            positionPointer: 0\r\n        };\r\n    }\r\n\r\n    build(\r\n        lines: Fbs.GraphicsContainer,\r\n        buffer: GeometryData\r\n    ): void {\r\n        buffer.positions = new Float32Array(buffer.positionsLength);\r\n        buffer.normals = new Int16Array(buffer.normalsLength);\r\n\r\n        LinePrimitiveBuilder.buildSegments(lines, buffer);\r\n        LinePrimitiveBuilder.buildArcs(lines, buffer);\r\n    }\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickLine(geometryIndex, ray, frustum);\r\n    }\r\n\r\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\r\n        return;\r\n    }\r\n\r\n    pickLine = (() => {\r\n        const hits: HitPoint[] = [];\r\n        const graphics = new Fbs.GraphicsContainer();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.graphicsContainers(geometryIndex, graphics);\r\n\r\n            hits.push(...pickOnSegment(graphics, ray, Infinity));\r\n            hits.push(...pickOnArc(graphics, ray, Infinity, get2DArcSectionsCount));\r\n\r\n            return hits.filter(h => frustum.containsPoint(h.point));\r\n        };\r\n    })();\r\n\r\n    pickPoint = (() => {\r\n        const hits: HitPoint[] = [];\r\n        const graphics = new Fbs.GraphicsContainer();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.graphicsContainers(geometryIndex, graphics);\r\n\r\n            forEachSegment(graphics, (start: Vector3, end: Vector3) => {\r\n                hits.push({ point: start.clone() } as HitPoint);\r\n                hits.push({ point: end.clone() } as HitPoint);\r\n            });\r\n\r\n            forEachArc(graphics, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\r\n                hits.push({ point: arcStart.clone() } as HitPoint);\r\n                hits.push({ point: arcEnd.clone() } as HitPoint);\r\n            }, get3DArcSectionsCount);\r\n\r\n            return hits.filter(h => frustum.containsPoint(h.point));\r\n        };\r\n    })();\r\n}\r\n","import { GeometryBuilder, GeometryData, normalLength } from \"./GeometryBuilder\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport {\r\n    intersectCylinder,\r\n    pickOnArc,\r\n    pickOnPolyline,\r\n    pickOnSegment,\r\n    forEachSegment,\r\n    forEachArc,\r\n    forEachPolyline,\r\n    get3DArcSectionsCount\r\n} from \"../Pickers\";\r\nimport { Frustum, Quaternion, Ray, Vector3, Vector3Const } from \"../ThreeMath\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport Directrix = Trimble.Technology.TrimBim.Fbs.Directrix;\r\nimport { TrimbimGeometryType } from \"../../common\";\r\nimport { createCrossSections } from \"./LinePrimitiveBuilder\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\ninterface InterConnectionDetail {\r\n    position: Vector3;\r\n    type: Fbs.SegmentType;\r\n    isStartSegment?: boolean;\r\n    isEndSegment?: boolean;\r\n}\r\n\r\nexport class SweptDiskSolidGeometryBuilder extends GeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.SweptDiskSolid;\r\n    readonly snapGeometryType = GeometryType.MESH;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    private getCrossSectionsPointCount(radius: number, amplifier: number = 200): number {\r\n        // Cross sections point depends on cross section radius\r\n        const count = Math.round(radius * amplifier);\r\n        return Math.min(Math.max(count, 5), 30);\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n\r\n        if (!geometry.positions && buildIfEmpty) {\r\n            const line = this.geometry.sweptDiskSolids(geometryIndex);\r\n            this.build(line, geometry);\r\n        }\r\n\r\n        return [geometry];\r\n    }\r\n\r\n    public prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.sweptDiskSolidsLength(); i < l; i++) {\r\n            const line = this.geometry.sweptDiskSolids(i);\r\n            this.buffers.push(this.calculateBufferSizes(line));\r\n        }\r\n    }\r\n\r\n    private directrix = new Directrix();\r\n    calculateBufferSizes(sds: Fbs.SweptDiskSolidContainer): GeometryData {\r\n        let linesCount = 0;\r\n        let arcsCount = 0;\r\n        let linesOfPolylinesCount = 0;\r\n        let lineCrossSectionPointCount = 0;\r\n        let arcCrossSectionPointCount = 0;\r\n        let polylineCrossSectionPointCount = 0;\r\n        let arcStartEndCrossSectionPointCount = 0;\r\n\r\n        for (let i = 0, l = sds.directricesLength(); i < l; i++) {\r\n            sds.directrices(i, this.directrix);\r\n            const radius = sds.radius(i);\r\n            const crossSectionPointCount = this.getCrossSectionsPointCount(radius);\r\n            linesCount += this.directrix.lineSegmentsLength();\r\n            arcsCount += this.directrix.arcsLength();\r\n            arcStartEndCrossSectionPointCount += this.directrix.arcsLength() * crossSectionPointCount * 2;\r\n\r\n            for (let j = 0; j < this.directrix.polyLinesLength(); j++) {\r\n                linesOfPolylinesCount += this.directrix.polyLines(j).pointsLength() - 1;\r\n                polylineCrossSectionPointCount += crossSectionPointCount * (this.directrix.polyLines(j).pointsLength() - 1) * 2;\r\n            }\r\n            for (let a = 0; a < this.directrix.arcsLength(); a++) {\r\n                this.directrix.arcs(a, this.arc);\r\n                arcCrossSectionPointCount += crossSectionPointCount * get3DArcSectionsCount(this.arc);\r\n            }\r\n            for (let b = 0; b < this.directrix.lineSegmentsLength(); b++) {\r\n                lineCrossSectionPointCount += 2 * crossSectionPointCount;\r\n            }\r\n        }\r\n\r\n        const verticesLength = (lineCrossSectionPointCount + arcCrossSectionPointCount + polylineCrossSectionPointCount) * 3;\r\n        //Crosss section indices length\r\n        const indicesLength0 = (lineCrossSectionPointCount - linesCount * 2 * 2) * 3 + (arcStartEndCrossSectionPointCount - arcsCount * 2 * 2) * 3 + (polylineCrossSectionPointCount - linesOfPolylinesCount * 2 * 2) * 3;\r\n        //Connect cross section indices length\r\n        const indicesLength1 = lineCrossSectionPointCount / 2 * 6 + (arcCrossSectionPointCount - arcStartEndCrossSectionPointCount / 2) * 6 + polylineCrossSectionPointCount / 2 * 6;\r\n        //Interconnection indices length\r\n        const indicesLength2 = arcStartEndCrossSectionPointCount * 6;\r\n        const indicesLength = indicesLength0 + indicesLength1 + indicesLength2;\r\n\r\n        return {\r\n            objectType: ObjectType.MESH,\r\n            indicesLength: indicesLength,\r\n            positionsLength: verticesLength,\r\n            normalsLength: verticesLength,\r\n            uvsLength: 0,\r\n            pointSizesLength: 0,\r\n            indexPointer: 0,\r\n            positionPointer: 0,\r\n            normalPointer: 0\r\n        };\r\n    }\r\n\r\n    build(\r\n        sds: Fbs.SweptDiskSolidContainer,\r\n        buffer: GeometryData\r\n    ): void {\r\n        buffer.positions = new Float32Array(buffer.positionsLength);\r\n        buffer.normals = new Int16Array(buffer.normalsLength);\r\n        if (buffer.positionsLength > 65535)\r\n            buffer.indices = new Uint32Array(buffer.indicesLength);\r\n        else\r\n            buffer.indices = new Uint16Array(buffer.indicesLength);\r\n\r\n        const interConnectionDetail = {} as InterConnectionDetail;\r\n        for (let i = 0, l = sds.directricesLength(); i < l; i++) {\r\n            const radius = sds.radius(i);\r\n            const directrix = sds.directrices(i, this.directrix);\r\n            const crossSectionPointCount = this.getCrossSectionsPointCount(radius);\r\n\r\n            for (let j = 0; j < directrix.indexesLength(); j++) {\r\n                if (j === 0) interConnectionDetail.isStartSegment = true;\r\n                if (j === directrix.indexesLength() - 1) interConnectionDetail.isEndSegment = true;\r\n\r\n                const type = directrix.types(j);\r\n                const index = directrix.indexes(j);\r\n                switch (type) {\r\n                    case Fbs.SegmentType.LineSegment: this.buildLineSegment(directrix.lineSegments(index), radius, buffer, crossSectionPointCount, interConnectionDetail); break;\r\n                    case Fbs.SegmentType.PolyLine: this.buildPolyLine(directrix.polyLines(index), radius, buffer, crossSectionPointCount, interConnectionDetail); break;\r\n                    case Fbs.SegmentType.Arc: this.buildArc(directrix.arcs(index), radius, buffer, crossSectionPointCount, interConnectionDetail); break;\r\n                }\r\n\r\n                if (interConnectionDetail.isStartSegment) interConnectionDetail.isStartSegment = !interConnectionDetail.isStartSegment;\r\n                if (interConnectionDetail.isEndSegment) interConnectionDetail.isEndSegment = !interConnectionDetail.isEndSegment;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private buildPolyLine(polyline: Fbs.Polyline3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\r\n        for (let j = 1, length = polyline.pointsLength(); j < length; j++) {\r\n            this.lineStart.set(polyline.points(j - 1).x(), polyline.points(j - 1).y(), polyline.points(j - 1).z());\r\n            this.lineEnd.set(polyline.points(j).x(), polyline.points(j).y(), polyline.points(j).z());\r\n            this.tmp.copy(this.lineEnd).sub(this.lineStart).normalize();\r\n            this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\r\n\r\n            this.buildCrossSection(this.lineStart, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n            //first line part\r\n            j === 1 ? this.connectFirstCrossSection(buffer, crossSectionPointCount, interConnectionDetail, this.lineStart, Fbs.SegmentType.PolyLine) : this.buildCrossSectionIndices(buffer, crossSectionPointCount);\r\n            this.buildCrossSection(this.lineEnd, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n            if (j !== (length - 1) || interConnectionDetail.isEndSegment)\r\n                this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\r\n            else {\r\n                interConnectionDetail.position = this.lineEnd;\r\n                interConnectionDetail.type = Fbs.SegmentType.PolyLine;\r\n            }\r\n            this.connectCrossSections(buffer, crossSectionPointCount);\r\n        }\r\n    }\r\n\r\n    private connectFirstCrossSection(buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail, firstCrossSectionPosition: Vector3, type:Fbs.SegmentType): void {\r\n        if (interConnectionDetail.isStartSegment) this.buildCrossSectionIndices(buffer, crossSectionPointCount);\r\n        else if (!isMatchType(interConnectionDetail.type,type) || (!IsConnected(interConnectionDetail.position, firstCrossSectionPosition))) {\r\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true, true);\r\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount);\r\n        }\r\n        else {\r\n            this.connectCrossSections(buffer, crossSectionPointCount)\r\n        }\r\n    }\r\n\r\n    private buildStartCrossSection(point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\r\n        this.tmp.copy(nextPoint).sub(point).normalize();\r\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\r\n        this.buildCrossSection(point, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n    }\r\n\r\n    private buildMidCrossSection(prevPoint: Vector3, point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\r\n        this.tmp.copy(nextPoint).sub(prevPoint).normalize();\r\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\r\n        this.buildCrossSection(point, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n        this.connectCrossSections(buffer, crossSectionPointCount);\r\n    }\r\n\r\n    private buildEndCrossSection(point: Vector3, nextPoint: Vector3, radius: number, buffer: GeometryData, crossSectionPointCount: number): void {\r\n        this.tmp.copy(nextPoint).sub(point).normalize();\r\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\r\n        this.buildCrossSection(nextPoint, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n    }\r\n\r\n    private arcCrossSections: Vector3[] = [];\r\n    private arc = new Trimble.Technology.TrimBim.Fbs.Arc3f();\r\n    private buildArc(arc: Fbs.Arc3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\r\n        const arcCrossSectionCount = get3DArcSectionsCount(arc);\r\n        this.arcCrossSections = createCrossSections(arc, arcCrossSectionCount);\r\n\r\n        this.buildStartCrossSection(this.arcCrossSections[0], this.arcCrossSections[1], radius, buffer, crossSectionPointCount);\r\n        this.connectFirstCrossSection(buffer,crossSectionPointCount,interConnectionDetail,this.arcCrossSections[0],Fbs.SegmentType.Arc);\r\n        for (let j = 0; j < arcCrossSectionCount - 2; j++) {\r\n            this.buildMidCrossSection(this.arcCrossSections[j], this.arcCrossSections[j + 1], this.arcCrossSections[j + 2], radius, buffer, crossSectionPointCount);\r\n        }\r\n        this.buildEndCrossSection(this.arcCrossSections[arcCrossSectionCount - 2], this.arcCrossSections[arcCrossSectionCount - 1], radius, buffer, crossSectionPointCount);\r\n        if (interConnectionDetail.isEndSegment)\r\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\r\n        else {\r\n            interConnectionDetail.position = this.arcCrossSections[arcCrossSectionCount - 1];\r\n            interConnectionDetail.type = Fbs.SegmentType.Arc;\r\n        }\r\n        this.connectCrossSections(buffer, crossSectionPointCount);\r\n    }\r\n\r\n    private lineStart = new Vector3();\r\n    private lineEnd = new Vector3();\r\n    private lineQuaternion = new Quaternion();\r\n    private buildLineSegment(segment: Fbs.Line3d | Fbs.Line3f, radius: number, buffer: GeometryData, crossSectionPointCount: number, interConnectionDetail: InterConnectionDetail): void {\r\n        const start = segment.start();\r\n        const end = segment.end();\r\n        this.lineStart.set(start.x(), start.y(), start.z());\r\n        this.lineEnd.set(end.x(), end.y(), end.z());\r\n        this.tmp.copy(this.lineEnd).sub(this.lineStart).normalize();\r\n        this.lineQuaternion.setFromUnitVectors(Vector3Const.up, this.tmp);\r\n\r\n        this.buildCrossSection(this.lineStart, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n        this.connectFirstCrossSection(buffer,crossSectionPointCount, interConnectionDetail, this.lineStart, Fbs.SegmentType.LineSegment);\r\n\r\n        this.buildCrossSection(this.lineEnd, radius, this.lineQuaternion, buffer, crossSectionPointCount);\r\n        if (interConnectionDetail.isEndSegment)\r\n            this.buildCrossSectionIndices(buffer, crossSectionPointCount, true);\r\n        else {\r\n            interConnectionDetail.position = this.lineEnd;\r\n            interConnectionDetail.type = Fbs.SegmentType.LineSegment;\r\n        }\r\n        this.connectCrossSections(buffer, crossSectionPointCount);\r\n    }\r\n\r\n    private crossSectionPoints: Vector3[];\r\n    private tmp = new Vector3();\r\n    private buildCrossSection(position: Vector3, radius: number, quaternion: Quaternion, buffer: GeometryData, crossSectionPointCount: number): void {\r\n        if (!this.crossSectionPoints || this.crossSectionPoints.length !== crossSectionPointCount) {\r\n            this.crossSectionPoints = [];\r\n            for (let i = 0; i < crossSectionPointCount; i++) {\r\n                const a = 2 * Math.PI * i / crossSectionPointCount;\r\n                this.crossSectionPoints.push(new Vector3(Math.sin(a), Math.cos(a), 0));\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < crossSectionPointCount; i++) {\r\n            this.tmp.copy(this.crossSectionPoints[i]).multiplyScalar(radius).applyQuaternion(quaternion).add(position);\r\n            buffer.positions[buffer.positionPointer] = this.tmp.x;\r\n            buffer.positions[buffer.positionPointer + 1] = this.tmp.y;\r\n            buffer.positions[buffer.positionPointer + 2] = this.tmp.z;\r\n            buffer.positionPointer += 3;\r\n\r\n            this.tmp.copy(this.crossSectionPoints[i]).applyQuaternion(quaternion);\r\n            buffer.normals[buffer.normalPointer] = this.tmp.x * normalLength;\r\n            buffer.normals[buffer.normalPointer + 1] = this.tmp.y * normalLength;\r\n            buffer.normals[buffer.normalPointer + 2] = this.tmp.z * normalLength;\r\n            buffer.normalPointer += 3;\r\n        }\r\n    }\r\n\r\n    private buildCrossSectionIndices(buffer: GeometryData, crossSectionPointCount: number, invertFaces: boolean = false, isPreviousCrossSection: boolean = false): void {\r\n        for (let i = 0; i < crossSectionPointCount - 2; i++) {\r\n            buffer.indices[buffer.indexPointer] = buffer.positionPointer / 3 - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\r\n            buffer.indices[buffer.indexPointer + 1] = buffer.positionPointer / 3 + i + (invertFaces ? 2 : 1) - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\r\n            buffer.indices[buffer.indexPointer + 2] = buffer.positionPointer / 3 + i + (invertFaces ? 1 : 2) - crossSectionPointCount * (isPreviousCrossSection ? 2 : 1);\r\n            buffer.indexPointer += 3;\r\n        }\r\n    }\r\n\r\n    private connectCrossSections(buffer: GeometryData, crossSectionPointCount: number): void {\r\n        const vertexPointer1 = buffer.positionPointer / 3 - crossSectionPointCount;\r\n        const vertexPointer2 = vertexPointer1 - crossSectionPointCount;\r\n        for (let i = 0; i < crossSectionPointCount; i++) {\r\n            const nexti = (i + 1) % crossSectionPointCount;\r\n\r\n            buffer.indices[buffer.indexPointer] = vertexPointer1 + i;\r\n            buffer.indices[buffer.indexPointer + 1] = vertexPointer1 + nexti;\r\n            buffer.indices[buffer.indexPointer + 2] = vertexPointer2 + i;\r\n            buffer.indexPointer += 3;\r\n\r\n            buffer.indices[buffer.indexPointer] = vertexPointer2 + i;\r\n            buffer.indices[buffer.indexPointer + 1] = vertexPointer1 + nexti;\r\n            buffer.indices[buffer.indexPointer + 2] = vertexPointer2 + nexti;\r\n            buffer.indexPointer += 3;\r\n        }\r\n    }\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickFace(geometryIndex, ray, frustum, false);\r\n    }\r\n\r\n    pickFace = (() => {\r\n        const hits: HitPoint[] = [];\r\n        const sds = new Fbs.SweptDiskSolidContainer();\r\n        const directrix = new Fbs.Directrix();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum?: Frustum, snapped: boolean = true): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\r\n\r\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\r\n                sds.directrices(i, directrix);\r\n                const radius = sds.radius(i);\r\n\r\n                // do not snap to rebar surface if it is thin (dont block the center line snap)\r\n                if (snapped && radius < 0.02) continue;\r\n\r\n                forEachSegment(directrix, (start: Vector3, end: Vector3) => {\r\n                    hits.push(...intersectCylinder(start, end, ray, radius));\r\n                });\r\n\r\n                forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\r\n                    hits.push(...intersectCylinder(arcStart, arcMids[0], ray, radius));\r\n                    arcMids.forEach((mid, index) => {\r\n                        if (index > 0) hits.push(...intersectCylinder(arcMids[index - 1], mid, ray, radius));\r\n                    });\r\n                    hits.push(...intersectCylinder(arcMids[arcMids.length - 1], arcEnd, ray, radius));\r\n                }, get3DArcSectionsCount);\r\n\r\n                forEachPolyline(directrix, (polyPoint: Vector3, nextPolyPoint: Vector3) => {\r\n                    hits.push(...intersectCylinder(polyPoint, nextPolyPoint, ray, radius));\r\n                });\r\n            }\r\n\r\n            return hits;\r\n        };\r\n    })();\r\n\r\n    pickLine = (() => {\r\n        const hits: HitPoint[] = [];\r\n        const sds = new Fbs.SweptDiskSolidContainer();\r\n        const directrix = new Fbs.Directrix();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\r\n\r\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\r\n                sds.directrices(i, directrix);\r\n                hits.push(...pickOnSegment(directrix, ray, Infinity));\r\n                hits.push(...pickOnArc(directrix, ray, Infinity, get3DArcSectionsCount));\r\n                hits.push(...pickOnPolyline(directrix, ray, Infinity));\r\n            }\r\n\r\n            return hits.filter(h => frustum.containsPoint(h.point));\r\n        };\r\n    })();\r\n\r\n    pickPoint = (() => {\r\n        const hits: HitPoint[] = [];\r\n        const sds = new Fbs.SweptDiskSolidContainer();\r\n        const directrix = new Fbs.Directrix();\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.sweptDiskSolids(geometryIndex, sds);\r\n\r\n            for (let i = 0, l = sds.directricesLength(); i < l; i++) {\r\n                sds.directrices(i, directrix);\r\n\r\n                forEachSegment(directrix, (start: Vector3, end: Vector3) => {\r\n                    hits.push({ point: start.clone() } as HitPoint);\r\n                    hits.push({ point: end.clone() } as HitPoint);\r\n                });\r\n\r\n                forEachArc(directrix, (arcStart: Vector3, arcMids: Vector3[], arcEnd: Vector3) => {\r\n                    hits.push({ point: arcStart.clone() } as HitPoint);\r\n                    hits.push({ point: arcEnd.clone() } as HitPoint);\r\n                }, get3DArcSectionsCount);\r\n\r\n                forEachPolyline(directrix, (polyPoint: Vector3, nextPolyPoint: Vector3) => {\r\n                    hits.push({ point: polyPoint.clone() } as HitPoint);\r\n                    hits.push({ point: nextPolyPoint.clone() } as HitPoint);\r\n                });\r\n            }\r\n\r\n            return hits.filter(h => frustum.containsPoint(h.point));\r\n        };\r\n    })();\r\n}\r\n\r\nconst IsConnected = (section1: Vector3, section2: Vector3) => {\r\n    return section1.distanceToSquared(section2) < 0.0001 * 0.0001;\r\n};\r\n\r\nconst isMatchType = (crossSectionType: Fbs.SegmentType, nextCrossSectionType: Fbs.SegmentType) => {\r\n    if (nextCrossSectionType === Fbs.SegmentType.Arc) return true;\r\n    return (nextCrossSectionType === Fbs.SegmentType.PolyLine || nextCrossSectionType === Fbs.SegmentType.LineSegment) && crossSectionType === Fbs.SegmentType.Arc;\r\n};\r\n","\r\n/**\r\n * Simple incremental checksum builder.\r\n * Currently based crc32, but could be replaced.\r\n * https://en.wikipedia.org/wiki/Cyclic_redundancy_check\r\n * https://stackoverflow.com/questions/27939882/fast-crc-algorithm\r\n */\r\nexport class Checksum {\r\n    private static readonly POLY = 0x82f63b78;\r\n\r\n    private placeholder = new Int32Array(1);\r\n    private bytes = new Uint8Array(this.placeholder.buffer);\r\n    private crc = ~0;\r\n\r\n    /**\r\n     * Add a primitive to the checksum.\r\n     * If the primitive is of an unsupported type during runtime, it is ignored\r\n     * @param data The primitive to be added\r\n     * @returns Itself, to allow chaining\r\n     */\r\n    add(data: number | boolean | string): Checksum {\r\n        switch (typeof data) {\r\n            case \"number\":\r\n                this.placeholder[0] = data;\r\n                this.compute();\r\n                break;\r\n            case \"boolean\":\r\n                this.placeholder[0] = (data ? 1 : 0);\r\n                this.compute();\r\n                break;\r\n            case \"string\":\r\n                for (let i=0; i<data.length; ++i) {\r\n                    this.placeholder[0] = data.codePointAt(i);\r\n                    this.compute();\r\n                }\r\n                break;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gives the checksum of all data added since last clear.\r\n     * @returns A 32-bit checksum as a number\r\n     */\r\n    get(): number {\r\n        return ~this.crc;\r\n    }\r\n\r\n    /**\r\n     * Resets the builder to initial state.\r\n     * @returns Itself, to allow chaining\r\n     */\r\n    clear(): Checksum {\r\n        this.crc = ~0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Increments the checksum with the data currently stored in the placeholder.\r\n     */\r\n    private compute(): void {\r\n        for (let i=0; i<4; ++i) {\r\n            this.crc ^= this.bytes[i];\r\n            for (let k = 0; k < 8; ++k)\r\n                this.crc = this.crc & 1 ? (this.crc >> 1) ^ Checksum.POLY : this.crc >> 1;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Box3, Matrix4, Plane, Vector3, TypedArray, Frustum } from \"./ThreeMath\";\r\nimport { IText, TextStyle } from \"../common\";\r\nimport { Checksum } from \"@technology/webgl-viewer/dist/esnext/Helpers/Checksum\";\r\n\r\nexport class Utils {\r\n    static transformFrustum(frustum: Frustum, matrix: Matrix4, out: Frustum = new Frustum()): Frustum {\r\n        for (let i = 0; i < out.planes.length; i++)\r\n            out.planes[i].copy(frustum.planes[i]).applyMatrix4(matrix);\r\n        return out;\r\n    }\r\n\r\n    private static planesIntersectBoxInternal = (() => {\r\n        const point = new Vector3();\r\n\r\n        return (planes: Plane[], box: Box3, contain: boolean) => {\r\n            for (let i = 0, length = planes.length; i < length; i++) {\r\n                const normal = planes[i].normal;\r\n                point.set(\r\n                    (normal.x >= 0.0) !== contain ? box.max.x : box.min.x,\r\n                    (normal.y >= 0.0) !== contain ? box.max.y : box.min.y,\r\n                    (normal.z >= 0.0) !== contain ? box.max.z : box.min.z\r\n                );\r\n                if (planes[i].distanceToPoint(point) < 0)\r\n                    return false;\r\n            }\r\n            return true;\r\n        };\r\n    })();\r\n\r\n    static planesIntersectBox(planes: Plane[], box: Box3): boolean {\r\n        return Utils.planesIntersectBoxInternal(planes, box, false);\r\n    }\r\n\r\n    static planesContainBox(planes: Plane[], box: Box3): boolean {\r\n        return Utils.planesIntersectBoxInternal(planes, box, true);\r\n    }\r\n\r\n    public static insideNonIntersectingPlanes(point: Vector3, clipPlanes: Plane[]): boolean {\r\n        let insideClipPlanes = true;\r\n        for (const clipPlane of clipPlanes)\r\n            insideClipPlanes = insideClipPlanes && clipPlane.distanceToPoint(point) > 0;\r\n        return insideClipPlanes;\r\n    }\r\n}\r\n\r\nconst checksum = new Checksum();\r\nexport const createIText = (text: string, textStyle?: TextStyle): IText => {\r\n    const hash = checksum.clear().add(text);\r\n    if (textStyle) hash\r\n        .add(textStyle.font)\r\n        .add(textStyle.size)\r\n        .add(textStyle.alignment)\r\n        .add(textStyle.verticalAlign)\r\n        .add(textStyle.horizontalAlign);\r\n    return {\r\n        string: text,\r\n        style: textStyle,\r\n        checksum: hash.get(),\r\n    } as IText;\r\n};\r\n","import { GeometryData, GeometryBuilder, } from \"./GeometryBuilder\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { TextStyle, TrimbimGeometryType } from \"../../common\";\r\nimport { Frustum, Ray, Vector3Const } from \"../ThreeMath\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { createIText } from \"../Utils\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nabstract class BillboardGeometryBuilder extends GeometryBuilder{\r\n    abstract readonly geometryType: TrimbimGeometryType;\r\n\r\n    abstract build(\r\n        point: Fbs.TexturedBillboard | Fbs.BillboardText,\r\n        bufferGeometry: GeometryData\r\n    ): GeometryData;\r\n\r\n    abstract calculateBufferSizes(mesh: any, producedType: ObjectType): GeometryData;\r\n\r\n    abstract getGeometries(geometryIndex: number, buildIfEmpty: boolean): GeometryData[];\r\n\r\n    prepareModelTypes(): void {\r\n    }\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickPoint(geometryIndex, ray, frustum);\r\n    }\r\n\r\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\r\n        return;\r\n    }\r\n\r\n    pickLine(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return;\r\n    }\r\n\r\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return frustum.containsPoint(Vector3Const.zero) ? [{point: Vector3Const.zero.clone()}] : undefined;\r\n    }\r\n}\r\n\r\n\r\nexport class TexturedBillboardGeometryBuilder extends BillboardGeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.TexturedBillboard;\r\n    readonly snapGeometryType = GeometryType.POINT;\r\n\r\n    build(\r\n        point: Fbs.TexturedBillboard,\r\n        bufferGeometry: GeometryData\r\n    ): GeometryData {\r\n        bufferGeometry.positions = new Float32Array(bufferGeometry.positionsLength);\r\n        bufferGeometry.uvs = new Float32Array(bufferGeometry.uvsLength);\r\n        bufferGeometry.pointSizes = new Float32Array(bufferGeometry.pointSizesLength);\r\n\r\n        bufferGeometry.uvs[0] = point.leftUpUV().x();\r\n        bufferGeometry.uvs[1] = point.leftUpUV().y();\r\n        bufferGeometry.uvs[2] = point.rightDownUV().x();\r\n        bufferGeometry.uvs[3] = point.rightDownUV().y();\r\n\r\n        bufferGeometry.pointSizes[0] = point.leftUpXY().x();\r\n        bufferGeometry.pointSizes[1] = point.leftUpXY().y();\r\n        bufferGeometry.pointSizes[2] = point.rightDownXY().x();\r\n        bufferGeometry.pointSizes[3] = point.rightDownXY().y();\r\n\r\n        return bufferGeometry;\r\n    }\r\n\r\n    calculateBufferSizes(mesh: any, objectType: ObjectType): GeometryData {\r\n        return {\r\n            objectType: objectType,\r\n            indicesLength: 0,\r\n            positionsLength: 3,\r\n            normalsLength: 0,\r\n            uvsLength: 4,\r\n            pointSizesLength: 4,\r\n            indexPointer: 0,\r\n            positionPointer: 0\r\n        };\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const billboard = this.geometry.texturedBillboards(geometryIndex);\r\n        const producedType = billboard.IsInWorldUnits() ? ObjectType.ATTENUATED_POINT : ObjectType.POINT;\r\n\r\n        const geometry = this.calculateBufferSizes(billboard, producedType);\r\n        if (buildIfEmpty)\r\n            this.build(billboard, geometry);\r\n\r\n        return [geometry];\r\n    }\r\n\r\n}\r\n\r\nexport class BillboardTextGeometryBuilder extends BillboardGeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.BillboardText;\r\n\r\n    build(point: Fbs.BillboardText, bufferGeometry: GeometryData): GeometryData {\r\n        bufferGeometry.positions = new Float32Array(bufferGeometry.positionsLength);\r\n        bufferGeometry.uvs = new Float32Array(bufferGeometry.uvsLength);\r\n\r\n        bufferGeometry.uvs[0] = 0;\r\n        bufferGeometry.uvs[1] = 0;\r\n        bufferGeometry.uvs[2] = 1;\r\n        bufferGeometry.uvs[3] = 1;\r\n\r\n        return bufferGeometry;\r\n    }\r\n\r\n    calculateBufferSizes(mesh: any, objectType: ObjectType): GeometryData {\r\n        return {\r\n            objectType: objectType,\r\n            indicesLength: 0,\r\n            positionsLength: 3,\r\n            normalsLength: 0,\r\n            uvsLength: 4,\r\n            pointSizesLength: 0,\r\n            indexPointer: 0,\r\n            positionPointer: 0\r\n        };\r\n    }\r\n\r\n    getGeometries = (() => {\r\n        const trbTextStyle = new Fbs.TextStyle();\r\n\r\n        return (geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] => {\r\n            const billboardText = this.geometry.billboardTexts(geometryIndex);\r\n            const producedType = ObjectType.POINT;\r\n\r\n            const geometry = this.calculateBufferSizes(billboardText, producedType);\r\n\r\n            // Text and textStyle have to be defined already to avoid consolidation of different\r\n            // BillboardTexts with the same material:\r\n            const textStyleId = billboardText.textStyleId();\r\n            this.geometry.textStyles(textStyleId, trbTextStyle);\r\n            const textStyle = {\r\n                font: trbTextStyle.font() || \"sans-serif\",\r\n                size: trbTextStyle.size() || 14,\r\n                alignment: trbTextStyle.alignment() || Fbs.AlignmentType.LeftTop,\r\n                horizontalAlign: trbTextStyle.horizontalAlign() || 0,\r\n                verticalAlign: trbTextStyle.verticalAlign() || 0,\r\n            } as TextStyle;\r\n            geometry.text = createIText(billboardText.text(), textStyle);\r\n\r\n            if (buildIfEmpty)\r\n                this.build(billboardText, geometry);\r\n\r\n            return [geometry];\r\n        }\r\n    })();\r\n\r\n}\r\n","import { LinePrimitiveBuilder } from \"./LinePrimitiveBuilder\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { GeometryData, GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { TextStyle, TrimbimGeometryType } from \"../../common\";\r\nimport { Frustum, Ray, Vector3 } from \"../ThreeMath\";\r\nimport { intersectLine } from \"../Pickers\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { createIText } from \"../Utils\";\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class GridGeometryBuilder extends GeometryBuilder {\r\n    readonly geometryType = TrimbimGeometryType.GridLineContainer;\r\n    readonly snapGeometryType = GeometryType.LINE;\r\n\r\n    private labelBuffers: Map<string, GeometryData>[] = [];\r\n    private intersections: Vector3[][] = [];\r\n    private surfaceNormals = new Array<Vector3>();\r\n\r\n    private readonly labelTextStyle = {     // NB: All required TextStyle members must be provided\r\n        size: 16,\r\n        font: \"sans-serif\",\r\n        alignment: Fbs.AlignmentType.CenterBottom,\r\n        horizontalAlign: 0,\r\n        verticalAlign: -0.5,\r\n    } as TextStyle;\r\n\r\n    constructor(geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry) {\r\n        super(geometry);\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const lineBuffer = this.buffers[geometryIndex];\r\n        const labelBuffers = this.labelBuffers[geometryIndex];\r\n\r\n        if (lineBuffer && !lineBuffer.positions && buildIfEmpty) {\r\n            const grid = this.geometry.gridLineContainers(geometryIndex);\r\n            this.buildGridLines(grid, lineBuffer);\r\n            for (let j=0; j<grid.gridLineSegmentsLength(); ++j) {\r\n                const labelString = grid.gridLineSegments(j).axisTag();\r\n                const labelBuffer = labelBuffers.get(labelString);\r\n                this.buildGridLabels(grid, labelBuffer, j);\r\n            }\r\n            this.surfaceNormals[geometryIndex] = new Vector3();\r\n            this.intersections[geometryIndex] = this.buildIntersections(lineBuffer.positions, grid.gridLineSegmentsLength(), this.surfaceNormals[geometryIndex]);\r\n        }\r\n\r\n        // Reset pointers which were temporarily used by the builder\r\n        for (const labelBuffer of labelBuffers.values()) {\r\n            labelBuffer.positionPointer = 0;\r\n            labelBuffer.uvPointer = 0;\r\n        }\r\n\r\n        return [lineBuffer, ...labelBuffers.values()];\r\n    }\r\n\r\n    public prepareModelTypes(): void {\r\n        for (let i = 0, l = this.geometry.gridLineContainersLength(); i < l; i++) {\r\n            const grid = this.geometry.gridLineContainers(i);\r\n            this.buffers.push(this.calculateBufferSizes(grid, ObjectType.LINE));\r\n            const pointBuffers = new Map<string, GeometryData>();\r\n            for (let j=0; j<grid.gridLineSegmentsLength(); ++j) {\r\n                const labelString = grid.gridLineSegments(j).axisTag();\r\n                if (!pointBuffers.has(labelString)) {\r\n                    const label = this.calculateBufferSizes(grid, ObjectType.POINT);\r\n                    label.text = createIText(grid.gridLineSegments(j).axisTag(), this.labelTextStyle);\r\n                    pointBuffers.set(labelString, label);\r\n                } else {\r\n                    const label = pointBuffers.get(labelString);\r\n                    label.positionsLength += 6;\r\n                    label.uvsLength += 8;\r\n                }\r\n            }\r\n            this.labelBuffers.push(pointBuffers);\r\n        }\r\n    }\r\n\r\n    build(grid: Fbs.GridLineContainer, buffer: GeometryData, lineIndex?: number): void { }\r\n\r\n    private buildGridLines(grid: Fbs.GridLineContainer, buffer: GeometryData): void {\r\n        buffer.positions = new Float32Array(buffer.positionsLength);\r\n        buffer.normals = new Int16Array(buffer.normalsLength);\r\n\r\n        for (let i = 0, l = grid.gridLineSegmentsLength(); i < l; i++) {\r\n            const segment = grid.gridLineSegments(i);\r\n            const line = segment.lineSegment();\r\n            LinePrimitiveBuilder.buildLine(line, buffer);\r\n        }\r\n    }\r\n\r\n    private buildGridLabels(grid: Fbs.GridLineContainer, buffer: GeometryData, lineIndex: number): void {\r\n        if (!buffer.positions) buffer.positions = new Float32Array(buffer.positionsLength);\r\n        if (!buffer.uvs) buffer.uvs = new Float32Array(buffer.uvsLength);\r\n        const segment = grid.gridLineSegments(lineIndex);\r\n        const start = segment.lineSegment().start();\r\n        const end = segment.lineSegment().end();\r\n        buffer.positions.set([start.x(), start.y(), start.z(), end.x(), end.y(), end.z()], buffer.positionPointer);\r\n        buffer.uvs.set([0,0,1,1,0,0,1,1], buffer.uvPointer);\r\n        buffer.positionPointer += 6;\r\n        buffer.uvPointer += 8;\r\n    }\r\n\r\n    private buildIntersections = (() => {\r\n        const starts: Vector3[] = [];\r\n        const ends: Vector3[] = [];\r\n        const intersections: Vector3[] = [];\r\n        const EPSILON = 0.0001;\r\n        const start = new Vector3();\r\n        const end = new Vector3();\r\n        const v = new Vector3();\r\n        const dir = new Vector3();\r\n        const ray = new Ray();\r\n        const point = new Vector3();\r\n        const startToPoint = new Vector3();\r\n        const endToPoint = new Vector3();\r\n\r\n        return (vertices: Float32Array | Float64Array, length: number, outSurfaceNormal: Vector3): Vector3[] => {\r\n            starts.length = 0;\r\n            ends.length = 0;\r\n            intersections.length = 0;\r\n            for (let i=0; i<length; ++i) {\r\n                start.set(vertices[i*6], vertices[i*6+1], vertices[i*6+2]);\r\n                end.set(vertices[i*6+3], vertices[i*6+4], vertices[i*6+5]);\r\n                v.copy(end).sub(start);\r\n                dir.copy(v).normalize();\r\n                ray.set(start, dir);\r\n                for (let j=0; j<starts.length; ++j) {\r\n                    const dist = ray.distanceSqToSegment(starts[j], ends[j], null, point);\r\n                    if (dist < EPSILON) {\r\n                        startToPoint.copy(point).sub(start);\r\n                        endToPoint.copy(point).sub(end);\r\n                        if (v.dot(startToPoint) >= -EPSILON && v.dot(endToPoint) <= EPSILON) {\r\n                            intersections.push(point.clone());\r\n\r\n                            // calculate grid surface normal, later will be used for surface picking\r\n                            if (outSurfaceNormal.lengthSq() === 0)\r\n                                outSurfaceNormal.crossVectors(dir, point.sub(starts[j]));\r\n                        }\r\n                    }\r\n                }\r\n                starts.push(start.clone());\r\n                ends.push(end.clone());\r\n            }\r\n            return intersections.slice();\r\n        };\r\n    })();\r\n\r\n    calculateBufferSizes(\r\n        grid: Fbs.GridLineContainer,\r\n        objectType?: ObjectType,\r\n    ): GeometryData {\r\n        if (objectType === ObjectType.POINT)\r\n            return {\r\n                objectType: ObjectType.POINT,\r\n                indicesLength: 0,\r\n                positionsLength: 6,\r\n                normalsLength: 0,\r\n                uvsLength: 8,\r\n                pointSizesLength: 0,\r\n                indexPointer: 0,\r\n                positionPointer: 0,\r\n            };\r\n        else\r\n            return {\r\n                objectType: ObjectType.LINE,\r\n                indicesLength: 0,\r\n                positionsLength: grid.gridLineSegmentsLength() * 6,\r\n                normalsLength: 0,\r\n                uvsLength: 0,\r\n                pointSizesLength: 0,\r\n                indexPointer: 0,\r\n                positionPointer: 0,\r\n            };\r\n    }\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickLine(geometryIndex, ray, frustum);\r\n    }\r\n\r\n    pickFace(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        if (this.surfaceNormals[geometryIndex].lengthSq() === 0) return;\r\n\r\n        const points = this.pickLine(geometryIndex, ray, frustum);\r\n        for (const p of points) p.normal = this.surfaceNormals[geometryIndex];\r\n        return points;\r\n    }\r\n\r\n    pickLine = (() => {\r\n        const glc = new Fbs.GridLineContainer();\r\n        const start = new Vector3();\r\n        const end = new Vector3();\r\n        const hits = <HitPoint[]>[];\r\n\r\n        return (geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] => {\r\n            hits.length = 0;\r\n            this.geometry.gridLineContainers(geometryIndex, glc);\r\n            if (!this.buffers[geometryIndex].positions)\r\n                this.getGeometries(geometryIndex, true);    // Build if empty\r\n            const vs = this.buffers[geometryIndex].positions;\r\n            for (let i=0, l=glc.gridLineSegmentsLength(); i<l; ++i) {\r\n                start.set(vs[i*6], vs[i*6+1], vs[i*6+2]);\r\n                end.set(vs[i*6+3], vs[i*6+4], vs[i*6+5]);\r\n                intersectLine(hits, start, end, ray, Infinity);\r\n            }\r\n            return hits.filter(h => frustum.containsPoint(h.point));\r\n        };\r\n    })();\r\n\r\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        if (!this.intersections[geometryIndex])\r\n            this.getGeometries(geometryIndex, true);\r\n        return this.intersections[geometryIndex]\r\n            .filter(p => frustum.containsPoint(p))\r\n            .map(p => ({ point: p.clone() }) as HitPoint);\r\n    }\r\n}\r\n","let batchCount = 0;\r\n\r\nexport default function incrementBatchCount(): number {\r\n    return batchCount++;\r\n}","import { GeometryData } from \"./GeometryBuilders/GeometryBuilder\";\r\nimport incrementBatchCount from \"./BatchCounter\";\r\nimport {\r\n    ActionType,\r\n    BatchState,\r\n    IAdd,\r\n    IRemove,\r\n    ObjectType\r\n} from \"../Model/ModelBuilderTypes\";\r\nimport {Box3, Matrix4, TypedArray} from \"./ThreeMath\";\r\nimport { InstanceManager } from \"./InstanceManager\";\r\nimport { GeometryManager } from \"./GeometryManager\";\r\nimport { LodManager } from \"./LodManager\";\r\nimport { GeometryUpdateMessenger } from \"./GeometryUpdateMessenger\";\r\nimport { IText } from \"../common\";\r\n\r\nconst placement = new Matrix4();\r\n\r\nexport class BatchCluster {\r\n    public min: Float64Array;\r\n    public max: Float64Array;\r\n\r\n    constructor(protected modelId: string, public id: Int32Array) {\r\n    }\r\n\r\n    protected createLocalBoundingBox(): Box3 {\r\n        const boundingBox = new Box3();\r\n        boundingBox.max.set(this.max[0] - this.min[0], this.max[1] - this.min[1], this.max[2] - this.min[2]);\r\n        return boundingBox;\r\n    }\r\n\r\n    static createBatchPrototype(geometry: GeometryData, instanceId: number): BatchPrototype {\r\n        return {\r\n            indicesLength: geometry.indicesLength,\r\n            verticesLength: geometry.positionsLength,\r\n            normalsLength: geometry.normalsLength,\r\n            uvsLength: geometry.uvsLength,\r\n            pointSizesLength: geometry.pointSizesLength,\r\n            instances: [instanceId],\r\n            indexOffset: [0],\r\n            indexBuffer32bit: geometry.positionsLength > 65535,\r\n            id: incrementBatchCount(),\r\n            geometryBuilt: false,\r\n            state: {\r\n                visible: [{ start: 0, count: Infinity }],\r\n                selected: []\r\n            } as BatchState,\r\n            text: geometry.text,\r\n        };\r\n    }\r\n\r\n    static addToPrototype(prototype: BatchPrototype, geometry: GeometryData, instanceId: number): void {\r\n        const offset = prototype.indicesLength !== 0 ? prototype.indicesLength : (prototype.verticesLength / 3);\r\n        prototype.indexOffset.push(offset);\r\n        prototype.indicesLength += geometry.indicesLength;\r\n        prototype.verticesLength += geometry.positionsLength;\r\n        prototype.normalsLength += geometry.normalsLength;\r\n        prototype.uvsLength += geometry.uvsLength;\r\n        prototype.pointSizesLength += geometry.pointSizesLength;\r\n        if (!prototype.instances.includes(instanceId))\r\n            prototype.instances.push(instanceId);\r\n    }\r\n\r\n    static addObjectToFreePrototype(\r\n        prototypes: BatchPrototype[],\r\n        geometry: GeometryData,\r\n        instanceId: number\r\n    ): BatchPrototype {\r\n        let prototype = this.findFreeBatchPrototype(prototypes, geometry);\r\n\r\n        if (prototype) {\r\n            BatchCluster.addToPrototype(prototype, geometry, instanceId);\r\n        } else {\r\n            prototype = BatchCluster.createBatchPrototype(geometry, instanceId);\r\n            prototypes.push(prototype);\r\n        }\r\n\r\n        return prototype;\r\n    }\r\n\r\n    static findFreeBatchPrototype(prototypeBatches: BatchPrototype[], geometry: GeometryData): BatchPrototype {\r\n        for (let i = prototypeBatches.length - 1; i >= 0; i--) {\r\n            const batch = prototypeBatches[i];\r\n            const newVertexLength = batch.verticesLength + geometry.positionsLength;\r\n            const maxVertexLength = batch.indexBuffer32bit ? 2147483647 : 65535;\r\n            if (newVertexLength <= maxVertexLength)\r\n                return prototypeBatches[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport interface BatchPrototype {\r\n    indicesLength: number;\r\n    verticesLength: number;\r\n    normalsLength: number;\r\n    uvsLength: number;\r\n    pointSizesLength: number;\r\n    instances: number[];\r\n    indexOffset: number[];\r\n    indexBuffer32bit: boolean;\r\n    id: number;\r\n    geometryBuilt: boolean;\r\n    state: BatchState;\r\n    text?: IText;\r\n}\r\n\r\nexport class GeometryCluster extends BatchCluster {\r\n    protected lodLevelToBatches: Map<number, BatchPrototype[]>;\r\n\r\n    constructor(\r\n        modelId: string,\r\n        public id: Int32Array,\r\n        protected im: InstanceManager,\r\n        protected geom: GeometryManager,\r\n        protected messenger: GeometryUpdateMessenger,\r\n        protected lodManager: LodManager\r\n    ) {\r\n        super(modelId, id);\r\n        this.lodLevelToBatches = new Map();\r\n        this.lodLevelToBatches.set(0, []);\r\n    }\r\n\r\n    get materialId(): number {\r\n        return this.id[3];\r\n    }\r\n\r\n    get type(): ObjectType {\r\n        return this.id[4];\r\n    }\r\n\r\n    get textChecksum(): number {\r\n        return this.id[5];\r\n    }\r\n\r\n    public belongsToCluster(geometry: GeometryData): boolean {\r\n        if (geometry.objectType !== this.type) return false;\r\n        if (!this.textChecksum && !geometry.text) return true;\r\n        if (!this.textChecksum || !geometry.text) return false;\r\n        return this.textChecksum === geometry.text.checksum;\r\n    }\r\n\r\n    getBatches(lodLevel: number): BatchPrototype[] {\r\n        if (this.lodLevelToBatches.has(lodLevel)) {\r\n            return this.lodLevelToBatches.get(lodLevel);\r\n        } else {\r\n            const batches: BatchPrototype[] = [];\r\n            this.lodLevelToBatches.set(lodLevel, batches);\r\n            return batches;\r\n        }\r\n    }\r\n\r\n    getInstanceIds(): number[] {\r\n        let instanceIds: number[] = [];\r\n        for (const oldBatches of this.lodLevelToBatches.values()) {\r\n            for (const batch of oldBatches) {\r\n                instanceIds = instanceIds.concat(batch.instances);\r\n            }\r\n        }\r\n        return instanceIds;\r\n    }\r\n\r\n    removeGeometry(): void {\r\n        for (const batches of this.lodLevelToBatches.values()) {\r\n            for (const batch of batches)\r\n                this.removeBatchGeometry(batch);\r\n        }\r\n    }\r\n\r\n    protected removeBatchGeometry(prototype: BatchPrototype): void {\r\n        if (!prototype.geometryBuilt) return;\r\n\r\n        const action = {\r\n            actionType: ActionType.REMOVAL,\r\n            modelId: this.modelId,\r\n            batchId: prototype.id,\r\n            userData: { id: prototype.id }\r\n        } as IRemove;\r\n        this.messenger.send(action);\r\n        prototype.geometryBuilt = false;\r\n    }\r\n\r\n    insertObject(\r\n        geometry: GeometryData,\r\n        instanceId: number,\r\n        objectSize: number,\r\n    ): BatchPrototype {\r\n        for (let i = this.lodManager.getLevelsCount() - 1; i >= 0; i--) {\r\n            if (objectSize >= this.lodManager.getMinObjectSize(i)) {\r\n                const prototypes = this.getBatches(i);\r\n                return BatchCluster.addObjectToFreePrototype(prototypes, geometry, instanceId);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearBatches(): void {\r\n        this.lodLevelToBatches.clear();\r\n        this.lodLevelToBatches.set(0, []);\r\n    }\r\n\r\n    buildGeometry(lodLevel: number): void {\r\n        const lodCount = this.lodManager.getLevelsCount();\r\n\r\n        for (let i = 0; i < lodCount; i++) {\r\n            const newBatches = this.getBatches(i);\r\n\r\n            if (i >= lodLevel) {\r\n                for (const prototype of newBatches) {\r\n                    if (prototype.geometryBuilt || prototype.instances.length === 0)\r\n                        continue;\r\n\r\n                    const geometry = this.buildBatchGeometry(prototype, this.type, this.min);\r\n                    const action = {\r\n                        actionType: ActionType.ADD,\r\n                        modelId: this.modelId,              // What's this?\r\n                        objectType: geometry.objectType,\r\n                        batchId: prototype.id,\r\n                        indices: geometry.indices,\r\n                        positions: geometry.positions,\r\n                        normals: geometry.normals,\r\n                        uvs: geometry.uvs,\r\n                        pointSizes: geometry.pointSizes,\r\n                        userData: {\r\n                            id: prototype.id,\r\n                            clusterId: this.id.toString(),\r\n                        },\r\n                        materialId: this.materialId,\r\n                        position: this.min,\r\n                        state: prototype.state,\r\n                        boundingBox: this.createLocalBoundingBox(),\r\n                        text: geometry.text,\r\n                    } as IAdd;\r\n                    this.messenger.send(action);\r\n                    prototype.geometryBuilt = true;\r\n                }\r\n            } else {\r\n                for (const prototype of newBatches)\r\n                    this.removeBatchGeometry(prototype);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected buildBatchGeometry(prototype: BatchPrototype, objectType: ObjectType, offset: Float64Array): GeometryData {\r\n\r\n        const geometry: GeometryData = {\r\n            objectType: objectType,\r\n            indices: prototype.indexBuffer32bit ? new Uint32Array(prototype.indicesLength) : new Uint16Array(prototype.indicesLength),\r\n            positions: new Float32Array(prototype.verticesLength),\r\n            normals: new Int16Array(prototype.normalsLength),\r\n            uvs: new Float32Array(prototype.uvsLength),\r\n            pointSizes: new Float32Array(prototype.pointSizesLength),\r\n            indexPointer: 0,\r\n            positionPointer: 0,\r\n            normalPointer: 0,\r\n            uvPointer: 0,\r\n            pointSizePointer: 0,\r\n            indicesLength: prototype.indicesLength,\r\n            positionsLength: prototype.verticesLength,\r\n            normalsLength: prototype.normalsLength,\r\n            uvsLength: prototype.uvsLength,\r\n            pointSizesLength: prototype.pointSizesLength,\r\n            text: prototype.text,\r\n        };\r\n\r\n        for (const id of prototype.instances) {\r\n            this.im.getInstanceTransform(id, placement);\r\n            placement.elements[12] -= offset[0];\r\n            placement.elements[13] -= offset[1];\r\n            placement.elements[14] -= offset[2];\r\n\r\n            const geometries = this.geom.getGeometries(id, true);\r\n            for (const newGeometry of geometries) {\r\n                if (this.belongsToCluster(newGeometry))\r\n                    this.mergeGeometry(geometry, placement, newGeometry);\r\n            }\r\n        }\r\n\r\n        return geometry;\r\n    }\r\n\r\n    protected mergeGeometry(\r\n        batch: GeometryData,\r\n        instancePlacement: Matrix4,\r\n        instanceGeometry: GeometryData\r\n    ): void {\r\n        const start = batch.indexPointer;\r\n        const offset = batch.positionPointer / 3;\r\n        const length = instanceGeometry.indicesLength;\r\n\r\n        for (let i = 0, j = start; i < length; i++, j++) {\r\n            batch.indices[j] = instanceGeometry.indices[i] + offset;\r\n        }\r\n\r\n        affineTransformVector3(\r\n            instancePlacement,\r\n            instanceGeometry.positions,\r\n            batch.positions,\r\n            batch.positionPointer,\r\n            instanceGeometry.positions.length\r\n        );\r\n\r\n        if (instanceGeometry.normals) {\r\n            applyRotationAndScaleToVector3(\r\n                instancePlacement,\r\n                instanceGeometry.normals,\r\n                batch.normals,\r\n                batch.normalPointer,\r\n                instanceGeometry.normalsLength\r\n            );\r\n        }\r\n\r\n        batch.indexPointer += instanceGeometry.indicesLength;\r\n        batch.positionPointer += instanceGeometry.positionsLength;\r\n        batch.normalPointer += instanceGeometry.normalsLength;\r\n\r\n        if (instanceGeometry.uvs) {\r\n            batch.uvs.set(instanceGeometry.uvs, batch.uvPointer);\r\n            batch.uvPointer += instanceGeometry.uvs.length;\r\n        }\r\n        if (instanceGeometry.pointSizes) {\r\n            batch.pointSizes.set(instanceGeometry.pointSizes, batch.pointSizePointer);\r\n            batch.pointSizePointer += instanceGeometry.pointSizes.length;\r\n        }\r\n\r\n        if (instanceGeometry.materialId) batch.materialId = instanceGeometry.materialId;\r\n        batch.text = instanceGeometry.text;\r\n    }\r\n}\r\n\r\nfunction affineTransformVector3( matrix: Matrix4, source: TypedArray, dst: TypedArray, dstOffset: number = 0, length: number ): void {\r\n    const e = matrix.elements;\r\n    for ( let i = 0; i < length; i += 3) {\r\n        const x = source[ i ];\r\n        const y = source[ i + 1 ];\r\n        const z = source[ i + 2 ];\r\n        dst[ i + dstOffset] =      ( e[ 0 ] * x + e[ 4 ] * y + e[ 8  ] * z + e[ 12 ] );\r\n        dst[ i + dstOffset + 1 ] = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9  ] * z + e[ 13 ] );\r\n        dst[ i + dstOffset + 2 ] = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] );\r\n    }\r\n}\r\n\r\nfunction applyRotationAndScaleToVector3( matrix: Matrix4, source: TypedArray, dst: TypedArray, dstOffset: number = 0, length: number ): void {\r\n    const e = matrix.elements;\r\n    for ( let i = 0; i < length; i += 3) {\r\n        const x = source[ i ];\r\n        const y = source[ i + 1 ];\r\n        const z = source[ i + 2 ];\r\n        dst[ i + dstOffset ] =     ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z);\r\n        dst[ i + dstOffset + 1 ] = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z);\r\n        dst[ i + dstOffset + 2 ] = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z);\r\n    }\r\n}\r\n\r\nexport class PointCluster extends GeometryCluster {\r\n    insertObject(\r\n        geometry: GeometryData,\r\n        instanceId: number,\r\n        objectSize: number,\r\n    ): BatchPrototype {\r\n        const prototypes = this.getBatches(2);\r\n        return BatchCluster.addObjectToFreePrototype(prototypes, geometry, instanceId);\r\n    }\r\n}\r\n","import { ActionType, IAdd, IRemove, ISetBatchState, IUpdateFinished } from \"../Model/ModelBuilderTypes\";\r\nimport { MessageType, UpdateGeometryMessage } from \"./ThreadWorkerMessages\";\r\n\r\nexport class GeometryUpdateMessenger  {\r\n    private actions: Array<IAdd | IRemove | ISetBatchState | IUpdateFinished> = [];\r\n    private intervalId: any;\r\n\r\n    constructor(private modelId: string) {\r\n        this.intervalId = setInterval(() => this.update(), 50);\r\n    }\r\n\r\n    send(action: IAdd | IRemove | ISetBatchState | IUpdateFinished): void {\r\n        this.actions.push(action);\r\n        if (this.actions.length > 20) this.update();\r\n    }\r\n\r\n    private update(): void {\r\n        if (this.actions.length === 0) return;\r\n\r\n        const message = {\r\n            type: MessageType.UPDATE_GEOMETRY,\r\n            modelId: this.modelId,\r\n            actions: this.actions\r\n        } as UpdateGeometryMessage;\r\n        this.actions = [];\r\n\r\n        const transfer = [];\r\n        for (const action of message.actions) {\r\n            if (action.actionType === ActionType.ADD) {\r\n                if (action.positions) transfer.push(action.positions.buffer);\r\n                if (action.indices) transfer.push(action.indices.buffer);\r\n                if (action.normals) transfer.push(action.normals.buffer);\r\n                if (action.uvs) transfer.push(action.uvs.buffer);\r\n                if (action.pointSizes) transfer.push(action.pointSizes.buffer);\r\n            }\r\n        }\r\n\r\n        postMessage(message, transfer);\r\n    }\r\n\r\n    removePendingUpdateFinishedAction(): void {\r\n        this.actions = this.actions.filter(a => a.actionType !== ActionType.UPDATE_FINISHED);\r\n    }\r\n\r\n    dispose(): void {\r\n        clearInterval(this.intervalId);\r\n    }\r\n}\r\n","import { BatchPrototype } from \"./BatchCluster\";\r\nimport { BatchCluster, GeometryCluster, PointCluster } from \"./BatchCluster\";\r\nimport { InstanceManager } from \"./InstanceManager\";\r\nimport { GeometryManager } from \"./GeometryManager\";\r\n\r\nimport { Trimble } from \"../TrimBim_generated\";\r\nimport { GeometryData, ObjectBatchGeometryContainer } from \"./GeometryBuilders/GeometryBuilder\";\r\nimport { ObjectType } from \"../Model/ModelBuilderTypes\";\r\nimport { ModelEntityState } from \"./ModelEntityState\";\r\nimport {\r\n    DisplayGroup,\r\n    mergeGroups,\r\n    subtractGroups\r\n} from \"@technology/webgl-viewer/dist/esnext/Rendering/DisplayGroup\";\r\nimport { LodManager } from \"./LodManager\";\r\nimport { GeometryUpdateMessenger } from \"./GeometryUpdateMessenger\";\r\nimport {LayerManager} from \"./LayerManager\";\r\n\r\nexport class ClusterManager {\r\n    private grid_size: number;\r\n    clusterLUT: Map<string, GeometryCluster>;\r\n    private _instanceIdToClusters: Map<number, Set<GeometryCluster>>;\r\n    private _instanceIdToBatches: Map<number, Set<BatchPrototype>>;\r\n    messenger: GeometryUpdateMessenger;\r\n\r\n    constructor(\r\n        private modelId: string,\r\n        private _model: Trimble.Technology.TrimBim.Fbs.Model,\r\n        private _im: InstanceManager,\r\n        private _geom: GeometryManager,\r\n        private _lodManager: LodManager,\r\n        private _layerManager: LayerManager,\r\n        private _modelState: ModelEntityState,\r\n        private materialIds: number[]\r\n    ) {\r\n        this.clusterLUT = new Map();\r\n        this._instanceIdToClusters = new Map();\r\n        this._instanceIdToBatches = new Map();\r\n        this.messenger = new GeometryUpdateMessenger(modelId);\r\n\r\n        const distance = _im.worldBoundingbox.min.distanceTo(_im.worldBoundingbox.max);\r\n\r\n        this.grid_size = this._lodManager.getClusterSize(distance);\r\n\r\n        for (let i = 0, length = _im.boundingBoxes.length / 6; i < length; i++) {\r\n            const geometries = _geom.getGeometries(i, false);\r\n            for (const geometry of geometries) {\r\n                const clusterId = this.generateClusterId(geometry, i);\r\n                const cluster = this.getCluster(clusterId);\r\n\r\n                expandClusterBoundingBox(cluster, this._im.boundingBoxes, i);\r\n                const objectSize = this.getSize(i);\r\n                const prototype = cluster.insertObject(geometry, i, objectSize);\r\n                this.addInstanceToBatchMapping(i, prototype);\r\n\r\n                if (!this._instanceIdToClusters.has(i)) this._instanceIdToClusters.set(i, new Set());\r\n                this._instanceIdToClusters.get(i).add(cluster);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addInstanceToBatchMapping(instanceId: number, batch: BatchPrototype): void {\r\n        if (!this._instanceIdToBatches.has(instanceId))\r\n            this._instanceIdToBatches.set(instanceId, new Set());\r\n        this._instanceIdToBatches.get(instanceId).add(batch);\r\n    }\r\n\r\n    /**\r\n     * Changes the material for the ids with a non-destructive change\r\n     * @param  {number} materialId\r\n     * @param  {number[]} instanceIds\r\n     */\r\n    public setMaterial(instanceIds: number[], materialId: number): void {\r\n        instanceIds.sort((a, b) => a - b);\r\n\r\n        const removed: Map<GeometryCluster, Set<number>> = new Map();\r\n        const added: Set<GeometryCluster> = new Set();\r\n\r\n        // Create new clusters\r\n        for (const id of instanceIds) {\r\n\r\n            const geometries = this._geom.getGeometries(id, false);\r\n            const oldClusters = this._instanceIdToClusters.get(id);\r\n\r\n            for (const oldCluster of oldClusters) {\r\n                if (oldCluster.materialId === materialId) continue;\r\n\r\n                removed.has(oldCluster)\r\n                    ? removed.get(oldCluster).add(id)\r\n                    : removed.set(oldCluster, new Set<number>().add(id));\r\n\r\n                const newClusterId = oldCluster.id.slice();\r\n                newClusterId[3] = materialId;\r\n                const cluster = this.getCluster(newClusterId);\r\n\r\n                oldClusters.delete(oldCluster);\r\n                oldClusters.add(cluster);\r\n\r\n                expandClusterBoundingBox(cluster, this._im.boundingBoxes, id);\r\n\r\n                this.populateCluster(cluster, id, geometries);\r\n\r\n                added.add(cluster);\r\n            }\r\n        }\r\n\r\n        added.forEach(cluster => cluster.removeGeometry());\r\n\r\n        // Update old clusters\r\n        this.removeInstanceIdsFromClusters(removed);\r\n    }\r\n\r\n    public getMaterialId(instanceId: number): number {\r\n        return this._instanceIdToClusters.get(instanceId).values().next().value.materialId;\r\n    }\r\n\r\n    getInstanceIds(): number[] {\r\n        return Array.from(this._instanceIdToClusters.keys());\r\n    }\r\n\r\n    public calculateRanges(locations: Array<{ geometry: GeometryData; start: number; batch: BatchPrototype }>): DisplayGroup[] {\r\n        const ranges: DisplayGroup[] = [];\r\n        for (const { geometry, start } of locations) {\r\n            const count = geometry.indicesLength !== 0\r\n                ? geometry.indicesLength\r\n                : (geometry.positionsLength / 3);\r\n\r\n            ranges.push({ start, count });\r\n        }\r\n        return ranges;\r\n    }\r\n\r\n    resetMaterials(instanceIds: number[]): void {\r\n        instanceIds.sort((a, b) => a - b);\r\n\r\n        const removed: Map<GeometryCluster, Set<number>> = new Map();\r\n        const added: Set<GeometryCluster> = new Set();\r\n\r\n        // Create new clusters\r\n        for (const instanceId of instanceIds) {\r\n            const geometries = this._geom.getGeometries(instanceId, false);\r\n            const clusters = this._instanceIdToClusters.get(instanceId);\r\n            for (const currentCluster of clusters) {\r\n                for (const geometry of geometries) {\r\n                    if (!currentCluster.belongsToCluster(geometry)) continue;\r\n                    if (geometry.positionsLength === 0) continue;\r\n\r\n                    const clusterId = this.generateClusterId(geometry, instanceId);\r\n                    const newCluster = this.getCluster(clusterId);\r\n                    if (currentCluster === newCluster) continue;\r\n                    expandClusterBoundingBox(newCluster, this._im.boundingBoxes, instanceId);\r\n\r\n                    if (removed.has(currentCluster)) {\r\n                        removed.get(currentCluster).add(instanceId);\r\n                    } else {\r\n                        removed.set(currentCluster, new Set<number>().add(instanceId));\r\n                    }\r\n\r\n                    const objectSize = this.getSize(instanceId);\r\n                    const prototype = newCluster.insertObject(geometry, instanceId, objectSize);\r\n\r\n                    this.restoreInstanceState(instanceId, prototype, geometry);\r\n\r\n                    clusters.delete(currentCluster);\r\n                    clusters.add(newCluster);\r\n                    this.addInstanceToBatchMapping(instanceId, prototype);\r\n                    added.add(newCluster);\r\n                }\r\n            }\r\n        }\r\n\r\n        added.forEach(cluster => cluster.removeGeometry());\r\n\r\n        // Update old clusters\r\n        this.removeInstanceIdsFromClusters(removed);\r\n    }\r\n\r\n    private restoreInstanceState(instanceId: number, batch: BatchPrototype, geometry: GeometryData): void {\r\n        const entityId = this._geom.getEntityId(instanceId);\r\n        if (this._modelState.isSelected(entityId) || !this._modelState.isVisible(entityId) || !this._layerManager.isVisibleByLayer(instanceId)) {\r\n            const locationIndex = batch.instances.indexOf(instanceId);\r\n            const start = batch.indexOffset[locationIndex];\r\n            const location = { batch, geometry, start };\r\n\r\n            if (this._modelState.isSelected(entityId))\r\n                batch.state.selected = mergeGroups(batch.state.selected.concat(this.calculateRanges([location])));\r\n            if (!this._modelState.isVisible(entityId) || !this._layerManager.isVisibleByLayer(instanceId))\r\n                batch.state.visible = subtractGroups(batch.state.visible, this.calculateRanges([location]));\r\n        }\r\n    }\r\n\r\n    private removeInstanceIdsFromClusters(removeActions: Map<GeometryCluster, Set<number>>): void {\r\n        for (const [cluster, idsToRemove] of removeActions.entries()) {\r\n\r\n            const currentIds = cluster.getInstanceIds();\r\n            currentIds.sort((a, b) => a - b);\r\n\r\n            cluster.removeGeometry();\r\n            cluster.clearBatches();\r\n            for (const instanceId of currentIds) {\r\n                if (!idsToRemove.has(instanceId)) {\r\n                    const geometries = this._geom.getGeometries(instanceId, false);\r\n                    this.populateCluster(cluster, instanceId, geometries);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private populateCluster(cluster: GeometryCluster, instanceId: number, geometries: GeometryData[]): void {\r\n        const objectSize = this.getSize(instanceId);\r\n        for (const geometry of geometries) {\r\n            if (cluster.belongsToCluster(geometry)) {\r\n                const prototype = cluster.insertObject(geometry, instanceId, objectSize);\r\n                this.restoreInstanceState(instanceId, prototype, geometry);\r\n                this.addInstanceToBatchMapping(instanceId, prototype);\r\n            }\r\n        }\r\n    }\r\n\r\n    private generateClusterId = (() => {\r\n        const aabb = new Float64Array(6);\r\n        let x = 0.0;\r\n        let y = 0.0;\r\n        let z = 0.0;\r\n\r\n        const modelGeometry = this._model.geometry();\r\n        const instance = new Trimble.Technology.TrimBim.Fbs.GeometryInstance();\r\n\r\n        return (geometry: GeometryData, instanceId: number): Int32Array => {\r\n            const clusterId = new Int32Array(6);\r\n            modelGeometry.instances(instanceId, instance);\r\n            const materialId = isNaN(geometry.materialId) ? this.materialIds[instance.surfaceMaterialId()] : geometry.materialId;\r\n\r\n            if ( this._im.boundingBoxes ) {\r\n                x = ( 0.5*( this._im.boundingBoxes[ instanceId*6     ] + this._im.boundingBoxes[ instanceId*6 + 3 ] ) );\r\n                y = ( 0.5*( this._im.boundingBoxes[ instanceId*6 + 1 ] + this._im.boundingBoxes[ instanceId*6 + 4 ] ) );\r\n                z = ( 0.5*( this._im.boundingBoxes[ instanceId*6 + 2 ] + this._im.boundingBoxes[ instanceId*6 + 5 ] ) );\r\n            } else {\r\n                this._im.getInstanceAABB( instanceId, aabb );\r\n\r\n                x = ( 0.5*( aabb[ 0 ] + aabb[ 3 ] ) );\r\n                y = ( 0.5*( aabb[ 1 ] + aabb[ 4 ] ) );\r\n                z = ( 0.5*( aabb[ 2 ] + aabb[ 5 ] ) );\r\n            }\r\n\r\n            const x_diff = x % this.grid_size;\r\n            const y_diff = y % this.grid_size;\r\n            const z_diff = z % this.grid_size;\r\n\r\n            clusterId[ 0 ] = x - x_diff;\r\n            clusterId[ 1 ] = y - y_diff;\r\n            clusterId[ 2 ] = z - z_diff;\r\n            clusterId[ 3 ] = materialId;\r\n            clusterId[ 4 ] = geometry.objectType;\r\n            clusterId[ 5 ] = geometry.text ? geometry.text.checksum : 0;\r\n\r\n            return clusterId;\r\n        }\r\n    })();\r\n\r\n    public getBatchGeometryByInstanceIds(instanceIds: number[]): Map<number, ObjectBatchGeometryContainer[]> {\r\n        const batches: Map<number, ObjectBatchGeometryContainer[]> = new Map();\r\n\r\n        for (const id of instanceIds) {\r\n            const geometries = this._geom.getGeometries(id, false);\r\n            const instanceBatches = this._instanceIdToBatches.get(id);\r\n            for (const batch of instanceBatches) {\r\n                const locationIndex = batch.instances.indexOf(id);\r\n\r\n                if (locationIndex === -1)\r\n                    throw new Error(\"Inconsistency error: selection not found in batch.\");\r\n\r\n                const start = batch.indexOffset[locationIndex];\r\n\r\n                for (const geometry of geometries) {\r\n                    if (this.belongsToBatchPrototype(geometry, batch)) {\r\n                        const location = { geometry: geometry, start: start, batch: batch } as ObjectBatchGeometryContainer;\r\n                        batches.has(batch.id)\r\n                            ? batches.get(batch.id).push(location)\r\n                            : batches.set(batch.id, [location]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return batches;\r\n    }\r\n\r\n    private belongsToBatchPrototype(geometry: GeometryData, prototype: BatchPrototype): boolean {\r\n        if (!geometry.text && !prototype.text) return true;\r\n        if (!geometry.text || !prototype.text) return false;\r\n        return geometry.text.checksum === prototype.text.checksum;\r\n    }\r\n\r\n    private getSize = (() => {\r\n        const aabb = new Float64Array(6);\r\n        return( i: number ) => {\r\n            let x = 0;\r\n            let y = 0;\r\n            let z = 0;\r\n            if( this._im.boundingBoxes ) {\r\n                x = this._im.boundingBoxes[ i*6 + 3 ] - this._im.boundingBoxes[ i*6     ];\r\n                y = this._im.boundingBoxes[ i*6 + 4 ] - this._im.boundingBoxes[ i*6 + 1 ];\r\n                z = this._im.boundingBoxes[ i*6 + 5 ] - this._im.boundingBoxes[ i*6 + 2 ];\r\n            } else {\r\n                this._im.getInstanceAABB( i, aabb );\r\n                x = aabb[ 3 ] - aabb[ 0 ];\r\n                y = aabb[ 4 ] - aabb[ 1 ];\r\n                z = aabb[ 5 ] - aabb[ 2 ];\r\n            }\r\n            return Math.sqrt( x*x + y*y + z*z );\r\n        }\r\n    })();\r\n\r\n    private getCluster(id: Int32Array): GeometryCluster {\r\n        const stringId = `${id[0]},${id[1]},${id[2]},${id[3]},${id[4]},${id[5]}`;\r\n\r\n        if (this.clusterLUT.has(stringId)) {\r\n            return this.clusterLUT.get(stringId);\r\n        } else {\r\n            const cluster = this.createCluster(id);\r\n            this.clusterLUT.set(stringId, cluster);\r\n\r\n            return cluster;\r\n        }\r\n    }\r\n\r\n    private createCluster(id: Int32Array): GeometryCluster {\r\n        if (id[4] === ObjectType.POINT || id[4] === ObjectType.ATTENUATED_POINT) {\r\n            return new PointCluster(this.modelId, id, this._im, this._geom, this.messenger, this._lodManager);\r\n        } else {\r\n            return new GeometryCluster(this.modelId, id, this._im, this._geom, this.messenger, this._lodManager);\r\n        }\r\n    }\r\n\r\n    dispose(): void {\r\n        this.messenger.dispose();\r\n    }\r\n}\r\n\r\nexport function expandClusterBoundingBox(cluster: BatchCluster, boundingBoxes: Float64Array | number[], i: number ): BatchCluster {\r\n    const min = [0.0, 0.0, 0.0];\r\n    const max = [0.0, 0.0, 0.0];\r\n\r\n    min[0] = boundingBoxes[ i*6     ];\r\n    min[1] = boundingBoxes[ i*6 + 1 ];\r\n    min[2] = boundingBoxes[ i*6 + 2 ];\r\n\r\n    max[0] = boundingBoxes[ i*6 + 3 ];\r\n    max[1] = boundingBoxes[ i*6 + 4 ];\r\n    max[2] = boundingBoxes[ i*6 + 5 ];\r\n\r\n    if (cluster.min === undefined || cluster.max === undefined ) {\r\n        cluster.min = new Float64Array(min);\r\n        cluster.max = new Float64Array(max);\r\n    } else {\r\n        cluster.min[0] = cluster.min[0] < min[0] ? cluster.min[0] : min[0];\r\n        cluster.min[1] = cluster.min[1] < min[1] ? cluster.min[1] : min[1];\r\n        cluster.min[2] = cluster.min[2] < min[2] ? cluster.min[2] : min[2];\r\n\r\n        cluster.max[0] = cluster.max[0] > max[0] ? cluster.max[0] : max[0];\r\n        cluster.max[1] = cluster.max[1] > max[1] ? cluster.max[1] : max[1];\r\n        cluster.max[2] = cluster.max[2] > max[2] ? cluster.max[2] : max[2];\r\n    }\r\n    return cluster;\r\n}\r\n","import { GeometryData, GeometryBuilder } from \"./GeometryBuilder\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { HitPoint } from \"../HitPoint\";\r\nimport { Box3, Frustum, Matrix4, Ray, Vector2, Vector3 } from \"../ThreeMath\";\r\nimport { InstanceManager } from \"../InstanceManager\";\r\nimport { BatchCluster } from \"../BatchCluster\";\r\nimport { expandClusterBoundingBox } from \"../ClusterManager\";\r\nimport { ObjectType } from \"../../Model/ModelBuilderTypes\";\r\nimport { LodManager } from \"../LodManager\";\r\nimport { TrimbimGeometryType } from \"../../common\";\r\nimport { pickOnLineString } from \"../Pickers\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport {GeometryType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class AlignmentGeometryBuilder extends GeometryBuilder {\r\n    readonly snapGeometryType = GeometryType.LINE;\r\n    private grid: Map<string, BatchCluster>;\r\n    private horizontSegmentOffsets: Map<number, number[]>;\r\n    private grid_size: number;\r\n\r\n    public readonly geometryType = TrimbimGeometryType.AlignmentCurve;\r\n\r\n    constructor(private modelId: string, geometry: Fbs.ModelGeometry, private instanceManager: InstanceManager, private _lodManager: LodManager) {\r\n        super(geometry);\r\n        this.indexAlignments();\r\n        this.prepareModelTypes();\r\n    }\r\n\r\n    private indexAlignments(): void {\r\n        this.grid_size = this._lodManager.getAlignmentClusterSize();\r\n        this.horizontSegmentOffsets = new Map();\r\n\r\n        this.grid = new Map();\r\n\r\n        const placement = new Matrix4();\r\n        const vec3 = new Vector3();\r\n        const id = new Int32Array([0, 0, 0]);\r\n        const boundingBox = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0];\r\n\r\n        const instance = new Fbs.GeometryInstance();\r\n        const definition = new Fbs.GeometryDefinition();\r\n\r\n        for (let instanceId = 0, instancesLength = this.geometry.instancesLength(); instanceId < instancesLength; instanceId++) {\r\n            this.geometry.instances(instanceId, instance);\r\n            this.geometry.definitions(instance.definitionId(), definition);\r\n\r\n            if (definition.type() === TrimbimGeometryType.AlignmentCurve) {\r\n                const alignment = this.geometry.alignmentCurves(definition.index()); // is this correct?\r\n                const spans = AlignmentGeometryBuilder.buildSpans(alignment, 0.1);\r\n                const boxes = AlignmentGeometryBuilder.buildSpanBoundingBoxes(alignment, spans);\r\n                let spanIndex = 0;\r\n                if (boxes) {\r\n                    for (const aabb of boxes) {\r\n                        this.instanceManager.getInstanceTransform(instanceId, placement);\r\n                        aabb.applyMatrix4(placement);\r\n                        aabb.getCenter(vec3);\r\n\r\n                        const x_diff = vec3.x % this.grid_size;\r\n                        const y_diff = vec3.y % this.grid_size;\r\n                        const z_diff = vec3.z % this.grid_size;\r\n\r\n                        id[0] = vec3.x - x_diff;\r\n                        id[1] = vec3.y - y_diff;\r\n                        id[2] = vec3.z - z_diff;\r\n\r\n                        const strId = `${id[0]},${id[1]},${id[2]}`;\r\n                        aabb.min.toArray(boundingBox, 0);\r\n                        aabb.max.toArray(boundingBox, 3);\r\n\r\n                        const span = spans[spanIndex];\r\n                        span.instanceId = instanceId;\r\n                        span.first = spanIndex === 0;\r\n                        span.last = spanIndex === boxes.length - 1;\r\n\r\n                        if (this.grid.has(strId)) {\r\n                            const cluster = this.grid.get(strId);\r\n                            expandClusterBoundingBox(cluster, boundingBox, 0);\r\n                        } else {\r\n                            const cluster = new BatchCluster(this.modelId, new Int32Array(id));\r\n                            expandClusterBoundingBox(cluster, boundingBox, 0);\r\n                            this.grid.set(strId, cluster);\r\n                        }\r\n\r\n                        spanIndex++;\r\n                    }\r\n                }\r\n\r\n                const horCurve = alignment.horizontalCurve();\r\n                let horizontalDistance = horCurve.startAlongDistance();\r\n                const horizontSegmentOffsets = [];\r\n\r\n                for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\r\n                    horizontSegmentOffsets.push(horizontalDistance);\r\n                    const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\r\n                    horizontalDistance += segment.segmentLength();\r\n                }\r\n\r\n                this.horizontSegmentOffsets.set(instanceId, horizontSegmentOffsets);\r\n            }\r\n        }\r\n    }\r\n\r\n    public prepareModelTypes(): void {\r\n        for (let i = 0; i < this.geometry.alignmentCurvesLength(); i++) {\r\n            const alignment = this.geometry.alignmentCurves(i);\r\n            this.buffers[i] = this.calculateBufferSizes(alignment);\r\n        }\r\n    }\r\n\r\n    getGeometries(geometryIndex: number, buildIfEmpty: boolean = true): GeometryData[] {\r\n        const geometry = this.buffers[geometryIndex];\r\n\r\n        if (geometry && !geometry.positions && buildIfEmpty) {\r\n            const alignment = this.geometry.alignmentCurves(geometryIndex);\r\n            this.build(alignment, geometry);\r\n        }\r\n\r\n        return [geometry];\r\n    }\r\n\r\n    calculateBufferSizes(alignment: Fbs.AlignmentCurve): GeometryData {\r\n        const tolerance = 0.1; // to say something (TODO)\r\n        const totalLength = AlignmentGeometryBuilder.computeTesselationCount(alignment, tolerance) * 6;\r\n\r\n        return {\r\n            objectType: ObjectType.LINE,\r\n            indicesLength: 0,\r\n            positionsLength: totalLength,\r\n            normalsLength: 0,\r\n            uvsLength: 0,\r\n            pointSizesLength: 0,\r\n            indexPointer: 0,\r\n            positionPointer: 0\r\n        };\r\n    }\r\n\r\n    build(\r\n        alignment: Fbs.AlignmentCurve,\r\n        buffer: GeometryData\r\n    ): void {\r\n        buffer.positions = new Float64Array(buffer.positionsLength);\r\n        buffer.normals = new Int16Array(buffer.normalsLength);\r\n        const tolerance = 0.1; // to say something (TODO)\r\n        AlignmentGeometryBuilder.buildSegments(alignment, tolerance, buffer);\r\n    }\r\n\r\n    pick(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return this.pickLine(geometryIndex, ray, frustum);\r\n    }\r\n\r\n    pickFace(geometryIndex: number, ray: Ray): HitPoint[] {\r\n        return;\r\n    }\r\n\r\n    pickLine(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return pickOnLineString(this.getGeometries(geometryIndex)[0].positions, ray).filter(h => frustum.containsPoint(h.point));\r\n    }\r\n\r\n    pickPoint(geometryIndex: number, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        return;\r\n    }\r\n\r\n    public static buildSpanBoundingBoxes = (() => {\r\n        const point = new Vector3();\r\n        const xy = new Vector2();\r\n\r\n        return (alignment: Trimble.Technology.TrimBim.Fbs.AlignmentCurve, spans: Span[]) => {\r\n            const boundingBoxes: Box3[] = [];\r\n\r\n            if (null === spans) {\r\n                return;\r\n            }\r\n\r\n            const horCurve = alignment.horizontalCurve();\r\n            const horizontalDistance = horCurve.startAlongDistance();\r\n            const horizontSegmentOffsets = [];\r\n\r\n            {\r\n                let distance = horizontalDistance;\r\n                for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\r\n                    horizontSegmentOffsets.push(distance);\r\n                    const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\r\n                    distance += segment.segmentLength();\r\n                }\r\n            }\r\n\r\n            const verCurve = alignment.verticalCurve();\r\n            for (const span of spans) {\r\n                if (span.hasHorizontalCurve && span.hasVerticalCurve) {\r\n                    const boundingBox = new Box3();\r\n\r\n                    const hSegType = horCurve.segmentTypes(span.horizontalCurveIndex);\r\n                    const horizontalSegment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(\r\n                        horCurve,\r\n                        span.horizontalCurveIndex\r\n                    );\r\n\r\n                    const vSegType = verCurve.segmentTypes(span.verticalCurveIndex);\r\n                    const verticalSegment = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(\r\n                        verCurve,\r\n                        span.verticalCurveIndex\r\n                    );\r\n                    const horizontalCount = AlignmentGeometryBuilder.getTessellationCountHorizontal(\r\n                        hSegType\r\n                    ); // doesn't seem like these are very used => , span.StartDistance, span.HorizontalLength);\r\n                    const verticalCount = AlignmentGeometryBuilder.getTessellationCountVertical(vSegType); // doesn't seem like these are very used => , span.StartDistance, span.HorizontalLength);\r\n\r\n                    const tessellationCount = Math.max(horizontalCount, verticalCount);\r\n\r\n                    const horizontalSegmentOffset =\r\n                        horizontSegmentOffsets[span.horizontalCurveIndex];\r\n\r\n                    for (let i = 0; i <= tessellationCount; i++) {\r\n                        const distanceStart = span.startDistance;\r\n                        const distanceLength = span.horizontalLength;\r\n                        const scale = i / tessellationCount;\r\n                        const distance = distanceStart + scale * distanceLength;\r\n                        const length = distance - horizontalSegmentOffset;\r\n\r\n                        AlignmentGeometryBuilder.horizontalSegmentGetPointAt(\r\n                            hSegType,\r\n                            horizontalSegment,\r\n                            length,\r\n                            xy\r\n                        );\r\n                        point.set(\r\n                            xy.x,\r\n                            xy.y,\r\n                            AlignmentGeometryBuilder.segmentGetElevationAt(\r\n                                vSegType,\r\n                                verticalSegment,\r\n                                distance\r\n                            )\r\n                        );\r\n\r\n                        boundingBox.expandByPoint(point);\r\n                    }\r\n\r\n                    boundingBoxes.push(boundingBox);\r\n                }\r\n            }\r\n\r\n            return boundingBoxes;\r\n        };\r\n    })();\r\n\r\n    public static computeTesselationCount(\r\n        alignment: Fbs.AlignmentCurve,\r\n        tolerance: number\r\n    ): number {\r\n        let totalTesselationCount = 0;\r\n        const spans = AlignmentGeometryBuilder.buildSpans(alignment, tolerance);\r\n\r\n        if (null === spans) {\r\n            return;\r\n        }\r\n\r\n        const horCurve = alignment.horizontalCurve();\r\n        const horizontalDistance = horCurve.startAlongDistance();\r\n        const horizontSegmentOffsets = [];\r\n\r\n        {\r\n            let distance = horizontalDistance;\r\n            for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\r\n                horizontSegmentOffsets.push(distance);\r\n                const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\r\n                distance += segment.segmentLength();\r\n            }\r\n        }\r\n\r\n        const verCurve = alignment.verticalCurve();\r\n        for (const span of spans) {\r\n            if (span.hasHorizontalCurve && span.hasVerticalCurve) {\r\n                const hSegType = horCurve.segmentTypes(span.horizontalCurveIndex);\r\n                const vSegType = verCurve.segmentTypes(span.verticalCurveIndex);\r\n                const horizontalCount = AlignmentGeometryBuilder.getTessellationCountHorizontal(hSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\r\n                const verticalCount = AlignmentGeometryBuilder.getTessellationCountVertical(vSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\r\n\r\n                const tessellationCount = Math.max(horizontalCount, verticalCount);\r\n\r\n                totalTesselationCount += tessellationCount;\r\n            }\r\n        }\r\n        return totalTesselationCount;\r\n    }\r\n\r\n    public static buildSegments = (() => {\r\n        const previousXy = new Vector2();\r\n        const xy = new Vector2();\r\n        const point = new Vector3();\r\n        const previous = new Vector3();\r\n\r\n        return (\r\n            alignment: Trimble.Technology.TrimBim.Fbs.AlignmentCurve,\r\n            tolerance: number,\r\n            buffer: GeometryData\r\n        ) => {\r\n            const spans = AlignmentGeometryBuilder.buildSpans(alignment, tolerance);\r\n\r\n            if (null === spans) {\r\n                return;\r\n            }\r\n\r\n            const horCurve = alignment.horizontalCurve();\r\n            let horizontalDistance = horCurve.startAlongDistance();\r\n            const horizontSegmentOffsets = [];\r\n\r\n            for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\r\n                horizontSegmentOffsets.push(horizontalDistance);\r\n                const segment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\r\n                horizontalDistance += segment.segmentLength();\r\n            }\r\n\r\n            const verCurve = alignment.verticalCurve();\r\n            for (const span of spans) {\r\n                if (span.hasHorizontalCurve && span.hasVerticalCurve) {\r\n                    const hSegType = horCurve.segmentTypes(span.horizontalCurveIndex);\r\n                    const horizontalSegment = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(\r\n                        horCurve,\r\n                        span.horizontalCurveIndex\r\n                    );\r\n\r\n                    const vSegType = verCurve.segmentTypes(span.verticalCurveIndex);\r\n                    const verticalSegment = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(\r\n                        verCurve,\r\n                        span.verticalCurveIndex\r\n                    );\r\n                    const horizontalCount = AlignmentGeometryBuilder.getTessellationCountHorizontal(\r\n                        hSegType\r\n                    ); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\r\n                    const verticalCount = AlignmentGeometryBuilder.getTessellationCountVertical(vSegType); // doesn't seem like these are vere used => , span.StartDistance, span.HorizontalLength);\r\n\r\n                    const tessellationCount = Math.max(horizontalCount, verticalCount);\r\n\r\n                    const horizontalSegmentOffset =\r\n                        horizontSegmentOffsets[span.horizontalCurveIndex];\r\n\r\n                    AlignmentGeometryBuilder.horizontalSegmentGetPointAt(\r\n                        hSegType,\r\n                        horizontalSegment,\r\n                        span.startDistance - horizontalSegmentOffset,\r\n                        previousXy\r\n                    );\r\n                    previous.set(\r\n                        previousXy.x,\r\n                        previousXy.y,\r\n                        AlignmentGeometryBuilder.segmentGetElevationAt(\r\n                            vSegType,\r\n                            verticalSegment,\r\n                            span.startDistance\r\n                        )\r\n                    );\r\n\r\n                    let previousDistance = span.startDistance;\r\n\r\n                    for (let i = 1; i <= tessellationCount; i++) {\r\n                        const distanceStart = span.startDistance;\r\n                        const distanceLength = span.horizontalLength;\r\n                        const scale = i / tessellationCount;\r\n                        const distance = distanceStart + scale * distanceLength;\r\n\r\n                        AlignmentGeometryBuilder.horizontalSegmentGetPointAt(\r\n                            hSegType,\r\n                            horizontalSegment,\r\n                            distance - horizontalSegmentOffset,\r\n                            xy\r\n                        );\r\n                        point.set(\r\n                            xy.x,\r\n                            xy.y,\r\n                            AlignmentGeometryBuilder.segmentGetElevationAt(\r\n                                vSegType,\r\n                                verticalSegment,\r\n                                distance\r\n                            )\r\n                        );\r\n\r\n                        buffer.positions[buffer.positionPointer] = previous.x;\r\n                        buffer.positions[buffer.positionPointer + 1] = previous.y;\r\n                        buffer.positions[buffer.positionPointer + 2] = previous.z;\r\n\r\n                        buffer.positions[buffer.positionPointer + 3] = point.x;\r\n                        buffer.positions[buffer.positionPointer + 4] = point.y;\r\n                        buffer.positions[buffer.positionPointer + 5] = point.z;\r\n                        buffer.positionPointer += 6;\r\n\r\n                        previous.copy(point);\r\n                        previousDistance = distance;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    })();\r\n\r\n    static horizontalCurveGetSegmentAt(horCurve: Trimble.Technology.TrimBim.Fbs.HorizontalCurve, index: number): Fbs.HorizontalLineSegment | Fbs.HorizontalCircularArcSegment | Fbs.HorizontalClothoidalArcSegment| Fbs.HorizontalTransitionArcSegment{\r\n        let counter = 0;\r\n        const segType = horCurve.segmentTypes(index);\r\n\r\n        for (let i = 0; i < index; i++) {\r\n            if (horCurve.segmentTypes(i) === segType) {\r\n                counter = counter + 1;\r\n            }\r\n        }\r\n\r\n        switch (segType) {\r\n            case Fbs.HorizontalSegmentType.LineSegment:\r\n                return horCurve.lineSegments(counter);\r\n            case Fbs.HorizontalSegmentType.CircularArcSegment:\r\n                return horCurve.circularArcSegments(counter);\r\n            case Fbs.HorizontalSegmentType.ClothoidalArcSegment:\r\n                return horCurve.clothoidalArcSegments(counter);\r\n            case Fbs.HorizontalSegmentType.TransientCurveSegment:\r\n                return horCurve.transitionArcSegments(counter);\r\n        }\r\n    }\r\n\r\n    static verticalCurveGetSegmentAt(verCurve: Fbs.VerticalCurve, index: number): Fbs.VerticalLineSegment | Fbs.VerticalCircularArcSegment | Fbs.VerticalParabolicArcSegment {\r\n        let counter = 0;\r\n        const segType = verCurve.segmentTypes(index);\r\n\r\n        for (let i = 0; i < index; i++) {\r\n            if (verCurve.segmentTypes(i) === segType) {\r\n                counter = counter + 1;\r\n            }\r\n        }\r\n\r\n        switch (segType) {\r\n            case Fbs.VerticalSegmentType.LineSegment:\r\n                return verCurve.lineSegments(counter);\r\n            case Fbs.VerticalSegmentType.CircularArcSegment:\r\n                return verCurve.circularArcSegments(counter);\r\n            case Fbs.VerticalSegmentType.ParabolicArcSegment:\r\n                return verCurve.parabolicArcSegments(counter);\r\n        }\r\n    }\r\n\r\n    static horizontalSegmentGetPointAt = (() => {\r\n        const direction = new Vector2();\r\n        const startPoint = new Vector2();\r\n        const angleVec2 = new Vector2();\r\n\r\n        return (\r\n            horizontalSegmentType: Fbs.HorizontalSegmentType,\r\n            horizontalSegment: any,\r\n            distance: number,\r\n            target: Vector2\r\n        ) => {\r\n            switch (horizontalSegmentType) {\r\n                case Fbs.HorizontalSegmentType.LineSegment: {\r\n                    if (distance < 0) {\r\n                        distance = 0;\r\n                    } else if (distance > horizontalSegment.segmentLength()) {\r\n                        distance = horizontalSegment.segmentLength();\r\n                    }\r\n\r\n                    target.setX(\r\n                        horizontalSegment.startPoint().x() +\r\n                            distance * Math.cos(horizontalSegment.startDirection())\r\n                    );\r\n                    target.setY(\r\n                        horizontalSegment.startPoint().y() +\r\n                            distance * Math.sin(horizontalSegment.startDirection())\r\n                    );\r\n                    break;\r\n                }\r\n                case Fbs.HorizontalSegmentType.CircularArcSegment: {\r\n                    const radius = horizontalSegment.radius();\r\n                    const isCCW = horizontalSegment.isCCW();\r\n                    const deltaAngle = distance / radius;\r\n                    const startAngle =\r\n                        horizontalSegment.startDirection() + (isCCW ? -Math.PI : Math.PI) / 2;\r\n\r\n                    const angle = startAngle + (isCCW ? deltaAngle : -deltaAngle);\r\n                    const originDirection =\r\n                        horizontalSegment.startDirection() + (isCCW ? Math.PI : -Math.PI) / 2;\r\n                    direction.set(\r\n                        Math.cos(originDirection) * radius,\r\n                        Math.sin(originDirection) * radius\r\n                    );\r\n\r\n                    startPoint.set(\r\n                        horizontalSegment.startPoint().x(),\r\n                        horizontalSegment.startPoint().y()\r\n                    );\r\n                    startPoint.add(direction);\r\n\r\n                    target.addVectors(\r\n                        startPoint,\r\n                        angleVec2.set(Math.cos(angle) * radius, Math.sin(angle) * radius)\r\n                    );\r\n                    break;\r\n                }\r\n                case Fbs.HorizontalSegmentType.ClothoidalArcSegment: {\r\n                    break;\r\n                }\r\n                case Fbs.HorizontalSegmentType.TransientCurveSegment: {\r\n                    switch (horizontalSegment.type()) {\r\n                        case Fbs.HorizontalTransitionCurveType.ClothoidCurve:\r\n                            if (\r\n                                horizontalSegment.isStartRadiusCCW() ===\r\n                                horizontalSegment.isEndRadiusCCW()\r\n                            ) {\r\n                                return AlignmentGeometryBuilder.segmentClothoidGetPointAt(\r\n                                    horizontalSegment,\r\n                                    distance,\r\n                                    target\r\n                                );\r\n                            }\r\n\r\n                            break;\r\n                        case Fbs.HorizontalTransitionCurveType.BiquadraticParabola:\r\n                        case Fbs.HorizontalTransitionCurveType.BlossCurve:\r\n                        case Fbs.HorizontalTransitionCurveType.CosineCurve:\r\n                        case Fbs.HorizontalTransitionCurveType.SineCurve:\r\n                            console.error(\r\n                                \"horizontal segment of type \" +\r\n                                    horizontalSegment.type() +\r\n                                    \" not yet implemented\"\r\n                            );\r\n                            break;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return new Vector2();\r\n        };\r\n    })();\r\n\r\n    static segmentClothoidGetPointAt = (() => {\r\n        const tmp = new Vector2();\r\n\r\n        return (\r\n            clothoid: Fbs.HorizontalTransitionArcSegment,\r\n            distance: number,\r\n            target: Vector2\r\n        ) => {\r\n            const clothoidSpaceLocation = AlignmentGeometryBuilder.segmentClothoidSpaceLocation(\r\n                clothoid,\r\n                distance\r\n            );\r\n            const u = clothoidSpaceLocation.x;\r\n            const v = clothoidSpaceLocation.y;\r\n            const directionCos = Math.cos(clothoid.startDirection());\r\n            const directionSin = Math.sin(clothoid.startDirection());\r\n            // TODO; replace with vector dot-product...\r\n\r\n            target.set(clothoid.startPoint().x(), clothoid.startPoint().y());\r\n\r\n            if (clothoid.isStartRadiusCCW()) {\r\n                target.add(\r\n                    tmp.set(\r\n                        directionCos * u - directionSin * v,\r\n                        directionSin * u + directionCos * v\r\n                    )\r\n                );\r\n            } else {\r\n                target.add(\r\n                    tmp.set(\r\n                        directionCos * u + directionSin * v,\r\n                        directionSin * u - directionCos * v\r\n                    )\r\n                );\r\n            }\r\n        };\r\n    })();\r\n\r\n    static segmentClothoidSpaceLocation(\r\n        clothoid: Fbs.HorizontalTransitionArcSegment,\r\n        distance: number\r\n    ): Vector2 {\r\n        if (clothoid.startRadius() === clothoid.endRadius()) {\r\n            const resultPoint = new Vector2();\r\n            resultPoint.setX(distance);\r\n            return resultPoint;\r\n        }\r\n\r\n        let aa: number; // b == clothoid parameter squared.\r\n        if (clothoid.startRadius() === 0.0) {\r\n            aa = Math.abs(clothoid.endRadius() * clothoid.segmentLength());\r\n        } else if (clothoid.endRadius() === 0.0) {\r\n            aa = Math.abs(clothoid.startRadius() * clothoid.segmentLength());\r\n        } else {\r\n            aa = Math.abs(\r\n                (clothoid.segmentLength() * clothoid.startRadius() * clothoid.endRadius()) /\r\n                    (clothoid.startRadius() - clothoid.endRadius())\r\n            );\r\n        }\r\n        if (aa === 0) {\r\n            return new Vector2();\r\n        }\r\n        const t1 = clothoid.startRadius() !== 0.0 ? Math.abs(aa / clothoid.startRadius()) : 0.0;\r\n        const t2 = clothoid.endRadius() !== 0.0 ? Math.abs(aa / clothoid.endRadius()) : 0.0;\r\n        const s1 = Math.sign(t2 - t1) * t1;\r\n        const s2 = s1 + distance;\r\n        const e = Math.sign(s1 + s2) * Math.sign(clothoid.startRadius() + clothoid.endRadius());\r\n        const f1 = (e * s1 * s1) / aa / 2.0;\r\n        const f2 = (e * s2 * s2) / aa / 2.0;\r\n        const x1 = s1 * AlignmentGeometryBuilder.cloCos(f1);\r\n        const y1 = s1 * AlignmentGeometryBuilder.cloSin(f1);\r\n        const x2 = s2 * AlignmentGeometryBuilder.cloCos(f2);\r\n        const y2 = s2 * AlignmentGeometryBuilder.cloSin(f2);\r\n        const sf = Math.sin(f1);\r\n        const cf = Math.cos(f1);\r\n        return new Vector2(+cf * (x2 - x1) + sf * (y2 - y1), -sf * (x2 - x1) + cf * (y2 - y1));\r\n    }\r\n\r\n    static cloCos(t: number): number {\r\n        const tt = t * t;\r\n        return (\r\n            1.0 -\r\n            tt *\r\n                (0.1 -\r\n                    tt *\r\n                        (1.0 / 216.0 -\r\n                            tt *\r\n                                (1.0 / 9360.0 -\r\n                                    tt *\r\n                                        (1.0 / 685440.0 -\r\n                                            tt *\r\n                                                (1.0 / 76204800.0 -\r\n                                                    tt *\r\n                                                        (1.0 / 11975040000.0 -\r\n                                                            tt / 2528170444800.0))))))\r\n        );\r\n    }\r\n\r\n    static cloSin(t: number): number {\r\n        const tt = t * t;\r\n        return (\r\n            t *\r\n            (1.0 / 3.0 -\r\n                tt *\r\n                    (1.0 / 42.0 -\r\n                        tt *\r\n                            (1.0 / 1320.0 -\r\n                                tt *\r\n                                    (1.0 / 75600.0 -\r\n                                        tt *\r\n                                            (1.0 / 6894720.0 -\r\n                                                tt *\r\n                                                    (1.0 / 918086400.0 -\r\n                                                        tt *\r\n                                                            (1.0 / 168129561600.0 -\r\n                                                                tt / 40537905408000.0)))))))\r\n        );\r\n    }\r\n\r\n    static segmentGetElevationAt(\r\n        vertSegmentType: Fbs.VerticalSegmentType,\r\n        verticalSegment: Fbs.VerticalLineSegment | Fbs.VerticalCircularArcSegment | Fbs.VerticalParabolicArcSegment,\r\n        distance: number\r\n    ): number {\r\n        const distanceDelta = distance - verticalSegment.startDistAlong();\r\n        if (distanceDelta < 0) {\r\n            distance = 0;\r\n        } else if (distanceDelta > verticalSegment.horizontalLength()) {\r\n            distance = verticalSegment.horizontalLength();\r\n        } else {\r\n            distance = distanceDelta;\r\n        }\r\n\r\n        switch (vertSegmentType) {\r\n            case Fbs.VerticalSegmentType.LineSegment: {\r\n                return verticalSegment.startHeight() + verticalSegment.startGradient() * distance;\r\n            }\r\n            case Fbs.VerticalSegmentType.CircularArcSegment: {\r\n                const segment = verticalSegment as Fbs.VerticalCircularArcSegment;\r\n                const z0 = verticalSegment.startHeight();\r\n                const g1 = verticalSegment.startGradient();\r\n                const r = segment.radius();\r\n                const x = distance;\r\n\r\n                const gx = Math.sqrt(1 + g1 * g1);\r\n                const zc = r / gx;\r\n                if (segment.isConvex()) {\r\n                    let ds = x - r * (g1 / gx);\r\n                    if (ds > r) ds = r; // return only valid values, crop segment length to the provided circle.\r\n                    return z0 + Math.sqrt(r * r - ds * ds) - zc;\r\n                } else {\r\n                    let ds = x + r * (g1 / gx);\r\n                    if (ds > r) ds = r; // return only valid values, crop segment length to the provided circle.\r\n                    return z0 - Math.sqrt(r * r - ds * ds) + zc;\r\n                }\r\n            }\r\n            case Fbs.VerticalSegmentType.ParabolicArcSegment: {\r\n                const segment = verticalSegment as Fbs.VerticalParabolicArcSegment;\r\n                const R = !segment.isConvex()\r\n                    ? segment.parabolaConstant()\r\n                    : -segment.parabolaConstant();\r\n                const z0 = verticalSegment.startHeight();\r\n                const g0 = verticalSegment.startGradient();\r\n                const g1 = distance / R + g0 + g0;\r\n                return (distance * g1) / 2.0 + z0;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getTessellationCountHorizontal(horizontalSegmentType: Fbs.HorizontalSegmentType, lodLevel: number = 1): number {\r\n        switch (horizontalSegmentType) {\r\n            case Fbs.HorizontalSegmentType.LineSegment: {\r\n                return 1;\r\n            }\r\n            case Fbs.HorizontalSegmentType.CircularArcSegment: {\r\n                return lodLevel * 24;\r\n            }\r\n            case Fbs.HorizontalSegmentType.TransientCurveSegment: {\r\n                return lodLevel * 24;\r\n            }\r\n        }\r\n\r\n        return 1;\r\n    }\r\n\r\n    static getTessellationCountVertical(verticalSegmentType: Fbs.VerticalSegmentType, lodLevel: number = 1): number {\r\n        switch (verticalSegmentType) {\r\n            case Fbs.VerticalSegmentType.LineSegment: {\r\n                return 1;\r\n            }\r\n            case Fbs.VerticalSegmentType.CircularArcSegment: {\r\n                return lodLevel * 24;\r\n            }\r\n            case Fbs.VerticalSegmentType.ParabolicArcSegment: {\r\n                return lodLevel * 24;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    static buildSpans(alignmentCurve: Fbs.AlignmentCurve, distanceTolerance: number): Span[] {\r\n        const breaks = AlignmentGeometryBuilder.buildVerticalBreaks(\r\n            alignmentCurve.verticalCurve(),\r\n            distanceTolerance\r\n        );\r\n        if (null === breaks) {\r\n            return null;\r\n        }\r\n\r\n        const spans: Span[] = [];\r\n\r\n        {\r\n            const horCurve = alignmentCurve.horizontalCurve();\r\n            let horizontalDistance = horCurve.startAlongDistance();\r\n            for (let index = 0, l = horCurve.segmentTypesLength(); index < l; index++) {\r\n                breaks.push(new AlignmentBreak(horizontalDistance, false, false, index));\r\n                const curve = AlignmentGeometryBuilder.horizontalCurveGetSegmentAt(horCurve, index);\r\n                const segLength = curve.segmentLength();\r\n                horizontalDistance = horizontalDistance + segLength;\r\n            }\r\n\r\n            // end the horizontal too.\r\n            breaks.push(new AlignmentBreak(horizontalDistance, false, false, -1));\r\n\r\n            breaks.sort((a, b) => {\r\n                if (a.Distance < b.Distance) {\r\n                    return -1;\r\n                }\r\n\r\n                if (a.Distance > b.Distance) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        {\r\n            let verticalIndex = -1;\r\n            let horizontalIndex = -1;\r\n            let hasStart = false;\r\n            let horizontalDistance = Number.MIN_VALUE;\r\n\r\n            for (let i = 0, l = breaks.length; i < l; i++) {\r\n                const b = breaks[i];\r\n                if (hasStart) {\r\n                    if (horizontalIndex !== -1 || verticalIndex !== -1) {\r\n                        if (b.Distance - horizontalDistance > distanceTolerance) {\r\n                            spans.push(\r\n                                new Span(\r\n                                    horizontalIndex !== -1,\r\n                                    verticalIndex !== -1,\r\n                                    horizontalIndex,\r\n                                    verticalIndex,\r\n                                    horizontalDistance,\r\n                                    b.Distance - horizontalDistance\r\n                                )\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (b.IsVertical) {\r\n                    verticalIndex = b.CurveIndex;\r\n                } else {\r\n                    horizontalIndex = b.CurveIndex;\r\n                }\r\n\r\n                hasStart = true;\r\n                horizontalDistance = b.Distance;\r\n            }\r\n        }\r\n        return spans;\r\n    }\r\n\r\n    static buildVerticalBreaks(\r\n        verticalCurve: Fbs.VerticalCurve,\r\n        distanceTolerance: number\r\n    ): AlignmentBreak[] {\r\n        if (verticalCurve.segmentTypesLength() === 0) {\r\n            return null;\r\n        }\r\n\r\n        const alignmentBreaks: AlignmentBreak[] = [];\r\n\r\n        let previousEnd = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(\r\n            verticalCurve,\r\n            0\r\n        ).startDistAlong();\r\n\r\n        for (let i = 0, l = verticalCurve.segmentTypesLength(); i < l; i++) {\r\n            const curve = AlignmentGeometryBuilder.verticalCurveGetSegmentAt(verticalCurve, i);\r\n\r\n            const overlap = previousEnd - curve.startDistAlong();\r\n\r\n            if (overlap > distanceTolerance) {\r\n                // fit values, use previousEnd as the position for this.\r\n                // is any of this valid anymore?\r\n                const usableSegmentLength = curve.horizontalLength() - overlap;\r\n                if (usableSegmentLength > distanceTolerance) {\r\n                    alignmentBreaks.push(new AlignmentBreak(previousEnd, true, true, i));\r\n                    previousEnd += usableSegmentLength;\r\n                }\r\n            } else if (overlap < -distanceTolerance) {\r\n                // add gap\r\n                alignmentBreaks.push(new AlignmentBreak(previousEnd, true, false, -1));\r\n\r\n                // add segment.\r\n                alignmentBreaks.push(new AlignmentBreak(curve.startDistAlong(), true, true, i));\r\n                previousEnd = curve.startDistAlong() + curve.horizontalLength();\r\n            } else {\r\n                // use as it is.\r\n                alignmentBreaks.push(new AlignmentBreak(curve.startDistAlong(), true, true, i));\r\n                previousEnd = curve.startDistAlong() + curve.horizontalLength();\r\n            }\r\n        }\r\n\r\n        alignmentBreaks.push(new AlignmentBreak(previousEnd, true, false, -1));\r\n\r\n        return alignmentBreaks;\r\n    }\r\n}\r\n\r\nexport class AlignmentBreak {\r\n    constructor(distance: number, isVertical: boolean, hasCurve: boolean, curveIndex: number) {\r\n        this.Distance = distance;\r\n        this.IsVertical = isVertical;\r\n        this.HasCurve = hasCurve;\r\n        this.CurveIndex = curveIndex;\r\n    }\r\n\r\n    Distance: number;\r\n    IsVertical: boolean;\r\n    HasCurve: boolean;\r\n    CurveIndex: number;\r\n}\r\n\r\nexport class Span {\r\n    instanceId: number;\r\n    first: boolean;\r\n    last: boolean;\r\n\r\n    constructor(\r\n        public hasHorizontalCurve: boolean,\r\n        public hasVerticalCurve: boolean,\r\n        public horizontalCurveIndex: number,\r\n        public verticalCurveIndex: number,\r\n        public startDistance: number,\r\n        public horizontalLength: number\r\n    ) {}\r\n}\r\n","import {\r\n    Mesh8GeometryBuilder,\r\n    Mesh8TexturedGeometryBuilder,\r\n    MeshGeometryBuilder,\r\n    MeshTexturedGeometryBuilder\r\n} from \"./GeometryBuilders/MeshGeometryBuilder\";\r\nimport {\r\n    BRepGeometryBuilder,\r\n    BRepWithNormalsGeometryBuilder,\r\n    BRepWithUVGeometryBuilder\r\n} from \"./GeometryBuilders/BRepGeometryBuilder\";\r\nimport { GraphicsGeometryBuilder } from \"./GeometryBuilders/GraphicsGeometryBuilder\";\r\nimport { SweptDiskSolidGeometryBuilder } from \"./GeometryBuilders/SweptDiskSolidGeometryBuilder\";\r\nimport { Trimble } from \"../TrimBim_generated\";\r\nimport { HitPoint } from \"./HitPoint\";\r\nimport { GeometryData, GeometryBuilder } from \"./GeometryBuilders/GeometryBuilder\";\r\nimport { TexturedBillboardGeometryBuilder, BillboardTextGeometryBuilder } from \"./GeometryBuilders/BillboardGeometryBuilder\";\r\nimport { TrimbimGeometryType } from \"../common\";\r\nimport { Frustum, Ray } from \"./ThreeMath\";\r\nimport { GridGeometryBuilder } from \"./GeometryBuilders/GridGeometryBuilder\";\r\nimport { AlignmentGeometryBuilder } from \"./GeometryBuilders/AlignmentGeometryBuilder\";\r\nimport { LodManager } from \"./LodManager\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { InstanceManager } from \"./InstanceManager\";\r\nimport {GeometryType, SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class GeometryManager {\r\n    private geometryBuilders: Map<TrimbimGeometryType, GeometryBuilder>;\r\n\r\n    constructor(modelId: string, private geometry: Fbs.ModelGeometry, instanceManager: InstanceManager, private _lodManager: LodManager) {\r\n        this.geometryBuilders = new Map();\r\n\r\n        this.registerGeometryBuilder(new BRepGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new BRepWithNormalsGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new BRepWithUVGeometryBuilder(this.geometry));\r\n\r\n        this.registerGeometryBuilder(new MeshGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new Mesh8GeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new MeshTexturedGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new Mesh8TexturedGeometryBuilder(this.geometry));\r\n\r\n        this.registerGeometryBuilder(new GraphicsGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new SweptDiskSolidGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new GridGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new TexturedBillboardGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new BillboardTextGeometryBuilder(this.geometry));\r\n        this.registerGeometryBuilder(new AlignmentGeometryBuilder(modelId, this.geometry, instanceManager, this._lodManager));\r\n    }\r\n\r\n    getEntityId = (() => {\r\n        const instance = new Fbs.GeometryInstance();\r\n\r\n        return (instanceId: number) => {\r\n            this.geometry.instances(instanceId, instance);\r\n            return instance.entityId();\r\n        };\r\n    })();\r\n\r\n    public registerGeometryBuilder(handler: GeometryBuilder): void {\r\n        this.geometryBuilders.set(handler.geometryType, handler);\r\n    }\r\n\r\n    public getGeometries(instanceId: number, generate: boolean): GeometryData[] {\r\n        const instance = this.geometry.instances(instanceId);\r\n        const definition = this.geometry.definitions(instance.definitionId());\r\n        const type = definition.type() as any as TrimbimGeometryType;\r\n        const geometryIndex: number = definition.index();\r\n\r\n        const builder = this.geometryBuilders.get(type);\r\n        if (!builder) {\r\n            console.warn(\"Unsupported geometry type:\", type);\r\n            return [];\r\n        }\r\n\r\n        return builder.getGeometries(geometryIndex, generate);\r\n    }\r\n\r\n    getIsMesh(geometryType: TrimbimGeometryType): boolean {\r\n        return this.geometryBuilders.has(geometryType) && this.geometryBuilders.get(geometryType).snapGeometryType === GeometryType.MESH;\r\n    }\r\n\r\n    public pick(definition: Fbs.GeometryDefinition, snapType: SnapType, ray: Ray, frustum: Frustum): HitPoint[] {\r\n        const type: number = definition.type();\r\n        const geometryIndex: number = definition.index();\r\n\r\n        const gb = this.geometryBuilders.get(type);\r\n        if (gb === undefined) return;\r\n        const points = snapType === SnapType.POINT ? gb.pickPoint(geometryIndex, ray, frustum) :\r\n                       snapType === SnapType.LINE ? gb.pickLine(geometryIndex, ray, frustum) :\r\n                       snapType === SnapType.FACE ? gb.pickFace(geometryIndex, ray, frustum) :\r\n                       gb.pick(geometryIndex, ray, frustum);\r\n        if (points) {\r\n            for (const p of points)\r\n                p.snapGeometryType = gb.snapGeometryType;\r\n        }\r\n        return points;\r\n    }\r\n}\r\n","import { ITextureMessage, ITrimbimMaterialsMessage, MessageType } from \"./ThreadWorkerMessages\";\r\nimport { Trimble } from \"../TrimBim_generated\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { IMetaMaterial } from \"../Model/ModelBuilderTypes\";\r\nimport TextureType = Trimble.Technology.TrimBim.Fbs.TextureType;\r\n\r\ndeclare var self: DedicatedWorkerGlobalScope;\r\n\r\nexport class MaterialManager {\r\n    private readonly materials: IMetaMaterial[];\r\n    private tmpTexture = new Trimble.Technology.TrimBim.Fbs.Texture();\r\n\r\n    constructor(\r\n        private modelId: string,\r\n        private postMessage: (message: any, transfer?: Transferable[]) => void = self.postMessage.bind(self)\r\n    ) {\r\n        this.materials = [];\r\n    }\r\n\r\n    addModelTextures(model: Trimble.Technology.TrimBim.Fbs.Model): void {\r\n        const geometry = model.geometry();\r\n        for (let i = 0; i < geometry.texturesLength(); i++) {\r\n            const tex = geometry.textures(i, this.tmpTexture);\r\n            const image = new Int8Array(tex.bytesLength());\r\n            image.set(tex.bytesArray());\r\n            this.postMessage({ type: MessageType.UPDATE_TEXTURE, modelId: this.modelId, textureId: i, image: image } as ITextureMessage, [image.buffer]);\r\n        }\r\n    }\r\n\r\n    addModelMaterials(model: Trimble.Technology.TrimBim.Fbs.Model): number[] {\r\n        const materials: IMetaMaterial[] = [];\r\n        const geometry = model.geometry();\r\n        const length = geometry.surfaceMaterialsLength();\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const matDef = geometry.surfaceMaterials(i);\r\n            let textureTransparent = false;\r\n\r\n            let textureId = matDef.textureId();\r\n            if (textureId === 4294967295) // Unsigned -1\r\n                textureId = undefined;\r\n\r\n            if (textureId !== undefined) {\r\n                const tex = geometry.textures(textureId, this.tmpTexture);\r\n                textureTransparent = tex.type() === TextureType.Png;\r\n            }\r\n\r\n            const material: IMetaMaterial = {\r\n                color: matDef.b() | (matDef.g() << 8) | (matDef.r() << 16),\r\n                side: matDef.sidedness(),\r\n                lineStyle: matDef.lineStyle(),\r\n                textureId: textureId,\r\n                opacity: matDef.a() / 255,\r\n                transparent: textureTransparent || matDef.a() < 255\r\n            };\r\n\r\n            materials.push(material);\r\n        }\r\n        return this.addMaterials(materials);\r\n    }\r\n\r\n    addMaterials(materials: IMetaMaterial[]): number[] {\r\n        const ids: number[] = [];\r\n        const newMaterials: IMetaMaterial[] = [];\r\n        mainLoop: for (const material of materials) {\r\n            for (let i = 0, l = this.materials.length; i < l; i++) {\r\n                if (this.equal(material, this.materials[i])) {\r\n                    ids.push(i); continue mainLoop;\r\n                }\r\n            }\r\n            this.materials.push(material);\r\n            newMaterials.push(material);\r\n            ids.push(this.materials.length - 1);\r\n        }\r\n        this.postMessage({ type: MessageType.UPDATE_MATERIAL, modelId: this.modelId, materials: newMaterials } as ITrimbimMaterialsMessage);\r\n        return ids;\r\n    }\r\n\r\n    private equal(m1: IMetaMaterial, m2: IMetaMaterial): boolean {\r\n        return m1.color === m2.color &&\r\n            this.eq(m1.opacity, m2.opacity, 1.0) &&\r\n            this.eq(m1.side, m2.side, Fbs.Sidedness.Single) &&\r\n            this.eq(m1.lineStyle, m2.lineStyle, Fbs.LineStyle.Normal) &&\r\n            m1.textureId === m2.textureId;\r\n    }\r\n\r\n    private eq(v1: any, v2: any, def: any): boolean {\r\n        return v1 === v2 ||\r\n            v1 === undefined && v2 === def ||\r\n            v1 === def && v2 === undefined;\r\n    }\r\n\r\n    getMaterial(id: number): IMetaMaterial {\r\n        return this.materials[id];\r\n    }\r\n}\r\n","import { Trimble } from \"../TrimBim_generated\";\r\nimport { Box3, Vector3, Matrix4 } from \"./ThreeMath\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { LogicalNode } from \"./QueryHandling/Expression\";\r\n\r\nexport class InstanceManager {\r\n    entityToInstance: Map<number, number[]>;\r\n    boundingBoxes: Float64Array;\r\n    geometry: Fbs.ModelGeometry;\r\n\r\n    worldBoundingbox: Box3;\r\n\r\n    constructor(private _model: Fbs.Model) {\r\n        this.geometry = _model.geometry();\r\n        this.entityToInstance = new Map();\r\n        this.analyzeInstances();\r\n    }\r\n\r\n    private analyzeInstances(): void {\r\n        this.worldBoundingbox = new Box3();\r\n        this.boundingBoxes = new Float64Array(this.geometry.instancesLength() * 6);\r\n\r\n        const instancesLength = this.geometry.instancesLength();\r\n        const instance = new Fbs.GeometryInstance();\r\n        const definition = new Fbs.GeometryDefinition();\r\n\r\n        for (let i = 0; i < instancesLength; i++) {\r\n            this.geometry.instances(i, instance);\r\n            this.geometry.definitions(instance.definitionId(), definition);\r\n\r\n            const entityId = instance.entityId();\r\n\r\n            this.entityToInstance.has(entityId)\r\n                ? this.entityToInstance.get(entityId).push(i)\r\n                : this.entityToInstance.set(entityId, [i]);\r\n\r\n            this.getInstanceAABB(i, this.boundingBoxes, i * 6);\r\n            this.updateWorldBoundingBox(i, this.boundingBoxes, i * 6);\r\n        }\r\n    }\r\n\r\n    public updateWorldBoundingBox(i: number, array: Float64Array, offset: number = 0): void {\r\n        if (i === 0) {\r\n            this.worldBoundingbox.min.x = array[offset];\r\n            this.worldBoundingbox.min.y = array[offset + 1];\r\n            this.worldBoundingbox.min.z = array[offset + 2];\r\n\r\n            this.worldBoundingbox.max.x = array[offset + 3];\r\n            this.worldBoundingbox.max.y = array[offset + 4];\r\n            this.worldBoundingbox.max.z = array[offset + 5];\r\n        } else {\r\n            this.worldBoundingbox.min.x =\r\n                this.worldBoundingbox.min.x < array[offset] ? this.worldBoundingbox.min.x : array[offset];\r\n            this.worldBoundingbox.min.y =\r\n                this.worldBoundingbox.min.y < array[offset + 1]\r\n                    ? this.worldBoundingbox.min.y\r\n                    : array[offset + 1];\r\n            this.worldBoundingbox.min.z =\r\n                this.worldBoundingbox.min.z < array[offset + 2]\r\n                    ? this.worldBoundingbox.min.z\r\n                    : array[offset + 2];\r\n\r\n            this.worldBoundingbox.max.x =\r\n                this.worldBoundingbox.max.x > array[offset + 3]\r\n                    ? this.worldBoundingbox.max.x\r\n                    : array[offset + 3];\r\n            this.worldBoundingbox.max.y =\r\n                this.worldBoundingbox.max.y > array[offset + 4]\r\n                    ? this.worldBoundingbox.max.y\r\n                    : array[offset + 4];\r\n            this.worldBoundingbox.max.z =\r\n                this.worldBoundingbox.max.z > array[offset + 5]\r\n                    ? this.worldBoundingbox.max.z\r\n                    : array[offset + 5];\r\n        }\r\n    }\r\n\r\n    getAABBFromIds = (() => {\r\n        const box2 = new Box3();\r\n        const tmp: any = new Float64Array(6);\r\n\r\n        return (entityIds: number[], box: Box3): void => {\r\n            entityIds.forEach(entityId => {\r\n                if (this.entityToInstance.has(entityId)) {\r\n                    this.entityToInstance.get(entityId).forEach(instanceId => {\r\n                        this.getInstanceAABB(instanceId, tmp);\r\n                        box2.min.fromArray(tmp, 0);\r\n                        box2.max.fromArray(tmp, 3);\r\n\r\n                        box.union(box2);\r\n                    });\r\n                }\r\n            });\r\n        };\r\n    })();\r\n\r\n    getInstanceAABB = (() => {\r\n        const xAxis = new Vector3();\r\n        const yAxis = new Vector3();\r\n        const zAxis = new Vector3();\r\n\r\n        let xMax: Vector3;\r\n        const xMin = new Vector3();\r\n        const yMin = new Vector3();\r\n        let yMax: Vector3;\r\n        const zMin = new Vector3();\r\n        let zMax: Vector3;\r\n\r\n        let min: Vector3;\r\n        let max: Vector3;\r\n\r\n        const instance = new Fbs.GeometryInstance();\r\n        const definition = new Fbs.GeometryDefinition();\r\n        const aabb = new Fbs.AABB3f();\r\n        const aabbMin = new Fbs.Vec3f();\r\n        const aabbMax = new Fbs.Vec3f();\r\n\r\n        const placement = new Matrix4();\r\n\r\n        return (i: number, array: Float64Array, offset = 0) => {\r\n            this.geometry.instances(i, instance);\r\n            this.geometry.definitions(instance.definitionId(), definition);\r\n            definition.boundingBox(aabb);\r\n            aabb.min(aabbMin);\r\n            aabb.max(aabbMax);\r\n\r\n            this.getInstanceTransform(i, placement);\r\n\r\n            xAxis.set(placement.elements[0], placement.elements[1], placement.elements[2]);\r\n\r\n            yAxis.set(placement.elements[4], placement.elements[5], placement.elements[6]);\r\n\r\n            zAxis.set(placement.elements[8], placement.elements[9], placement.elements[10]);\r\n\r\n            xMin.copy(xAxis).multiplyScalar(aabbMin.x());\r\n            xMax = xAxis.multiplyScalar(aabbMax.x());\r\n\r\n            yMin.copy(yAxis).multiplyScalar(aabbMin.y());\r\n            yMax = yAxis.multiplyScalar(aabbMax.y());\r\n\r\n            zMin.copy(zAxis).multiplyScalar(aabbMin.z());\r\n            zMax = zAxis.multiplyScalar(aabbMax.z());\r\n\r\n            min = xMin\r\n                .clone()\r\n                .min(xMax)\r\n                .add(yMin.clone().min(yMax))\r\n                .add(zMin.clone().min(zMax));\r\n            max = xMin\r\n                .max(xMax)\r\n                .add(yMin.max(yMax))\r\n                .add(zMin.max(zMax));\r\n\r\n            array[offset] = min.x + placement.elements[12];\r\n            array[offset + 1] = min.y + placement.elements[13];\r\n            array[offset + 2] = min.z + placement.elements[14];\r\n\r\n            array[offset + 3] = max.x + placement.elements[12];\r\n            array[offset + 4] = max.y + placement.elements[13];\r\n            array[offset + 5] = max.z + placement.elements[14];\r\n        };\r\n    })();\r\n\r\n    getInstanceTransform = (() => {\r\n        const instance = new Fbs.GeometryInstance();\r\n\r\n        return (instanceId: number, transform: Matrix4) => {\r\n            this.geometry.instances(instanceId, instance);\r\n            return this.getTransform(instance, transform)\r\n        }\r\n    })();\r\n\r\n    private toMatrix4 = (() => {\r\n        const origin = new Vector3();\r\n        const xAxis = new Vector3();\r\n        const yAxis = new Vector3();\r\n        const zAxis = new Vector3();\r\n\r\n        const vec3d = new Fbs.Vec3d();\r\n        const vec3f = new Fbs.Vec3f();\r\n\r\n        return (localPlacement: Fbs.Placement3, out: Matrix4) => {\r\n            localPlacement.origin(vec3d);\r\n            origin.set(vec3d.x(), vec3d.y(), vec3d.z());\r\n            localPlacement.xAxis(vec3f);\r\n            xAxis.set(vec3f.x(), vec3f.y(), vec3f.z());\r\n            localPlacement.yAxis(vec3f);\r\n            yAxis.set(vec3f.x(), vec3f.y(), vec3f.z());\r\n            zAxis.crossVectors(xAxis, yAxis);\r\n\r\n            out.set(\r\n                xAxis.x,\r\n                yAxis.x,\r\n                zAxis.x,\r\n                origin.x,\r\n                xAxis.y,\r\n                yAxis.y,\r\n                zAxis.y,\r\n                origin.y,\r\n                xAxis.z,\r\n                yAxis.z,\r\n                zAxis.z,\r\n                origin.z,\r\n                0,\r\n                0,\r\n                0,\r\n                1\r\n            );\r\n        };\r\n    })();\r\n\r\n    getTransform = (() => {\r\n        const local = new Matrix4();\r\n        const global = new Matrix4();\r\n\r\n        const localPlacement = new Fbs.Placement3();\r\n        const globalPlacement = new Fbs.Placement3();\r\n        const entity = new Fbs.Entity();\r\n\r\n        return (instance: Fbs.GeometryInstance, transform: Matrix4) => {\r\n            this.geometry.localPlacements(instance.localPlacementId(), localPlacement);\r\n            this.toMatrix4(localPlacement, local);\r\n\r\n            this._model.entities().entities(instance.entityId(), entity);\r\n            entity.globalPlacement(globalPlacement);\r\n            this.toMatrix4(globalPlacement, global);\r\n\r\n            transform.multiplyMatrices(global, local);\r\n        };\r\n    })();\r\n\r\n    filterDefinition(entityIds: Set<number>, node: LogicalNode): number[] {\r\n        const instance = new Fbs.GeometryInstance();\r\n        const definition = new Fbs.GeometryDefinition();\r\n        const result: number[] = [];\r\n\r\n        for (const entityId of entityIds) {\r\n            const instanceIds = this.entityToInstance.get(entityId);\r\n            if (instanceIds && instanceIds.length > 0) {\r\n                this.geometry.instances(instanceIds[0], instance);\r\n                this.geometry.definitions(instance.definitionId(), definition);\r\n                if (node.expressions[0] && node.expressions[0].token === \"geometryType\" && node.expressions[0].operations[0](definition.type()))\r\n                    result.push(entityId);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { ClusterManager } from \"../ClusterManager\";\r\nimport { InstanceManager } from \"../InstanceManager\";\r\nimport { GeometryManager } from \"../GeometryManager\";\r\n\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { Box3, Frustum, Vector3 } from \"../ThreeMath\";\r\nimport { ActionType } from \"../../Model/ModelBuilderTypes\";\r\nimport { LodManager } from \"../LodManager\";\r\n\r\nexport class ModelBuilderWorker {\r\n    private geometry: Trimble.Technology.TrimBim.Fbs.ModelGeometry;\r\n    private enabled = true;\r\n\r\n    constructor(\r\n        private modelId: string,\r\n        private cm: ClusterManager,\r\n        private im: InstanceManager,\r\n        private geom: GeometryManager,\r\n        private lodManager: LodManager,\r\n        public model: Trimble.Technology.TrimBim.Fbs.Model\r\n    ) {\r\n        this.geometry = model.geometry();\r\n        this.startGeometryUpdateLoop();\r\n    }\r\n\r\n    public buildGeometryForCamera(frustum: Frustum, position: Vector3): void {\r\n        this.setCameraForGeometryUpdate(frustum, position);\r\n    }\r\n\r\n    private cameraFrustum: Frustum;\r\n    private cameraPosition: Vector3;\r\n    private clustersProcessedForCurrentCamera: number = 0;\r\n    private updateFinishedSent: boolean = false;\r\n\r\n    private startGeometryUpdateLoop(): void {\r\n        const aabb = new Box3();\r\n        let index = 0;\r\n\r\n        // use setTimeout instead of normal loop to allow messages to be received in the middle\r\n        const processClusters = () => {\r\n            if (this.clustersProcessedForCurrentCamera < this.cm.clusterLUT.size && this.cameraPosition) {\r\n                const clusters = Array.from(this.cm.clusterLUT.values());\r\n                const start = performance.now();\r\n                for (let i = 0; i < clusters.length && (performance.now() - start < 4 || i < 5); i++) {\r\n                    const cluster = clusters[index];\r\n                    aabb.min.set(cluster.min[0], cluster.min[1], cluster.min[2]);\r\n                    aabb.max.set(cluster.max[0], cluster.max[1], cluster.max[2]);\r\n                    if (this.cameraFrustum.intersectsBox(aabb))\r\n                        cluster.buildGeometry(this.getLodLevel(this.cameraPosition, aabb));\r\n                    else\r\n                        cluster.removeGeometry();\r\n                    index++;\r\n                    if (index >= clusters.length) index = 0;\r\n                    this.clustersProcessedForCurrentCamera++;\r\n                }\r\n            }\r\n            if (this.clustersProcessedForCurrentCamera >= this.cm.clusterLUT.size && !this.updateFinishedSent) {\r\n                this.cm.messenger.send({actionType: ActionType.UPDATE_FINISHED, modelId: this.modelId});\r\n                this.updateFinishedSent = true;\r\n            }\r\n            if (this.enabled)\r\n                setTimeout(processClusters, this.clustersProcessedForCurrentCamera < this.cm.clusterLUT.size ? 0 : 100);\r\n        };\r\n        processClusters();\r\n    }\r\n\r\n    forceUpdate(): void {\r\n        this.updateFinishedSent = false;\r\n        this.clustersProcessedForCurrentCamera = 0;\r\n        this.cm.messenger.removePendingUpdateFinishedAction();\r\n    }\r\n\r\n    dispose(): void {\r\n        this.enabled = false;\r\n    }\r\n\r\n    private setCameraForGeometryUpdate(frustum: Frustum, position: Vector3): void {\r\n        this.cameraFrustum = frustum;\r\n        this.cameraPosition = position;\r\n        this.updateFinishedSent = false;\r\n        this.clustersProcessedForCurrentCamera = 0;\r\n        this.cm.messenger.removePendingUpdateFinishedAction();\r\n    }\r\n\r\n    private getLodLevel(loc: Vector3, aabb: Box3): number {\r\n        const distance = aabb.distanceToPoint(loc);\r\n        return this.lodManager.getLevel(distance);\r\n    }\r\n}\r\n","const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nexport type UserAgent = string;\nexport type Navigator = {\n  userAgent: string;\n  platform: string;\n  maxTouchPoints?: number;\n};\n\nconst isAppleTabletOnIos13 = (navigator?: Navigator): boolean => {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.platform === 'MacIntel' &&\n    typeof navigator.maxTouchPoints === 'number' &&\n    navigator.maxTouchPoints > 1 &&\n    typeof MSStream === 'undefined'\n  );\n};\n\nfunction createMatch(userAgent: UserAgent): (regex: RegExp) => boolean {\n  return (regex: RegExp): boolean => regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    universal: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport type IsMobileParameter = UserAgent | Navigator;\n\nexport default function isMobile(param?: IsMobileParameter): isMobileResult {\n  let nav: Navigator = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0,\n  };\n\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0,\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0,\n    };\n  }\n\n  let userAgent = nav.userAgent;\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const match = createMatch(userAgent);\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet:\n        !match(appleIphone) &&\n        (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n      universal: match(appleUniversal),\n      device:\n        (match(appleIphone) ||\n          match(appleIpod) ||\n          match(appleTablet) ||\n          match(appleUniversal) ||\n          isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone) && match(amazonPhone)) ||\n        (!match(windowsPhone) && match(androidPhone)),\n      tablet:\n        !match(windowsPhone) &&\n        !match(amazonPhone) &&\n        !match(androidPhone) &&\n        (match(amazonTablet) || match(androidTablet)),\n      device:\n        (!match(windowsPhone) &&\n          (match(amazonPhone) ||\n            match(amazonTablet) ||\n            match(androidPhone) ||\n            match(androidTablet))) ||\n        match(/\\bokhttp\\b/i),\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet),\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device:\n        match(otherBlackBerry) ||\n        match(otherBlackBerry10) ||\n        match(otherOpera) ||\n        match(otherFirefox) ||\n        match(otherChrome),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n","import isMobile from \"ismobilejs\";\r\n\r\nexport class LodManager {\r\n    private _isMobile: boolean;\r\n    private lodObjectSizes: Map<number, number>;\r\n\r\n    constructor() {\r\n        this.lodObjectSizes = new Map(); // Lod level to size\r\n        this.lodObjectSizes.set(0, 0);\r\n        this.lodObjectSizes.set(1, 0.5);\r\n        this.lodObjectSizes.set(2, 2.0);\r\n    }\r\n\r\n    isMobile(): boolean {\r\n        if (this._isMobile === undefined) this._isMobile = isMobile(navigator).any;\r\n        return this._isMobile;\r\n    }\r\n\r\n    getLevelsCount(): number {\r\n        return this.lodObjectSizes.size;\r\n    }\r\n\r\n    getMinObjectSize(lodLevel: number): number {\r\n        return this.lodObjectSizes.get(lodLevel);\r\n    }\r\n\r\n    getLevel(distance: number): number {\r\n        if (distance < (this.isMobile() ? 5 : 30))\r\n            return 0;\r\n        else if (distance < (this.isMobile() ? 50 : 200))\r\n            return 1;\r\n        else\r\n            return 2;\r\n    }\r\n\r\n    getClusterSize(modelSize: number): number {\r\n        if (modelSize < 1500) {\r\n            return 25;\r\n        } else {\r\n            return 400;\r\n        }\r\n    }\r\n\r\n    getAlignmentClusterSize(): number {\r\n        return 400;\r\n    }\r\n}\r\n","import { UUID } from \"../UUID\";\r\nimport {\r\n    IAdd,\r\n    IRemove,\r\n    IMetaMaterial,\r\n    ISetBatchState, IUpdateFinished\r\n} from \"../Model/ModelBuilderTypes\";\r\nimport { Plane, Box3, Frustum, Vector3, Ray } from \"./ThreeMath\";\r\nimport {IdentifierType, PropertyDefinition, PropertySet, Query, TrimbimPickPriority} from \"../common\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport { PropertyAggregation } from \"../common\";\r\nimport { Hit } from \"./HitPoint\";\r\nimport {Trimble} from \"../TrimBim_generated\";\r\nimport HierarchyType = Trimble.Technology.TrimBim.Fbs.HierarchyType;\r\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport interface IMessage {\r\n    type: MessageType;\r\n    messageId?: number; // the request/message/event correlation identifier\r\n    error?: string; // output\r\n    modelId: string;\r\n}\r\n\r\nexport class Hierarchy {\r\n    products?: Map<number, Product>;\r\n    entities?: Map<number, Entity>;\r\n    propertySets?: Map<number, PropertySet>;\r\n    hierarchy: EntityInfo[];\r\n}\r\n\r\nexport class EntityInfo {\r\n    id: number;\r\n    productId?: number;\r\n    propertySetIds?: number[];\r\n    children?: EntityInfo[];\r\n}\r\n\r\nexport interface Product {\r\n    name: string;\r\n    description: string;\r\n    objectType: string;\r\n}\r\n\r\nexport class Entity {\r\n    id: number;\r\n    identifierType: IdentifierType;\r\n    identifier: string | UUID | number[];\r\n    class: string;\r\n}\r\n\r\nexport interface ILoadMessage extends IMessage {\r\n    type: MessageType.LOAD;\r\n    buffer: ArrayBuffer;\r\n    boundingBox?: Box3;\r\n}\r\n\r\nexport interface IUnloadMessage extends IMessage {\r\n    type: MessageType.UNLOAD;\r\n}\r\n\r\nexport interface IGetEntitiesMessage extends IMessage {\r\n    type: MessageType.ENTITY_GETENTITIESFROMIDS;\r\n    entityIds: number[]; // input\r\n    entities?: Entity[]; // output\r\n}\r\n\r\nexport interface IGetEntityInfoMessage extends IMessage {\r\n    type: MessageType.ENTITY_GETINFO;\r\n    id: number; // input, entityId\r\n    entity?: Entity; // output\r\n    properties?: PropertySet[]; // output\r\n    product?: Product; // output\r\n    hierarchyType: HierarchyType;\r\n}\r\n\r\nexport interface IGetPropertySetNamesMessage extends IMessage {\r\n    type: MessageType.PROPERTY_GETSETNAMES;\r\n    names?: string[]; // output\r\n}\r\n\r\nexport interface IGetPropertyDefinitionsMessage extends IMessage {\r\n    type: MessageType.PROPERTY_GETPROPERTYDEFINITIONS;\r\n    setName: string; // input, setId\r\n    properties?: PropertyDefinition[]; // output\r\n}\r\n\r\nexport interface IGetPropertyValuesMessage extends IMessage {\r\n    type: MessageType.PROPERTY_GETPROPERTYVALUES;\r\n    propertyName: string;\r\n    properties?: Array<string | number | flatbuffers.Long>; // output\r\n}\r\n\r\nexport interface IFilterEntitiesMessage extends IMessage {\r\n    type: MessageType.ENTITY_FILTER;\r\n    conditions: any; // input\r\n    entities?: number[]; // output\r\n}\r\n\r\nexport interface IQueryPageMessage extends IMessage {\r\n    type: MessageType.QUERYPAGE;\r\n    streamId: number;\r\n    page: number;\r\n    pageSize: number;\r\n    data?: Array<Array<{[name: string]: (string | number);}>>; // output\r\n}\r\n\r\nexport interface IGuidsToEntityIdsMessage extends IMessage {\r\n    type: MessageType.GUIDS_TO_ENTITYIDS;\r\n    guids: string[];\r\n    entityIds?: number[];\r\n}\r\n\r\nexport interface IGetHierarchyMessage extends IMessage {\r\n    type: MessageType.ENTITY_GETHIERARCHY;\r\n    hierarchyType: HierarchyType; // input\r\n    options?: any; // optional input: parentId, entity, product, properties\r\n    hierarchy?: Hierarchy; // output\r\n}\r\n\r\nexport interface IGetHierarchyTreeMessage extends IMessage {\r\n    type: MessageType.ENTITY_GETHIERARCHYTREE;\r\n    hierarchyType: HierarchyType;\r\n    entityIds: number[];\r\n    parentIds?: number[];\r\n    childrenIds?: number[];\r\n}\r\n\r\nexport interface ICameraUpdateMessage extends IMessage {\r\n    type: MessageType.CAMERA_UPDATE;\r\n    frustum: Frustum;\r\n    position: Vector3;\r\n}\r\n\r\nexport const enum StateType {\r\n    MATERIAL,\r\n    VISIBILITY,\r\n    SELECTION,\r\n    HOVER,\r\n    PICK_PRIORITY\r\n}\r\n\r\nexport interface IGetBoundingBoxesMessage extends IMessage {\r\n    type: MessageType.GET_BOUNDINGBOXES;\r\n    entityIdGroups: number[][];\r\n    boundingBoxes?: Box3[];\r\n}\r\n\r\nexport interface UpdateGeometryMessage extends IMessage {\r\n    type: MessageType.UPDATE_GEOMETRY;\r\n    actions: Array<IAdd | IRemove | ISetBatchState | IUpdateFinished>;\r\n}\r\n\r\nexport interface IPickMessage extends IMessage {\r\n    type: MessageType.PICK;\r\n    ray: Ray;\r\n    frustum: Frustum;\r\n    snapTypes?: SnapType[];\r\n    clipPlanes: Plane[];\r\n    hits?: Hit[];\r\n    childrenEntityIds?: number[];\r\n}\r\n\r\nexport interface ITextureMessage extends IMessage {\r\n    type: MessageType.UPDATE_TEXTURE;\r\n    textureId: number;\r\n    image: Int8Array;\r\n}\r\n\r\nexport interface ITrimbimMaterialsMessage extends IMessage {\r\n    type: MessageType.UPDATE_MATERIAL;\r\n    materials: IMetaMaterial[];\r\n}\r\n\r\nexport interface IGetMaterialsMessage extends IMessage {\r\n    type: MessageType.GET_MATERIALS;\r\n    entityIds: number[];\r\n    materials?: IMetaMaterial[];\r\n}\r\n\r\nexport interface IQueryMessage extends IMessage {\r\n    type: MessageType.QUERY;\r\n    query: Query;\r\n}\r\n\r\nexport interface IGetByStateMessage extends IMessage {\r\n    type: MessageType.GET_BY_STATE;\r\n    visible?: boolean;\r\n    pickPriority?: TrimbimPickPriority;\r\n    entityIds?: number[];\r\n}\r\n\r\nexport interface AggregatePropertiesMessage extends IMessage {\r\n    type: MessageType.AGGREGATE_PROPERTIES;\r\n    entityIds: number[];\r\n    aggregations: PropertyAggregation[];\r\n}\r\n\r\nexport interface ICallMessage extends IMessage {\r\n    type: MessageType.CALL;\r\n    methodName: string,\r\n    args: any[];\r\n    result: any;\r\n}\r\n\r\nexport const enum MessageType {\r\n    // TODO: most (all?) messages can be replaced with just CALL message\r\n    CALL,\r\n\r\n    UPDATE_GEOMETRY,\r\n    UPDATE_TEXTURE,\r\n    UPDATE_MATERIAL,\r\n    LOAD,\r\n    UNLOAD,\r\n    GET_MATERIALS,\r\n    CAMERA_UPDATE,\r\n    GET_BOUNDINGBOXES,\r\n    PICK,\r\n\r\n\r\n    // TODO: rework the data query logic, all these messages can be optimized to 1-2 messge types\r\n    QUERY,\r\n    QUERYPAGE,\r\n    GET_BY_STATE,\r\n    PROPERTY_GETSETNAMES,\r\n    PROPERTY_GETPROPERTYDEFINITIONS,\r\n    ENTITY_FILTER,\r\n    PROPERTY_GETPROPERTYVALUES,\r\n    GUIDS_TO_ENTITYIDS,\r\n    ENTITY_GETHIERARCHY,\r\n    ENTITY_GETHIERARCHYTREE,\r\n    ENTITY_GETENTITIESFROMIDS,\r\n    ENTITY_GETINFO,\r\n    AGGREGATE_PROPERTIES\r\n}\r\n","export const Base64ConversionTable = [\r\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\",\r\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\",\r\n    \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\",\r\n    \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\",\r\n    \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\",\r\n    \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\",\r\n    \"y\", \"z\", \"_\", \"$\"\r\n];\r\n\r\nexport class UUID {\r\n    data: Uint8Array;\r\n    public type = \"UUID\";\r\n\r\n    constructor({\r\n        data,\r\n        ifcGuid,\r\n        msGuid\r\n    }: {\r\n        data?: Uint8Array;\r\n        ifcGuid?: string;\r\n        msGuid?: string;\r\n    }) {\r\n        if (data) {\r\n            this.data = data;\r\n        } else if (ifcGuid) {\r\n            this.setIfcGuid(ifcGuid);\r\n        } else if (msGuid) {\r\n            this.setMsGuid(msGuid);\r\n        } else {\r\n            this.data = new Uint8Array(16);\r\n        }\r\n    }\r\n\r\n    fromJSON({ type, data }: { type: string; data: string }) {\r\n        if (type === \"UUID\") {\r\n            this.data = new Uint8Array(JSON.parse(\"[\" + data + \"]\"));\r\n        } else {\r\n            throw TypeError(\"Incorrect type, type needs to be UUID\");\r\n        }\r\n    }\r\n\r\n    equals(uuid2: UUID) {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (this.data[i] !== uuid2.data[i]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    toString() {\r\n        return this.msGuid;\r\n    }\r\n\r\n    get msGuid() {\r\n        const offset = this.data.byteOffset;\r\n        const view = new DataView(this.data.buffer, offset, 16);\r\n        const b1 = view\r\n            .getUint32(0, true)\r\n            .toString(16)\r\n            .padStart(8, \"0\");\r\n        const b2 = view\r\n            .getUint16(4, true)\r\n            .toString(16)\r\n            .padStart(4, \"0\");\r\n        const b3 = view\r\n            .getUint16(6, true)\r\n            .toString(16)\r\n            .padStart(4, \"0\");\r\n        const b4 = view\r\n            .getUint8(8)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b5 = view\r\n            .getUint8(9)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b6 = view\r\n            .getUint8(10)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b44 = view\r\n            .getUint8(11)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b45 = view\r\n            .getUint8(12)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b46 = view\r\n            .getUint8(13)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b47 = view\r\n            .getUint8(14)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        const b48 = view\r\n            .getUint8(15)\r\n            .toString(16)\r\n            .padStart(2, \"0\");\r\n        return `${b1}-${b2}-${b3}-${b4}${b5}-${b6}${b44}${b45}${b46}${b47}${b48}`;\r\n    }\r\n\r\n    setMsGuid(guid: string) {\r\n        this.data = this.data || new Uint8Array(16);\r\n        const offset = this.data.byteOffset;\r\n        const view = new DataView(this.data.buffer, offset, 16);\r\n        const getValue = (offset: number, size: number) => parseInt(guid.slice(offset, offset + size), 16);\r\n        view.setUint32(0, getValue(0, 8), true);\r\n        view.setUint16(4, getValue(9, 4), true);\r\n        view.setUint16(6, getValue(14, 4), true);\r\n        view.setUint8(8, getValue(19, 2));\r\n        view.setUint8(9, getValue(21, 2));\r\n        view.setUint8(10, getValue(24, 2));\r\n        view.setUint8(11, getValue(26, 2));\r\n        view.setUint8(12, getValue(28, 2));\r\n        view.setUint8(13, getValue(30, 2));\r\n        view.setUint8(14, getValue(32, 2));\r\n        view.setUint8(15, getValue(34, 2));\r\n    }\r\n\r\n    get ifcGuid() {\r\n        const guid16 = new Uint8Array(24);\r\n        const data = this.data;\r\n        /* no convert 24bit so  append 0's and use ToUInt32 */\r\n        guid16[0] = data[15];\r\n        guid16[1] = data[14];\r\n        guid16[2] = data[13];\r\n        guid16[3] = 0;\r\n        guid16[4] = data[12];\r\n        guid16[5] = data[11];\r\n        guid16[6] = data[10];\r\n        guid16[7] = 0;\r\n        guid16[8] = data[9];\r\n        guid16[9] = data[8];\r\n        guid16[10] = data[6];\r\n        guid16[11] = 0;\r\n        guid16[12] = data[7];\r\n        guid16[13] = data[4];\r\n        guid16[14] = data[5];\r\n        guid16[15] = 0;\r\n        guid16[16] = data[0];\r\n        guid16[17] = data[1];\r\n        guid16[18] = data[2];\r\n        guid16[19] = 0;\r\n        guid16[20] = data[3];\r\n        guid16[21] = 0;\r\n        guid16[22] = 0;\r\n        guid16[23] = 0;\r\n\r\n        const b32 = new Uint32Array(guid16.buffer);\r\n\r\n        return (\r\n            this.toBase64(b32[5], 8) +\r\n            this.toBase64(b32[4], 24) +\r\n            this.toBase64(b32[3], 24) +\r\n            this.toBase64(b32[2], 24) +\r\n            this.toBase64(b32[1], 24) +\r\n            this.toBase64(b32[0], 24)\r\n        );\r\n    }\r\n\r\n    setIfcGuid(ifcGuid: string) {\r\n        this.data = new Uint8Array(16);\r\n        const b5 = this.fromBase64(ifcGuid[0], 6) + this.fromBase64(ifcGuid[1], 0);\r\n        const b4 =\r\n            this.fromBase64(ifcGuid[2], 18) +\r\n            this.fromBase64(ifcGuid[3], 12) +\r\n            this.fromBase64(ifcGuid[4], 6) +\r\n            this.fromBase64(ifcGuid[5], 0);\r\n        const b3 =\r\n            this.fromBase64(ifcGuid[6], 18) +\r\n            this.fromBase64(ifcGuid[7], 12) +\r\n            this.fromBase64(ifcGuid[8], 6) +\r\n            this.fromBase64(ifcGuid[9], 0);\r\n        const b2 =\r\n            this.fromBase64(ifcGuid[10], 18) +\r\n            this.fromBase64(ifcGuid[11], 12) +\r\n            this.fromBase64(ifcGuid[12], 6) +\r\n            this.fromBase64(ifcGuid[13], 0);\r\n        const b1 =\r\n            this.fromBase64(ifcGuid[14], 18) +\r\n            this.fromBase64(ifcGuid[15], 12) +\r\n            this.fromBase64(ifcGuid[16], 6) +\r\n            this.fromBase64(ifcGuid[17], 0);\r\n        const b0 =\r\n            this.fromBase64(ifcGuid[18], 18) +\r\n            this.fromBase64(ifcGuid[19], 12) +\r\n            this.fromBase64(ifcGuid[20], 6) +\r\n            this.fromBase64(ifcGuid[21], 0);\r\n\r\n        const guid0103 = this.getBytes(b0);\r\n        const guid0406 = this.getBytes(b1);\r\n        const guid0709 = this.getBytes(b2);\r\n        const guid1012 = this.getBytes(b3);\r\n        const guid1315 = this.getBytes(b4);\r\n        const guid1616 = this.getBytes(b5);\r\n\r\n        this.data[15] = guid0103[0]; // char: 33\r\n        this.data[14] = guid0103[1]; // char: 37\r\n        this.data[13] = guid0103[2]; // char: 39\r\n        this.data[12] = guid0406[0]; // char: 37\r\n        this.data[11] = guid0406[1]; // char: 35\r\n        this.data[10] = guid0406[2]; // char: 32\r\n        this.data[9] = guid0709[0]; // short: 32\r\n        this.data[8] = guid0709[1]; // short: 31\r\n        this.data[6] = guid0709[2];\r\n        this.data[7] = guid1012[0]; // int: 0021\r\n        this.data[4] = guid1012[1];\r\n        this.data[5] = guid1012[2]; // int: 0000\r\n        this.data[0] = guid1315[0];\r\n        this.data[1] = guid1315[1];\r\n        this.data[2] = guid1315[2];\r\n        this.data[3] = guid1616[0]; // long: 490F2F93\r\n    }\r\n\r\n    setFromBufferData(buffer: ArrayBuffer | SharedArrayBuffer, offset: number) {\r\n        this.data = new Uint8Array(buffer, offset, 16);\r\n    }\r\n\r\n    private toBase64(base10Bit24: number, bitsLeft: number) {\r\n        let reV = \"\";\r\n        if (bitsLeft > 0) {\r\n            let a64 = base10Bit24 & 0x3f;\r\n            reV += Base64ConversionTable[a64];\r\n            reV = this.toBase64(base10Bit24 >> 6, bitsLeft - 6) + reV;\r\n        }\r\n\r\n        return reV;\r\n    }\r\n\r\n    private fromBase64(a: string, padBits: number) {\r\n        // base64 encoding table for IFC base64 encoding, differs from the .NET base64!\r\n\r\n        let value = 0;\r\n        while (value < 64) {\r\n            if (Base64ConversionTable[value] == a) {\r\n                break;\r\n            }\r\n\r\n            value++;\r\n        }\r\n\r\n        return value << padBits; // val == 64 error..\r\n    }\r\n\r\n    private getBytes(long: number) {\r\n        const buf = new ArrayBuffer(8);\r\n        const representation = new Int32Array(buf);\r\n        representation[0] = long;\r\n\r\n        return new Uint8Array(buf);\r\n    }\r\n}\r\n\r\nexport const uuidBufferAsString = ({ data }: UUID) => {\r\n    return `${data[0]}${data[1]}${data[2]}${data[3]}${data[4]}${data[5]}${data[6]}${data[7]}${\r\n        data[8]\r\n    }${data[9]}${data[10]}${data[11]}${data[12]}${data[13]}${data[14]}${data[15]}`;\r\n};\r\n","import { Trimble } from \"../TrimBim_generated\";\r\nimport { Entity, EntityInfo, Hierarchy, Product } from \"./ThreadWorkerMessages\";\r\nimport { HierarchyOptions, HierarchyType, IdentifierType, PropertyDefinition, Property, PropertySet, PropertyType } from \"../common\";\r\nimport { UUID } from \"../UUID\";\r\nimport { HierarchyQuery, Operation } from \"./QueryHandling/Parser\";\r\nimport { Expression, LogicalNode } from \"./QueryHandling/Expression\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { flatbuffers } from \"flatbuffers\";\r\n\r\nexport type IndexedExpressions = { expression: Expression; definitionIds: Map<number, number> };\r\n\r\nexport class EntityManager {\r\n    private hierarchyIndex: Map<HierarchyType, Array<Set<number>>> = new Map();\r\n    private productIndex: Array<number>;\r\n    private propertyIndex: Array<Set<number>>;\r\n    streams: {\r\n        entityIds: number[];\r\n        setIds: Set<number>;\r\n    }[];\r\n\r\n    constructor(private modelEntities: Fbs.ModelEntities, private properties: Fbs.ModelProperties) {\r\n        this.streams = [];\r\n    }\r\n\r\n    getProductId(entityId: number): number {\r\n        if (entityId === undefined) {\r\n            throw new RangeError(\"Must provide entityId\");\r\n        }\r\n\r\n        const index = this.loadProductIndex();\r\n        return index[entityId];\r\n    }\r\n\r\n    getProduct(productId: number): Product {\r\n        if (\r\n            productId === undefined ||\r\n            productId < 0 ||\r\n            productId >= this.properties.productsLength()\r\n        ) {\r\n            throw new Error(\"Must provide a valid productId\");\r\n        }\r\n\r\n        const p = this.properties.products(productId);\r\n        const product: Product = {\r\n            name: this.properties.names(p.name()),\r\n            description: this.properties.descriptions(p.description()),\r\n            objectType: this.properties.objectTypes(p.objectType())\r\n        };\r\n\r\n        return product;\r\n    }\r\n\r\n    getPropertySetIdsFromEntity(entityId: number): Set<number> {\r\n        if (entityId === undefined) {\r\n            throw new RangeError(\"Must provide entityId\");\r\n        }\r\n\r\n        const index = this.loadPropertyIndex();\r\n        return index[entityId];\r\n    }\r\n\r\n    getPropertySet(propSetId: number): PropertySet {\r\n        if (propSetId === undefined)\r\n            throw new RangeError(\"Must provide propSetId\");\r\n\r\n        const bindings = this.properties.propertySetBindings(propSetId);\r\n        const definition = this.properties.definitions(bindings.definition());\r\n        const properties = this.getSinglePropertyDefinitions(definition, bindings);\r\n\r\n        return { name: this.properties.propertySetNames(definition.name()), properties } as PropertySet;\r\n    }\r\n\r\n    getPropertySetNames(): string[] {\r\n        const result = new Array<string>(this.properties.propertySetNamesLength());\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] = this.properties.propertySetNames(i);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getSetNameId(name: string): number {\r\n        const length = this.properties.propertySetNamesLength();\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            if (this.properties.propertySetNames(i) === name) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    getPropertySetIdsFromName(name: string): Set<number> {\r\n        const id = this.getSetNameId(name);\r\n\r\n        let length = this.properties.definitionsLength();\r\n        const definitionIds = new Set();\r\n        for (let i = 0; i < length; i++) {\r\n            const definition = this.properties.definitions(i);\r\n\r\n            if (id === definition.name()) {\r\n                definitionIds.add(i);\r\n            }\r\n        }\r\n\r\n        length = this.properties.propertySetBindingsLength();\r\n\r\n        const setIds = new Set<number>();\r\n        for (let i = 0; i < length; i++) {\r\n            const binding = this.properties.propertySetBindings(i);\r\n\r\n            if (definitionIds.has(binding.definition())) {\r\n                setIds.add(i);\r\n            }\r\n        }\r\n\r\n        return setIds;\r\n    }\r\n\r\n    getDefinitionIdsFromNames(setName: string, propertyName?: string): Map<number, number> {\r\n        const setNameId = this.getSetNameId(setName);\r\n        const propertyNameIds = propertyName ? this.getPropertyNameIds(propertyName) : undefined;\r\n\r\n        const length = this.properties.definitionsLength();\r\n        const definitionIds = new Map();\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const definition = this.properties.definitions(i);\r\n\r\n            if (setNameId === definition.name()) {\r\n                if (propertyNameIds !== undefined) {\r\n                    const l = definition.propertiesLength();\r\n                    for (let j = 0; j < l; j++) {\r\n                        const property = definition.properties(j);\r\n                        if (propertyNameIds.has(property.name())) {\r\n                            definitionIds.set(i, j);\r\n                        }\r\n                    }\r\n                } else {\r\n                    definitionIds.set(i, undefined);\r\n                }\r\n            }\r\n        }\r\n\r\n        return definitionIds;\r\n    }\r\n\r\n    getPropertyDefinitions(propertySetName: string): PropertyDefinition[] {\r\n        if (propertySetName === undefined) {\r\n            throw new Error(\"Must provide propSetName\");\r\n        }\r\n        const propSetIds = this.getDefinitionIdsFromNames(propertySetName);\r\n        if (propSetIds.size === 0) {\r\n            throw new Error(`No property set name found matching ${propertySetName} `);\r\n        }\r\n\r\n        const result = new Map<string, PropertyDefinition>();\r\n        for (const setId of propSetIds.keys()) {\r\n            const setDefinition = this.properties.definitions(setId);\r\n            for (let i = 0, l = setDefinition.propertiesLength(); i < l; i++) {\r\n                const name = this.properties.propertyNames(setDefinition.properties(i).name());\r\n                if (!result.has(name))\r\n                    result.set(name, {\r\n                        name: name,\r\n                        type: setDefinition.properties(i).type() as unknown as PropertyType\r\n                    });\r\n            }\r\n        }\r\n        return Array.from(result.values());\r\n    }\r\n\r\n    getPropertyNameIds(name: string): Set<number> {\r\n        const length = this.properties.propertyNamesLength();\r\n        const indices = new Set<number>();\r\n        for (let i = 0; i < length; i++) {\r\n            if (name === this.properties.propertyNames(i)) {\r\n                indices.add(i);\r\n            }\r\n        }\r\n\r\n        return indices;\r\n    }\r\n\r\n    getPropertyValues(propertyName: string): Array<string | number | flatbuffers.Long> {\r\n        if (propertyName === undefined) {\r\n            throw new Error(\"Must provide propertyName\");\r\n        }\r\n\r\n        const propertyIds = this.getPropertyNameIds(propertyName);\r\n\r\n        if (propertyIds === undefined) {\r\n            throw new Error(`PropertyName ${propertyName} does not exist`);\r\n        }\r\n\r\n        const result = new Set<string | number | flatbuffers.Long>();\r\n\r\n        const bindingsCount = this.properties.propertySetBindingsLength();\r\n        for (let i = 0; i < bindingsCount; i++) {\r\n            const setBinding = this.properties.propertySetBindings(i);\r\n            const setDefinition = this.properties.definitions(setBinding.definition());\r\n            const propertyCount = setDefinition.propertiesLength();\r\n\r\n            for (let propertyIdx = 0; propertyIdx < propertyCount; propertyIdx++) {\r\n                const nameIndex = setDefinition.properties(propertyIdx).name();\r\n                if (propertyIds.has(nameIndex)) {\r\n                    const type = setDefinition.properties(propertyIdx).type();\r\n                    result.add(this.getValue(type, setBinding.values(propertyIdx)));\r\n                }\r\n            }\r\n        }\r\n\r\n        return [...result];\r\n    }\r\n\r\n    queryHierarchy(object: any): Set<number> {\r\n        const queries: HierarchyQuery[] = object[\"$AND\"];\r\n        const result: number[] = [];\r\n\r\n        for (const query of queries) {\r\n            const type = query.$HIERARCHYTYPE;\r\n            switch (query.$SCOPE) {\r\n                case \"Descendants\": {\r\n                    if (query.$ENTITYID) {\r\n                        for (const id of query.$ENTITYID) {\r\n                            result.push(...this.getChildren(id, type));\r\n                        }\r\n                    }\r\n\r\n                    if (query.$UNIQUEIDENTIFIERS) {\r\n                        const ids = this.getEntityIdsFromGuids(query.$UNIQUEIDENTIFIERS);\r\n                        for (const id of ids) {\r\n                            result.push(...this.getChildren(id, type));\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"DescendantsAndSelf\": {\r\n                    if (query.$ENTITYID) {\r\n                        for (const id of query.$ENTITYID) {\r\n                            result.push(...this.getChildren(id, type));\r\n                            result.push(id);\r\n                        }\r\n                    }\r\n\r\n                    if (query.$UNIQUEIDENTIFIERS) {\r\n                        const ids = this.getEntityIdsFromGuids(query.$UNIQUEIDENTIFIERS);\r\n                        for (const id of ids) {\r\n                            result.push(...this.getChildren(id, type));\r\n                            result.push(id);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Root\": {\r\n                    if (query.$ENTITYID) {\r\n                        for (const id of query.$ENTITYID) {\r\n                            const parentId = this.getParents([id], type)[0];\r\n                            result.push(parentId !== undefined ? parentId : id);\r\n                        }\r\n                    }\r\n\r\n                    if (query.$UNIQUEIDENTIFIERS) {\r\n                        const ids = this.getEntityIdsFromGuids(query.$UNIQUEIDENTIFIERS);\r\n                        for (const id of ids) {\r\n                            const parentId = this.getParents([id], type)[0];\r\n                            result.push(parentId !== undefined ? parentId : id);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                default:\r\n                    throw new Error(`Unknown scope ${query.$SCOPE}`);\r\n            }\r\n        }\r\n\r\n        return new Set(result);\r\n    }\r\n\r\n    indexEntityQuery(expressions: Expression[]): IndexedExpressions[] {\r\n        const all: IndexedExpressions[] = [];\r\n        for (const expression of expressions) {\r\n            const { propertyName, setName } = expression;\r\n            const definitionIds = this.getDefinitionIdsFromNames(setName, propertyName);\r\n            all.push({\r\n                expression,\r\n                definitionIds\r\n            });\r\n        }\r\n\r\n        return all;\r\n    }\r\n\r\n    indexProductQuery(expressions: Expression[]): Map<string, Set<number>> {\r\n        const productIndex: Map<string, Set<number>> = new Map();\r\n\r\n        for (const expression of expressions) {\r\n            const productProperty = expression.setName;\r\n            let ids: Set<number>;\r\n\r\n            if (productIndex.has(productProperty)) {\r\n                ids = productIndex.get(productProperty);\r\n            } else {\r\n                ids = new Set();\r\n                productIndex.set(productProperty, ids);\r\n            }\r\n\r\n            if (productProperty === \"name\") {\r\n                for (let i = 0, l = this.properties.namesLength(); i < l; i++) {\r\n                    const name = this.properties.names(i);\r\n                    if (expression.operations[0](name))\r\n                        ids.add(i);\r\n                }\r\n            }\r\n        }\r\n\r\n        return productIndex;\r\n    }\r\n\r\n    getAllEntityIds(): Set<number> {\r\n        const l = this.modelEntities.entitiesLength();\r\n        const allEntities = new Set<number>();\r\n\r\n        for (let i = 0; i < l; i++) {\r\n            allEntities.add(i);\r\n        }\r\n\r\n        return allEntities;\r\n    }\r\n\r\n    findProducts(node: LogicalNode): Set<number> {\r\n        if (node.expressions.length === 0) {\r\n            return this.getAllEntityIds();\r\n        }\r\n\r\n        const productBindingCandidates = new Set();\r\n        const conditions = this.indexProductQuery(node.expressions);\r\n        const productCount = this.properties.productsLength();\r\n\r\n        for (let i = 0; i < productCount; i++) {\r\n            const product = this.properties.products(i);\r\n\r\n            for(const [condition, acceptedIds] of conditions) {\r\n\r\n                if (condition === 'productType') {\r\n                    if (acceptedIds.has(product.objectType())) {\r\n                        productBindingCandidates.add(i);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        const entityIds = new Set<number>();\r\n\r\n        const productIndex = this.loadProductIndex();\r\n\r\n        for (let i = 0, l = productIndex.length; i < l; i++) {\r\n            if (productBindingCandidates.has(productIndex[i])) {\r\n                entityIds.add(productIndex[i]);\r\n            }\r\n        }\r\n\r\n        return entityIds;\r\n    }\r\n\r\n    filterEntities(node: LogicalNode): Set<number> {\r\n        if (node.expressions.length === 0) {\r\n            return this.getAllEntityIds();\r\n        }\r\n\r\n        const rootExpression = node.expressions[0];\r\n        const validator = rootExpression.operations[0];\r\n        const validClassIndexes = new Set();\r\n        const entityIds = new Set<number>();\r\n\r\n        if (rootExpression.token === 'class') {\r\n            for (let i = 0, l = this.modelEntities.entityClassesLength(); i < l; i++) {\r\n                const className = this.modelEntities.entityClasses(i);\r\n                if (validator(className)) {\r\n                    validClassIndexes.add(i);\r\n                }\r\n            }\r\n\r\n            const entity = new Fbs.Entity();\r\n            for (let i = 0, l = this.modelEntities.entitiesLength(); i < l; i++) {\r\n                this.modelEntities.entities(i, entity);\r\n                if (validClassIndexes.has(entity.classIndex())) {\r\n                    entityIds.add(i);\r\n                }\r\n            }\r\n        }\r\n\r\n        return entityIds;\r\n    }\r\n\r\n    /**\r\n     * Find identifiers of entities which satisfy conditions by checking property set definitions directly.\r\n     */\r\n    filterProperties(node: LogicalNode): Set<number> {\r\n        if (node.expressions.length === 0) {\r\n            return this.getAllEntityIds();\r\n        }\r\n\r\n        const addCandidate = (condition: IndexedExpressions, bindingId: number) => {\r\n            if (candidatesBySetId.has(condition)) {\r\n                candidatesBySetId.get(condition).push(bindingId);\r\n            } else {\r\n                candidatesBySetId.set(condition, [bindingId]);\r\n            }\r\n        };\r\n\r\n        const conditions = this.indexEntityQuery(node.expressions);\r\n        const bindingsCount = this.properties.propertySetBindingsLength();\r\n        const candidatesBySetId: Map<IndexedExpressions, number[]> = new Map();\r\n\r\n        for (let i = 0; i < bindingsCount; i++) {\r\n            const setBinding = this.properties.propertySetBindings(i);\r\n            const setDefinitionId = setBinding.definition();\r\n\r\n            for (const condition of conditions) {\r\n                if (condition.definitionIds.has(setDefinitionId)) {\r\n                    const operation = condition.expression.operations[0];\r\n                    const propertyDefinitionId = condition.definitionIds.get(setDefinitionId);\r\n\r\n                    if (operation) {\r\n                        if (\r\n                            this.checkEntityConditions(\r\n                                setDefinitionId,\r\n                                propertyDefinitionId,\r\n                                operation,\r\n                                setBinding\r\n                            )\r\n                        ) {\r\n                            addCandidate(condition, i);\r\n                        }\r\n                    } else {\r\n                        addCandidate(condition, i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const [candidates, ids] of candidatesBySetId) {\r\n            candidates.expression.entityIds = this.getEntitiesFromBinding(ids);\r\n        }\r\n\r\n        return node.getIds();\r\n    }\r\n\r\n    startPropertyStreaming(entityIds: Set<number>, filter: LogicalNode) {\r\n        const setIds = this.getPropertySetIdsFromName(filter.expressions[0].setName);\r\n        this.streams.push({ entityIds: [...entityIds], setIds });\r\n        return { streamId: 0, length: entityIds.size };\r\n    }\r\n\r\n    getPropertyStreamPage(streamId: number, page: number, pageSize: number): Array<Array<{[name: string]: (string | number);}>> {\r\n        const { entityIds, setIds } = this.streams[streamId];\r\n\r\n        const data = [];\r\n        const startIndex = page * pageSize;\r\n        const length = Math.min(startIndex + pageSize, entityIds.length);\r\n\r\n        for (let i = startIndex; i < length; i++) {\r\n            const entityId = entityIds[i];\r\n            const entitySetIds = this.getPropertySetIdsFromEntity(entityId);\r\n            const row: {[name: string]: (string | number);}[] = [];\r\n\r\n            for (const propertySetId of entitySetIds) {\r\n                if (setIds.has(propertySetId)) {\r\n                    const properties = this.getPropertySet(propertySetId).properties;\r\n                    const obj: {[name: string]: (string | number);} = {};\r\n                    for (const prop of properties) {\r\n                        obj[prop.name] = prop.value;\r\n                    }\r\n                    row.push(obj);\r\n                }\r\n            }\r\n            data.push(row);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    getParents(entityIds: number[], type: HierarchyType): number[] {\r\n        const node = new Fbs.HierarchyNode();\r\n\r\n        let input = new Map<number, number>();\r\n        entityIds.forEach((v, i) => input.set(v, i));\r\n        let input2 = new Map<number, number>();\r\n        const parentIds = new Set<number>();\r\n\r\n        while (input.size > 0) {\r\n            for (let i = 0, l = this.modelEntities.hierarchiesLength(); i < l; i++) {\r\n                this.modelEntities.hierarchies(i, node);\r\n                if (node.type() !== type) continue;\r\n\r\n                const index = input.get(node.childElementId());\r\n                if (index !== undefined) {\r\n                    const parentId = node.parentElementId();\r\n                    parentIds.delete(index);\r\n                    parentIds.add(parentId);\r\n                    input2.set(parentId, index);\r\n                }\r\n            }\r\n            input.clear();\r\n            const tmp = input2;\r\n            input2 = input;\r\n            input = tmp;\r\n        }\r\n\r\n        return Array.from(parentIds);\r\n    }\r\n\r\n    getChildren(entityId: number, type: HierarchyType): Set<number> {\r\n        const hierarchyIndex = this.loadHierarchyIndex(type);\r\n        const children = hierarchyIndex[entityId];\r\n\r\n        if (!children) return new Set();\r\n\r\n        const ids = new Set([...children]);\r\n        const childrensChildren = new Set<number>();\r\n\r\n        for (const child of children) {\r\n            const newChildren = this.getChildren(child, type);\r\n            if (newChildren) newChildren.forEach(c => childrensChildren.add(c));\r\n        }\r\n\r\n        childrensChildren.forEach(c => ids.add(c));\r\n\r\n        return ids;\r\n    }\r\n\r\n    getHierarchyTree(entityIds: number[], hierarchyType: HierarchyType): {parentIds: number[], childrenIds?: number[]} {\r\n        const childrenIds = new Set<number>(entityIds);\r\n        const parentIds = this.getParents(entityIds, hierarchyType);\r\n        for (const parentId of parentIds) {\r\n            const children = this.getChildren(parentId, hierarchyType);\r\n            children.forEach(id => childrenIds.add(id));\r\n        }\r\n        return { parentIds: parentIds, childrenIds: [...childrenIds] };\r\n    }\r\n\r\n    private checkEntityConditions(\r\n        setDefinitionId: number,\r\n        propertyIdx: number,\r\n        propertyCondition: Operation,\r\n        setBinding: Fbs.PropertySet\r\n    ): boolean {\r\n        const setDefinition = this.properties.definitions(setDefinitionId);\r\n        const type = setDefinition.properties(propertyIdx).type();\r\n        const value = this.getValue(type, setBinding.values(propertyIdx));\r\n\r\n        return propertyCondition(value);\r\n    }\r\n\r\n    /**\r\n     * Extracts entity ids from an array of property set binding ids.\r\n     */\r\n    private getEntitiesFromBinding(bindingIds: number[]): Set<number> {\r\n        const candidateSet = new Set<number>();\r\n\r\n        for (const bindingId of bindingIds) {\r\n            const binding = this.properties.propertySetBindings(bindingId);\r\n            const entitiesLength = binding.entitiesLength();\r\n\r\n            for (let i = 0; i < entitiesLength; i++) {\r\n                candidateSet.add(binding.entities(i));\r\n            }\r\n        }\r\n\r\n        return candidateSet;\r\n    }\r\n\r\n    // Fetches the whole hierarchy at once\r\n    // Possible options:\r\n    //  - if parentId is passed then subtree starting from this node is returned\r\n    //  - if \"entity\" property is passed then Entity information is fetched\r\n    //  - if \"product\" property is passed then Product information is fetched\r\n    //  - if \"properties\" property is passed then PropetySet[] information is fetched\r\n    getHierarchy(type: HierarchyType, options?: HierarchyOptions): Hierarchy {\r\n        if (type === undefined) {\r\n            throw new RangeError(\"Must provide hierarchy type\");\r\n        }\r\n\r\n        const result = new Hierarchy();\r\n\r\n        // normalize arguments before passing them to internal method\r\n        if (!(options === null || options === undefined)) {\r\n            if (options.entity === true) {\r\n                result.entities = new Map();\r\n            }\r\n            if (options.product === true) {\r\n                result.products = new Map();\r\n            }\r\n            if (options.properties === true) {\r\n                result.propertySets = new Map();\r\n            }\r\n        }\r\n\r\n        result.hierarchy = this.getHierarchyInternal(\r\n            type,\r\n            options === undefined ? undefined : options.parentId,\r\n            result\r\n        );\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Converts static ids to runtime ids that are used for modifying the model.\r\n     * @param  {string[]} guids\r\n     * @returns {number[]}\r\n     */\r\n    getEntityIdsFromGuids(guids: string[]): number[] {\r\n        const uuids = new Map();\r\n        const tmpUuid = new UUID({});\r\n        let index = 0;\r\n        for (const id of guids) {\r\n            if (id.length === 22) {\r\n                uuids.set(id, index);\r\n            } else if (id.length === 36) {\r\n                // This is probably not good enough...\r\n                tmpUuid.setMsGuid(id);\r\n                uuids.set(tmpUuid.ifcGuid, index);\r\n            } else {\r\n                console.warn(\"Only IFC GUID and MS GUID is currently supported\");\r\n            }\r\n\r\n            index++;\r\n        }\r\n\r\n        const tmpGuid = new Fbs.Guid();\r\n        const tmpEntity = new Fbs.Entity();\r\n        const matchingEntityIds = new Array(guids.length);\r\n        let foundIds = 0;\r\n\r\n        for (let i = 0, l = this.modelEntities.entitiesLength(); i < l; i++) {\r\n            this.modelEntities.entities(i, tmpEntity);\r\n            if (tmpEntity.type() === Fbs.IdentifierType.Guid) {\r\n                this.modelEntities.guidIdentifiers(tmpEntity.identifierIndex(), tmpGuid);\r\n                tmpUuid.setFromBufferData(tmpGuid.bb.bytes().buffer, tmpGuid.bb_pos);\r\n                const id = tmpUuid.ifcGuid;\r\n                if (uuids.has(id)) {\r\n                    matchingEntityIds[uuids.get(id)] = i;\r\n                    foundIds++;\r\n                    if (foundIds === guids.length) return matchingEntityIds;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (matchingEntityIds.length !== guids.length) {\r\n            console.warn(\"Not all ids could be converted\");\r\n        }\r\n\r\n        return matchingEntityIds;\r\n    }\r\n\r\n    private getIdentifier = (() => {\r\n        const tmpGuid = new Fbs.Guid();\r\n        return (identifierType: IdentifierType, e: Fbs.Entity) => {\r\n            switch (identifierType) {\r\n                case IdentifierType.Guid:\r\n                    const guid = this.modelEntities.guidIdentifiers(e.identifierIndex(), tmpGuid);\r\n                    return createUUID(guid);\r\n                case IdentifierType.String:\r\n                    return this.modelEntities.stringIdentifiers(e.identifierIndex());\r\n                case IdentifierType.SpatialHash:\r\n                    return [\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).x(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).y(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).z(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d0(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d1(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d2(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d3(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d4(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d5(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d6(),\r\n                        this.modelEntities.spatialHashIdentifiers(e.identifierIndex()).d7()\r\n                    ];\r\n                case IdentifierType.DwgHandle:\r\n                    return [\r\n                        this.modelEntities.dwgHandleIdentifiers(e.identifierIndex()).high,\r\n                        this.modelEntities.dwgHandleIdentifiers(e.identifierIndex()).low\r\n                    ];\r\n                case IdentifierType.None:\r\n                    return;\r\n                default:\r\n                    console.warn(\"Unknown identifier\", identifierType);\r\n                    return;\r\n            }\r\n        };\r\n    })();\r\n\r\n    getEntity(entityId: number): Entity {\r\n        if (entityId < 0 || entityId > this.modelEntities.entitiesLength())\r\n            return;\r\n\r\n        const entity = new Entity();\r\n\r\n        const e = this.modelEntities.entities(entityId);\r\n        const identifierType = e.type();\r\n\r\n        entity.id = entityId;\r\n        entity.identifierType = identifierType;\r\n        entity.identifier = this.getIdentifier(entity.identifierType, e);\r\n\r\n        entity.class = this.modelEntities.entityClasses(e.classIndex());\r\n\r\n        return entity;\r\n    }\r\n\r\n    getEntitiesFromIds(entityIds: number[]): Entity[] {\r\n        const entities: Entity[] = Array(entityIds.length);\r\n        for (let i = 0, l = entityIds.length; i < l; i++)\r\n            entities[i] = this.getEntity(entityIds[i]);\r\n        return entities;\r\n    }\r\n\r\n    private getHierarchyInternal(\r\n        type: HierarchyType,\r\n        parentId: number,\r\n        catalog: Hierarchy\r\n    ): EntityInfo[] {\r\n        const index = this.loadHierarchyIndex(type);\r\n\r\n        let entities: EntityInfo[] = [];\r\n\r\n        if (parentId === undefined) {\r\n            // search for root nodes by finding all entities that don't have parents\r\n            const children = new Set<number>();\r\n            for (const values of index) {\r\n                if (!values) continue;\r\n                for (const value of values) {\r\n                    children.add(value);\r\n                }\r\n            }\r\n\r\n            for (let key = 0, length = index.length; key < length; key++) {\r\n                if (!index[key]) continue;\r\n\r\n                if (!children.has(key)) {\r\n                    const info: EntityInfo = {\r\n                        id: key,\r\n                        productId: this.getProductId(key),\r\n                        propertySetIds: [...this.getPropertySetIdsFromEntity(key)]\r\n                    };\r\n                    if (catalog.entities !== undefined && !catalog.entities.has(info.id)) {\r\n                        catalog.entities.set(info.id, this.getEntity(info.id));\r\n                    }\r\n                    if (\r\n                        catalog.products !== undefined &&\r\n                        info.productId &&\r\n                        !catalog.products.has(info.productId)\r\n                    ) {\r\n                        catalog.products.set(info.productId, this.getProduct(info.productId));\r\n                    }\r\n                    if (catalog.propertySets !== undefined) {\r\n                        for (var propertySetId of info.propertySetIds) {\r\n                            if (!catalog.propertySets.has(propertySetId)) {\r\n                                catalog.propertySets.set(\r\n                                    propertySetId,\r\n                                    this.getPropertySet(propertySetId)\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    info.children = this.getHierarchyInternal(type, key, catalog);\r\n                    entities.push(info);\r\n                }\r\n            }\r\n        } else {\r\n            const childrenIds = index[parentId];\r\n            if (childrenIds !== undefined) {\r\n                entities = Array<EntityInfo>(childrenIds.size);\r\n                let i = 0;\r\n                for (let childId of childrenIds) {\r\n                    const info: EntityInfo = {\r\n                        id: childId,\r\n                        productId: this.getProductId(childId),\r\n                        propertySetIds: [...this.getPropertySetIdsFromEntity(childId)]\r\n                    };\r\n                    if (catalog.entities !== undefined && !catalog.entities.has(info.id)) {\r\n                        catalog.entities.set(info.id, this.getEntity(info.id));\r\n                    }\r\n                    if (catalog.products !== undefined && !catalog.products.has(info.productId)) {\r\n                        catalog.products.set(info.productId, this.getProduct(info.productId));\r\n                    }\r\n                    if (catalog.propertySets !== undefined) {\r\n                        for (var propertySetId of info.propertySetIds) {\r\n                            if (!catalog.propertySets.has(propertySetId)) {\r\n                                catalog.propertySets.set(\r\n                                    propertySetId,\r\n                                    this.getPropertySet(propertySetId)\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    info.children = this.getHierarchyInternal(type, childId, catalog);\r\n                    entities[i++] = info;\r\n                }\r\n            }\r\n        }\r\n\r\n        return entities;\r\n    }\r\n\r\n    private loadProductIndex(): Array<number> {\r\n        if (this.productIndex === undefined) {\r\n            const entitiesLength = this.modelEntities.entitiesLength();\r\n            this.productIndex = new Array<number>(entitiesLength);\r\n\r\n            for (let i = 0, l = this.properties.productBindingsLength(); i < l; i++) {\r\n                const bindings = this.properties.productBindings(i);\r\n                this.productIndex[bindings.entityId()] = bindings.productId();\r\n            }\r\n        }\r\n\r\n        return this.productIndex;\r\n    }\r\n\r\n    private loadPropertyIndex(): Set<number>[] {\r\n        if (this.propertyIndex === undefined) {\r\n            const entitiesLength = this.modelEntities.entitiesLength();\r\n            const index: Map<number, Set<number>> = new Map();\r\n\r\n            for (let i = 0, l = this.properties.propertySetBindingsLength(); i < l; i++) {\r\n                const bindings = this.properties.propertySetBindings(i);\r\n\r\n                for (let j = 0, l = bindings.entitiesLength(); j < l; j++) {\r\n                    const entityId = bindings.entities(j);\r\n\r\n                    if (index.has(entityId)) {\r\n                        index.get(entityId).add(i);\r\n                    } else {\r\n                        index.set(entityId, new Set([i]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.propertyIndex = new Array<Set<number>>(entitiesLength);\r\n            for (let i = 0; i < entitiesLength; i++) {\r\n                if (index.has(i)) {\r\n                    this.propertyIndex[i] = index.get(i);\r\n                } else {\r\n                    this.propertyIndex[i] = new Set();\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.propertyIndex;\r\n    }\r\n\r\n    private loadHierarchyIndex(type: HierarchyType): Array<Set<number>> {\r\n        let index = this.hierarchyIndex.get(type);\r\n        if (index === undefined) {\r\n            const entitiesLength = this.modelEntities.entitiesLength();\r\n            index = new Array<Set<number>>(entitiesLength);\r\n\r\n            for (let i = 0, l = this.modelEntities.hierarchiesLength(); i < l; i++) {\r\n                const link = this.modelEntities.hierarchies(i);\r\n                const hierarchyType: number = link.type();\r\n\r\n                if (hierarchyType === type) {\r\n                    var node = index[link.parentElementId()];\r\n                    if (node === undefined) {\r\n                        node = new Set();\r\n                        index[link.parentElementId()] = node;\r\n                    }\r\n\r\n                    node.add(link.childElementId());\r\n                }\r\n            }\r\n\r\n            this.hierarchyIndex.set(type, index);\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    private getSinglePropertyDefinitions(\r\n        def: Fbs.PropertySetDefinition,\r\n        bindings: Fbs.PropertySet\r\n    ): Property[] {\r\n        const properties = new Array<Property>(def.propertiesLength());\r\n\r\n        for (let i = 0, l = def.propertiesLength(); i < l; i++) {\r\n            const singlePropertyDefinition = def.properties(i);\r\n\r\n            const name = this.properties.propertyNames(singlePropertyDefinition.name());\r\n            const value = this.getValue(singlePropertyDefinition.type(), bindings.values(i));\r\n            const type = <number>singlePropertyDefinition.type();\r\n\r\n            properties[i] = { name: name, value: value as number, type: type };\r\n        }\r\n\r\n        return properties;\r\n    }\r\n\r\n    private getValue(type: any, index: number): string | number | flatbuffers.Long {\r\n        switch (type) {\r\n            case PropertyType.LengthMeasure:\r\n                return this.properties.lengthMeasures(index);\r\n\r\n            case PropertyType.AreaMeasure:\r\n                return this.properties.areaMeasures(index);\r\n\r\n            case PropertyType.VolumeMeasure:\r\n                return this.properties.volumeMeasures(index);\r\n\r\n            case PropertyType.MassMeasure:\r\n                return this.properties.massMeasures(index);\r\n\r\n            case PropertyType.AngleMeasure:\r\n                return this.properties.angleMeasures(index);\r\n\r\n            case PropertyType.StringValue:\r\n                return this.properties.stringValues(index);\r\n\r\n            case PropertyType.IntValue:\r\n                return index;\r\n\r\n            case PropertyType.DoubleValue:\r\n                return this.properties.doubleValues(index);\r\n\r\n            case PropertyType.DateTime:\r\n                return this.properties.dateTimeValues(index);\r\n\r\n            case PropertyType.Logical:\r\n                return index;\r\n\r\n            case PropertyType.Boolean:\r\n                return index;\r\n        }\r\n    }\r\n}\r\n\r\nconst createUUID = (guid: Fbs.Guid) =>\r\n    new UUID({data: guid.bb.bytes().slice(guid.bb_pos, guid.bb_pos + 16)});\r\n","import { Operation, wrapperOperation } from \"./Parser\";\r\n\r\nexport interface IExpressionConstructor {\r\n    token: string;\r\n    operation?: Operation;\r\n    isSelector?: boolean;\r\n    wrapperOperation?: wrapperOperation;\r\n    reducerSelector?: string;\r\n    reducerName?: string;\r\n}\r\n\r\nexport class LogicalNode {\r\n    children: LogicalNode[];\r\n\r\n    constructor(public expressions?: Expression[]) {\r\n        this.children = [];\r\n    }\r\n\r\n    getIds(): Set<number> {\r\n        return this.expressions[0].entityIds;\r\n    }\r\n}\r\n\r\nexport class AndWrapper extends LogicalNode {\r\n    children: LogicalNode[];\r\n\r\n    constructor(public expressions?: Expression[]) {\r\n        super();\r\n    }\r\n\r\n    getIds(): Set<number> {\r\n        const iterator = this.expressions.values();\r\n        const firstExpression = iterator.next().value;\r\n\r\n        if (!firstExpression) return new Set();\r\n\r\n        const entityIds = firstExpression.entityIds;\r\n\r\n        for (const expression of iterator) {\r\n            for (const id of entityIds) {\r\n                if (!expression.entityIds.has(id)) {\r\n                    entityIds.delete(id);\r\n                }\r\n            }\r\n        }\r\n        return entityIds;\r\n    }\r\n}\r\n\r\nexport class OrWrapper extends LogicalNode {\r\n    children: LogicalNode[];\r\n\r\n    constructor(public expressions: Expression[]) {\r\n        super();\r\n    }\r\n\r\n    getIds() {\r\n        const result: Set<number> = new Set();\r\n\r\n        for (const expression of this.expressions) {\r\n            for (const id of expression.entityIds) {\r\n                result.add(id);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class Expression {\r\n    propertyName: string;\r\n    setName: string;\r\n    parent: number;\r\n    wrapperOperation: wrapperOperation;\r\n    token: string;\r\n    operations?: Operation[];\r\n    isSelector: boolean;\r\n    isOperation: boolean;\r\n    isLogical: boolean;\r\n    entityIds: Set<number>;\r\n    type?: number;\r\n\r\n    constructor({\r\n        token,\r\n        operation,\r\n        isSelector,\r\n        wrapperOperation\r\n    }: IExpressionConstructor) {\r\n        this.token = token;\r\n        this.operations = operation ? [operation] : [];\r\n\r\n        this.isSelector = !!isSelector;\r\n        this.isOperation = !isSelector;\r\n        this.isLogical = !!wrapperOperation;\r\n\r\n        if (this.isSelector) {\r\n            const [setName, propertyName] = token.split(\".\");\r\n            this.setName = setName;\r\n            this.propertyName = propertyName;\r\n        }\r\n\r\n        if (this.isLogical) {\r\n            this.wrapperOperation = wrapperOperation;\r\n        }\r\n\r\n        this.entityIds = new Set();\r\n    }\r\n\r\n    addOperations(operation: Operation[]) {\r\n        this.operations.push(...operation);\r\n    }\r\n\r\n    combineOperations(expressions: Expression[]) {\r\n        if (!this.wrapperOperation)\r\n            throw new Error(\"Error: Trying to combine without combine operation\");\r\n\r\n        const operations: Operation[] = [];\r\n        for (const expression of expressions) {\r\n            if (!expression.operations)\r\n                throw new Error(\"Syntax Error, Expression without operation\");\r\n            operations.push(...expression.operations);\r\n        }\r\n        this.operations = [this.wrapperOperation(operations)];\r\n    }\r\n\r\n    combineExpressions(children: Expression[]) {\r\n        if (this.isSelector) {\r\n            for (const child of children) {\r\n                if (child.isOperation) {\r\n                    this.addOperations(child.operations);\r\n                }\r\n            }\r\n        } else if (this.isOperation) {\r\n            if (this.isLogical) {\r\n                this.combineOperations(children);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Expression, OrWrapper, AndWrapper, LogicalNode } from \"./Expression\";\r\nimport { HierarchyType } from \"../../common\";\r\n\r\n// @ts-ignore\r\nexport type Operation = (value) => boolean;\r\n// @ts-ignore\r\nexport type wrapperOperation = (operations: Operation[]) => (value) => boolean;\r\n\r\nexport interface HierarchyQuery {\r\n    $ENTITYID: number[];\r\n    $SCOPE: \"Descendants\" | \"DescendantsAndSelf\" | \"Root\";\r\n    $HIERARCHYTYPE: HierarchyType;\r\n    $UNIQUEIDENTIFIERS: string[];\r\n    result?: number[];\r\n}\r\n\r\nfunction unwrapTopLevelOperators(object: any) {\r\n    for (let [token, right] of Object.entries(object)) {\r\n        token = token.startsWith(\"$\") ? token.toUpperCase() : token;\r\n        if (right instanceof Array) {\r\n            switch (token) {\r\n                case \"$OR\":\r\n                    return new OrWrapper(parseArray(right));\r\n                case \"$AND\":\r\n                    return new AndWrapper(parseArray(right));\r\n                // case \"$NOT\":\r\n                default:\r\n                    return object;\r\n            }\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport function parse(object: any): LogicalNode {\r\n    if (Object.values(object)[0] instanceof Array) {\r\n        return unwrapTopLevelOperators(object);\r\n    } else {\r\n        return new LogicalNode(parseObject(object));\r\n    }\r\n}\r\n\r\nexport function parseObject(object: any) {\r\n    const expressions: Expression[] = [];\r\n\r\n    for (const [token, right] of Object.entries(object)) {\r\n        const expression = parseToken(token, right);\r\n\r\n        if (right instanceof Array) {\r\n            const childExpressions = parseArray(right);\r\n            expression.combineExpressions(childExpressions);\r\n        } else if (isObject(right)) {\r\n            const childExpressions = parseObject(right);\r\n            expression.combineExpressions(childExpressions);\r\n        }\r\n        expressions.push(expression);\r\n    }\r\n\r\n    return expressions;\r\n}\r\n\r\nexport function parseHierarchy(object: any) {\r\n    let newObject = {};\r\n\r\n    for (const key of Object.keys(object)) {\r\n        const uppercaseKey = key.toUpperCase();\r\n        const value = object[key];\r\n        switch (uppercaseKey) {\r\n            case \"$UNIQUEIDENTIFIERS\":\r\n            case \"$ENTITYID\":\r\n                // @ts-ignore\r\n                newObject[uppercaseKey] = value instanceof Array ? value : [value];\r\n                break;\r\n            default:\r\n                // @ts-ignore\r\n                newObject[uppercaseKey] = value;\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (!(\"$AND\" in newObject)) {\r\n        newObject = { $AND: [newObject] };\r\n    }\r\n\r\n    return newObject;\r\n}\r\n\r\nfunction parseArray(array: any[]) {\r\n    const childExpressions = [];\r\n    for (const item of array) {\r\n        childExpressions.push(...parseObject(item));\r\n    }\r\n    return childExpressions;\r\n}\r\n\r\nfunction parseToken(token: string, right: any) {\r\n    token = token.startsWith(\"$\") ? token.toUpperCase() : token;\r\n\r\n    switch (token) {\r\n        //LOGICAL\r\n        case \"$OR\":\r\n        case \"$AND\":\r\n        case \"$NOT\":\r\n            return parseLogical(token, right);\r\n        //COMPARISON\r\n        case \"$GT\":\r\n        case \"$GTE\":\r\n        case \"$EQ\":\r\n        case \"$LT\":\r\n        case \"$LTE\":\r\n            return comparison(token, right);\r\n        //TEXT\r\n        case \"$REGEX\":\r\n        case \"$TEXT\":\r\n            break;\r\n        default:\r\n            return parseSelector(token, right);\r\n    }\r\n}\r\n\r\nfunction parseLogical(token: string, right: any) {\r\n    if (right instanceof Array) {\r\n        return new Expression({\r\n            token,\r\n            wrapperOperation: getLogicalWrapper(token)\r\n        });\r\n    } else {\r\n        throw new Error(\"TODO\");\r\n    }\r\n}\r\n\r\nfunction getLogicalWrapper(key: string) {\r\n    switch (key) {\r\n        case \"$OR\":\r\n            // @ts-ignore\r\n            return (operations: Operation[]) => value =>\r\n                operations.reduce((prev, op) => prev || op(value), false);\r\n        case \"$AND\":\r\n            // @ts-ignore\r\n            return (operations: Operation[]) => value =>\r\n                operations.reduce((prev, op) => prev && op(value), true);\r\n    }\r\n}\r\n\r\nfunction parseSelector(token: string, right: any) {\r\n    const operation = isPrimitive(right) ? parseSelectorPrimitive(right) : undefined;\r\n\r\n    return new Expression({\r\n        token,\r\n        operation,\r\n        isSelector: true\r\n    });\r\n}\r\n\r\nfunction parseSelectorPrimitive(value: String | Number) {\r\n    // @ts-ignore\r\n    return inputValue => inputValue === value;\r\n}\r\n\r\nfunction getComparisonFunction(key: string, value: number | string) {\r\n    switch (key) {\r\n        case \"$GT\":\r\n            // @ts-ignore\r\n            return input => input > value;\r\n        case \"$GTE\":\r\n            // @ts-ignore\r\n            return input => input >= value;\r\n        case \"$EQ\":\r\n            // @ts-ignore\r\n            return input => input === value;\r\n        case \"$LT\":\r\n            // @ts-ignore\r\n            return input => input < value;\r\n        case \"$LTE\":\r\n            // @ts-ignore\r\n            return input => input <= value;\r\n        default:\r\n            throw new Error(`Missing comparison operator ${key}.`);\r\n    }\r\n}\r\n\r\nfunction comparison(token: string, right: any) {\r\n    if (!isNaN(right) || right instanceof Date) {\r\n        return new Expression({\r\n            token,\r\n            operation: getComparisonFunction(token, right)\r\n        });\r\n    } else {\r\n        throw new Error(`Comparison operators cannot be used with ${typeof right}`);\r\n    }\r\n}\r\n\r\nfunction isPrimitive(value: any) {\r\n    return typeof value === \"string\" || value instanceof String || !isNaN(value);\r\n}\r\n\r\nfunction isObject(obj: any) {\r\n    return obj instanceof Object && Object.keys(obj).length > 0;\r\n}\r\n","import { EntityManager } from \"../EntityManager\";\r\nimport { parse, parseHierarchy } from \"./Parser\";\r\nimport { Query } from \"../../common\";\r\nimport { InstanceManager } from \"../InstanceManager\";\r\n\r\nexport const find = (entityManager: EntityManager, instanceManager: InstanceManager, request: Query) => {\r\n    const results: any = {\r\n        entityIds: new Set()\r\n    };\r\n    const hierarchy = request.find.$hierarchy ? parseHierarchy(request.find.$hierarchy) : undefined;\r\n\r\n    const filter = request.find.$filter ? parse(request.find.$filter) : undefined;\r\n\r\n    const product = request.find.$product ? parse(request.find.$product) : undefined;\r\n\r\n    const entity = request.find.$entity ? parse(request.find.$entity) : undefined;\r\n\r\n    const definition = request.find.$definition ? parse(request.find.$definition) : undefined;\r\n\r\n    const selector = request.find.$selector ? parse(request.find.$selector) : undefined;\r\n\r\n    if (filter) {\r\n        results.entityIds = entityManager.filterProperties(filter);\r\n    }\r\n\r\n    if (product) {\r\n        results.entityIds = new Set([\r\n            ...entityManager.findProducts(product),\r\n            ...results.entityIds\r\n        ]);\r\n    }\r\n\r\n    if (entity) {\r\n        results.entityIds = new Set([\r\n            ...entityManager.filterEntities(entity),\r\n            ...results.entityIds\r\n        ]);\r\n    }\r\n\r\n    if (definition) {\r\n        results.entityIds = new Set([\r\n            ...instanceManager.filterDefinition(entityManager.getAllEntityIds(), definition),\r\n            ...results.entityIds\r\n        ]);\r\n    }\r\n\r\n    if (hierarchy) {\r\n        results.entityIds = new Set([\r\n            ...entityManager.queryHierarchy(hierarchy),\r\n            ...results.entityIds\r\n        ]);\r\n    }\r\n\r\n    if (!filter && !hierarchy && !product && !entity && !definition) {\r\n        results.entityIds = entityManager.getAllEntityIds();\r\n    }\r\n\r\n    if (request.find.stream) {\r\n        const { streamId, length } = entityManager.startPropertyStreaming(\r\n            results.entityIds,\r\n            selector\r\n        );\r\n        request.output = {\r\n            find: {\r\n                streamId,\r\n                length\r\n            }\r\n        };\r\n\r\n        return request;\r\n    } else {\r\n        if (!results.entityIds) results.entityIds = new Set();\r\n        request.output = {\r\n            find: {\r\n                entityIds: [...results.entityIds]\r\n            }\r\n        };\r\n\r\n        return request;\r\n    }\r\n};\r\n","import { StateType } from \"./ThreadWorkerMessages\";\r\nimport { TrimbimPickPriority } from \"../common\";\r\n\r\nexport class ModelEntityState {\r\n    protected readonly pickPriorityOffset = 2;\r\n    protected readonly pickPriorityMask = 3 << this.pickPriorityOffset;\r\n\r\n    protected state: Uint8Array;\r\n\r\n    constructor(geometryCount: number) {\r\n        this.state = new Uint8Array(geometryCount);\r\n        this.state.fill(StateType.VISIBILITY);\r\n    }\r\n\r\n    isVisible(entityId: number): boolean {\r\n        return this.is(entityId, StateType.VISIBILITY);\r\n    }\r\n\r\n    isSelected(entityId: number): boolean {\r\n        return this.is(entityId, StateType.SELECTION);\r\n    }\r\n\r\n    private is(entityId: number, stateType: StateType): boolean {\r\n        return !!(this.state[entityId] & stateType);\r\n    }\r\n\r\n    getPickPriority(entityId: number): TrimbimPickPriority {\r\n        return (this.state[entityId] & this.pickPriorityMask) >> this.pickPriorityOffset;\r\n    }\r\n\r\n    setVisibility(visible: boolean, entityIds: ArrayLike<number>): void {\r\n        if (entityIds) {\r\n            for (let i = 0, l = entityIds.length; i < l; i++) {\r\n                const mask = this.state[entityIds[i]];\r\n                this.state[entityIds[i]] = visible ? mask | StateType.VISIBILITY : mask & ~StateType.VISIBILITY;\r\n            }\r\n        }\r\n        else {\r\n            for (let entityId = 0, l = this.state.length; entityId < l; entityId++) {\r\n                const mask = this.state[entityId];\r\n                this.state[entityId] = visible ? mask | StateType.VISIBILITY : mask & ~StateType.VISIBILITY;\r\n            }\r\n        }\r\n    }\r\n\r\n    resetVisibility(): void {\r\n        for (let i = 0, l = this.state.length; i < l; i++) {\r\n            this.state[i] = this.state[i] | StateType.VISIBILITY;\r\n        }\r\n    }\r\n\r\n    setPickPriority(pickPriority: TrimbimPickPriority, entityIds: ArrayLike<number>): void {\r\n        const priorityValue = pickPriority << this.pickPriorityOffset;\r\n        if (entityIds) {\r\n            for (let i = 0, l = entityIds.length; i < l; i++) {\r\n                const mask = this.state[entityIds[i]];\r\n                this.state[entityIds[i]] = mask & ~this.pickPriorityMask | priorityValue;\r\n            }\r\n        }\r\n        else {\r\n            for (let entityId = 0, l = this.state.length; entityId < l; entityId++) {\r\n                const mask = this.state[entityId];\r\n                this.state[entityId] = mask & ~this.pickPriorityMask | priorityValue;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    resetPickPriority(): void {\r\n        for (let i = 0, l = this.state.length; i < l; i++) {\r\n            this.state[i] = this.state[i] & ~this.pickPriorityMask;\r\n        }\r\n    }\r\n\r\n    setSelection(selected: boolean, entityIds: ArrayLike<number>): void {\r\n        for (let i = 0, l = entityIds.length; i < l; i++) {\r\n            const mask = this.state[entityIds[i]];\r\n            this.state[entityIds[i]] = selected ? mask | StateType.SELECTION : mask & ~StateType.SELECTION;\r\n        }\r\n    }\r\n\r\n    clearSelection(): void {\r\n        for (let i = 0, l = this.state.length; i < l; i++) {\r\n            this.state[i] = this.state[i] & ~StateType.SELECTION;\r\n        }\r\n    }\r\n}\r\n","export class QuantizedAxisAlignedBox3 {\r\n    /// <summary>\r\n    /// Initializes a new instance of the <see cref=\"QuantizedAxisAlignedBox3\"/> struct.\r\n    /// </summary>\r\n    /// <param name=\"minX\">The min X.</param>\r\n    /// <param name=\"maxX\">The max X.</param>\r\n    /// <param name=\"minY\">The min Y.</param>\r\n    /// <param name=\"maxY\">The max Y.</param>\r\n    /// <param name=\"minZ\">The min Z.</param>\r\n    /// <param name=\"maxZ\">The max Z.</param>\r\n    constructor(public aabb: Float64Array = new Float64Array(6), public offset: number = 0) {}\r\n\r\n    public get MinX(): number {\r\n        return this.aabb[this.offset];\r\n    }\r\n\r\n    public get MaxX(): number {\r\n        return this.aabb[this.offset + 1];\r\n    }\r\n\r\n    public get MinY(): number {\r\n        return this.aabb[this.offset + 2];\r\n    }\r\n\r\n    public get MaxY(): number {\r\n        return this.aabb[this.offset + 3];\r\n    }\r\n\r\n    public get MinZ(): number {\r\n        return this.aabb[this.offset + 4];\r\n    }\r\n\r\n    public get MaxZ(): number {\r\n        return this.aabb[this.offset + 5];\r\n    }\r\n\r\n    copy(other: QuantizedAxisAlignedBox3): void {\r\n        this.aabb[this.offset] = other.MinX;\r\n        this.aabb[this.offset + 1] = other.MaxX;\r\n        this.aabb[this.offset + 2] = other.MinY;\r\n        this.aabb[this.offset + 3] = other.MaxY;\r\n        this.aabb[this.offset + 4] = other.MinZ;\r\n        this.aabb[this.offset + 5] = other.MaxZ;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Creates the merged QuantizedAabb with the other QuantizedAabb.\r\n    /// </summary>\r\n    /// <param name=\"other\">The other QuantizedAabb.</param>\r\n    /// <returns>The merged QuantizedAabb.</returns>\r\n    public CreateMergedWith(first: QuantizedAxisAlignedBox3, second: QuantizedAxisAlignedBox3): void {\r\n        (this.aabb[this.offset] = Math.min(first.MinX, second.MinX)),\r\n            (this.aabb[this.offset + 1] = Math.max(first.MaxX, second.MaxX)),\r\n            (this.aabb[this.offset + 2] = Math.min(first.MinY, second.MinY)),\r\n            (this.aabb[this.offset + 3] = Math.max(first.MaxY, second.MaxY)),\r\n            (this.aabb[this.offset + 4] = Math.min(first.MinZ, second.MinZ)),\r\n            (this.aabb[this.offset + 5] = Math.max(first.MaxZ, second.MaxZ));\r\n    }\r\n}\r\n","import { QuantizedAxisAlignedBox3 } from \"./QuantizedAxisAlignedBox3\";\r\n\r\n// --------------------------------------------------------------------------------------------------------------------\r\n// <copyright file=\"QuantizedAxisAlignedBox3TreeNode.cs\" company=\"Tekla Corporation\">\r\n//   All rights reserved.\r\n// </copyright>\r\n// <summary>\r\n//   The quantized axis aligned bounding box node with data id.\r\n// </summary>\r\n// --------------------------------------------------------------------------------------------------------------------\r\n\r\n/// <summary>\r\n/// The quantized axis aligned bounding box node with data id.\r\n/// </summary>\r\nexport class QuantizedAxisAlignedBox3TreeNode {\r\n    private view: DataView;\r\n\r\n    constructor(array: Float64Array, offset: number) {\r\n        this.quantizedAabb = new QuantizedAxisAlignedBox3(array, offset);\r\n    }\r\n\r\n    /// <summary>\r\n    /// The quantized axis aligned bounding box.\r\n    /// </summary>\r\n    private quantizedAabb: QuantizedAxisAlignedBox3;\r\n\r\n    /// <summary>\r\n    /// If negative, containing the escape width.\r\n    /// If positive, the data provided.\r\n    /// </summary>\r\n    private widthOrValue: number;\r\n\r\n    /// <summary>\r\n    /// Determines whether this is data node.\r\n    /// </summary>\r\n    /// <returns>\r\n    ///   <c>true</c> if this node contains data; otherwise, <c>false</c> and contains a branch.\r\n    /// </returns>\r\n    public IsDataNode(): boolean {\r\n        return this.widthOrValue >= 0;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Gets the quantized axis aligned bounding box.\r\n    /// </summary>\r\n    /// <returns>the quantized axis aligned bounding box</returns>\r\n    public GetQuantizedAabb(): QuantizedAxisAlignedBox3 {\r\n        return this.quantizedAabb;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Gets the width of the branch. (The count of nodes inside this branches subtree).\r\n    /// </summary>\r\n    /// <returns>The count of nodes inside this branch.</returns>\r\n    public GetBranchNodeWidth(): number {\r\n        // if (this.widthOrValue > 0)\r\n        // {\r\n        //     debugger;\r\n        //     return 0;\r\n        // }\r\n        return -this.widthOrValue;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Gets the data value.\r\n    /// </summary>\r\n    /// <returns>Returns the id for the node.</returns>\r\n    public GetDataNodeValue(): number {\r\n        // if (this.widthOrValue < 0)\r\n        // {\r\n        //     debugger;\r\n        //     return 0;\r\n        // }\r\n        return this.widthOrValue;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Sets the node to be a branch node.\r\n    /// </summary>\r\n    /// <param name=\"width\">The width of the branch.</param>\r\n    /// <param name=\"aabb\">The quantized axis aligned bounding box for the brach</param>\r\n    public SetAsBranch(width: number, aabb: QuantizedAxisAlignedBox3): void {\r\n        this.widthOrValue = -width;\r\n        this.quantizedAabb.copy(aabb);\r\n    }\r\n\r\n    public SetBranch(width: number): void {\r\n        this.widthOrValue = -width;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Sets the data value.\r\n    /// </summary>\r\n    /// <param name=\"dataValue\">The data value.</param>\r\n    /// <param name=\"aabb\">The quantized axis aligned bounding box for the brach</param>\r\n    public SetAsDataValue(dataValue: number, aabb: QuantizedAxisAlignedBox3): void {\r\n        this.widthOrValue = dataValue;\r\n        this.quantizedAabb.copy(aabb);\r\n    }\r\n\r\n    public SetDataValue(dataValue: number): void {\r\n        this.widthOrValue = dataValue;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Tests the quantized box overlap.\r\n    /// </summary>\r\n    /// <param name=\"aabb\">The quantized axis aligned bounding box to compare with.</param>\r\n    /// <returns>\r\n    /// Returns true, is boxes overlap.\r\n    /// </returns>\r\n    public TestQuantizedBoxOverlap(aabb: QuantizedAxisAlignedBox3): boolean {\r\n        if (\r\n            this.quantizedAabb.MinX > aabb.MaxX ||\r\n            this.quantizedAabb.MaxX < aabb.MinX ||\r\n            this.quantizedAabb.MinY > aabb.MaxY ||\r\n            this.quantizedAabb.MaxY < aabb.MinY ||\r\n            this.quantizedAabb.MinZ > aabb.MaxZ ||\r\n            this.quantizedAabb.MaxZ < aabb.MinZ\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","// --------------------------------------------------------------------------------------------------------------------\r\n// <copyright file=\"QuantizedAabbTree.cs\" company=\"Tekla Corporation.\">\r\n//   All rights reserved.\r\n// </copyright>\r\n// <summary>\r\n//   Defines the QuantizedAabbTree type.\r\n//\r\n// TODO: Get rid of QuantizedAabbTreeNodes class - obsolete.. or is it? do we want to keep center point & extents in the same struct?\r\n// TODO; the first node is not needed? ... so what (?)\r\n// </summary>\r\n// --------------------------------------------------------------------------------------------------------------------\r\n\r\nimport { QuantizedAxisAlignedBox3 } from \"./QuantizedAxisAlignedBox3\";\r\nimport { QuantizedAxisAlignedBox3TreeNode } from \"./QuantizedAxisAlignedBox3TreeNode\";\r\n\r\nimport { Ray, Box3, Plane, Vector3, Frustum } from \"../ThreeMath\";\r\nimport { Utils } from \"../Utils\";\r\n\r\n/// The struct representing the input item.\r\nexport class InputBox {\r\n    constructor(public index: number, public Data: number) {}\r\n}\r\n\r\n/// Definition of items in the visitor walker.\r\ninterface VisitorStackItem {\r\n    /// The parent id.\r\n    BranchNodeIndex: number;\r\n\r\n    /// The depth of the node (level)\r\n    Depth: number;\r\n\r\n    /// The branch node end index.\r\n    BranchNodeEndIndex: number;\r\n\r\n    /// The count of subnodes containing data.\r\n    DataNodeCount: number;\r\n\r\n    /// The count of subnodes containing branch.\r\n    BranchNodeCount: number;\r\n}\r\n\r\n/// Quantized axis aligned bounding box tree\r\nexport class QuantizedAxisAlignedBox3Tree {\r\n    /// global bounding box.\r\n    public globalAabb: Box3;\r\n\r\n    /// The quantized nodes presenting the tree.\r\n    private quantizedAabbTreeNodes: QuantizedAxisAlignedBox3TreeNode[];\r\n\r\n    private leftBoundingBoxes: QuantizedAxisAlignedBox3[];\r\n    private rightBoundingBoxes: QuantizedAxisAlignedBox3[];\r\n\r\n    /// Initializes a new instance of the <see cref=\"QuantizedAxisAlignedBox3Tree\"/> class.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    constructor(private boundingBoxes: Float64Array, inputBoxes: InputBox[]) {\r\n        this.globalAabb = this.MergeBoxes(inputBoxes, 0, inputBoxes.length);\r\n        const nodeCount = inputBoxes.length * 2 - 1;\r\n        this.quantizedAabbTreeNodes = [];\r\n\r\n        const buffer = new Float64Array(nodeCount * 6);\r\n        for (let i = 0; i < nodeCount; i++) {\r\n            this.quantizedAabbTreeNodes.push(new QuantizedAxisAlignedBox3TreeNode(buffer, i * 6));\r\n        }\r\n\r\n        const subTreeBoundingBox = new QuantizedAxisAlignedBox3();\r\n\r\n        this.leftBoundingBoxes = [];\r\n        this.rightBoundingBoxes = [];\r\n\r\n        for (let i = 0; i < 32; i++) {\r\n            this.leftBoundingBoxes.push(new QuantizedAxisAlignedBox3());\r\n            this.rightBoundingBoxes.push(new QuantizedAxisAlignedBox3());\r\n        }\r\n\r\n        this.BuildSubTree(0, 0, inputBoxes, 0, inputBoxes.length, subTreeBoundingBox);\r\n    }\r\n\r\n    /// Gets the total count of data (leaf) nodes.\r\n    public DataNodeCount(): number {\r\n        return (this.quantizedAabbTreeNodes.length + 1) / 2;\r\n    }\r\n\r\n    /// Query items inside the given box.\r\n    /// <param name=\"box\">The box.</param>\r\n    /// <returns>Results the list of entities that are possible inside the given box.</returns>\r\n    public BoxQuery(box: Box3): number[] {\r\n        const collidedResults: number[] = [];\r\n        const quantizedAabb = new QuantizedAxisAlignedBox3();\r\n\r\n        this.Quantize(box, quantizedAabb);\r\n        let currentIndex = 0;\r\n\r\n        while (currentIndex < this.quantizedAabbTreeNodes.length) {\r\n            const overlaps: boolean = this.TestQuantizedBoxOverlap(currentIndex, quantizedAabb);\r\n            const isDataNode: boolean = this.IsDataNode(currentIndex);\r\n\r\n            if (isDataNode && overlaps) {\r\n                // is overlapped data (leaf) node\r\n                collidedResults.push(this.GetNodeDataValue(currentIndex));\r\n                currentIndex++;\r\n            } else if (isDataNode || overlaps) {\r\n                // is data (leaf) node or overlapping branch node.\r\n                currentIndex++;\r\n            } else {\r\n                // branch node does not overlap -> skip\r\n                currentIndex += this.GetBranchNodeWidth(currentIndex);\r\n            }\r\n        }\r\n\r\n        return collidedResults;\r\n    }\r\n\r\n    public QueryRay(ray: Ray, clipPlanes: Plane[]): number[] {\r\n        const intersect = (box: Box3) => ray.intersectsBox(box);\r\n        const visible = clipPlanes && clipPlanes.length > 0 ?\r\n            (box: Box3) => Utils.planesIntersectBox(clipPlanes, box) : () => true;\r\n        return this.Query(intersect, () => false, visible);\r\n    }\r\n\r\n    public QueryFrustum(frustum: Frustum, clipPlanes: Plane[]): number[] {\r\n        const planes = [...frustum.planes];\r\n        if (clipPlanes) planes.push(...clipPlanes);\r\n        const intersect = (box: Box3) => Utils.planesIntersectBox(planes, box);\r\n        const contain = (box: Box3) => Utils.planesContainBox(planes, box);\r\n        return this.Query(intersect, contain, () => true);\r\n    }\r\n\r\n    private Query(intersectBox: (box: Box3) => boolean, containBox: (box: Box3) => boolean, visibleBox: (box: Box3) => boolean): number[] {\r\n        const collidedResults: number[] = [];\r\n        let curIndex = 0;\r\n        const numNodes = this.quantizedAabbTreeNodes.length;\r\n\r\n        while (curIndex < numNodes) {\r\n            const bound = this.GetAabb(curIndex);\r\n            const isDataNode = this.IsDataNode(curIndex);\r\n            const contains = containBox(bound);\r\n            const intersects = contains || intersectBox(bound);\r\n\r\n            if (isDataNode && intersects && visibleBox(bound)) {\r\n                // is overlapped data (leaf) node\r\n                collidedResults.push(this.GetNodeDataValue(curIndex));\r\n            }\r\n\r\n            if (intersects || isDataNode) {\r\n                // is data (leaf) node or overlapping branch node.\r\n                curIndex++;\r\n\r\n                if (contains && !isDataNode) {\r\n                    // contain whole branch -> add all data nodes\r\n                    const endIndex = curIndex + this.GetBranchNodeWidth(curIndex);\r\n                    for (; curIndex < endIndex; curIndex++) {\r\n                        if (this.IsDataNode(curIndex) && visibleBox(bound))\r\n                            collidedResults.push(this.GetNodeDataValue(curIndex));\r\n                    }\r\n                }\r\n            } else {\r\n                // branch node does not overlap -> skip\r\n                curIndex += this.GetBranchNodeWidth(curIndex);\r\n            }\r\n        }\r\n\r\n        return collidedResults;\r\n    }\r\n\r\n    /// Calculates the average node depth.\r\n    /// <returns>The average node depth.</returns>\r\n    public CalculateAverageNodeDepth(): number {\r\n        let totalDepth = 0;\r\n\r\n        const parentStack: number[] = [];\r\n\r\n        for (\r\n            let currentIndex = 0;\r\n            currentIndex < this.quantizedAabbTreeNodes.length;\r\n            currentIndex++\r\n        ) {\r\n            // if we're in the right of an node.\r\n            while (\r\n                parentStack.length !== 0 &&\r\n                parentStack[parentStack.length - 1] === currentIndex\r\n            ) {\r\n                parentStack.pop();\r\n            }\r\n\r\n            if (this.IsDataNode(currentIndex)) {\r\n                totalDepth += parentStack.length;\r\n            } else {\r\n                // is node; push the node-right index to stack.\r\n                const nodeWidth = this.GetBranchNodeWidth(currentIndex);\r\n                parentStack.push(currentIndex + nodeWidth);\r\n            }\r\n        }\r\n\r\n        return totalDepth / this.DataNodeCount();\r\n    }\r\n\r\n    private getBox3FromArray(array: Float64Array, target: Box3, index: number): void {\r\n        target.min.fromArray(array as any, index * 6);\r\n        target.max.fromArray(array as any, index * 6 + 3);\r\n    }\r\n\r\n    /// QSort like in-place split by pivot using X component.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left.</param>\r\n    /// <param name=\"right\">The right.</param>\r\n    /// <param name=\"pivotValue\">The pivot value.</param>\r\n    /// <returns>The split index, for which the split is effective.</returns>\r\n    private InPlaceSplitX = (() => {\r\n        const vec3 = new Vector3();\r\n        const box = new Box3();\r\n\r\n        return (\r\n            inputBoxes: InputBox[],\r\n            left: number,\r\n            right: number,\r\n            pivotValue: number\r\n        ): number => {\r\n            let pivotIndex = left;\r\n\r\n            // only larger than pivotValue are stored before the pivotIndex..\r\n            for (let i = left; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                if (box.getCenter(vec3).x > pivotValue) {\r\n                    this.SwapInputBoxes(inputBoxes, i, pivotIndex);\r\n                    pivotIndex++;\r\n                }\r\n            }\r\n\r\n            return pivotIndex;\r\n        };\r\n    })();\r\n\r\n    /// QSort like in-place split by pivot using Y component.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left.</param>\r\n    /// <param name=\"right\">The right.</param>\r\n    /// <param name=\"pivotValue\">The pivot value.</param>\r\n    /// <returns>The split index, for which the split is effective.</returns>\r\n    private InPlaceSplitY = (() => {\r\n        const vec3 = new Vector3();\r\n        const box = new Box3();\r\n\r\n        return (\r\n            inputBoxes: InputBox[],\r\n            left: number,\r\n            right: number,\r\n            pivotValue: number\r\n        ): number => {\r\n            let pivotIndex = left;\r\n\r\n            // only larger than pivotValue are stored before the pivotIndex..\r\n            for (let i = left; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                if (box.getCenter(vec3).y > pivotValue) {\r\n                    this.SwapInputBoxes(inputBoxes, i, pivotIndex);\r\n                    pivotIndex++;\r\n                }\r\n            }\r\n\r\n            return pivotIndex;\r\n        };\r\n    })();\r\n\r\n    /// QSort like in-place split by pivot using Z component.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left.</param>\r\n    /// <param name=\"right\">The right.</param>\r\n    /// <param name=\"pivotValue\">The pivot value.</param>\r\n    /// <returns>The split index, for which the split is effective.</returns>\r\n    private InPlaceSplitZ = (() => {\r\n        const vec3 = new Vector3();\r\n        const box = new Box3();\r\n\r\n        return (\r\n            inputBoxes: InputBox[],\r\n            left: number,\r\n            right: number,\r\n            pivotValue: number\r\n        ): number => {\r\n            let pivotIndex = left;\r\n\r\n            // only larger than pivotValue are stored before the pivotIndex..\r\n            for (let i = left; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                if (box.getCenter(vec3).z > pivotValue) {\r\n                    this.SwapInputBoxes(inputBoxes, i, pivotIndex);\r\n                    pivotIndex++;\r\n                }\r\n            }\r\n\r\n            return pivotIndex;\r\n        };\r\n    })();\r\n\r\n    /// Calculates the mean the of center points in the given range.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left.</param>\r\n    /// <param name=\"right\">The right.</param>\r\n    /// <returns>Returns the mean of the center boxes in the given range.</returns>\r\n    private CalculateMeanOfCenterPoints = (() => {\r\n        const vec3 = new Vector3();\r\n        const box = new Box3();\r\n\r\n        return (inputBoxes: InputBox[], left: number, right: number, target: Vector3) => {\r\n            this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[left].index);\r\n            box.getCenter(target);\r\n            for (let i = left + 1; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                target.add(box.getCenter(vec3));\r\n            }\r\n\r\n            const numIndices = right - left;\r\n            return target.divideScalar(numIndices);\r\n        };\r\n    })();\r\n\r\n    /// Merges the boxes in the given range.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left.</param>\r\n    /// <param name=\"right\">The right.</param>\r\n    /// <returns>Returns the Aabb that is merged with the boxes in the given range.</returns>\r\n    private MergeBoxes = (() => {\r\n        const box = new Box3();\r\n\r\n        return (inputBoxes: InputBox[], left: number, right: number) => {\r\n            this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[left].index);\r\n            const mergedAabb = box.clone();\r\n            for (let i = left + 1; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                mergedAabb.union(box);\r\n            }\r\n\r\n            return mergedAabb;\r\n        };\r\n    })();\r\n\r\n    /// Swaps the boxes.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"itemA\">The itemA.</param>\r\n    /// <param name=\"itemB\">Index of the store.</param>\r\n    private SwapInputBoxes(inputBoxes: InputBox[], itemA: number, itemB: number): void {\r\n        const tmp = inputBoxes[itemA];\r\n        inputBoxes[itemA] = inputBoxes[itemB];\r\n        inputBoxes[itemB] = tmp;\r\n    }\r\n\r\n    /// Tests if the quantized box overlap.\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box to compare to.</param>\r\n    /// <returns>\r\n    /// Returns true, if the quantized boxes do overlap.\r\n    /// </returns>\r\n    private TestQuantizedBoxOverlap(\r\n        nodeIndex: number,\r\n        quantizedAabb: QuantizedAxisAlignedBox3\r\n    ): boolean {\r\n        return this.quantizedAabbTreeNodes[nodeIndex].TestQuantizedBoxOverlap(quantizedAabb);\r\n    }\r\n\r\n    /// Determines whether the specified nodeIndex is data (leaf) node.\r\n    /// <param name=\"nodeIndex\">The nodeIndex.</param>\r\n    /// <returns>\r\n    ///   <c>true</c> if the specified nodeIndex is data node; otherwise, <c>false</c>.\r\n    /// </returns>\r\n    private IsDataNode(nodeIndex: number): boolean {\r\n        return this.quantizedAabbTreeNodes[nodeIndex].IsDataNode();\r\n    }\r\n\r\n    /// Gets the axis aligned bounding box.\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <returns>the axis aligned bounding box</returns>\r\n    public GetAabb(nodeIndex: number): Box3 {\r\n        const quantizedAabb = this.quantizedAabbTreeNodes[nodeIndex].GetQuantizedAabb();\r\n        return this.Unquantize(quantizedAabb);\r\n    }\r\n\r\n    /// Creates the data (leaf) node.\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box.</param>\r\n    /// <param name=\"dataValue\">The dataValue.</param>\r\n    private CreateDataNode(\r\n        nodeIndex: number,\r\n        quantizedAabb: QuantizedAxisAlignedBox3,\r\n        dataValue: number\r\n    ): void {\r\n        this.quantizedAabbTreeNodes[nodeIndex].SetAsDataValue(dataValue, quantizedAabb);\r\n    }\r\n\r\n    private setAsDataNode(nodeIndex: number, dataValue: number): void {\r\n        this.quantizedAabbTreeNodes[nodeIndex].SetDataValue(dataValue);\r\n    }\r\n\r\n    /// Creates the branch node.\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <param name=\"quantizedAabb\">The quantized axis aligned bounding box.</param>\r\n    /// <param name=\"width\">The width (count of subnodes) of the branch.</param>\r\n    private CreateBranchNode(\r\n        nodeIndex: number,\r\n        quantizedAabb: QuantizedAxisAlignedBox3,\r\n        width: number\r\n    ): void {\r\n        this.quantizedAabbTreeNodes[nodeIndex].SetAsBranch(width, quantizedAabb);\r\n    }\r\n\r\n    /// Gets the value from a data node.\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <returns>The data value for the node.</returns>\r\n    private GetNodeDataValue(nodeIndex: number): number {\r\n        return this.quantizedAabbTreeNodes[nodeIndex].GetDataNodeValue();\r\n    }\r\n\r\n    /// Gets the width of the branch node (count of subnodes).\r\n    /// <param name=\"nodeIndex\">Index of the node.</param>\r\n    /// <returns>The width for the node (nodeCount of nodes in the subtree)</returns>\r\n    private GetBranchNodeWidth(nodeIndex: number): number {\r\n        return this.quantizedAabbTreeNodes[nodeIndex].GetBranchNodeWidth();\r\n    }\r\n\r\n    /// Quantizes the specified axis aligned bounding box.\r\n    /// <param name=\"aabb\">The axis aligned box.</param>\r\n    /// <returns>\r\n    /// The quantized axis aligned bounding box.\r\n    /// </returns>\r\n    private Quantize = (() => {\r\n        const minClampedPoint = new Vector3();\r\n        const maxClampedPoint = new Vector3();\r\n\r\n        return (aabb: Box3, target: QuantizedAxisAlignedBox3): void => {\r\n            minClampedPoint.subVectors(aabb.min, this.globalAabb.min);\r\n            maxClampedPoint.subVectors(aabb.max, this.globalAabb.min);\r\n\r\n            target.aabb[target.offset] = minClampedPoint.x;\r\n            target.aabb[target.offset + 1] = maxClampedPoint.x;\r\n            target.aabb[target.offset + 2] = minClampedPoint.y;\r\n            target.aabb[target.offset + 3] = maxClampedPoint.y;\r\n            target.aabb[target.offset + 4] = minClampedPoint.z;\r\n            target.aabb[target.offset + 5] = maxClampedPoint.z;\r\n        };\r\n    })();\r\n\r\n    /// Inverse quantizes the specified value.\r\n    /// <param name=\"value\">The quantized value.</param>\r\n    /// <returns>Returns the unquantized value.</returns>\r\n    private Unquantize(value: QuantizedAxisAlignedBox3): Box3 {\r\n        const min = new Vector3(\r\n            value.MinX + this.globalAabb.min.x,\r\n            value.MinY + this.globalAabb.min.y,\r\n            value.MinZ + this.globalAabb.min.z\r\n        );\r\n        const max = new Vector3(\r\n            value.MaxX + this.globalAabb.min.x,\r\n            value.MaxY + this.globalAabb.min.y,\r\n            value.MaxZ + this.globalAabb.min.z\r\n        );\r\n\r\n        // const center = new Vector3().addVectors(max, min).divideScalar(2.0);\r\n        // const extent = new Vector3().subVectors(, min).divideScalar(2.0);\r\n        return new Box3(min, max);\r\n    }\r\n\r\n    /// Builds the sub tree.\r\n    /// <param name=\"outputIndex\">The next (free) index.</param>\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left index.</param>\r\n    /// <param name=\"right\">The right index.</param>\r\n    /// <param name=\"subTreeBoundingBox\">The calculated sub tree bounding box.</param>\r\n    /// <returns>\r\n    /// Returns the count of nodes in the subtree (both data (leaf) and branch nodes).\r\n    /// </returns>\r\n    private BuildSubTree = (() => {\r\n        const box = new Box3();\r\n\r\n        return (\r\n            treeDepth: number,\r\n            outputIndex: number,\r\n            inputBoxes: InputBox[],\r\n            left: number,\r\n            right: number,\r\n            subTreeBoundingBox: QuantizedAxisAlignedBox3\r\n        ): number => {\r\n            if (right - left === 1) {\r\n                // if only one then it's data (leaf) node.\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[left].index);\r\n                this.Quantize(box, subTreeBoundingBox);\r\n                this.CreateDataNode(outputIndex, subTreeBoundingBox, inputBoxes[left].Data);\r\n                return 1;\r\n            }\r\n\r\n            if (right - left === 2) {\r\n                // create one branch node and two data (leaf) nodes.\r\n                const quantizedAabb1 = this.quantizedAabbTreeNodes[\r\n                    outputIndex + 1\r\n                ].GetQuantizedAabb();\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[left].index);\r\n                this.Quantize(box, quantizedAabb1);\r\n                this.setAsDataNode(outputIndex + 1, inputBoxes[left].Data);\r\n\r\n                const quantizedAabb2 = this.quantizedAabbTreeNodes[\r\n                    outputIndex + 2\r\n                ].GetQuantizedAabb();\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[left + 1].index);\r\n                this.Quantize(box, quantizedAabb2);\r\n                this.setAsDataNode(outputIndex + 2, inputBoxes[left + 1].Data);\r\n\r\n                subTreeBoundingBox.CreateMergedWith(quantizedAabb1, quantizedAabb2);\r\n                this.CreateBranchNode(outputIndex, subTreeBoundingBox, 3);\r\n                return 3;\r\n            }\r\n\r\n            const splitIndex = this.SplitByOneAxis(inputBoxes, left, right);\r\n            const leftWidth = this.BuildSubTree(\r\n                treeDepth + 1,\r\n                outputIndex + 1,\r\n                inputBoxes,\r\n                left,\r\n                splitIndex,\r\n                this.leftBoundingBoxes[treeDepth]\r\n            );\r\n            const rightWidth = this.BuildSubTree(\r\n                treeDepth + 1,\r\n                outputIndex + leftWidth + 1,\r\n                inputBoxes,\r\n                splitIndex,\r\n                right,\r\n                this.rightBoundingBoxes[treeDepth]\r\n            );\r\n\r\n            subTreeBoundingBox.CreateMergedWith(\r\n                this.leftBoundingBoxes[treeDepth],\r\n                this.rightBoundingBoxes[treeDepth]\r\n            );\r\n            const branchWidth = leftWidth + rightWidth + 1;\r\n            this.CreateBranchNode(outputIndex, subTreeBoundingBox, branchWidth);\r\n            return branchWidth;\r\n        };\r\n    })();\r\n\r\n    /// Splits the input primitives by one axis.\r\n    /// Variance is used to detect which axis to split by,\r\n    /// The mean (average) center point by that axis is used as pivot to split.\r\n    /// Always: right > left.\r\n    /// <param name=\"inputBoxes\">The primitive boxes.</param>\r\n    /// <param name=\"left\">The left index.</param>\r\n    /// <param name=\"right\">The right index.</param>\r\n    /// <returns>Returns the index where the split was done.</returns>\r\n    SplitByOneAxis = (() => {\r\n        const varianceSum = new Vector3();\r\n        const delta = new Vector3();\r\n        const meanOfCenterPoints = new Vector3();\r\n        const box = new Box3();\r\n\r\n        return (inputBoxes: InputBox[], left: number, right: number): number => {\r\n            this.CalculateMeanOfCenterPoints(inputBoxes, left, right, meanOfCenterPoints);\r\n            varianceSum.set(0, 0, 0);\r\n\r\n            for (let i = left; i < right; i++) {\r\n                this.getBox3FromArray(this.boundingBoxes, box, inputBoxes[i].index);\r\n                box.getCenter(delta).sub(meanOfCenterPoints);\r\n                const deltaSquared = delta.multiply(delta);\r\n                varianceSum.add(deltaSquared);\r\n            }\r\n\r\n            // split by axis with largest variance.\r\n            let splitIndex;\r\n            if (varianceSum.x > varianceSum.y) {\r\n                if (varianceSum.x > varianceSum.z) {\r\n                    // Y is not largest.\r\n                    splitIndex = this.InPlaceSplitX(inputBoxes, left, right, meanOfCenterPoints.x);\r\n                } else {\r\n                    splitIndex = this.InPlaceSplitZ(inputBoxes, left, right, meanOfCenterPoints.z);\r\n                }\r\n            } else if (varianceSum.y > varianceSum.z) {\r\n                splitIndex = this.InPlaceSplitY(inputBoxes, left, right, meanOfCenterPoints.y);\r\n            } else {\r\n                splitIndex = this.InPlaceSplitZ(inputBoxes, left, right, meanOfCenterPoints.z);\r\n            }\r\n\r\n            const numIndices = right - left;\r\n            const rangeBalancedIndices = numIndices / 3;\r\n\r\n            if (splitIndex <= left + rangeBalancedIndices) {\r\n                // if split index is too close to left, use middle position.\r\n                splitIndex = (left + right) / 2;\r\n            } else if (splitIndex >= right - 1 - rangeBalancedIndices) {\r\n                // if split index is too close to right, use middle position.\r\n                splitIndex = (left + right) / 2;\r\n            }\r\n\r\n            return Math.round(splitIndex);\r\n        };\r\n    })();\r\n}\r\n","import { InputBox, QuantizedAxisAlignedBox3Tree } from \"./QuantizedAxisAlignedBox3Tree\";\r\nimport { InstanceManager } from \"../InstanceManager\";\r\nimport { GeometryManager } from \"../GeometryManager\";\r\nimport { Frustum, Matrix4, Plane, Ray, Box3 } from \"../ThreeMath\";\r\nimport { Trimble } from \"../../TrimBim_generated\";\r\nimport { ModelEntityState } from \"../ModelEntityState\";\r\nimport { TrimbimPickPriority } from \"../../common\";\r\nimport { Utils } from \"../Utils\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { Hit } from \"../HitPoint\";\r\nimport {LayerManager} from \"../LayerManager\";\r\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class PickHandler {\r\n    _geometry: Fbs.ModelGeometry;\r\n    searchTree: QuantizedAxisAlignedBox3Tree;\r\n\r\n    private instance = new Fbs.GeometryInstance();\r\n    private definition = new Fbs.GeometryDefinition();\r\n\r\n    constructor(\r\n        model: Fbs.Model,\r\n        private _boundingBoxes: Float64Array,\r\n        private _instanceManager: InstanceManager,\r\n        private _geometryManager: GeometryManager,\r\n        private _layerManager: LayerManager,\r\n        private _state: ModelEntityState\r\n    ) {\r\n        this._geometry = model.geometry();\r\n\r\n        const inputBoxes = [];\r\n\r\n        for (let i = 0; i < this._boundingBoxes.length / 6; i++) {\r\n            inputBoxes.push(new InputBox(i, i));\r\n        }\r\n\r\n        this.searchTree = new QuantizedAxisAlignedBox3Tree(this._boundingBoxes, inputBoxes);\r\n\r\n        inputBoxes.length = 0;\r\n    }\r\n\r\n    private filterPickableInstances(instanceIds: number[]): number[] {\r\n        return instanceIds.filter(instanceId => {\r\n            const entityId = this._geometryManager.getEntityId(instanceId);\r\n            return this._state.isVisible(entityId) &&\r\n                this._state.getPickPriority(entityId) !== TrimbimPickPriority.NO_PICK &&\r\n                this._layerManager.isVisibleByLayer(instanceId);\r\n        });\r\n    }\r\n\r\n    frustumPick(frustum: Frustum, clipPlanes: Plane[]): number[] {\r\n        const instanceIds = this.filterPickableInstances(this.searchTree.QueryFrustum(frustum, clipPlanes));\r\n        return instanceIds.map(id => this._geometryManager.getEntityId(id));\r\n    }\r\n\r\n    pick(ray: Ray, frustum: Frustum, clipPlanes: Plane[]): Hit {\r\n        const frustumPickIds = this.pickBoundingBoxes(frustum, clipPlanes);\r\n        if (frustumPickIds.length === 0)\r\n            return;\r\n\r\n        const rayPickIds = this.pickBoundingBoxes(ray, clipPlanes);\r\n\r\n        const hits: Hit[] = [];\r\n        for (const instanceId of frustumPickIds) {\r\n            this._geometry.instances(instanceId, this.instance);\r\n            this._geometry.definitions(this.instance.definitionId(), this.definition);\r\n            const isMesh = this._geometryManager.getIsMesh(this.definition.type());\r\n\r\n            // do not perform geometry picking if mesh bounds are not ray picked (early optimization)\r\n            if (isMesh && !rayPickIds.includes(instanceId))\r\n                continue;\r\n\r\n            hits.push(...this.pickGeometry(instanceId, this.definition, this.instance, ray, frustum, undefined, clipPlanes));\r\n        }\r\n\r\n        if (hits.length === 0)\r\n            return;\r\n\r\n        const highPriorityHits = hits.filter(h => this._state.getPickPriority(h.entityId) === TrimbimPickPriority.HIGH);\r\n        return highPriorityHits.length > 0 ? this.findClosestHit(highPriorityHits) : this.findClosestHit(hits);\r\n    }\r\n\r\n    pickSnapped(ray: Ray, frustum: Frustum, snapTypes: SnapType[], clipPlanes: Plane[]): Hit[] {\r\n        const hits: Hit[] = [];\r\n        const mainHit = this.pick(ray, frustum, clipPlanes);\r\n        if (!mainHit)\r\n            return this.pickSnappedEdges(ray, frustum, snapTypes, clipPlanes);\r\n\r\n        this._geometry.instances(mainHit.instanceId, this.instance);\r\n        this._geometry.definitions(this.instance.definitionId(), this.definition);\r\n        for (const snapType of snapTypes) {\r\n            hits.push(...this.pickGeometry(mainHit.instanceId, this.definition, this.instance, ray, frustum, snapType, clipPlanes));\r\n        }\r\n        return hits;\r\n    }\r\n\r\n    private pickSnappedEdges(ray: Ray, frustum: Frustum, snapTypes: SnapType[], clipPlanes: Plane[]): Hit[] {\r\n        const hits: Hit[] = [];\r\n        if (snapTypes.includes(SnapType.LINE) || snapTypes.includes(SnapType.POINT)) {\r\n            const frustumPickIds = this.pickBoundingBoxes(frustum, clipPlanes);\r\n            for (const instanceId of frustumPickIds) {\r\n                this._geometry.instances(instanceId, this.instance);\r\n                this._geometry.definitions(this.instance.definitionId(), this.definition);\r\n                for (const snapType of snapTypes) {\r\n                    if (snapType !== SnapType.FACE)\r\n                        hits.push(...this.pickGeometry(instanceId, this.definition, this.instance, ray, frustum, snapType, clipPlanes));\r\n                }\r\n            }\r\n        }\r\n        return hits;\r\n    }\r\n\r\n    private pickBoundingBoxes(shape: Ray | Frustum, clipPlanes: Plane[]): number[] {\r\n        const instanceIds = shape instanceof Ray ?\r\n            this.searchTree.QueryRay(shape, clipPlanes) :\r\n            this.searchTree.QueryFrustum(shape, clipPlanes);\r\n        return this.filterPickableInstances(instanceIds);\r\n    }\r\n\r\n    private findClosestHit(hits: Hit[]): Hit {\r\n        return hits.reduce((h1, h2) => h1.distance < h2.distance ? h1 : h2);\r\n    }\r\n\r\n    private pickGeometry = (() => {\r\n        const localRay = new Ray();\r\n        const localFrustum = new Frustum();\r\n        const transform = new Matrix4();\r\n        const inverseTransform = new Matrix4();\r\n\r\n        return (instanceId: number, definition: Fbs.GeometryDefinition, instance: Fbs.GeometryInstance, ray: Ray, frustum: Frustum, snapType: SnapType, clipPlanes: Plane[]): Hit[] => {\r\n            this._instanceManager.getTransform(instance, transform);\r\n            inverseTransform.getInverse(transform);\r\n\r\n            localRay.copy(ray).applyMatrix4(inverseTransform);\r\n            Utils.transformFrustum(frustum, inverseTransform, localFrustum);\r\n\r\n            let hitsPoints = this._geometryManager.pick(definition, snapType, localRay, localFrustum);\r\n\r\n            if (hitsPoints && clipPlanes && clipPlanes.length > 0) {\r\n                const transformedPlanes = this.transformClipPlanes(clipPlanes, inverseTransform);\r\n                hitsPoints = hitsPoints.filter(hit => Utils.insideNonIntersectingPlanes(hit.point, transformedPlanes));\r\n            }\r\n\r\n            const hits: Hit[] = [];\r\n            if (hitsPoints) {\r\n                hitsPoints.forEach(h => {\r\n                    const hit = h as Hit;\r\n                    hit.point.applyMatrix4(transform);\r\n                    if (hit.normal) hit.normal.transformDirection(transform);\r\n                    hit.instanceId = instanceId;\r\n                    hit.entityId = this._geometryManager.getEntityId(hit.instanceId);\r\n                    hit.pickPriority = this._state.getPickPriority(hit.entityId);\r\n                    hit.distance = ray.origin.distanceTo(hit.point);\r\n                    hit.snapType = snapType;\r\n                    if (hit.snapLineStart) hit.snapLineStart.applyMatrix4(transform);\r\n                    if (hit.snapLineEnd) hit.snapLineEnd.applyMatrix4(transform);\r\n                    hits.push(hit);\r\n                });\r\n            }\r\n            return hits;\r\n        };\r\n    })();\r\n\r\n    private transformClipPlanes(clipPlanes: Plane[], m: Matrix4): Plane[] {\r\n        if (clipPlanes) {\r\n            return clipPlanes.map(plane => {\r\n                const newPlane = new Plane().copy(plane);\r\n                return newPlane.applyMatrix4(m);\r\n            });\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n}\r\n\r\nexport const getBoundingBox = (id: number, box: Box3, boundingBoxes: Float64Array) => {\r\n    box.min.set(boundingBoxes[id * 6], boundingBoxes[id * 6 + 1], boundingBoxes[id * 6 + 2]);\r\n    box.max.set(boundingBoxes[id * 6 + 3], boundingBoxes[id * 6 + 4], boundingBoxes[id * 6 + 5]);\r\n};\r\n","import {Trimble} from \"../TrimBim_generated\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\n\r\nexport class LayerManager {\r\n    private layerVisibilities: boolean[];\r\n    private instance = new Fbs.GeometryInstance();\r\n    private geometry: Fbs.ModelGeometry;\r\n    private entities: Fbs.ModelEntities;\r\n\r\n    constructor(private model: Fbs.Model) {\r\n        this.geometry = model.geometry();\r\n        this.entities = model.entities();\r\n        this.layerVisibilities = new Array(this.geometry.layersLength());\r\n    }\r\n\r\n    getLayers(): string[] {\r\n        const layers: string[] = [];\r\n        for (let i = 0; i < this.geometry.layersLength(); i++)\r\n            layers.push(this.geometry.layers(i));\r\n        return layers;\r\n    }\r\n\r\n    findLayersByEntities(entityIds: number[]): string[] {\r\n        const layers = new Set<string>();\r\n        for (let instanceId = 0; instanceId < this.geometry.instancesLength(); instanceId++) {\r\n            this.geometry.instances(instanceId, this.instance);\r\n            if (entityIds.includes(this.instance.entityId())) layers.add(this.geometry.layers(this.instance.layerId()));\r\n        }\r\n        return Array.from(layers);\r\n    }\r\n\r\n    private getLayerIndex(layer: string): number {\r\n        for (let i = 0; i < this.geometry.layersLength(); i++)\r\n            if (this.geometry.layers(i) === layer) return i;\r\n    }\r\n\r\n    getLayerVisibility(layer: string): boolean {\r\n        return this.layerVisibilities[this.getLayerIndex(layer)];\r\n    }\r\n\r\n    setLayerVisibility(layer: string, visible: boolean): void {\r\n        this.layerVisibilities[this.getLayerIndex(layer)] = visible;\r\n    }\r\n\r\n    isVisibleByLayer(instanceId: number): boolean {\r\n        const visibility = this.layerVisibilities[this.geometry.instances(instanceId, this.instance).layerId()];\r\n        return visibility === true || visibility === undefined;\r\n    }\r\n\r\n    getLayerInstances(layer: string): number[] {\r\n        const layerId = this.getLayerIndex(layer);\r\n        const result: number[] = [];\r\n        for (let i = 0; i < this.geometry.instancesLength(); i++)\r\n            if (this.geometry.instances(i, this.instance).layerId() === layerId)\r\n                result.push(i);\r\n        return result;\r\n    }\r\n}\r\n","import { ModelStateManager } from \"./QueryHandling/ModelStateManager\";\r\nimport { Hit } from \"./HitPoint\";\r\nimport { GeometryManager } from \"./GeometryManager\";\r\nimport { MaterialManager } from \"./MaterialManager\";\r\nimport { InstanceManager } from \"./InstanceManager\";\r\nimport { ModelBuilderWorker } from \"./QueryHandling/ModelBuilderWorker\";\r\nimport { LodManager } from \"./LodManager\";\r\nimport { ClusterManager } from \"./ClusterManager\";\r\nimport { EntityManager } from \"./EntityManager\";\r\nimport {\r\n    Entity,\r\n    Hierarchy,\r\n    Product\r\n} from \"./ThreadWorkerMessages\";\r\nimport {\r\n    AggregationOperator,\r\n    HierarchyOptions,\r\n    HierarchyType,\r\n    Property,\r\n    PropertyAggregation,\r\n    PropertyDefinition,\r\n    PropertySet,\r\n    Query,\r\n    TrimbimPickPriority\r\n} from \"../common\";\r\nimport { parse } from \"./QueryHandling/Parser\";\r\nimport { find } from \"./QueryHandling/find\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport { ModelEntityState } from \"./ModelEntityState\";\r\nimport { Trimble } from \"../TrimBim_generated\";\r\nimport { Box3, Frustum, Plane, Ray, Vector3 } from \"./ThreeMath\";\r\nimport { IMetaMaterial } from \"../Model/ModelBuilderTypes\";\r\nimport Fbs = Trimble.Technology.TrimBim.Fbs;\r\nimport { PickHandler } from \"./QueryHandling/PickHandler\";\r\nimport {LayerManager} from \"./LayerManager\";\r\nimport {TrimbimProtocol} from \"../Model/TrimbimProtocol\";\r\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class ThreadWorkerModel implements TrimbimProtocol {\r\n    private modelStateManager: ModelStateManager;\r\n    private state: ModelEntityState;\r\n    private pickHandler: PickHandler;\r\n\r\n    private model: Fbs.Model;\r\n    private geometryManager: GeometryManager;\r\n    private materialManager: MaterialManager;\r\n    private instanceManager: InstanceManager;\r\n    private modelBuilderWorker: ModelBuilderWorker;\r\n    private lodManager: LodManager;\r\n    private clusterManager: ClusterManager;\r\n    private entityManager: EntityManager;\r\n    private layerManager: LayerManager;\r\n\r\n    constructor(private modelId: string, buffer: ArrayBuffer) {\r\n        const buf = new flatbuffers.ByteBuffer(new Uint8Array(buffer));\r\n        const model = Fbs.Model.getRootAsModel(buf);\r\n        this.model = model;\r\n        this.state = new ModelEntityState(model.entities().entitiesLength());\r\n\r\n        this.instanceManager = new InstanceManager(model);\r\n\r\n        this.lodManager = new LodManager();\r\n\r\n        const modelGeometry = model.geometry();\r\n        this.geometryManager = new GeometryManager(this.modelId, modelGeometry, this.instanceManager, this.lodManager);\r\n        this.layerManager = new LayerManager(model);\r\n\r\n        this.entityManager = new EntityManager(model.entities(), model.properties());\r\n\r\n        this.materialManager = new MaterialManager(this.modelId);\r\n        this.materialManager.addModelTextures(model);\r\n        const materialIds = this.materialManager.addModelMaterials(model);\r\n\r\n        this.clusterManager = new ClusterManager(this.modelId, model, this.instanceManager, this.geometryManager, this.lodManager, this.layerManager, this.state, materialIds);\r\n\r\n        this.modelStateManager = new ModelStateManager(\r\n            this.modelId,\r\n            this.materialManager,\r\n            this.clusterManager,\r\n            this.instanceManager,\r\n            this.lodManager,\r\n            this.layerManager,\r\n            this.state,\r\n            this.geometryManager\r\n        );\r\n        this.modelBuilderWorker = new ModelBuilderWorker(\r\n            this.modelId,\r\n            this.clusterManager,\r\n            this.instanceManager,\r\n            this.geometryManager,\r\n            this.lodManager,\r\n            model\r\n        );\r\n\r\n        this.pickHandler = new PickHandler(\r\n            this.model,\r\n            this.instanceManager.boundingBoxes,\r\n            this.instanceManager,\r\n            this.geometryManager,\r\n            this.layerManager,\r\n            this.state\r\n        );\r\n    }\r\n\r\n    pick(ray: Ray, frustum: Frustum, clipPlanes: Plane[]): Hit {\r\n        return this.pickHandler.pick(ray, frustum, clipPlanes);\r\n    }\r\n\r\n    pickSnapped(ray: Ray, frustum: Frustum, snapTypes: SnapType[], clipPlanes: Plane[]): Hit[] {\r\n        return this.pickHandler.pickSnapped(ray, frustum, snapTypes, clipPlanes);\r\n    }\r\n\r\n    getHierarchyTree(entityIds: number[], hierarchyType: HierarchyType): {parentIds: number[], childrenIds?: number[]} {\r\n        return this.entityManager.getHierarchyTree(entityIds, hierarchyType);\r\n    }\r\n\r\n    frustumPick(frustum: Frustum, clipPlanes: Plane[]): number[] {\r\n        return this.pickHandler.frustumPick(frustum, clipPlanes);\r\n    }\r\n\r\n    setSelection(entityIds: number[]): void {\r\n        this.modelStateManager.setSelection(entityIds);\r\n    }\r\n\r\n    setHovered(entityIds: number[]): void {\r\n        this.modelStateManager.setHovered(entityIds);\r\n    }\r\n\r\n    setMaterial(entityIds: number[], material: IMetaMaterial): void {\r\n        this.modelStateManager.setMaterial(entityIds, material);\r\n        this.modelBuilderWorker.forceUpdate();\r\n    }\r\n\r\n    getMaterials(entityIds: number[]): IMetaMaterial[] {\r\n        return this.modelStateManager.getMaterials(entityIds);\r\n    }\r\n\r\n    setVisibility(entityIds: number[], visible: boolean): void {\r\n        this.modelStateManager.setVisibility(entityIds, visible);\r\n        this.modelBuilderWorker.forceUpdate();\r\n    }\r\n\r\n    setPickPriority(entityIds: number[], pickPriority: TrimbimPickPriority): void {\r\n        this.modelStateManager.setPickPriority(entityIds, pickPriority);\r\n    }\r\n\r\n    getEntities(entityIds: number[]): Entity[] {\r\n        return this.entityManager.getEntitiesFromIds(entityIds);\r\n    }\r\n\r\n    getLayers(): string[] {\r\n        return this.layerManager.getLayers();\r\n    }\r\n\r\n    findLayersByEntities(entityIds: number[]): string[] {\r\n        return this.layerManager.findLayersByEntities(entityIds);\r\n    }\r\n\r\n    getLayerVisibility(layer: string): boolean {\r\n        return this.layerManager.getLayerVisibility(layer);\r\n    }\r\n\r\n    setLayerVisibility(layer: string, visible: boolean): void {\r\n        this.modelStateManager.setLayerVisibility(layer, visible);\r\n        this.modelBuilderWorker.forceUpdate();\r\n    }\r\n\r\n    getEntityParentId(entityId: number, hierarchyType: HierarchyType): number {\r\n        if (hierarchyType === undefined) return entityId;\r\n\r\n        const parentId = this.entityManager.getParents([entityId], hierarchyType)[0];\r\n        return parentId !== undefined ? parentId : entityId;\r\n    }\r\n\r\n    getEntity(entityId: number): Entity {\r\n        return this.entityManager.getEntity(entityId);\r\n    }\r\n\r\n    getEntityProduct(entityId: number): Product {\r\n        const productId = this.entityManager.getProductId(entityId);\r\n        return productId !== undefined ? this.entityManager.getProduct(productId) : undefined;\r\n    }\r\n\r\n    getEntityProperties(entityId: number): PropertySet[] {\r\n        const propertySetIds = this.entityManager.getPropertySetIdsFromEntity(entityId);\r\n        const properties = [];\r\n        for (const propertySetId of propertySetIds) {\r\n            properties.push(this.entityManager.getPropertySet(propertySetId));\r\n        }\r\n        return properties;\r\n    }\r\n\r\n    getHierarchy(hierarchyType: HierarchyType, options?: HierarchyOptions): Hierarchy {\r\n        return this.entityManager.getHierarchy(hierarchyType, options);\r\n    }\r\n\r\n    setCamera(frustum: Frustum, position: Vector3): void {\r\n        this.modelBuilderWorker.buildGeometryForCamera(frustum, position);\r\n    }\r\n\r\n    getBoundingBox(): Box3 {\r\n        return this.instanceManager.worldBoundingbox;\r\n    }\r\n\r\n    getEntitiesBoundingBox(entityIds: number[]): Box3 {\r\n        const box = new Box3();\r\n        this.instanceManager.getAABBFromIds(entityIds, box);\r\n        return box;\r\n    }\r\n\r\n    resetMaterial(entityIds: number[]): void {\r\n        this.modelStateManager.resetMaterials(entityIds);\r\n        this.modelBuilderWorker.forceUpdate();\r\n    }\r\n\r\n    clearSelection(): void {\r\n        this.modelStateManager.clearSelection();\r\n    }\r\n\r\n    resetVisibility(): void {\r\n        this.modelStateManager.resetVisibility();\r\n        this.modelBuilderWorker.forceUpdate();\r\n    }\r\n\r\n    resetPickPriority(): void {\r\n        this.modelStateManager.resetPickPriority();\r\n    }\r\n\r\n    getPropertySetNames(): string[] {\r\n        return this.entityManager.getPropertySetNames();\r\n    }\r\n\r\n    getPropertyDefinitions(propertySetName: string): PropertyDefinition[] {\r\n        return this.entityManager.getPropertyDefinitions(propertySetName);\r\n    }\r\n\r\n    getPropertyValues(propertyName: string): Array<string | number | flatbuffers.Long> {\r\n        return this.entityManager.getPropertyValues(propertyName);\r\n    }\r\n\r\n    getEntitiesByFilter(conditions: any): number[] {\r\n        const logicalNode = parse(conditions);\r\n        return [...this.entityManager.filterProperties(logicalNode)];\r\n    }\r\n\r\n    guidsToEntityIds(guids: string[]): number[] {\r\n        return this.entityManager.getEntityIdsFromGuids(guids);\r\n    }\r\n\r\n    query(request: Query): void {\r\n        if (request.find)\r\n            find(this.entityManager, this.instanceManager, request);\r\n    }\r\n\r\n    queryPage(streamId: number, page: number, pageSize: number): Array<Array<{[name: string]: (string | number);}>> {\r\n        return this.entityManager.getPropertyStreamPage(streamId, page, pageSize);\r\n    }\r\n\r\n    getEntityIdsByState(visible?: boolean, pickPriority?: TrimbimPickPriority): number[] {\r\n        const result: number[] = [];\r\n        for (const entityId of this.instanceManager.entityToInstance.keys()) {\r\n            if (\r\n                (visible === undefined || this.state.isVisible(entityId) === visible) &&\r\n                (pickPriority === undefined || this.state.getPickPriority(entityId) === pickPriority)\r\n            ) result.push(entityId);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    aggregateProperties(entityIds: number[], aggregations: PropertyAggregation[]): void {\r\n        for (const entityId of entityIds) {\r\n            const propSets = this.getEntityProperties(entityId);\r\n            for (const a of aggregations) this.aggregate(a, propSets);\r\n        }\r\n    }\r\n\r\n    private getProperty(propSets: PropertySet[], propertySetName: string, propertyName: string): Property {\r\n        const set = propSets.find(s => s.name === propertySetName);\r\n        return set ? set.properties.find(p => p.name === propertyName) : undefined;\r\n    }\r\n\r\n    private aggregate(aggregation: PropertyAggregation, propSets: PropertySet[]): void {\r\n        if (aggregation.operator === AggregationOperator.SHARED) {\r\n            if (aggregation.value === null) return; // value varies\r\n\r\n            const property = this.getProperty(propSets, aggregation.propertySetName, aggregation.propertyName);\r\n            if (property) {\r\n                if (aggregation.value === undefined) {\r\n                    aggregation.value = property.value;\r\n                    aggregation.type = property.type;\r\n                }\r\n                else if (aggregation.value !== property.value) aggregation.value = null;\r\n            } else {\r\n                aggregation.value = null;\r\n            }\r\n        }\r\n        else if (aggregation.operator === AggregationOperator.SUM) {\r\n            const property = this.getProperty(propSets, aggregation.propertySetName, aggregation.propertyName);\r\n            if (property) {\r\n                if (aggregation.value === undefined) {\r\n                    aggregation.value = 0;\r\n                    aggregation.type = property.type;\r\n                }\r\n                (aggregation.value as number) += typeof property.value === \"string\" ? Number.parseFloat(property.value as string) : property.value as number;\r\n            }\r\n        }\r\n    }\r\n\r\n    dispose(): void {\r\n        this.clusterManager.dispose();\r\n        this.modelBuilderWorker.dispose();\r\n    }\r\n}\r\n","import {\r\n    AggregatePropertiesMessage,\r\n    ICameraUpdateMessage,\r\n    IFilterEntitiesMessage,\r\n    IGetByStateMessage,\r\n    IGetEntitiesMessage,\r\n    IGetEntityInfoMessage,\r\n    IGetHierarchyMessage,\r\n    IGetHierarchyTreeMessage,\r\n    IGetMaterialsMessage,\r\n    IGetPropertyDefinitionsMessage,\r\n    IGetPropertySetNamesMessage,\r\n    IGetPropertyValuesMessage,\r\n    IGuidsToEntityIdsMessage,\r\n    IGetBoundingBoxesMessage,\r\n    ILoadMessage,\r\n    IMessage,\r\n    IQueryMessage,\r\n    IQueryPageMessage,\r\n    IPickMessage,\r\n    IUnloadMessage,\r\n    MessageType,\r\n    ICallMessage\r\n} from \"./ThreadWorkerMessages\";\r\nimport { ThreadWorkerModel } from \"./ThreadWorkerModel\";\r\nimport { Frustum, Plane, Ray, Vector3 } from \"./ThreeMath\";\r\n\r\nclass ThreadWorker {\r\n    private models: Map<string, ThreadWorkerModel> = new Map();\r\n    private it = this as {[index: number]: any};\r\n\r\n    constructor() {\r\n        this.it[MessageType.LOAD] = (message: ILoadMessage) => {\r\n            const model = new ThreadWorkerModel(message.modelId, message.buffer);\r\n            this.models.set(message.modelId, model);\r\n\r\n            message.buffer = undefined; // remove from response\r\n            message.boundingBox = model.getBoundingBox();\r\n        };\r\n\r\n        this.it[MessageType.UNLOAD] = (message: IUnloadMessage) => {\r\n            this.models.get(message.modelId).dispose();\r\n            this.models.delete(message.modelId);\r\n        };\r\n\r\n        this.it[MessageType.PICK] = (message: IPickMessage) => {\r\n            // snapped pick\r\n            if (message.snapTypes) {\r\n                message.hits = this.models.get(message.modelId).pickSnapped(this.restoreRay(message.ray), this.restoreFrustum(message.frustum), message.snapTypes, this.restorePlanes(message.clipPlanes));\r\n            }\r\n\r\n            // ray pick + frustum\r\n            else if (message.ray) {\r\n                const hit = this.models.get(message.modelId).pick(this.restoreRay(message.ray), this.restoreFrustum(message.frustum), this.restorePlanes(message.clipPlanes));\r\n                if (hit) message.hits = [hit];\r\n            }\r\n\r\n            // frustum only pick\r\n            else\r\n                message.childrenEntityIds = this.models.get(message.modelId).frustumPick(this.restoreFrustum(message.frustum), this.restorePlanes(message.clipPlanes));\r\n        };\r\n\r\n        this.it[MessageType.ENTITY_GETENTITIESFROMIDS] = (message: IGetEntitiesMessage) => {\r\n            message.entities = this.models.get(message.modelId).getEntities(message.entityIds);\r\n            message.entityIds = undefined;\r\n        };\r\n\r\n        this.it[MessageType.ENTITY_GETINFO] = (message: IGetEntityInfoMessage) => {\r\n            const model = this.models.get(message.modelId);\r\n            const entityId = model.getEntityParentId(message.id, message.hierarchyType);\r\n\r\n            message.entity = model.getEntity(entityId);\r\n            message.product = model.getEntityProduct(message.id);\r\n            message.properties = model.getEntityProperties(entityId);\r\n        };\r\n\r\n        this.it[MessageType.ENTITY_GETHIERARCHY] = (message: IGetHierarchyMessage) => {\r\n            message.hierarchy = this.models.get(message.modelId).getHierarchy(message.hierarchyType, message.options);\r\n        };\r\n\r\n        this.it[MessageType.ENTITY_GETHIERARCHYTREE] = (message: IGetHierarchyTreeMessage) => {\r\n            const tree = this.models.get(message.modelId).getHierarchyTree(message.entityIds, message.hierarchyType);\r\n            message.parentIds = tree.parentIds;\r\n            message.childrenIds = tree.childrenIds;\r\n            message.entityIds = undefined;\r\n        };\r\n\r\n        this.it[MessageType.CAMERA_UPDATE] = (message: ICameraUpdateMessage) => {\r\n            this.models.get(message.modelId).setCamera(this.restoreFrustum(message.frustum), this.restoreVector(message.position));\r\n        };\r\n\r\n        this.it[MessageType.GET_BOUNDINGBOXES] = (message: IGetBoundingBoxesMessage) => {\r\n            message.boundingBoxes = [];\r\n            for (const entityIds of message.entityIdGroups) {\r\n                const box = this.models.get(message.modelId).getEntitiesBoundingBox(entityIds);\r\n                message.boundingBoxes.push(box);\r\n            }\r\n            message.entityIdGroups = undefined;\r\n        };\r\n\r\n        this.it[MessageType.PROPERTY_GETSETNAMES] = (message: IGetPropertySetNamesMessage) => {\r\n            message.names = this.models.get(message.modelId).getPropertySetNames();\r\n        };\r\n\r\n        this.it[MessageType.PROPERTY_GETPROPERTYDEFINITIONS] = (message: IGetPropertyDefinitionsMessage) => {\r\n            message.properties = this.models.get(message.modelId).getPropertyDefinitions(message.setName);\r\n        };\r\n\r\n        this.it[MessageType.PROPERTY_GETPROPERTYVALUES] = (message: IGetPropertyValuesMessage) => {\r\n            message.properties = this.models.get(message.modelId).getPropertyValues(message.propertyName);\r\n        };\r\n\r\n        this.it[MessageType.ENTITY_FILTER] = (message: IFilterEntitiesMessage) => {\r\n            message.entities = this.models.get(message.modelId).getEntitiesByFilter(message.conditions);\r\n        };\r\n\r\n        this.it[MessageType.GUIDS_TO_ENTITYIDS] = (message: IGuidsToEntityIdsMessage) => {\r\n            message.entityIds = this.models.get(message.modelId).guidsToEntityIds(message.guids);\r\n        };\r\n\r\n        this.it[MessageType.QUERY] = (message: IQueryMessage) => {\r\n            this.models.get(message.modelId).query(message.query);\r\n        };\r\n\r\n        this.it[MessageType.QUERYPAGE] = (message: IQueryPageMessage) => {\r\n            message.data = this.models.get(message.modelId).queryPage(message.streamId, message.page, message.pageSize);\r\n        };\r\n\r\n        this.it[MessageType.GET_BY_STATE] = (message: IGetByStateMessage) => {\r\n            message.entityIds = this.models.get(message.modelId).getEntityIdsByState(message.visible, message.pickPriority);\r\n        };\r\n\r\n        this.it[MessageType.AGGREGATE_PROPERTIES] = (message: AggregatePropertiesMessage) => {\r\n            this.models.get(message.modelId).aggregateProperties(message.entityIds, message.aggregations);\r\n            message.entityIds = undefined;\r\n        };\r\n\r\n        this.it[MessageType.GET_MATERIALS] = (message: IGetMaterialsMessage) => {\r\n            message.materials = this.models.get(message.modelId).getMaterials(message.entityIds);\r\n            message.entityIds = undefined;\r\n        };\r\n\r\n        this.it[MessageType.CALL] = (message: ICallMessage) => {\r\n            const model = this.models.get(message.modelId) as any;\r\n            message.result = model[message.methodName].apply(model, message.args);\r\n            message.args = undefined; // save memory (same message is sent back)\r\n        };\r\n    }\r\n\r\n    private restoreVector(v: Vector3): Vector3 {\r\n        return new Vector3().copy(v);\r\n    }\r\n\r\n    private restorePlanes(planes: Plane[]): Plane[] {\r\n        if (!planes) return planes;\r\n        return planes.map(p => new Plane(this.restoreVector(p.normal), p.constant));\r\n    }\r\n\r\n    private restoreFrustum(frustum: Frustum): Frustum {\r\n        if (!frustum) return;\r\n        const p = this.restorePlanes(frustum.planes);\r\n        return new Frustum(p[0], p[1], p[2], p[3], p[4], p[5]);\r\n    }\r\n\r\n    private restoreRay(ray: Ray): Ray {\r\n        return new Ray(this.restoreVector(ray.origin), this.restoreVector(ray.direction));\r\n    }\r\n\r\n    onMessage(e: MessageEvent): void {\r\n        if (!e.data) return; // This might happen if worker is very busy. why??\r\n        const message = e.data as IMessage;\r\n\r\n        try {\r\n            this.it[message.type](message);\r\n            postMessage(message);\r\n        } catch (error) {\r\n            console.error(error);\r\n            message.error = error.toString();\r\n            postMessage(message);\r\n        }\r\n    }\r\n}\r\n\r\ndeclare var self: DedicatedWorkerGlobalScope;\r\nconst threadWorker = new ThreadWorker();\r\nself.onmessage = (e: MessageEvent) => threadWorker.onMessage(e);\r\n\r\n"],"names":["mergeGroups","input","length","sort","a","b","start","result","i","r","last","count","push","subtractGroups","ranges","subtracts","subtract","j","range","startInside","endInside","splice","ModelStateManager","[object Object]","modelId","materialManager","clusterManager","instanceManager","lodManager","layerManager","state","geometryManager","this","entityIds","instanceIds","entityIdsToInstanceIds","getInstanceIds","resetMaterials","map","entityId","instanceId","undefined","materialId","getMaterialId","getMaterial","material","newMaterials","oldMatId","oldMat","newMat","Object","assign","color","opacity","transparent","side","textureId","materialIds","addMaterials","reduce","matId","has","set","get","Map","forEach","iids","setMaterial","clearSelection","cluster","clusterLUT","values","lodLevel","getLevelsCount","batch","getBatches","selected","postSetStateMessage","stateUpdate","type","actions","actionType","batchId","id","postMessage","resetVisibility","visible","Infinity","setSelection","batchMap","getBatchGeometryByInstanceIds","locations","calculateRanges","clearHovered","hoveredInstanceIds","hovered","setVisibility","filter","isVisibleByLayer","applyVisibility","layer","setLayerVisibility","getLayerInstances","isVisible","getEntityId","concat","pickPriority","setPickPriority","resetPickPriority","l","entityToInstance","GeometryBuilder","geometry","Trimble","flatbuffers","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","create","ZERO","prototype","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","Error","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","charCodeAt","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","c","__indirect","__vector","__vector_len","__has_identifier","ident","Technology","TrimBim","Fbs","SegmentType","HorizontalSegmentType","VerticalSegmentType","HorizontalTransitionCurveType","OwnerHistoryState","OwnerHistoryChangeAction","PropertyType","Logical","Sidedness","LineStyle","IdentifierType","GeometryType","TextureType","LayoutType","AlignmentType","BoltType","HierarchyType","builder","x","y","z","Vec3f","__init","min_x","min_y","min_z","max_x","max_y","max_z","Vec3d","origin_x","origin_y","origin_z","xAxis_x","xAxis_y","xAxis_z","yAxis_x","yAxis_y","yAxis_z","start_x","start_y","start_z","end_x","end_y","end_z","Polyline3f","index","pointsOffset","numElems","startPolyline3f","addPoints","endPolyline3f","center_x","center_y","center_z","axis_x","axis_y","axis_z","refDirection_x","refDirection_y","refDirection_z","radius","angle","data1","data2","data3","data4_1","data4_2","data4_3","data4_4","data4_5","data4_6","data4_7","data4_8","d0","d1","d2","d3","d4","d5","d6","d7","u","v","OuterWire","byteOffset","vertexIndicesOffset","data","startOuterWire","addVertexIndices","endOuterWire","InnerWire","outerWire","startInnerWire","addOuterWire","endInnerWire","BRep","outerWiresOffset","innerWiresOffset","verticesOffset","startBRep","addOuterWires","addInnerWires","addVertices","endBRep","UV","position_x","position_y","position_z","uv_u","uv_v","normal_x","normal_y","normal_z","BRepWithUV","PositionUV","startBRepWithUV","endBRepWithUV","BRepWithNormal","PositionNormal","startBRepWithNormal","endBRepWithNormal","positionIndex","normalIndex","TriangleMesh","IndexedVertex","positionsOffset","normalsOffset","indicesOffset","startTriangleMesh","addPositions","addNormals","addIndices","endTriangleMesh","TriangleMesh8","IndexedVertex8","startTriangleMesh8","endTriangleMesh8","TexturedTriangleMesh","uvsOffset","startTexturedTriangleMesh","addUvs","endTexturedTriangleMesh","TexturedTriangleMesh8","startTexturedTriangleMesh8","endTexturedTriangleMesh8","Directrix","Int8Array","Uint32Array","Line3f","Arc3f","typesOffset","indexesOffset","lineSegmentsOffset","polyLinesOffset","arcsOffset","startDirectrix","addTypes","addIndexes","addLineSegments","addPolyLines","addArcs","endDirectrix","SweptDiskSolidContainer","directricesOffset","radiusOffset","startSweptDiskSolidContainer","addDirectrices","addRadius","endSweptDiskSolidContainer","HorizontalLineSegment","optionalEncoding","Vec2d","startTagOffset","endTagOffset","startPointOffset","startDirection","segmentLength","startHorizontalLineSegment","addStartTag","addEndTag","addStartPoint","addStartDirection","addSegmentLength","endHorizontalLineSegment","HorizontalCircularArcSegment","isCCW","startHorizontalCircularArcSegment","addIsCCW","endHorizontalCircularArcSegment","HorizontalClothoidalArcSegment","startRadius","clothoidConstant","isEntry","startHorizontalClothoidalArcSegment","addStartRadius","addClothoidConstant","addIsEntry","endHorizontalClothoidalArcSegment","HorizontalTransitionArcSegment","Invalid","endRadius","isStartRadiusCCW","isEndRadiusCCW","startHorizontalTransitionArcSegment","addEndRadius","addIsStartRadiusCCW","addIsEndRadiusCCW","addType","endHorizontalTransitionArcSegment","VerticalLineSegment","startDistAlong","horizontalLength","startHeight","startGradient","startVerticalLineSegment","addStartDistAlong","addHorizontalLength","addStartHeight","addStartGradient","endVerticalLineSegment","VerticalCircularArcSegment","isConvex","startVerticalCircularArcSegment","addIsConvex","endVerticalCircularArcSegment","VerticalParabolicArcSegment","parabolaConstant","startVerticalParabolicArcSegment","addParabolaConstant","endVerticalParabolicArcSegment","HorizontalCurve","startAlongDistance","segmentTypesOffset","circularArcSegmentsOffset","clothoidalArcSegmentsOffset","transitionArcSegmentsOffset","startHorizontalCurve","addStartAlongDistance","addSegmentTypes","addCircularArcSegments","addClothoidalArcSegments","addTransitionArcSegments","endHorizontalCurve","VerticalCurve","parabolicArcSegmentsOffset","startVerticalCurve","addParabolicArcSegments","endVerticalCurve","AlignmentCurve","horizontalCurveOffset","verticalCurveOffset","nameOffset","startAlignmentCurve","addHorizontalCurve","addVerticalCurve","addName","endAlignmentCurve","GridLineSegment","Line3d","axisTagOffset","lineSegmentOffset","startGridLineSegment","addAxisTag","addLineSegment","endGridLineSegment","GridArc","Arc3d","arcOffset","startGridArc","addArc","endGridArc","GridLineContainer","gridLineSegmentsOffset","gridArcsOffset","startGridLineContainer","addGridLineSegments","addGridArcs","endGridLineContainer","Owner","personIdOffset","personFamilyNameOffset","personGivenNameOffset","personMiddleNamesOffset","personRolesOffset","organizationIdOffset","organizationNameOffset","organizationDescriptionOffset","organizationRolesOffset","applicationVersionOffset","applicationFullNameOffset","applicationIdentifierOffset","startOwner","addPersonId","addPersonFamilyName","addPersonGivenName","addPersonMiddleNames","addPersonRoles","addOrganizationId","addOrganizationName","addOrganizationDescription","addOrganizationRoles","addApplicationVersion","addApplicationFullName","addApplicationIdentifier","endOwner","changeAction","creationDate","lastModificationDate","owner","history","name","description","objectType","productId","PropertySetDefinition","SinglePropertyDefinition","propertiesOffset","startPropertySetDefinition","addProperties","endPropertySetDefinition","PropertySet","definition","valuesOffset","entitiesOffset","startPropertySet","addDefinition","addValues","addEntities","endPropertySet","ModelProperties","ProductBinding","Product","History","productBindingsOffset","productsOffset","ownersOffset","historiesOffset","namesOffset","descriptionsOffset","objectTypesOffset","propertySetBindingsOffset","propertySetNamesOffset","propertyNamesOffset","definitionsOffset","lengthMeasuresOffset","areaMeasuresOffset","volumeMeasuresOffset","massMeasuresOffset","angleMeasuresOffset","stringValuesOffset","doubleValuesOffset","dateTimeValuesOffset","startModelProperties","addProductBindings","addProducts","addOwners","addHistories","addNames","addDescriptions","addObjectTypes","addPropertySetBindings","addPropertySetNames","addPropertyNames","addDefinitions","addLengthMeasures","addAreaMeasures","addVolumeMeasures","addMassMeasures","addAngleMeasures","addStringValues","addDoubleValues","addDateTimeValues","endModelProperties","g","sidedness","lineStyle","metallic","roughness","Placement3","identifierIndex","classIndex","globalPlacement_origin_x","globalPlacement_origin_y","globalPlacement_origin_z","globalPlacement_xAxis_x","globalPlacement_xAxis_y","globalPlacement_xAxis_z","globalPlacement_yAxis_x","globalPlacement_yAxis_y","globalPlacement_yAxis_z","AABB3f","boundingBox_min_x","boundingBox_min_y","boundingBox_min_z","boundingBox_max_x","boundingBox_max_y","boundingBox_max_z","localPlacementId","definitionId","surfaceMaterialId","layerId","Texture","None","bytesOffset","startTexture","addBytes","endTexture","GraphicsContainer","startGraphicsContainer","endGraphicsContainer","CoordinateGeometryPoint","symbolOffset","startCoordinateGeometryPoint","addSymbol","endCoordinateGeometryPoint","BillboardText","textStyleId","textOffset","startBillboardText","addTextStyleId","addText","endBillboardText","TextStyle","fontOffset","options","verticalAlign","horizontalAlign","rotationAngle","layout","maxAutoScale","verticalDistanceToObject","startTextStyle","addFont","addSize","addOptions","addVerticalAlign","addHorizontalAlign","addRotationAngle","addLayout","addAlignment","addMaxAutoScale","addVerticalDistanceToObject","endTextStyle","Billboard","startBillboard","endBillboard","leftUpXY_x","leftUpXY_y","leftUpUV_x","leftUpUV_y","rightDownXY_x","rightDownXY_y","rightDownUV_x","rightDownUV_y","IsInWorldUnits","topDiameter","thickness","diameter","innerDiameter","outerDiameter","xslot","yslot","Bolt","BoltTop","Washer","Nut","Hole","topOffset","washersOffset","nutsOffset","holesOffset","startBolt","addTop","addWashers","addNuts","addHoles","endBolt","MapConversion","eastings","northings","orthogonalHeight","xAxisAbscissa","xAxisOrdinate","scaleToMapProjection","projectionNameOffset","projectionDescriptionOffset","projectionGeodeticDatumOffset","projectionVerticalDatumOffset","projectionProjectionTypeOffset","projectionZoneOffset","projectionUnitNameOffset","projectionScaleToMetric","sourceOriginOffset","startMapConversion","addEastings","addNorthings","addOrthogonalHeight","addXAxisAbscissa","addXAxisOrdinate","addScaleToMapProjection","addProjectionName","addProjectionDescription","addProjectionGeodeticDatum","addProjectionVerticalDatum","addProjectionProjectionType","addProjectionZone","addProjectionUnitName","addProjectionScaleToMetric","addSourceOrigin","endMapConversion","ModelGeometry","SurfaceMaterial","GeometryDefinition","GeometryInstance","TexturedBillboard","localPlacementsOffset","surfaceMaterialsOffset","layersOffset","instancesOffset","texturesOffset","bRepsOffset","triangleMeshesOffset","triangleMeshes8Offset","texturedTriangleMeshesOffset","texturedTriangleMeshes8Offset","sweptDiskSolidsOffset","bRepWithUVsOffset","bRepWithNormalsOffset","graphicsContainersOffset","alignmentCurvesOffset","gridLineContainersOffset","coordinateGeometryPointsOffset","billboardTextsOffset","textStylesOffset","billboardsOffset","texturedBillboardsOffset","boltsOffset","startModelGeometry","addLocalPlacements","addSurfaceMaterials","addLayers","addInstances","addTextures","addBReps","addTriangleMeshes","addTriangleMeshes8","addTexturedTriangleMeshes","addTexturedTriangleMeshes8","addSweptDiskSolids","addBRepWithUVs","addBRepWithNormals","addGraphicsContainers","addAlignmentCurves","addGridLineContainers","addCoordinateGeometryPoints","addBillboardTexts","addTextStyles","addBillboards","addTexturedBillboards","addBolts","endModelGeometry","parentElementId","childElementId","ModelEntities","Entity","HierarchyNode","Guid","SpatialHash","hierarchiesOffset","guidIdentifiersOffset","stringIdentifiersOffset","spatialHashIdentifiersOffset","dwgHandleIdentifiersOffset","entityClassesOffset","startModelEntities","addHierarchies","addGuidIdentifiers","addStringIdentifiers","addSpatialHashIdentifiers","addDwgHandleIdentifiers","addEntityClasses","endModelEntities","MetadataEntry","keyOffset","valueOffset","startMetadataEntry","addKey","addValue","endMetadataEntry","Model","geometryOffset","mapConversionsOffset","metadataOffset","startModel","addGeometry","addMapConversions","addMetadata","endModel","_lut","toString","MathUtils","DEG2RAD","Math","PI","RAD2DEG","generateUUID","random","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","floor","randFloat","randFloatSpread","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","console","warn","Quaternion","w","_x","_y","_z","_w","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","sqrt","atan2","tDir","f","multiplyQuaternionsFlat","defineProperties","_onChangeCallback","isQuaternion","clone","constructor","quaternion","setFromEuler","euler","update","isEuler","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","angleTo","acos","rotateTowards","step","inverse","conjugate","lengthSq","multiply","p","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","fromArray","array","toArray","fromBufferAttribute","attribute","getX","getY","getZ","getW","_onChange","callback","_vector","Vector3","_quaternion","Matrix3","arguments","error","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","getComponent","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiplyVectors","multiplyScalar","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","e","applyNormalMatrix","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","setFromMatrix3Column","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix4","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","h","getInverse","matrix","throwOnDegenerate","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","rotate","translate","_vector1","_vector2","_normalMatrix","Plane","constant","isPlane","setComponents","setFromNormalAndCoplanarPoint","point","setFromCoplanarPoints","plane","inverseNormalLength","distanceToPoint","distanceToSphere","sphere","center","projectPoint","target","intersectLine","line","direction","delta","intersectsLine","startSign","endSign","end","intersectsBox","box","intersectsPlane","intersectsSphere","coplanarPoint","optionalNormalMatrix","normalMatrix","referencePoint","_v0","_v1","_v2","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","containsPoint","getUV","p1","p2","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","points","i0","i1","i2","triangle","getArea","getMidpoint","getPlane","intersectsTriangle","closestPointToPoint","vc","vb","va","makeSafe","setFromVector3","setFromCartesianCoords","_points","_box","Box3","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","v0","extents","p0","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","object","expandByObject","isEmpty","getCenter","getSize","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","union","children","containsBox","getParameter","clampPoint","getBoundingSphere","intersect","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","_sphere","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","ray","at","lookAt","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","_m1","Matrix4","_zero","_one","Vector2","isMatrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","width","height","isVector2","rotateAround","_startP","_startEnd","distanceSq","distance","closestPointToPointParameter","clampToLine","startEnd2","_matrix","Euler","_order","DefaultOrder","Vector4","RotationOrders","asin","setFromQuaternion","reorder","newOrder","toVector3","optionalResult","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","Color","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","isColor","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","slice","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","toJSON","NAMES","materialIndex","vertexNormals","Array","isArray","vertexColors","source","Vector3Const","freeze","TrimbimGeometryType","MeshGeometryBuilder","super","triangleMeshes","bind","pos","vertex","mesh","out","indices","createIndexedVertex","vertices","positions","vecA","vecB","vecC","meshIndex","getMesh","geometryType","indicesLength","getVertex","addPoint","snapLineStart","snapLineEnd","verticesLength","prepareModelTypes","geometryIndex","buildIfEmpty","buffers","build","triangleMeshesLength","calculateBufferSizes","positionsLength","normalsLength","uvsLength","pointSizesLength","bufferGeometry","indicesArray","normals","Int16Array","uvs","uv","pickFace","idx","triangleMeshes8","texturedTriangleMeshes8","texturedTriangleMeshes","Mesh8GeometryBuilder","triangleMeshes8Length","MeshTexturedGeometryBuilder","texturedTriangleMeshesLength","buildTexured","Mesh8TexturedGeometryBuilder","texturedTriangleMeshes8Length","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","list","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","polyType","AbstractBRepGeometryBuilder","innerWire","brep","innerVertex_length","innerWiresLength","outerWireId","innerWires","vertexIndicesLength","all_outerVertices_length","indices_length","outerLength","outerWiresLength","outerWires","counters","vertex_count","index_count","vertex_length","uv_length","normal_length","normal_count","seal","getBrepData","getVertexDataSize","holes","buildHoles","vertexIndices","vertexIndicesArray","rectangle","buildPoly","buildQuad","buildTriangle","BRepWithNormals","BRepGeometryBuilder","computeNormals","vertexUv","vertexNormal","innerlength","pointsInside","innerWiresLUT","getBRep","indexOffset","n1","idx0","idx1","idx2","getNormalFromTrimBIM","insideHole","pointInsidePolygon","axis1","axis0","vector3","createOrthonormalBasis","lastIndex","pj","jx","jy","pi","poly","vertexDataSize","brepOffset","refAxis","invLength","pA","pB","pC","ab","cb","vA","vB","vC","fill","bRep","bReps","bRepsLength","BRepWithUVGeometryBuilder","bRepWithUVs","bRepWithUVsLength","BRepWithNormalsGeometryBuilder","bRepWithNormals","bRepWithNormalsLength","v3","v4","v5","v6","n2","idx3","outer_length","holes_idx","twoD","projectPoints","iIndex","jIndex","locx","locy","tmp0","tmp1","coordsBuffer","ArrayBuffer","planeCoords","getArcSectionsCount","arc","sectionsPerRadianForUnitRadius","get3DArcSectionsCount","get2DArcSectionsCount","forEachSegment","segment","lines","lineSegmentsLength","lineSegments","forEachArc","arcStart","arcEnd","arcMids","arcCenter","arcAxis","directrix","arcsLength","arcs","arcCrossSectionCount","refDirection","forEachPolyline","polyPoint","nextPolyPoint","polyline","polylinesLength","polyLinesLength","polyLines","innerLength","pointsLength","pickOnSegment","intersections","precision","pickOnArc","mid","pickOnPolyline","pickOnLineString","lineStringVertices","vertexCount","interRay","interSegment","distSq","addHit","intersectCylinder","mInv","rayTr","scaleFactor","getPerpendicular","makeHit","t2","LinePrimitiveBuilder","buildLine","positionPointer","crossSectionCount","arcCrossSections","createCrossSections","GraphicsGeometryBuilder","hits","graphics","graphicsContainers","graphicsContainersLength","getTotalArcSectionsCount","indexPointer","buildSegments","buildArcs","pickLine","SweptDiskSolidGeometryBuilder","SweptDiskSolid","sds","snapped","sweptDiskSolids","directricesLength","directrices","amplifier","sweptDiskSolidsLength","linesCount","arcsCount","linesOfPolylinesCount","lineCrossSectionPointCount","arcCrossSectionPointCount","polylineCrossSectionPointCount","arcStartEndCrossSectionPointCount","crossSectionPointCount","getCrossSectionsPointCount","normalPointer","interConnectionDetail","indexesLength","isStartSegment","isEndSegment","types","indexes","LineSegment","buildLineSegment","PolyLine","buildPolyLine","Arc","buildArc","lineStart","lineEnd","lineQuaternion","buildCrossSection","connectFirstCrossSection","buildCrossSectionIndices","connectCrossSections","firstCrossSectionPosition","isMatchType","IsConnected","nextPoint","prevPoint","buildStartCrossSection","buildMidCrossSection","buildEndCrossSection","crossSectionPoints","invertFaces","isPreviousCrossSection","vertexPointer1","vertexPointer2","nexti","section1","section2","crossSectionType","nextCrossSectionType","Checksum","placeholder","compute","codePointAt","crc","k","POLY","Utils","planesIntersectBoxInternal","clipPlanes","insideClipPlanes","clipPlane","contain","checksum","createIText","text","textStyle","hash","font","BillboardGeometryBuilder","pickPoint","zero","TexturedBillboardGeometryBuilder","pointSizes","leftUpUV","rightDownUV","leftUpXY","rightDownXY","billboard","texturedBillboards","producedType","BillboardTextGeometryBuilder","trbTextStyle","billboardText","billboardTexts","textStyles","LeftTop","GridGeometryBuilder","CenterBottom","starts","ends","startToPoint","endToPoint","outSurfaceNormal","glc","gridLineContainers","getGeometries","vs","gridLineSegmentsLength","lineBuffer","labelBuffers","grid","buildGridLines","labelString","gridLineSegments","axisTag","labelBuffer","buildGridLabels","surfaceNormals","buildIntersections","uvPointer","gridLineContainersLength","pointBuffers","label","labelTextStyle","lineIndex","lineSegment","batchCount","placement","BatchCluster","instances","indexBuffer32bit","geometryBuilt","includes","prototypes","findFreeBatchPrototype","addToPrototype","createBatchPrototype","prototypeBatches","GeometryCluster","im","geom","messenger","lodLevelToBatches","textChecksum","batches","oldBatches","removeBatchGeometry","action","userData","send","objectSize","getMinObjectSize","addObjectToFreePrototype","lodCount","newBatches","buildBatchGeometry","clusterId","createLocalBoundingBox","pointSizePointer","getInstanceTransform","geometries","newGeometry","belongsToCluster","mergeGeometry","instancePlacement","instanceGeometry","affineTransformVector3","applyRotationAndScaleToVector3","PointCluster","GeometryUpdateMessenger","intervalId","setInterval","message","transfer","clearInterval","ClusterManager","_model","_im","_geom","_lodManager","_layerManager","_modelState","aabb","modelGeometry","instance","isNaN","boundingBoxes","getInstanceAABB","x_diff","grid_size","y_diff","z_diff","_instanceIdToClusters","_instanceIdToBatches","worldBoundingbox","getClusterSize","generateClusterId","getCluster","expandClusterBoundingBox","insertObject","addInstanceToBatchMapping","Set","removed","added","oldClusters","oldCluster","newClusterId","delete","populateCluster","removeGeometry","removeInstanceIdsFromClusters","from","keys","clusters","currentCluster","newCluster","restoreInstanceState","isSelected","locationIndex","indexOf","location","removeActions","idsToRemove","entries","currentIds","clearBatches","instanceBatches","belongsToBatchPrototype","stringId","createCluster","dispose","AlignmentGeometryBuilder","indexAlignments","getAlignmentClusterSize","horizontSegmentOffsets","vec3","instancesLength","definitions","alignmentCurves","spans","buildSpans","boxes","buildSpanBoundingBoxes","spanIndex","strId","span","first","horCurve","horizontalCurve","horizontalDistance","segmentTypesLength","horizontalCurveGetSegmentAt","alignmentCurvesLength","computeTesselationCount","tolerance","totalTesselationCount","verCurve","verticalCurve","hasHorizontalCurve","hasVerticalCurve","hSegType","segmentTypes","horizontalCurveIndex","vSegType","verticalCurveIndex","horizontalCount","getTessellationCountHorizontal","verticalCount","getTessellationCountVertical","counter","segType","CircularArcSegment","circularArcSegments","ClothoidalArcSegment","clothoidalArcSegments","TransientCurveSegment","transitionArcSegments","ParabolicArcSegment","parabolicArcSegments","clothoid","resultPoint","aa","f1","f2","cloCos","cloSin","sf","tt","vertSegmentType","verticalSegment","distanceDelta","g1","gx","zc","ds","R","g0","horizontalSegmentType","verticalSegmentType","alignmentCurve","distanceTolerance","breaks","buildVerticalBreaks","AlignmentBreak","Distance","verticalIndex","horizontalIndex","hasStart","MIN_VALUE","Span","IsVertical","CurveIndex","alignmentBreaks","previousEnd","verticalCurveGetSegmentAt","curve","overlap","usableSegmentLength","horizontalSegment","tessellationCount","horizontalSegmentOffset","startDistance","horizontalSegmentGetPointAt","segmentGetElevationAt","previousXy","previous","previousDistance","startPoint","angleVec2","deltaAngle","originDirection","ClothoidCurve","segmentClothoidGetPointAt","BiquadraticParabola","BlossCurve","CosineCurve","SineCurve","clothoidSpaceLocation","segmentClothoidSpaceLocation","directionCos","directionSin","isVertical","hasCurve","curveIndex","HasCurve","GeometryManager","geometryBuilders","registerGeometryBuilder","handler","generate","snapGeometryType","snapType","gb","pick","MaterialManager","self","materials","model","texturesLength","tex","textures","tmpTexture","image","bytesLength","bytesArray","surfaceMaterialsLength","matDef","surfaceMaterials","textureTransparent","Png","ids","mainLoop","equal","m1","m2","eq","Single","Normal","def","InstanceManager","box2","xMax","xMin","yMin","yMax","zMin","zMax","aabbMin","aabbMax","transform","getTransform","vec3d","vec3f","localPlacement","local","global","globalPlacement","entity","localPlacements","toMatrix4","entities","analyzeInstances","updateWorldBoundingBox","node","expressions","token","operations","ModelBuilderWorker","cm","startGeometryUpdateLoop","setCameraForGeometryUpdate","processClusters","clustersProcessedForCurrentCamera","cameraPosition","performance","now","cameraFrustum","buildGeometry","getLodLevel","updateFinishedSent","enabled","setTimeout","removePendingUpdateFinishedAction","loc","getLevel","appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","LodManager","lodObjectSizes","_isMobile","param","nav","userAgent","split","match","regex","test","createMatch","apple","phone","ipod","tablet","universal","device","amazon","android","windows","blackberry","blackberry10","opera","firefox","chrome","any","isMobile","modelSize","Hierarchy","Base64ConversionTable","UUID","ifcGuid","msGuid","setIfcGuid","setMsGuid","TypeError","JSON","parse","uuid2","view","DataView","getUint32","padStart","getUint16","getUint8","guid","getValue","setUint32","setUint16","setUint8","guid16","toBase64","b5","fromBase64","b4","b3","guid0103","getBytes","guid0406","guid0709","guid1012","guid1315","guid1616","base10Bit24","bitsLeft","reV","padBits","long","buf","EntityManager","modelEntities","properties","tmpGuid","identifierType","guidIdentifiers","createUUID","stringIdentifiers","spatialHashIdentifiers","DwgHandle","dwgHandleIdentifiers","streams","RangeError","loadProductIndex","productsLength","products","names","descriptions","objectTypes","loadPropertyIndex","propSetId","bindings","propertySetBindings","getSinglePropertyDefinitions","propertySetNames","propertySetNamesLength","getSetNameId","definitionsLength","definitionIds","propertySetBindingsLength","setIds","binding","setName","propertyName","setNameId","propertyNameIds","getPropertyNameIds","propertiesLength","property","propertySetName","propSetIds","getDefinitionIdsFromNames","setId","setDefinition","propertyNames","propertyNamesLength","propertyIds","bindingsCount","setBinding","propertyCount","propertyIdx","nameIndex","queries","query","$HIERARCHYTYPE","$SCOPE","$ENTITYID","getChildren","$UNIQUEIDENTIFIERS","getEntityIdsFromGuids","parentId","getParents","all","expression","productIndex","productProperty","namesLength","entitiesLength","allEntities","getAllEntityIds","productBindingCandidates","conditions","indexProductQuery","productCount","product","condition","acceptedIds","rootExpression","validator","validClassIndexes","entityClassesLength","entityClasses","addCandidate","bindingId","candidatesBySetId","indexEntityQuery","setDefinitionId","operation","propertyDefinitionId","checkEntityConditions","candidates","getEntitiesFromBinding","getIds","getPropertySetIdsFromName","streamId","page","pageSize","startIndex","entitySetIds","getPropertySetIdsFromEntity","row","propertySetId","getPropertySet","prop","input2","parentIds","hierarchiesLength","hierarchies","loadHierarchyIndex","childrensChildren","child","newChildren","hierarchyType","childrenIds","propertyCondition","bindingIds","candidateSet","propertySets","hierarchy","getHierarchyInternal","guids","uuids","tmpUuid","tmpEntity","matchingEntityIds","foundIds","setFromBufferData","identifier","getIdentifier","class","getEntity","catalog","key","info","getProductId","propertySetIds","getProduct","childId","productBindingsLength","productBindings","propertyIndex","hierarchyIndex","link","singlePropertyDefinition","LengthMeasure","lengthMeasures","AreaMeasure","areaMeasures","VolumeMeasure","volumeMeasures","MassMeasure","massMeasures","AngleMeasure","angleMeasures","StringValue","stringValues","IntValue","DoubleValue","doubleValues","DateTime","dateTimeValues","Boolean","LogicalNode","AndWrapper","iterator","firstExpression","OrWrapper","Expression","isSelector","wrapperOperation","isOperation","isLogical","addOperations","combineOperations","startsWith","parseArray","unwrapTopLevelOperators","parseObject","parseToken","childExpressions","combineExpressions","item","getLogicalWrapper","parseLogical","Date","getComparisonFunction","comparison","inputValue","parseSelectorPrimitive","parseSelector","op","find","entityManager","request","results","$hierarchy","newObject","uppercaseKey","$AND","parseHierarchy","$filter","$product","$entity","$definition","selector","$selector","filterProperties","findProducts","filterEntities","filterDefinition","queryHierarchy","stream","startPropertyStreaming","output","ModelEntityState","geometryCount","pickPriorityOffset","is","stateType","pickPriorityMask","mask","priorityValue","QuantizedAxisAlignedBox3","MinX","MaxX","MinY","MaxY","MinZ","MaxZ","second","QuantizedAxisAlignedBox3TreeNode","quantizedAabb","widthOrValue","dataValue","InputBox","Data","QuantizedAxisAlignedBox3Tree","inputBoxes","pivotValue","pivotIndex","getBox3FromArray","SwapInputBoxes","numIndices","mergedAabb","minClampedPoint","maxClampedPoint","globalAabb","treeDepth","outputIndex","subTreeBoundingBox","Quantize","CreateDataNode","quantizedAabb1","quantizedAabbTreeNodes","GetQuantizedAabb","setAsDataNode","quantizedAabb2","CreateMergedWith","CreateBranchNode","splitIndex","SplitByOneAxis","leftWidth","BuildSubTree","leftBoundingBoxes","rightWidth","rightBoundingBoxes","branchWidth","varianceSum","meanOfCenterPoints","CalculateMeanOfCenterPoints","deltaSquared","InPlaceSplitX","InPlaceSplitZ","InPlaceSplitY","rangeBalancedIndices","MergeBoxes","nodeCount","collidedResults","currentIndex","overlaps","TestQuantizedBoxOverlap","isDataNode","IsDataNode","GetNodeDataValue","GetBranchNodeWidth","planesIntersectBox","Query","planesContainBox","containBox","visibleBox","curIndex","numNodes","bound","GetAabb","contains","endIndex","totalDepth","parentStack","pop","nodeWidth","DataNodeCount","itemA","itemB","nodeIndex","Unquantize","SetAsDataValue","SetDataValue","SetAsBranch","GetDataNodeValue","PickHandler","_boundingBoxes","_instanceManager","_geometryManager","_state","localRay","localFrustum","inverseTransform","transformFrustum","hitsPoints","transformedPlanes","transformClipPlanes","hit","insideNonIntersectingPlanes","getPickPriority","_geometry","searchTree","filterPickableInstances","QueryFrustum","frustumPickIds","pickBoundingBoxes","rayPickIds","getIsMesh","pickGeometry","highPriorityHits","findClosestHit","snapTypes","mainHit","pickSnappedEdges","shape","QueryRay","h1","h2","LayerManager","layerVisibilities","layersLength","layers","getLayerIndex","visibility","ThreadWorkerModel","getRootAsModel","addModelTextures","addModelMaterials","modelStateManager","modelBuilderWorker","pickHandler","pickSnapped","getHierarchyTree","frustumPick","setHovered","forceUpdate","getMaterials","getEntitiesFromIds","getLayers","findLayersByEntities","getLayerVisibility","getHierarchy","buildGeometryForCamera","getAABBFromIds","getPropertySetNames","getPropertyDefinitions","getPropertyValues","logicalNode","getPropertyStreamPage","aggregations","propSets","getEntityProperties","aggregate","aggregation","operator","getProperty","threadWorker","it","models","restoreRay","restoreFrustum","restorePlanes","childrenEntityIds","getEntities","getEntityParentId","getEntityProduct","tree","setCamera","restoreVector","entityIdGroups","getEntitiesBoundingBox","getEntitiesByFilter","guidsToEntityIds","queryPage","getEntityIdsByState","aggregateProperties","methodName","apply","args","onmessage","onMessage"],"mappings":"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"}