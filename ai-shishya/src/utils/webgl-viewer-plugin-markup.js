define(["exports","three.mjs","./three.mjs","./three.mjs"],(function(exports,three,three_module_js,three_module_js$1){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var extendStatics=function(t,e){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i])})(t,e)};function __extends(t,e){function i(){this.constructor=t}extendStatics(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}function isFunction(t){return"function"==typeof t}var _enable_super_gross_mode_that_will_cause_bad_things=!1,config={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){t&&(new Error).stack;_enable_super_gross_mode_that_will_cause_bad_things=t},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things}};function hostReportError(t){setTimeout((function(){throw t}),0)}var empty$1={closed:!0,next:function(t){},error:function(t){if(config.useDeprecatedSynchronousErrorHandling)throw t;hostReportError(t)},complete:function(){}},isArray=function(){return Array.isArray||function(t){return t&&"number"==typeof t.length}}();function isObject(t){return null!==t&&"object"==typeof t}var UnsubscriptionErrorImpl=function(){function t(t){return Error.call(this),this.message=t?t.length+" errors occurred during unsubscription:\n"+t.map((function(t,e){return e+1+") "+t.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t}(),UnsubscriptionError=UnsubscriptionErrorImpl,Subscription=function(){function t(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}return t.prototype.unsubscribe=function(){var e;if(!this.closed){var i=this,n=i._parentOrParents,r=i._ctorUnsubscribe,s=i._unsubscribe,o=i._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(var a=0;a<n.length;++a){n[a].remove(this)}if(isFunction(s)){r&&(this._unsubscribe=void 0);try{s.call(this)}catch(t){e=t instanceof UnsubscriptionError?flattenUnsubscriptionErrors(t.errors):[t]}}if(isArray(o)){a=-1;for(var c=o.length;++a<c;){var h=o[a];if(isObject(h))try{h.unsubscribe()}catch(t){e=e||[],t instanceof UnsubscriptionError?e=e.concat(flattenUnsubscriptionErrors(t.errors)):e.push(t)}}}if(e)throw new UnsubscriptionError(e)}},t.prototype.add=function(e){var i=e;if(!e)return t.EMPTY;switch(typeof e){case"function":i=new t(e);case"object":if(i===this||i.closed||"function"!=typeof i.unsubscribe)return i;if(this.closed)return i.unsubscribe(),i;if(!(i instanceof t)){var n=i;(i=new t)._subscriptions=[n]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}var r=i._parentOrParents;if(null===r)i._parentOrParents=this;else if(r instanceof t){if(r===this)return i;i._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return i;r.push(this)}var s=this._subscriptions;return null===s?this._subscriptions=[i]:s.push(i),i},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var i=e.indexOf(t);-1!==i&&e.splice(i,1)}},t.EMPTY=function(t){return t.closed=!0,t}(new t),t}();function flattenUnsubscriptionErrors(t){return t.reduce((function(t,e){return t.concat(e instanceof UnsubscriptionError?e.errors:e)}),[])}var rxSubscriber=function(){return"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()}(),Subscriber=function(t){function e(i,n,r){var s=t.call(this)||this;switch(s.syncErrorValue=null,s.syncErrorThrown=!1,s.syncErrorThrowable=!1,s.isStopped=!1,arguments.length){case 0:s.destination=empty$1;break;case 1:if(!i){s.destination=empty$1;break}if("object"==typeof i){i instanceof e?(s.syncErrorThrowable=i.syncErrorThrowable,s.destination=i,i.add(s)):(s.syncErrorThrowable=!0,s.destination=new SafeSubscriber(s,i));break}default:s.syncErrorThrowable=!0,s.destination=new SafeSubscriber(s,i,n,r)}return s}return __extends(e,t),e.prototype[rxSubscriber]=function(){return this},e.create=function(t,i,n){var r=new e(t,i,n);return r.syncErrorThrowable=!1,r},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this},e}(Subscription),SafeSubscriber=function(t){function e(e,i,n,r){var s,o=t.call(this)||this;o._parentSubscriber=e;var a=o;return isFunction(i)?s=i:i&&(s=i.next,n=i.error,r=i.complete,i!==empty$1&&(isFunction((a=Object.create(i)).unsubscribe)&&o.add(a.unsubscribe.bind(a)),a.unsubscribe=o.unsubscribe.bind(o))),o._context=a,o._next=s,o._error=n,o._complete=r,o}return __extends(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;config.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber,i=config.useDeprecatedSynchronousErrorHandling;if(this._error)i&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)i?(e.syncErrorValue=t,e.syncErrorThrown=!0):hostReportError(t),this.unsubscribe();else{if(this.unsubscribe(),i)throw t;hostReportError(t)}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var i=function(){return t._complete.call(t._context)};config.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,i),this.unsubscribe()):(this.__tryOrUnsub(i),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){if(this.unsubscribe(),config.useDeprecatedSynchronousErrorHandling)throw t;hostReportError(t)}},e.prototype.__tryOrSetError=function(t,e,i){if(!config.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,i)}catch(e){return config.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=e,t.syncErrorThrown=!0,!0):(hostReportError(e),!0)}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(Subscriber);function canReportError(t){for(;t;){var e=t,i=e.closed,n=e.destination,r=e.isStopped;if(i||r)return!1;t=n&&n instanceof Subscriber?n:null}return!0}function toSubscriber(t,e,i){if(t){if(t instanceof Subscriber)return t;if(t[rxSubscriber])return t[rxSubscriber]()}return t||e||i?new Subscriber(t,e,i):new Subscriber(empty$1)}var observable=function(){return"function"==typeof Symbol&&Symbol.observable||"@@observable"}();function identity(t){return t}function pipeFromArray(t){return 0===t.length?identity:1===t.length?t[0]:function(e){return t.reduce((function(t,e){return e(t)}),e)}}var Observable=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var i=new t;return i.source=this,i.operator=e,i},t.prototype.subscribe=function(t,e,i){var n=this.operator,r=toSubscriber(t,e,i);if(n?r.add(n.call(r,this.source)):r.add(this.source||config.useDeprecatedSynchronousErrorHandling&&!r.syncErrorThrowable?this._subscribe(r):this._trySubscribe(r)),config.useDeprecatedSynchronousErrorHandling&&r.syncErrorThrowable&&(r.syncErrorThrowable=!1,r.syncErrorThrown))throw r.syncErrorValue;return r},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){config.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),canReportError(t)?t.error(e):console.warn(e)}},t.prototype.forEach=function(t,e){var i=this;return new(e=getPromiseCtor(e))((function(e,n){var r;r=i.subscribe((function(e){try{t(e)}catch(t){n(t),r&&r.unsubscribe()}}),n,e)}))},t.prototype._subscribe=function(t){var e=this.source;return e&&e.subscribe(t)},t.prototype[observable]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return 0===t.length?this:pipeFromArray(t)(this)},t.prototype.toPromise=function(t){var e=this;return new(t=getPromiseCtor(t))((function(t,i){var n;e.subscribe((function(t){return n=t}),(function(t){return i(t)}),(function(){return t(n)}))}))},t.create=function(e){return new t(e)},t}();function getPromiseCtor(t){if(t||(t=Promise),!t)throw new Error("no Promise impl found");return t}var ObjectUnsubscribedErrorImpl=function(){function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t}(),ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl,SubjectSubscription=function(t){function e(e,i){var n=t.call(this)||this;return n.subject=e,n.subscriber=i,n.closed=!1,n}return __extends(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var i=e.indexOf(this.subscriber);-1!==i&&e.splice(i,1)}}},e}(Subscription),SubjectSubscriber=function(t){function e(e){var i=t.call(this,e)||this;return i.destination=e,i}return __extends(e,t),e}(Subscriber),Subject=function(t){function e(){var e=t.call(this)||this;return e.observers=[],e.closed=!1,e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return __extends(e,t),e.prototype[rxSubscriber]=function(){return new SubjectSubscriber(this)},e.prototype.lift=function(t){var e=new AnonymousSubject(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new ObjectUnsubscribedError;if(!this.isStopped)for(var e=this.observers,i=e.length,n=e.slice(),r=0;r<i;r++)n[r].next(t)},e.prototype.error=function(t){if(this.closed)throw new ObjectUnsubscribedError;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,i=e.length,n=e.slice(),r=0;r<i;r++)n[r].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new ObjectUnsubscribedError;this.isStopped=!0;for(var t=this.observers,e=t.length,i=t.slice(),n=0;n<e;n++)i[n].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new ObjectUnsubscribedError;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new ObjectUnsubscribedError;return this.hasError?(t.error(this.thrownError),Subscription.EMPTY):this.isStopped?(t.complete(),Subscription.EMPTY):(this.observers.push(t),new SubjectSubscription(this,t))},e.prototype.asObservable=function(){var t=new Observable;return t.source=this,t},e.create=function(t,e){return new AnonymousSubject(t,e)},e}(Observable),AnonymousSubject=function(t){function e(e,i){var n=t.call(this)||this;return n.destination=e,n.source=i,n}return __extends(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){return this.source?this.source.subscribe(t):Subscription.EMPTY},e}(Subject),BehaviorSubject=function(t){function e(e){var i=t.call(this)||this;return i._value=e,i}return __extends(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),e.prototype._subscribe=function(e){var i=t.prototype._subscribe.call(this,e);return i&&!i.closed&&e.next(this._value),i},e.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new ObjectUnsubscribedError;return this._value},e.prototype.next=function(e){t.prototype.next.call(this,this._value=e)},e}(Subject),EMPTY=new Observable((function(t){return t.complete()}));function empty(t){return t?emptyScheduled(t):EMPTY}function emptyScheduled(t){return new Observable((function(e){return t.schedule((function(){return e.complete()}))}))}function isScheduler(t){return t&&"function"==typeof t.schedule}var subscribeToArray=function(t){return function(e){for(var i=0,n=t.length;i<n&&!e.closed;i++)e.next(t[i]);e.complete()}};function scheduleArray(t,e){return new Observable((function(i){var n=new Subscription,r=0;return n.add(e.schedule((function(){r!==t.length?(i.next(t[r++]),i.closed||n.add(this.schedule())):i.complete()}))),n}))}function fromArray(t,e){return e?scheduleArray(t,e):new Observable(subscribeToArray(t))}function noop(){}var ArgumentOutOfRangeErrorImpl=function(){function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t}(),ArgumentOutOfRangeError=ArgumentOutOfRangeErrorImpl;function map(t,e){return function(i){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return i.lift(new MapOperator(t,e))}}var MapOperator=function(){function t(t,e){this.project=t,this.thisArg=e}return t.prototype.call=function(t,e){return e.subscribe(new MapSubscriber(t,this.project,this.thisArg))},t}(),MapSubscriber=function(t){function e(e,i,n){var r=t.call(this,e)||this;return r.project=i,r.count=0,r.thisArg=n||r,r}return __extends(e,t),e.prototype._next=function(t){var e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}this.destination.next(e)},e}(Subscriber),subscribeToPromise=function(t){return function(e){return t.then((function(t){e.closed||(e.next(t),e.complete())}),(function(t){return e.error(t)})).then(null,hostReportError),e}};function getSymbolIterator(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}var iterator=getSymbolIterator(),subscribeToIterable=function(t){return function(e){for(var i=t[iterator]();;){var n=void 0;try{n=i.next()}catch(t){return e.error(t),e}if(n.done){e.complete();break}if(e.next(n.value),e.closed)break}return"function"==typeof i.return&&e.add((function(){i.return&&i.return()})),e}},subscribeToObservable=function(t){return function(e){var i=t[observable]();if("function"!=typeof i.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return i.subscribe(e)}},isArrayLike=function(t){return t&&"number"==typeof t.length&&"function"!=typeof t};function isPromise(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}var subscribeTo=function(t){if(t&&"function"==typeof t[observable])return subscribeToObservable(t);if(isArrayLike(t))return subscribeToArray(t);if(isPromise(t))return subscribeToPromise(t);if(t&&"function"==typeof t[iterator])return subscribeToIterable(t);var e=isObject(t)?"an invalid object":"'"+t+"'";throw new TypeError("You provided "+e+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")};function scheduleObservable(t,e){return new Observable((function(i){var n=new Subscription;return n.add(e.schedule((function(){var r=t[observable]();n.add(r.subscribe({next:function(t){n.add(e.schedule((function(){return i.next(t)})))},error:function(t){n.add(e.schedule((function(){return i.error(t)})))},complete:function(){n.add(e.schedule((function(){return i.complete()})))}}))}))),n}))}function schedulePromise(t,e){return new Observable((function(i){var n=new Subscription;return n.add(e.schedule((function(){return t.then((function(t){n.add(e.schedule((function(){i.next(t),n.add(e.schedule((function(){return i.complete()})))})))}),(function(t){n.add(e.schedule((function(){return i.error(t)})))}))}))),n}))}function scheduleIterable(t,e){if(!t)throw new Error("Iterable cannot be null");return new Observable((function(i){var n,r=new Subscription;return r.add((function(){n&&"function"==typeof n.return&&n.return()})),r.add(e.schedule((function(){n=t[iterator](),r.add(e.schedule((function(){if(!i.closed){var t,e;try{var r=n.next();t=r.value,e=r.done}catch(t){return void i.error(t)}e?i.complete():(i.next(t),this.schedule())}})))}))),r}))}function isInteropObservable(t){return t&&"function"==typeof t[observable]}function isIterable(t){return t&&"function"==typeof t[iterator]}function scheduled(t,e){if(null!=t){if(isInteropObservable(t))return scheduleObservable(t,e);if(isPromise(t))return schedulePromise(t,e);if(isArrayLike(t))return scheduleArray(t,e);if(isIterable(t)||"string"==typeof t)return scheduleIterable(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}function from(t,e){return e?scheduled(t,e):t instanceof Observable?t:new Observable(subscribeTo(t))}var SimpleInnerSubscriber=function(t){function e(e){var i=t.call(this)||this;return i.parent=e,i}return __extends(e,t),e.prototype._next=function(t){this.parent.notifyNext(t)},e.prototype._error=function(t){this.parent.notifyError(t),this.unsubscribe()},e.prototype._complete=function(){this.parent.notifyComplete(),this.unsubscribe()},e}(Subscriber),SimpleOuterSubscriber=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.notifyNext=function(t){this.destination.next(t)},e.prototype.notifyError=function(t){this.destination.error(t)},e.prototype.notifyComplete=function(){this.destination.complete()},e}(Subscriber);function innerSubscribe(t,e){if(!e.closed){if(t instanceof Observable)return t.subscribe(e);var i;try{i=subscribeTo(t)(e)}catch(t){e.error(t)}return i}}function mergeMap(t,e,i){return void 0===i&&(i=Number.POSITIVE_INFINITY),"function"==typeof e?function(n){return n.pipe(mergeMap((function(i,n){return from(t(i,n)).pipe(map((function(t,r){return e(i,t,n,r)})))}),i))}:("number"==typeof e&&(i=e),function(e){return e.lift(new MergeMapOperator(t,i))})}var MergeMapOperator=function(){function t(t,e){void 0===e&&(e=Number.POSITIVE_INFINITY),this.project=t,this.concurrent=e}return t.prototype.call=function(t,e){return e.subscribe(new MergeMapSubscriber(t,this.project,this.concurrent))},t}(),MergeMapSubscriber=function(t){function e(e,i,n){void 0===n&&(n=Number.POSITIVE_INFINITY);var r=t.call(this,e)||this;return r.project=i,r.concurrent=n,r.hasCompleted=!1,r.buffer=[],r.active=0,r.index=0,r}return __extends(e,t),e.prototype._next=function(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)},e.prototype._tryNext=function(t){var e,i=this.index++;try{e=this.project(t,i)}catch(t){return void this.destination.error(t)}this.active++,this._innerSub(e)},e.prototype._innerSub=function(t){var e=new SimpleInnerSubscriber(this),i=this.destination;i.add(e);var n=innerSubscribe(t,e);n!==e&&i.add(n)},e.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()},e.prototype.notifyNext=function(t){this.destination.next(t)},e.prototype.notifyComplete=function(){var t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},e}(SimpleOuterSubscriber);function mergeAll(t){return void 0===t&&(t=Number.POSITIVE_INFINITY),mergeMap(identity,t)}function merge(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var i=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return isScheduler(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(i=t.pop())):"number"==typeof r&&(i=t.pop()),null===n&&1===t.length&&t[0]instanceof Observable?t[0]:mergeAll(i)(fromArray(t,n))}function filter(t,e){return function(i){return i.lift(new FilterOperator(t,e))}}var FilterOperator=function(){function t(t,e){this.predicate=t,this.thisArg=e}return t.prototype.call=function(t,e){return e.subscribe(new FilterSubscriber(t,this.predicate,this.thisArg))},t}(),FilterSubscriber=function(t){function e(e,i,n){var r=t.call(this,e)||this;return r.predicate=i,r.thisArg=n,r.count=0,r}return __extends(e,t),e.prototype._next=function(t){var e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(t){return void this.destination.error(t)}e&&this.destination.next(t)},e}(Subscriber);class Vector3Const{}Vector3Const.zero=Object.freeze(new three.Vector3(0,0,0)),Vector3Const.one=Object.freeze(new three.Vector3(1,1,1)),Vector3Const.up=Object.freeze(new three.Vector3(0,0,1)),Vector3Const.down=Object.freeze(new three.Vector3(0,0,-1)),Vector3Const.forward=Object.freeze(new three.Vector3(0,1,0)),Vector3Const.back=Object.freeze(new three.Vector3(0,-1,0)),Vector3Const.right=Object.freeze(new three.Vector3(1,0,0)),Vector3Const.left=Object.freeze(new three.Vector3(-1,0,0));class Model extends three.Object3D{constructor(t){super(),super.name=t,this.boundingBox=new BehaviorSubject(new three.Box3),this.up.copy(Vector3Const.up)}get modelId(){return this.name}getBoundingBox(t){return Promise.resolve(this.boundingBox.value)}subscribeToBoundingBox(t){this.boundingBox.subscribe(t)}transform(t){const e=(new three.Matrix4).fromArray(t.elements),i=this.matrixWorld.clone();e.decompose(this.position,this.quaternion,this.scale);const n=e.multiply(i.invert());this.boundingBox.value.applyMatrix4(n),this.updateMatrixWorld(!0),this.boundingBox.next(this.boundingBox.value)}isLoading(){return!1}dispose(){}}class Markup extends three.Object3D{constructor(t,e){super(),this._api=e,this.coloredMaterials=[],this.name=t,this._api.eventDispatcher.dispatch(new CustomEvent("markupadded",{detail:this}))}get color(){return this._color}set color(t){this._color=t,this.applyColor(t)}applyColor(t){for(const e of this.coloredMaterials)e.color.copy(t);this._api.renderingManager.redraw()}updateBoundingBox(){this.boundingBox||(this.boundingBox=new three.Box3),this.boundingBox.setFromObject(this);const t=this.parent;t&&t instanceof MarkupModel&&t.updateBoundingBox()}dispatchModifiedEvent(){this._api.eventDispatcher.dispatch(new CustomEvent("markupmodified",{detail:this}))}select(){this.selected=!0,this.applyColor(this._api.settingsDispatcher.settings.selectionColor)}deselect(){this.selected=!1,this.applyColor(this._color)}dispose(){this.traverse((t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})),this._api.eventDispatcher.dispatch(new CustomEvent("markupremoved",{detail:this}))}}class FrustumHelper{static transformFrustum(t,e,i=new three.Frustum){for(let n=0;n<i.planes.length;n++)i.planes[n].copy(t.planes[n]).applyMatrix4(e);return i}static planesIntersectBox(t,e){return FrustumHelper.planesIntersectBoxInternal(t,e,!1)}static planesContainBox(t,e){return FrustumHelper.planesIntersectBoxInternal(t,e,!0)}static insideNonIntersectingPlanes(t,e){let i=!0;for(const n of e)i=i&&n.distanceToPoint(t)>0;return i}}FrustumHelper.planesIntersectBoxInternal=(()=>{const t=new three.Vector3;return(e,i,n)=>{for(let r=0,s=e.length;r<s;r++){const s=e[r].normal;if(t.set(s.x>=0!==n?i.max.x:i.min.x,s.y>=0!==n?i.max.y:i.min.y,s.z>=0!==n?i.max.z:i.min.z),e[r].distanceToPoint(t)<0)return!1}return!0}})();class MarkupModel extends Model{constructor(){super(MarkupModel.ModelId),this.isSelectable=!0,this.intersectTarget=[]}static get ModelId(){return"markup"}setSelection(t){this.clearSelection();for(const e of t)this.getObjectById(e).select()}clearSelection(){this.children.forEach((t=>t.deselect()))}areaPick(t,e){if(!FrustumHelper.planesIntersectBox(t.frustum.planes,this.boundingBox.value))return null;const i=[];return this.children.forEach((n=>{e?FrustumHelper.planesContainBox(t.frustum.planes,n.boundingBox)&&i.push(n):FrustumHelper.planesIntersectBox(t.frustum.planes,n.boundingBox)&&i.push(n)})),0===i.length?null:Promise.resolve({model:this,object:i[0],id:i[0].id,childrenIds:i.map((t=>t.id))})}async pick(t){if(!t.frustum.intersectsBox(this.boundingBox.value))return;const e=t.intersectObjects(this.children,!0,this.intersectTarget),i=e.find((t=>t.object.userData.isMovable))||e[0];if(this.intersectTarget.length=0,i){const e=this.findMarkup(i.object),n={caster:t,model:this,object:e,id:e.id,pickPriority:1};return Object.assign(n,i)}}findMarkup(t){for(;t;){if(t instanceof Markup)return t;t=t.parent}}async getBoundingBox(t){if(t){const e=new three.Box3,i=new three.Box3;for(const n of t)i.setFromObject(this.getObjectById(n)),e.union(i);return e}return super.getBoundingBox()}updateBoundingBox(){this.boundingBox.value.makeEmpty(),this.children.forEach((t=>{this.boundingBox.value.union(t.boundingBox)})),this.boundingBox.value.expandByScalar(1.1),this.boundingBox.next(this.boundingBox.value)}}class Caster extends three.Raycaster{constructor(){super()}}function getRayIntersection(t,e,i){const n=new three.Vector3,r=new Caster;n.set(t/window.innerWidth*2-1,-e/window.innerHeight*2+1,.5),n.unproject(i);const s=n.sub(i.position).normalize();return r.set(i.position,s),{id:null,object:null,model:null,caster:r}}function rayToWorldPosition(t,e,i){const n=t.direction,r=e.position.distanceTo(i);return e.position.clone().add(n.multiplyScalar(r))}const MILLIMETERS_IN_FOOT=304.8,MILLIMETERS_IN_INCH=25.4,lengthUnits={mm:{inMillimeters:1,symbol:"mm"},cm:{inMillimeters:10,symbol:"cm"},m:{inMillimeters:1e3,symbol:"m"},km:{inMillimeters:1e6,symbol:"km"},ft:{inMillimeters:MILLIMETERS_IN_FOOT,symbol:"ft"},in:{inMillimeters:MILLIMETERS_IN_INCH,symbol:"in"},yd:{inMillimeters:914.4,symbol:"yd"},mi:{inMillimeters:1609344,symbol:"mi"},custom:{inMillimeters:1e3,symbol:"m"}};function formatLength(t,e,i=2){const n=lengthUnits[e];return`${roundToDecimals(t/n.inMillimeters,i)} ${n.symbol}`}function roundToDecimals(t,e){const i=Math.pow(10,e);return Math.round(t*i)/i}const distanceFormatter=(t,e)=>i=>formatLength(1e3*i,t,e),positionFormatter=(t,e)=>`X ${e(t.x)} | Y ${e(t.y)} | Z ${e(t.z)}`,vec3=new three.Vector3;function createScreenStaticSizeMesh(t,e,i,n){const r=new three.Mesh(t,e);return makeScreenStaticSize(r,i,n),r}function makeScreenStaticSize(t,e,i){let n;t.renderOrder=1,t.traverse((t=>{t instanceof three.Mesh&&(n=t)})),n.onBeforeRender=()=>{let n=e.camera.getProjectionCompensatingScale(t.getWorldPosition(vec3).distanceTo(e.camera.position));i&&(n=i(n)),t.scale.set(n,n,n),t.updateMatrixWorld(!0)}}function createArrowGeometry(t){const e=new three.ConeGeometry(t/3,t,10);return e.applyMatrix4((new three.Matrix4).makeRotationFromEuler(new three.Euler(-Math.PI/2,0,0)).setPosition(0,0,t/2)),e}function take(t){return function(e){return 0===t?empty():e.lift(new TakeOperator(t))}}var TakeOperator=function(){function t(t){if(this.total=t,this.total<0)throw new ArgumentOutOfRangeError}return t.prototype.call=function(t,e){return e.subscribe(new TakeSubscriber(t,this.total))},t}(),TakeSubscriber=function(t){function e(e,i){var n=t.call(this,e)||this;return n.total=i,n.count=0,n}return __extends(e,t),e.prototype._next=function(t){var e=this.total,i=++this.count;i<=e&&(this.destination.next(t),i===e&&(this.destination.complete(),this.unsubscribe()))},e}(Subscriber);function switchMap(t,e){return"function"==typeof e?function(i){return i.pipe(switchMap((function(i,n){return from(t(i,n)).pipe(map((function(t,r){return e(i,t,n,r)})))})))}:function(e){return e.lift(new SwitchMapOperator(t))}}var SwitchMapOperator=function(){function t(t){this.project=t}return t.prototype.call=function(t,e){return e.subscribe(new SwitchMapSubscriber(t,this.project))},t}(),SwitchMapSubscriber=function(t){function e(e,i){var n=t.call(this,e)||this;return n.project=i,n.index=0,n}return __extends(e,t),e.prototype._next=function(t){var e,i=this.index++;try{e=this.project(t,i)}catch(t){return void this.destination.error(t)}this._innerSub(e)},e.prototype._innerSub=function(t){var e=this.innerSubscription;e&&e.unsubscribe();var i=new SimpleInnerSubscriber(this),n=this.destination;n.add(i),this.innerSubscription=innerSubscribe(t,i),this.innerSubscription!==i&&n.add(this.innerSubscription)},e.prototype._complete=function(){var e=this.innerSubscription;e&&!e.closed||t.prototype._complete.call(this),this.unsubscribe()},e.prototype._unsubscribe=function(){this.innerSubscription=void 0},e.prototype.notifyComplete=function(){this.innerSubscription=void 0,this.isStopped&&t.prototype._complete.call(this)},e.prototype.notifyNext=function(t){this.destination.next(t)},e}(SimpleOuterSubscriber);function takeUntil(t){return function(e){return e.lift(new TakeUntilOperator(t))}}var TakeUntilOperator=function(){function t(t){this.notifier=t}return t.prototype.call=function(t,e){var i=new TakeUntilSubscriber(t),n=innerSubscribe(this.notifier,new SimpleInnerSubscriber(i));return n&&!i.seenValue?(i.add(n),e.subscribe(i)):i},t}(),TakeUntilSubscriber=function(t){function e(e){var i=t.call(this,e)||this;return i.seenValue=!1,i}return __extends(e,t),e.prototype.notifyNext=function(){this.seenValue=!0,this.complete()},e.prototype.notifyComplete=function(){},e}(SimpleOuterSubscriber);function tap(t,e,i){return function(n){return n.lift(new DoOperator(t,e,i))}}var DoOperator=function(){function t(t,e,i){this.nextOrObserver=t,this.error=e,this.complete=i}return t.prototype.call=function(t,e){return e.subscribe(new TapSubscriber(t,this.nextOrObserver,this.error,this.complete))},t}(),TapSubscriber=function(t){function e(e,i,n,r){var s=t.call(this,e)||this;return s._tapNext=noop,s._tapError=noop,s._tapComplete=noop,s._tapError=n||noop,s._tapComplete=r||noop,isFunction(i)?(s._context=s,s._tapNext=i):i&&(s._context=i,s._tapNext=i.next||noop,s._tapError=i.error||noop,s._tapComplete=i.complete||noop),s}return __extends(e,t),e.prototype._next=function(t){try{this._tapNext.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.next(t)},e.prototype._error=function(t){try{this._tapError.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.error(t)},e.prototype._complete=function(){try{this._tapComplete.call(this._context)}catch(t){return void this.destination.error(t)}return this.destination.complete()},e}(Subscriber);const allowInput=t=>e=>allowPointerInput(e,t);function allowPointerInput(t,e){return!e||t.mouseButton===e.button&&!t.isTouch||t.touchCount===e.touchCount&&t.isTouch}const controlsReleased=(t,e)=>merge(t.pointerUp$.pipe(filter((t=>t.mouseButton===e.button||t.touchCount!==e.touchCount&&t.isTouch))),t.pointerMove$.pipe(filter((t=>!t.isTouch&&!t.anyMouseButtonDown||t.isTouch&&t.touchCount!==e.touchCount)))),hasIntersection=t=>!(!t||!t.intersection),addIntersection=(t,e)=>async i=>(i.intersection=await t.pick(new three.Vector2(i.x,i.y),e),i),rayCaster=new three.Raycaster;function screenPositionToRay(t,e,i,n=new three.Ray){return rayCaster.setFromCamera(screenPositionToRayTracePoint(t,e),i),n.copy(rayCaster.ray)}function screenPositionToRayTracePoint(t,e,i=new three.Vector2){const n=e.getBoundingClientRect();return i.x=(t.x-n.left)/e.clientWidth*2-1,i.y=-(t.y-n.top)/e.clientHeight*2+1,i}const worldToScreenPoint=(()=>{const t=new three.Vector3;return(e,i,n,r)=>{if(t.copy(e).applyMatrix4(i.matrixWorldInverse),!(t.z>0))return t.applyMatrix4(i.projectionMatrix),t.x=(t.x+1)*n/2,t.y=(1-t.y)*r/2,t}})();function isMovable(t){return t.intersection&&t.intersection.object&&t.intersection.object.userData.isMovable}const removeSelf=t=>(!t.intersection||t.intersection.object&&!t.intersection.object.userData.isMovable||(t.intersection=void 0),t),makeMovable=(t,e,i)=>{const n=e;n.userData.isMovable=!0;let r=!1,s=!1;const o=t=>{r&&(t.origin=n,i.dragging(t))},a=e=>{r&&(e.origin=n,i.dragEnd(e),r=!1,s&&t.eventDispatcher.dragEnd(void 0),s=!1)},c={button:0,touchCount:1};return t.inputHandler.pointerDown$.pipe(filter(allowInput(c)),mergeMap(addIntersection(t.inputHandler.picker)),filter((t=>isMovable(t)&&i.selected&&t.intersection.object===n)),tap((e=>{e.origin=n,i.dragStart(e),s||t.eventDispatcher.dragStart(void 0),s=!0,r=!0})),switchMap((()=>merge(t.inputHandler.pointerMove$.pipe(mergeMap(addIntersection(t.inputHandler.picker)),takeUntil(controlsReleased(t.inputHandler,c)),map(removeSelf),tap(o)),t.inputHandler.pointerUp$.pipe(tap(a)))))).subscribe(),n},makeMovableOnPlane=(t,e,i,n)=>{const r=e;r.userData.isMovable=!0;let s=!1,o=!1;const a=!!n;n=n||new three.Plane;const c=new three.Ray,h=new three.Vector3,l=e=>(screenPositionToRay(e,t.container,t.camera,c),c.intersectPlane(n,h),e.intersection={point:h},e),u=t=>{s&&(t.origin=r,i.dragging(t))},d=e=>{s&&(e.origin=r,i.dragEnd(e),s=!1,o&&t.eventDispatcher.dragEnd(void 0),o=!1)},p={button:0,touchCount:1};return t.inputHandler.pointerDown$.pipe(filter(allowInput(p)),mergeMap(addIntersection(t.inputHandler.picker)),filter((t=>isMovable(t)&&i.selected&&t.intersection.object===r)),tap((e=>{if(e.intersection.object===r){if(e.origin=r,!a){const t=e.intersection.caster.ray.direction.clone().negate();n.setFromNormalAndCoplanarPoint(t,e.intersection.point)}i.dragStart(e),o||t.eventDispatcher.dragStart(void 0),o=!0,s=!0}})),switchMap((()=>merge(t.inputHandler.pointerMove$.pipe(takeUntil(controlsReleased(t.inputHandler,p)),map(l),tap(u)),t.inputHandler.pointerUp$.pipe(map(l),tap(d)))))).subscribe(),r};three_module_js.UniformsLib.line={linewidth:{value:1},resolution:{value:new three_module_js.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1},opacity:{value:1}},three_module_js.ShaderLib.line={uniforms:three_module_js.UniformsUtils.merge([three_module_js.UniformsLib.common,three_module_js.UniformsLib.fog,three_module_js.UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};var LineMaterial$1=function(t){three_module_js.ShaderMaterial.call(this,{type:"LineMaterial",uniforms:three_module_js.UniformsUtils.clone(three_module_js.ShaderLib.line.uniforms),vertexShader:three_module_js.ShaderLib.line.vertexShader,fragmentShader:three_module_js.ShaderLib.line.fragmentShader,clipping:!0}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}}}),this.setValues(t)};LineMaterial$1.prototype=Object.create(three_module_js.ShaderMaterial.prototype),LineMaterial$1.prototype.constructor=LineMaterial$1,LineMaterial$1.prototype.isLineMaterial=!0;var LineSegmentsGeometry$1=function(){three_module_js$1.InstancedBufferGeometry.call(this),this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new three_module_js$1.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new three_module_js$1.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))},vector,box;LineSegmentsGeometry$1.prototype=Object.assign(Object.create(three_module_js$1.InstancedBufferGeometry.prototype),{constructor:LineSegmentsGeometry$1,isLineSegmentsGeometry:!0,applyMatrix4:function(t){var e=this.attributes.instanceStart,i=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),i.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var i=new three_module_js$1.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceStart",new three_module_js$1.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceEnd",new three_module_js$1.InterleavedBufferAttribute(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this},setColors:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var i=new three_module_js$1.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceColorStart",new three_module_js$1.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceColorEnd",new three_module_js$1.InterleavedBufferAttribute(i,3,3)),this},fromWireframeGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromEdgesGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromMesh:function(t){return this.fromWireframeGeometry(new three_module_js$1.WireframeGeometry(t.geometry)),this},fromLineSegments:function(t){var e=t.geometry;if(!e.isGeometry)return e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this;console.error("THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")},computeBoundingBox:(box=new three_module_js$1.Box3,function(){null===this.boundingBox&&(this.boundingBox=new three_module_js$1.Box3);var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;void 0!==t&&void 0!==e&&(this.boundingBox.setFromBufferAttribute(t),box.setFromBufferAttribute(e),this.boundingBox.union(box))}),computeBoundingSphere:(vector=new three_module_js$1.Vector3,function(){null===this.boundingSphere&&(this.boundingSphere=new three_module_js$1.Sphere),null===this.boundingBox&&this.computeBoundingBox();var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(void 0!==t&&void 0!==e){var i=this.boundingSphere.center;this.boundingBox.getCenter(i);for(var n=0,r=0,s=t.count;r<s;r++)vector.fromBufferAttribute(t,r),n=Math.max(n,i.distanceToSquared(vector)),vector.fromBufferAttribute(e,r),n=Math.max(n,i.distanceToSquared(vector));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}),toJSON:function(){},applyMatrix:function(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}});var LineGeometry$1=function(){LineSegmentsGeometry$1.call(this),this.type="LineGeometry"};LineGeometry$1.prototype=Object.assign(Object.create(LineSegmentsGeometry$1.prototype),{constructor:LineGeometry$1,isLineGeometry:!0,setPositions:function(t){for(var e=t.length-3,i=new Float32Array(2*e),n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return LineSegmentsGeometry$1.prototype.setPositions.call(this,i),this},setColors:function(t){for(var e=t.length-3,i=new Float32Array(2*e),n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return LineSegmentsGeometry$1.prototype.setColors.call(this,i),this},fromLine:function(t){var e=t.geometry;if(!e.isGeometry)return e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this;console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")},copy:function(){return this}}),three_module_js$1.UniformsLib.line={linewidth:{value:1},resolution:{value:new three_module_js$1.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1},opacity:{value:1}},three_module_js$1.ShaderLib.line={uniforms:three_module_js$1.UniformsUtils.merge([three_module_js$1.UniformsLib.common,three_module_js$1.UniformsLib.fog,three_module_js$1.UniformsLib.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};var LineMaterial=function(t){three_module_js$1.ShaderMaterial.call(this,{type:"LineMaterial",uniforms:three_module_js$1.UniformsUtils.clone(three_module_js$1.ShaderLib.line.uniforms),vertexShader:three_module_js$1.ShaderLib.line.vertexShader,fragmentShader:three_module_js$1.ShaderLib.line.fragmentShader,clipping:!0}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}}}),this.setValues(t)};LineMaterial.prototype=Object.create(three_module_js$1.ShaderMaterial.prototype),LineMaterial.prototype.constructor=LineMaterial,LineMaterial.prototype.isLineMaterial=!0;var LineSegments2=function(t,e){void 0===t&&(t=new LineSegmentsGeometry$1),void 0===e&&(e=new LineMaterial({color:16777215*Math.random()})),three_module_js$1.Mesh.call(this,t,e),this.type="LineSegments2"},start,end;LineSegments2.prototype=Object.assign(Object.create(three_module_js$1.Mesh.prototype),{constructor:LineSegments2,isLineSegments2:!0,computeLineDistances:(start=new three_module_js$1.Vector3,end=new three_module_js$1.Vector3,function(){for(var t=this.geometry,e=t.attributes.instanceStart,i=t.attributes.instanceEnd,n=new Float32Array(2*e.data.count),r=0,s=0,o=e.data.count;r<o;r++,s+=2)start.fromBufferAttribute(e,r),end.fromBufferAttribute(i,r),n[s]=0===s?0:n[s-1],n[s+1]=n[s]+start.distanceTo(end);var a=new three_module_js$1.InstancedInterleavedBuffer(n,2,1);return t.setAttribute("instanceDistanceStart",new three_module_js$1.InterleavedBufferAttribute(a,1,0)),t.setAttribute("instanceDistanceEnd",new three_module_js$1.InterleavedBufferAttribute(a,1,1)),this}),raycast:function(){var t=new three_module_js$1.Vector4,e=new three_module_js$1.Vector4,i=new three_module_js$1.Vector4,n=new three_module_js$1.Vector3,r=new three_module_js$1.Matrix4,s=new three_module_js$1.Line3,o=new three_module_js$1.Vector3;return function(a,c){null===a.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var h=void 0!==a.params.Line2&&a.params.Line2.threshold||0,l=a.ray,u=a.camera,d=u.projectionMatrix,p=this.geometry,m=this.material,f=m.resolution,b=m.linewidth+h,g=p.attributes.instanceStart,y=p.attributes.instanceEnd,_=-u.near;l.at(1,i),i.w=1,i.applyMatrix4(u.matrixWorldInverse),i.applyMatrix4(d),i.multiplyScalar(1/i.w),i.x*=f.x/2,i.y*=f.y/2,i.z=0,n.copy(i);var x=this.matrixWorld;r.multiplyMatrices(u.matrixWorldInverse,x);for(var v=0,w=g.count;v<w;v++){if(t.fromBufferAttribute(g,v),e.fromBufferAttribute(y,v),t.w=1,e.w=1,t.applyMatrix4(r),e.applyMatrix4(r),!(t.z>_&&e.z>_)){if(t.z>_){const i=t.z-e.z,n=(t.z-_)/i;t.lerp(e,n)}else if(e.z>_){const i=e.z-t.z,n=(e.z-_)/i;e.lerp(t,n)}t.applyMatrix4(d),e.applyMatrix4(d),t.multiplyScalar(1/t.w),e.multiplyScalar(1/e.w),t.x*=f.x/2,t.y*=f.y/2,e.x*=f.x/2,e.y*=f.y/2,s.start.copy(t),s.start.z=0,s.end.copy(e),s.end.z=0;var S=s.closestPointToPointParameter(n,!0);s.at(S,o);var M=three_module_js$1.MathUtils.lerp(t.z,e.z,S),E=M>=-1&&M<=1,P=n.distanceTo(o)<.5*b;if(E&&P){s.start.fromBufferAttribute(g,v),s.end.fromBufferAttribute(y,v),s.start.applyMatrix4(x),s.end.applyMatrix4(x);var T=new three_module_js$1.Vector3,L=new three_module_js$1.Vector3;l.distanceSqToSegment(s.start,s.end,L,T),c.push({point:L,pointOnLine:T,distance:l.origin.distanceTo(L),object:this,face:null,faceIndex:v,uv:null,uv2:null})}}}}}()});class MeshLine extends LineSegments2{constructor(t,e){super(t,e),this._inverseMatrix=new three.Matrix4,this._ray=new three.Ray,this._frustum=new three.Frustum,this._box=new three.Box3,this.vStart=new three.Vector3,this.vEnd=new three.Vector3,this.interPoint=new three.Vector3,this.segmentPoint=new three.Vector3,this.material=e,e.dashed?e.defines.USE_DASH="":delete e.defines.USE_DASH,this.onBeforeRender=t=>t.getSize(e.resolution)}update(t){let e;if(t instanceof Float32Array)e=t;else{const i=this.geometry.attributes.instanceEnd;e=i?i.data.array:void 0,e&&e.length===3*t.length||(e=new Float32Array(3*t.length));for(let i=0;i<t.length;i++)t[i].toArray(e,3*i)}const i=this.geometry.getAttribute("instanceStart");i&&i.array.length!==2*e.length-6&&(this.geometry=new LineGeometry$1),this.geometry.setPositions(e),this.material.dashed&&this.computeLineDistances()}onUpload(t){this.geometry.attributes.instanceStart.data.onUploadCallback=t;this.geometry.attributes.instanceEnd.data.onUploadCallback=t}raycast(t,e){const i=this.geometry,n=this.matrixWorld;if(this._box.copy(i.boundingBox),this._box.applyMatrix4(n),!t.frustum.intersectsBox(this._box))return;this._inverseMatrix.copy(n).invert(),this._ray.copy(t.ray).applyMatrix4(this._inverseMatrix),this._frustum.copy(t.frustum);for(const t of this._frustum.planes)t.applyMatrix4(this._inverseMatrix);const r=this&&this instanceof three.LineSegments?2:1,s=i.attributes.instanceEnd.data.array;for(let i=0,n=s.length/3-1;i<n;i+=r){if(this.vStart.fromArray(s,3*i),this.vEnd.fromArray(s,3*i+3),!this.intersect(this._ray,this._frustum,this.vStart,this.vEnd,this.interPoint))continue;this.interPoint.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(this.interPoint);n<t.near||n>t.far||e.push({distance:n,point:this.interPoint.clone(),index:i,object:this})}}intersect(t,e,i,n,r){return t.distanceSqToSegment(i,n,r,this.segmentPoint),e.containsPoint(this.segmentPoint)}}var LineSegmentsGeometry=function(){three_module_js.InstancedBufferGeometry.call(this),this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new three_module_js.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new three_module_js.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))};LineSegmentsGeometry.prototype=Object.assign(Object.create(three_module_js.InstancedBufferGeometry.prototype),{constructor:LineSegmentsGeometry,isLineSegmentsGeometry:!0,applyMatrix4:function(t){var e=this.attributes.instanceStart,i=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),i.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var i=new three_module_js.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceStart",new three_module_js.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceEnd",new three_module_js.InterleavedBufferAttribute(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this},setColors:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var i=new three_module_js.InstancedInterleavedBuffer(e,6,1);return this.setAttribute("instanceColorStart",new three_module_js.InterleavedBufferAttribute(i,3,0)),this.setAttribute("instanceColorEnd",new three_module_js.InterleavedBufferAttribute(i,3,3)),this},fromWireframeGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromEdgesGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromMesh:function(t){return this.fromWireframeGeometry(new three_module_js.WireframeGeometry(t.geometry)),this},fromLineSegments:function(t){var e=t.geometry;if(!e.isGeometry)return e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this;console.error("THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")},computeBoundingBox:function(){var t=new three_module_js.Box3;return function(){null===this.boundingBox&&(this.boundingBox=new three_module_js.Box3);var e=this.attributes.instanceStart,i=this.attributes.instanceEnd;void 0!==e&&void 0!==i&&(this.boundingBox.setFromBufferAttribute(e),t.setFromBufferAttribute(i),this.boundingBox.union(t))}}(),computeBoundingSphere:function(){var t=new three_module_js.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new three_module_js.Sphere),null===this.boundingBox&&this.computeBoundingBox();var e=this.attributes.instanceStart,i=this.attributes.instanceEnd;if(void 0!==e&&void 0!==i){var n=this.boundingSphere.center;this.boundingBox.getCenter(n);for(var r=0,s=0,o=e.count;s<o;s++)t.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(t)),t.fromBufferAttribute(i,s),r=Math.max(r,n.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}}(),toJSON:function(){},applyMatrix:function(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}});var LineGeometry=function(){LineSegmentsGeometry.call(this),this.type="LineGeometry"};LineGeometry.prototype=Object.assign(Object.create(LineSegmentsGeometry.prototype),{constructor:LineGeometry,isLineGeometry:!0,setPositions:function(t){for(var e=t.length-3,i=new Float32Array(2*e),n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return LineSegmentsGeometry.prototype.setPositions.call(this,i),this},setColors:function(t){for(var e=t.length-3,i=new Float32Array(2*e),n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return LineSegmentsGeometry.prototype.setColors.call(this,i),this},fromLine:function(t){var e=t.geometry;if(!e.isGeometry)return e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this;console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.")},copy:function(){return this}});class LineMarkup extends Markup{constructor(t,e,i,n=new three.SphereGeometry(.3),r=n){super(t,i),this._api=i,this._startGeometry=n,this._endGeometry=r,this._handleMaterial=new three.MeshBasicMaterial({depthTest:!1,depthWrite:!1,transparent:!0}),this._lineMaterial=new LineMaterial$1({linewidth:2,depthTest:!1,depthWrite:!1,transparent:!0}),this.boundingBox=new three.Box3,this.coloredMaterials.push(this._handleMaterial,this._lineMaterial),this.createLine(),this.color=e}makeMovable(){makeMovable(this._api,this.startHandle,this),makeMovable(this._api,this.endHandle,this)}init(t){this.position.copy(t),this.updateMatrixWorld(!1),this.startHandle=createScreenStaticSizeMesh(this._startGeometry,this._handleMaterial,this._api),this.endHandle=createScreenStaticSizeMesh(this._endGeometry,this._handleMaterial,this._api),this.makeMovable(),this.add(this.startHandle),this.add(this.endHandle),this.updateLine(this.startHandle.position,this.endHandle.position)}start(t){this.startPick=t,this.init(t.point)}update(t){this.endPick=t;const e=this.worldToLocal(t.point.clone());this.endHandle.position.copy(e),this.updateLine(this.startHandle.position,this.endHandle.position),this.endHandle.visible=!1,this._api.renderingManager.redraw()}end(){this.showHandles(this.selected),this.updateBoundingBox(),this.dispatchModifiedEvent()}createLine(){this._line=new MeshLine(new LineGeometry,this._lineMaterial),this._line.renderOrder=1,this.add(this._line)}updateLine(t,e){this._line.update([t,e])}dragStart(t){this._api.cursor&&this._api.cursor.subscribe(),t.origin===this.startHandle?this.startHandle.visible=!1:this.endHandle.visible=!1}dragging(t){if(this.selected&&this._api.cursor.intersection){const e=this.worldToLocal(this._api.cursor.intersection.point.clone());t.origin===this.startHandle?(this.startPick=this._api.cursor.intersection,this.startHandle.position.copy(e)):(this.endPick=this._api.cursor.intersection,this.endHandle.position.copy(e)),this.updateLine(this.startHandle.position,this.endHandle.position),this.updateBoundingBox(),this._api.renderingManager.redraw()}}dragEnd(t){this.updateBoundingBox(),t.origin===this.startHandle?this.startHandle.visible=!0:this.endHandle.visible=!0,this._api.cursor.unsubscribe(),this.dispatchModifiedEvent()}select(){super.select(),this.activeCallback()}deselect(){super.deselect(),this.activeCallback()}showHandles(t){this.startHandle.visible=t,this.endHandle&&(this.endHandle.visible=t)}activeCallback(){this.showHandles(this.selected)}cancel(){this.parent&&this.parent.remove(this),this.dispose()}}class MarkupTool{constructor(t){this.inputHandler=t,this._snapTypes=this.allowedSnapTypes}get allowedSnapTypes(){return[2,1,0]}get snapTypes(){return this._snapTypes}set snapTypes(t){this._snapTypes=t,this.enabled&&(this.cursor.snapTypes=t)}onEnabled(){this.cursor.snapTypes=this.snapTypes,this.keySubscription=this.inputHandler.keyDown$.subscribe((t=>{"Escape"===t.code&&(t.preventDefault(),this.cancel())}))}onEnd(){this.keySubscription&&this.keySubscription.unsubscribe(),this.enabled&&this.onFinished&&(this.cursor.snapTypes=[2,1,0],this.onFinished())}cancel(){this.keySubscription&&this.keySubscription.unsubscribe(),this.enabled&&this.onCanceled&&(this.cursor.snapTypes=[2,1,0],this.onCanceled())}}class TapMoveTool extends MarkupTool{constructor(){super(...arguments),this.finished=!0}get name(){return this._name}onStart(t){this.finished=!1,this.object=this._createMarkup(),this.object.start(t)}onMove(t){this.object&&t&&this.object.update(t)}onEnd(){this.finished=!0,this.object&&(this.object.end(),this.object=void 0),super.onEnd()}cancel(){super.cancel(),this.finished=!0,this.object&&this.object.cancel(),this.object=void 0}}class TapMoveTapTool extends TapMoveTool{constructor(t,e,i){super(e.inputHandler),this.api=e,this.markupSettings=i,this._name=t,this.cursor=e.cursor;this.observable=e.inputHandler.createTapObservable({button:0,touchCount:1})}set enabled(t){this.subscription&&(this.subscription.unsubscribe(),this.subscription=null,this.cursor.unsubscribe(),!this.finished&&this.object&&(this.object.cancel(),this.object=null)),t&&(this.subscription=this.observable.subscribe((async t=>{this.object?(t.isTouch&&await this.cursor.calculateIntersection(t,!0),this.cursor.intersection&&(this.onMove(this.cursor.intersection),this.onEnd())):(t.isTouch&&await this.cursor.calculateIntersection(t,!0),this.cursor.intersection&&this.onStart(this.cursor.intersection))})),this.cursor.subscribe((()=>this.onMove(this.cursor.intersection))),this.onEnabled())}get enabled(){return!!this.subscription}add(t,e,i){const n=this._createMarkup();return void 0!==i&&(n.color=i),n.start(t),n.update(e),n.end(),n}}class LineMarkupTool extends TapMoveTapTool{constructor(t,e,i){super(LineMarkupTool.Name,t,i),this.model=e}static get Name(){return"lineMarkup"}_createMarkup(){const t=new LineMarkup(this.name,this.markupSettings.color,this.api);return this.model.add(t),t}}class TapMoveTapOnPlaneTool extends TapMoveTool{constructor(t,e,i,n){super(e.inputHandler),this.api=e,this.model=i,this.markupSettings=n,this.plane=new three.Plane,this.options={button:0,touchCount:1},this.intersectPlane=(()=>{const t=new three.Ray,e=new three.Vector3;return i=>(screenPositionToRay(i,this.api.inputHandler.container,this.api.camera,t),t.intersectPlane(this.plane,e),{id:null,object:null,model:null,point:e.clone()})})(),this._name=t,this.cursor=e.cursor,this.tap$=e.inputHandler.createSnappedTapObservable(e.cursor,this.options),this.tap2$=e.inputHandler.createTapObservable(this.options)}set enabled(t){this.handle&&(this.handle.unsubscribe(),this.handle=null,this.cursor.unsubscribe(),!this.finished&&this.object&&(this.object.cancel(),this.object=null)),t&&(this.handle=this.tap$.pipe(take(1),tap((()=>{this.plane.setFromNormalAndCoplanarPoint(this.cursor.intersection.caster.ray.direction.clone().negate(),this.cursor.intersection.point),this.onStart(this.cursor.intersection)})),switchMap((t=>(this.cursor.unsubscribe(),t.isTouch?this.tap2$.pipe(map(this.intersectPlane),tap((t=>{this.onMove(t),this.onEnd()}))):this.api.inputHandler.pointerMove$.pipe(map(this.intersectPlane),tap((t=>this.onMove(t))),takeUntil(this.tap2$.pipe(map(this.intersectPlane),tap((()=>this.onEnd()))))))))).subscribe(),this.cursor.subscribe(),this.onEnabled())}get enabled(){return!!this.handle}add(t,e,i){const n=this._createMarkup();return void 0!==i&&(n.color=i),n.start(t),n.update(e),n.end(),n}}class ArrowMarkup extends LineMarkup{constructor(t,e,i){super(t,e,i,createArrowGeometry(1.2),new three.SphereGeometry(.3)),this._tmp=new three.Vector3}makeMovable(){makeMovable(this._api,this.startHandle,this),makeMovableOnPlane(this._api,this.endHandle,this)}updateLine(t,e){super.updateLine(t,e),this.startHandle.lookAt(this.endHandle.getWorldPosition(this._tmp))}showHandles(t){super.showHandles(t),this.startHandle.visible=!0,this.endHandle.visible=t}dragStart(t){t.origin===this.startHandle?(this.startHandle.visible=!1,this._api.cursor&&this._api.cursor.subscribe()):this.endHandle.visible=!1}dragging(t){if(this.selected&&t.origin){if(t.origin===this.startHandle){if(!this._api.cursor.intersection)return;{const t=this.worldToLocal(this._api.cursor.intersection.point.clone());this.startPick=this._api.cursor.intersection,this.startHandle.position.copy(t)}}else{if(!t.intersection)return;{const e=this.worldToLocal(t.intersection.point);this.endPick=t.intersection,this.endHandle.position.copy(e)}}this.updateLine(this.startHandle.position,this.endHandle.position),this.updateBoundingBox(),this._api.renderingManager.redraw()}}dragEnd(t){this.updateBoundingBox(),t.origin===this.startHandle?this.startHandle.visible=!0:this.endHandle.visible=!0,this._api.cursor.unsubscribe(),this.dispatchModifiedEvent()}}class ArrowMarkupTool extends TapMoveTapOnPlaneTool{static get Name(){return"arrowMarkup"}constructor(t,e,i){super(ArrowMarkupTool.Name,t,e,i)}_createMarkup(){const t=new ArrowMarkup(this.name,this.markupSettings.color,this.api);return this.model.add(t),t}}class TapTool extends MarkupTool{constructor(t,e,i){super(e),this.inputs=e,this.plane=new three.Plane,this.options={button:0,touchCount:1},this._name=t,this.cursor=i,this.tap$=e.createSnappedTapObservable(i,this.options)}get name(){return this._name}async tap(t){this._createMarkup().insert(t.intersection),this.onEnd()}set enabled(t){this.handle&&(this.handle.unsubscribe(),this.handle=null,this.cursor.unsubscribe()),t&&(this.handle=this.tap$.pipe(tap((t=>this.tap(t)))).subscribe(),this.cursor.subscribe(),this.onEnabled())}get enabled(){return!!this.handle}}class CloudShape extends MeshLine{updateShape(t,e){this.update(cloudPoints(t,e))}}const cloudPoints=(t,e)=>{const i=getPoints();return((t,e,i)=>{let n=0,r=0;for(let s=0;s<t.length;s++){const o=t[s];n=Math.max(o.x,n),r=Math.max(o.y,r);const a=(o.x-354.40918)/(240/e),c=(o.y-298.338865)/(190/i);o.set(a,c,0)}})(i,t,e),i},getPoints=()=>[new three.Vector3(360.11914,112.91992),new three.Vector3(324.158923467,118.111793265),new three.Vector3(292.252606325,132.707124564),new three.Vector3(266.46070852,155.375163582),new three.Vector3(248.84375,184.78516),new three.Vector3(225.573005953,187.564686143),new three.Vector3(203.992424299,194.006147247),new three.Vector3(184.536777636,203.718833168),new three.Vector3(167.640838557,216.312033763),new three.Vector3(153.739379659,231.395038887),new three.Vector3(143.267173536,248.577138397),new three.Vector3(136.658992785,267.467622149),new three.Vector3(134.34961,287.67578),new three.Vector3(137.262200495,310.264888292),new three.Vector3(145.703333349,331.510628581),new three.Vector3(159.268874528,350.670977081),new three.Vector3(177.55469,367.00391),new three.Vector3(166.560848824,386.416049052),new three.Vector3(162.75977,407.378910004),new three.Vector3(164.830013084,423.131271689),new three.Vector3(170.767586993,437.803077714),new three.Vector3(180.162727123,451.08002049),new three.Vector3(192.605668873,462.647792427),new three.Vector3(207.686647638,472.192085937),new three.Vector3(224.995898816,479.398593429),new three.Vector3(244.123657805,483.953007313),new three.Vector3(264.66016,485.54102),new three.Vector3(302.10156875,480.039840271),new three.Vector3(334.28711,464.36914),new three.Vector3(368.304774234,480.911489076),new three.Vector3(406.58594,486.67773),new three.Vector3(429.454321646,484.679781835),new three.Vector3(451.235395655,478.834773416),new three.Vector3(471.317092719,469.366596533),new three.Vector3(489.08734353,456.499142976),new three.Vector3(503.657759454,440.805874426),new three.Vector3(514.37898362,423.071344558),new three.Vector3(520.997494357,403.836083155),new three.Vector3(523.25977,383.64062),new three.Vector3(522.3125,371.59961),new three.Vector3(545.653344192,356.642784942),new three.Vector3(563.452733046,336.239434903),new three.Vector3(574.808470377,311.777889913),new three.Vector3(578.81836,284.64648),new three.Vector3(576.928049429,265.837169463),new three.Vector3(571.398187577,247.922181565),new three.Vector3(562.440589575,231.404935693),new three.Vector3(550.267070557,216.788851232),new three.Vector3(535.420156425,204.80461725),new three.Vector3(518.642075641,195.986323635),new three.Vector3(500.444197176,190.54249101),new three.Vector3(481.33789,188.68164),new three.Vector3(473.00781,189.09375),new three.Vector3(465.757398952,172.807193423),new three.Vector3(455.985311066,158.074572097),new three.Vector3(429.999074056,134.028880594),new three.Vector3(397.295037518,118.472166294),new three.Vector3(360.11914,112.91992)];class CloudMarkup extends Markup{constructor(t,e,i,n=new three.SphereGeometry(.5)){super(t,i),this._centerGeometry=n,this._edgeHandlesMap=new Map,this._handleMaterial=new three.MeshBasicMaterial({depthTest:!1,depthWrite:!1,transparent:!0}),this._camera=i.camera,this._cloudMaterial=new LineMaterial$1({linewidth:2,depthTest:!1,depthWrite:!1,transparent:!0}),this.coloredMaterials.push(this._handleMaterial,this._cloudMaterial),this.color=e}init(t,e,i,n){this.position.copy(t),this.normal=e,this.width=i,this.height=n,this.createEdgeHandles(this.width,this.height),this._cloudShape=new CloudShape(new LineGeometry,this._cloudMaterial),this._cloudShape.renderOrder=1,this.add(this._cloudShape),this.updateCloud(),this.showHandles(!1),this.lookAt(this.position.clone().add(this.normal)),this.updateBoundingBox(),this._api.renderingManager.redraw()}insert(t){const e=t.point,i=this._api,n=i.camera.getProjectionCompensatingScale(e.distanceTo(i.camera.position)),r=4*n,s=3*n;this.init(e,t.normal,r,s)}createEdgeHandles(t,e){const i=new three.SphereGeometry(.3);for(let n=-1;n<=1;n++)for(let r=-1;r<=1;r++){const s=new three.Vector3(n*t,r*e),o=createScreenStaticSizeMesh(i,this._handleMaterial,this._api);o.position.copy(s),this._edgeHandlesMap.set(o,{i:n,j:r}),this.add(o),makeMovableOnPlane(this._api,o,this),0===n&&0===r&&(o.geometry=this._centerGeometry)}}updateHandlePositions(){for(const t of this._edgeHandlesMap.entries()){const e=t[0],i=t[1];e.position.copy(new three.Vector3(i.i*this.width,i.j*this.height))}}updateCloud(){this._cloudShape.updateShape(this.width,this.height),this.updateHandlePositions(),this.updateBoundingBox()}dragStart(t){}dragging(t){t.origin.visible&&t.origin.geometry===this._centerGeometry&&(t.origin.visible=!1,this._api.cursor.subscribe());const e=this._edgeHandlesMap.get(t.origin),i=this.worldToLocal(t.intersection.point.clone()),n=new three.Vector3(Math.abs(e.i*i.x),Math.abs(e.j*i.y));0!==n.x&&(this.width=n.x),0!==n.y&&(this.height=n.y),0===n.x&&0===n.y?this._api.cursor.intersection&&(this.position.copy(this._api.cursor.intersection.point),this.normal.copy(this._api.cursor.intersection.normal),this.lookAt(this.position.clone().add(this.normal))):this.updateCloud(),this._api.renderingManager.redraw()}dragEnd(t){this._api.cursor.unsubscribe(),this.updateBoundingBox(),t.origin.visible=!0,this.dispatchModifiedEvent()}select(){super.select(),this.activeCallback()}deselect(){super.deselect(),this.selected=!1,this.activeCallback()}showHandles(t){for(const e of this._edgeHandlesMap.keys())e.visible=t}activeCallback(){this.showHandles(this.selected),this.selected&&this._api.renderingManager.redraw()}}class CloudMarkupTool extends TapTool{constructor(t,e,i){super(CloudMarkupTool.Name,t.inputHandler,t.cursor),this.api=t,this.model=e,this.markupSettings=i,this.snapTypes=[0]}static get Name(){return"cloudMarkup"}get allowedSnapTypes(){return[0]}_createMarkup(){const t=new CloudMarkup(this.name,this.markupSettings.color,this.api);return this.model.add(t),t}add(t,e,i,n){const r=this._createMarkup();return void 0!==n&&(r.color=n),r.init(t.point,t.normal,e,i),r}}class StickyElement extends HTMLElement{constructor(t,e,i){super(),this.camera=t,this.position=e,this.adjustAlign=i,this.visible=!0,this._currentAlign=new three.Vector3,this.style.position="absolute",this.style.zIndex="1",this.style.left=this._currentAlign.x+"px",this.style.top=this._currentAlign.y+"px",this.style.willChange="transform",this._originalPosition=e.clone()}static get is(){return"sticky-element"}get height(){return this.clientHeight}get width(){return this.clientWidth}applyMatrix4(){this.matrix&&(this.position.copy(this._originalPosition),this.position.applyMatrix4(this.matrix))}updatePosition(t){this.applyMatrix4();const e=worldToScreenPoint(this.position,this.camera,t.width,t.height);this.visible&&e?(this._currentAlign.copy(e),this.adjustAlign&&this.adjustAlign(this._currentAlign),this._currentAlign.x>=StickyElement.delta&&this._currentAlign.x<=t.right-StickyElement.delta&&this._currentAlign.y>=StickyElement.delta&&this._currentAlign.y<=t.bottom-StickyElement.delta?("block"!==this.style.display&&(this.style.display="block"),this.style.transform=`translate3d(${this._currentAlign.x}px,${this._currentAlign.y}px,${this._currentAlign.z}px)`):"none"!==this.style.display&&(this.style.display="none")):this.style.display="none"}}StickyElement.delta=-.01;const stopImmediatePropagation$1=t=>{t.stopImmediatePropagation()};class PositionElement extends StickyElement{constructor(t,e,i){super(t,e,(t=>{t.y=t.y-this.height/2,t.x=t.x+this.height})),this.spellcheck=!1,this.style.userSelect="none",this.style.webkitUserSelect="none",this.style.pointerEvents="none",this.style.background="white",this.style.borderRadius="2px",this.style.padding="0px 3px",this.style.fontFamily='"Open Sans", sans-serif',this.style.overflow="hidden",this.style.fontSize="1em",this.style.boxShadow="0rem 0rem 0.06rem rgba(54,53,69,0.2), 0.12rem 0.12rem 0.5rem rgba(54,53,69,0.30)",this.hidden=!0,"custom"===i.lengthUnit?this._formatter=i.customLengthFormatter:this._formatter=distanceFormatter(i.lengthUnit,i.decimals)}static get is(){return"position-element"}set borderColor(t){this.style.borderColor=`#${t.getHexString()}`}get text(){return this._text}set text(t){this._text=t,this.innerText=t}update(t){this._position=t,this.text=positionFormatter(t,this._formatter),this.position.copy(t),this.hidden=!1}updateText(t){"custom"===t.lengthUnit?this._formatter=t.customLengthFormatter:this._formatter=distanceFormatter(t.lengthUnit,t.decimals),this.text=positionFormatter(this._position,this._formatter)}updatePosition(t){super.updatePosition(t),this.hidden&&(this.style.display="none")}connectedCallback(){this.addEventListener("mousemove",stopImmediatePropagation$1),this.addEventListener("mousedown",stopImmediatePropagation$1)}disconnectedCallback(){this.removeEventListener("mousemove",stopImmediatePropagation$1),this.removeEventListener("mousedown",stopImmediatePropagation$1)}}eval("if (window.customElements && typeof PositionElement !== 'undefined') window.customElements.define(PositionElement.is, PositionElement)");class PointMarkup extends Markup{constructor(t,e,i,n=new three.SphereGeometry(.5)){super(t,i),this._centerGeometry=n,this._handleMaterial=new three.MeshBasicMaterial({depthTest:!1,depthWrite:!1,transparent:!0}),this._camera=i.camera,this.coloredMaterials.push(this._handleMaterial),this.color=e,this.updateAllPositionText(),this._api.settingsDispatcher.subscribe("lengthUnit",(()=>this.updateAllPositionText())),this._api.settingsDispatcher.subscribe("decimals",(()=>this.updateAllPositionText())),this._api.settingsDispatcher.subscribe("customLengthFormatter",(()=>this.updateAllPositionText()))}init(t){this.position.copy(t),this.handle=createScreenStaticSizeMesh(this._centerGeometry,this._handleMaterial,this._api),this.add(this.handle),this.updatePositionText(t),this.updateBoundingBox(),this._api.renderingManager.redraw()}insert(t){const e=t.point;this.init(e)}select(){super.select(),this.activeCallback()}deselect(){super.deselect(),this.activeCallback()}dispose(){super.dispose(),this._textElement&&this._api.htmlElementPositioner.removeElement(this._textElement)}activeCallback(){this.selected&&this._api.renderingManager.redraw()}updatePositionOptions(){this._positionElementOptions={color:this.color,lengthUnit:this._api.settingsDispatcher.settings.lengthUnit,customLengthFormatter:this._api.settingsDispatcher.settings.customLengthFormatter,decimals:this._api.settingsDispatcher.settings.decimals}}updatePositionText(t){this.updatePositionOptions(),this._textElement||(this._textElement=new PositionElement(this._api.camera,new three.Vector3,this._positionElementOptions),this._api.htmlElementPositioner.addElement(this._textElement)),this._textElement.update(t)}updateAllPositionText(){this.updatePositionOptions(),this._textElement&&this._textElement.updateText(this._positionElementOptions)}}class PointMarkupTool extends TapTool{constructor(t,e,i,n){super(PointMarkupTool.Name,t.inputHandler,n),this.api=t,this.markupSettings=e,this.model=i,this.cursor=n}static get Name(){return"pointMarkup"}_createMarkup(){const t=new PointMarkup(this.name,this.markupSettings.color,this.api);return this.model.add(t),t}add(t,e){const i=this._createMarkup();return void 0!==e&&(i.color=e),i.init(t.point),i}}class TapDragOnPlaneTool extends TapMoveTool{constructor(t,e,i){super(e.inputHandler),this.api=e,this.model=i,this.options={filter:()=>!0,button:0,touchCount:1},this._name=t,this.cursor=e.cursor}set enabled(t){if(this.pointerSubscription&&(this.pointerSubscription.unsubscribe(),this.pointerSubscription=null,!this.finished&&this.object&&(this.object.cancel(),this.object=null)),!t)return;const e=[];for(const t of this.api.models.getIterable())t!==this.model&&e.push(t);this.pointerSubscription=this.api.inputHandler.pointerDown$.pipe(filter(allowInput(this.options)),mergeMap(addIntersection(this.api.inputHandler.picker)),tap((t=>{this.onStart(t.intersection),this.object.dragStart(t.intersection),this.api.eventDispatcher.dragStart(this)})),switchMap((()=>this.api.inputHandler.pointerMove$.pipe(takeUntil(controlsReleased(this.api.inputHandler,this.options))))),mergeMap(addIntersection(this.api.inputHandler.picker,e)),filter(hasIntersection),tap((t=>this.object.dragging(t.intersection))),takeUntil(this.api.inputHandler.pointerUp$.pipe(tap((()=>{this.object&&this.object.dragEnd(void 0),this.onEnd(),this.api.eventDispatcher.dragEnd(this)}))))).subscribe(),this.onEnabled()}get enabled(){return!!this.pointerSubscription}}class PickablePlane extends three.Object3D{constructor(t,e,i){super(),this.plane=(new three.Plane).setFromNormalAndCoplanarPoint(e,i),this.normal=this.plane.normal,this._constant=this.plane.constant,this.visible=!0;const n=new three.Vector3,r=new three.Vector3,s=new three.Vector3;this.geometry={boundingBox:new three.Box3,computeBoundingBox(){n.set(-1,-1,1).unproject(t),r.set(1,1,1).unproject(t),s.copy(t.position),this.boundingBox.makeEmpty(),this.boundingBox.setFromPoints([n,r,s])},dispose(){}}}get constant(){return this._constant}set constant(t){this.plane.constant=t,this._constant=t}raycast(t,e){t.ray.intersectsPlane&&e.push({object:this,point:t.ray.intersectPlane(this.plane,new three.Vector3)})}}class FreelineMarkup extends Markup{constructor(t,e,i){super(t,i),this._camera=i.camera,this.boundingBox=new three.Box3,this._meshLineMaterial=new LineMaterial$1({linewidth:3,depthTest:!1,depthWrite:!1,transparent:!0}),this.coloredMaterials.push(this._meshLineMaterial),this.color=e}from(t){this.points=t,this.createMeshLine(),this.updateMeshLine(),this.updateBoundingBox()}createMeshLine(){this._currentMeshLine=new MeshLine(new LineGeometry,this._meshLineMaterial),this._currentMeshLine.renderOrder=1,this.add(this._currentMeshLine)}updateMeshLine(){this.points.length>1&&this._currentMeshLine.update(this.points)}start(){const t=this._camera,e=t.getWorldDirection(new three.Vector3),i=(new three.Vector3).addVectors(t.position,e.multiplyScalar(100));this.position.copy(i),this._pickablePlane=new PickablePlane(t,e.negate(),i),this.add(this._pickablePlane),this.updateBoundingBox()}adjustPickablePlane(t){t&&t.caster.ray&&t.point&&(this.position.copy(t.point),this.remove(this._pickablePlane),this._pickablePlane=new PickablePlane(this._camera,t.caster.ray.direction.clone().negate(),t.point),this.add(this._pickablePlane),this.updateBoundingBox())}dragStart(t){this.adjustPickablePlane(t),this.points=[],this.createMeshLine()}dragging(t){const e=this.worldToLocal(t.point.clone());this.points.push(e),this.updateMeshLine(),this._api.renderingManager.redraw()}dragEnd(){this.points.length<2?this.cancel():(this.updateBoundingBox(),this.dispatchModifiedEvent())}end(){this.remove(this._pickablePlane)}cancel(){this.parent.remove(this),this.dispose()}}class FreelineMarkupTool extends TapDragOnPlaneTool{constructor(t,e,i){super(FreelineMarkupTool.Name,t,i),this.markupSettings=e}static get Name(){return"freelineMarkup"}get allowedSnapTypes(){return[]}_createMarkup(){const t=new FreelineMarkup(this.name,this.markupSettings.color,this.api);return this.model.add(t),t}add(t,e){const i=this._createMarkup();return void 0!==e&&(i.color=e),i.from(t),i}}const stopImmediatePropagation=t=>{t.stopImmediatePropagation()};class MeasurementElement extends StickyElement{constructor(t,e,i){super(t,e,(t=>{t.y=t.y-this.height/2})),this.isMeasurementElement=!0,this._prefix="",this.spellcheck=!1,this.style.userSelect="none",this.style.webkitUserSelect="none",this.style.pointerEvents="none",this.style.borderRadius="2px",this.style.padding="0px 3px",this.style.fontFamily='"Open Sans", sans-serif',this.style.overflow="hidden",this.style.fontSize="1em",this.style.boxShadow="0rem 0rem 0.06rem rgba(54,53,69,0.2), 0.12rem 0.12rem 0.5rem rgba(54,53,69,0.30)",this.style.top=i.textStyleTop,this.hidden=!0,void 0!==i.prefix?this._prefix=i.prefix:this._prefix="","custom"===i.lengthUnit?this._formatter=i.customLengthFormatter:this._formatter=distanceFormatter(i.lengthUnit,i.decimals)}static get is(){return"measurement-element"}set borderColor(t){this.style.borderColor=`#${t.getHexString()}`}get text(){return this._text}set text(t){this._text=t,this.innerText=t}update(t,e){const i=t.distanceTo(e);this._distance=i;const n=e.clone().sub(t).normalize().multiplyScalar(i/2),r=t.clone().add(n);this.text=this._prefix+this._formatter(i),this.position.copy(r),this.hidden=!1}updateText(t){"custom"===t.lengthUnit?this._formatter=t.customLengthFormatter:this._formatter=distanceFormatter(t.lengthUnit,t.decimals),this.text=this._prefix+this._formatter(this._distance)}updatePosition(t){super.updatePosition(t),this.hidden&&(this.style.display="none")}connectedCallback(){this.addEventListener("mousemove",stopImmediatePropagation),this.addEventListener("mousedown",stopImmediatePropagation)}disconnectedCallback(){this.removeEventListener("mousemove",stopImmediatePropagation),this.removeEventListener("mousedown",stopImmediatePropagation)}}eval("if (window.customElements && typeof MeasurementElement !== 'undefined') window.customElements.define(MeasurementElement.is, MeasurementElement)");class MeasurementLines extends three.Object3D{constructor(t,e,i,n,r,s){super(),this.api=t,this.markupSettings=e,this._textElement=i,this._measurementElementOptions=n,this.startHandle=r,this.endHandle=s,this.minimumLineLength=1e-5,this.startHandlePositionGeometry=new three.SphereGeometry(.15),this.endHandlePositionGeometry=this.startHandlePositionGeometry,this.startHandlePositionMarkerMaterial=new three.MeshBasicMaterial({color:0,depthTest:!1,depthWrite:!1,transparent:!0}),this.endHandlePositionMarkerMaterial=new three.MeshBasicMaterial({color:0,depthTest:!1,depthWrite:!1,transparent:!0}),this.baseMaterialParameters={color:0,opacity:.5,linewidth:1.5,depthTest:!1,depthWrite:!1,transparent:!0},this.dashedLineMaterialParameters={dashed:!0,dashSize:.5,gapSize:.2},this.globalXStyle={color:"#fe2929",backgroundColor:"#ffffff",border:"1px solid #fe2929",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.globalYStyle={color:"#28ce13",backgroundColor:"#ffffff",border:"1px solid #28ce13",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.globalZStyle={color:"#0000ff",backgroundColor:"#ffffff",border:"1px solid #0000ff",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.blackOnWhiteStyle={color:"#000000",backgroundColor:"#ffffff",border:"1px solid #000000",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.active=!1,this.endsFlippedByDrag=!1,this.measurementNormal=new three.Vector3,this.measurementPlane=new three.Plane,this.startEdgeLine=new three.Line3,this.startEdgePerpendicularPoint=new three.Vector3,this.endEdgeLine=new three.Line3,this.endEdgePerpendicularPoint=new three.Vector3,this.planeHorizontalDirection=new three.Vector3,this.endPlaneHorizontalLine=new three.Line3,this.snapToLineOrPoint=!1,this.startHandlePosition=new three.Vector3,this.endHandlePosition=new three.Vector3,this.startPointEndPlaneProjectionPosition=new three.Vector3,this.endPlaneIntersectionPoint=new three.Vector3,this._vertical=!1,this.axisIndex=0,this.directionIndex=0,this.axisLines=new Array(3),this.axisLine3Lines=new Array(3),this.axisLineDirections=new Array(3),this.nonZeroLines=new Array(3),this.textElements=new Array(3),this.labels=new Array(3),this.showMarkers=!1,this.createTextElements(),this.createLines(),this.updateAllMeasurementText(),this.api.settingsDispatcher.subscribe("lengthUnit",(()=>this.updateAllMeasurementText())),this.api.settingsDispatcher.subscribe("decimals",(()=>this.updateAllMeasurementText())),this.api.settingsDispatcher.subscribe("customLengthFormatter",(()=>this.updateAllMeasurementText()))}setAxisLinesColor(t){for(const e of this.axisLines)e.material.color=t;this.startHandlePositionMarkerMaterial.color=t,this.endHandlePositionMarkerMaterial.color=t}createLines(){this.axisLines[0]=this.createLine(this.blackOnWhiteStyle.color,!0),this.axisLines[1]=this.createLine(this.blackOnWhiteStyle.color,!0),this.axisLines[2]=this.createLine(this.blackOnWhiteStyle.color,!0);for(let t=0;t<3;t++)this.axisLine3Lines[t]=new three.Line3,this.axisLineDirections[t]=new three.Vector3}createLine(t,e){const i=this.baseMaterialParameters;i.color=t,e&&Object.assign(i,this.dashedLineMaterialParameters);const n=new LineMaterial$1(i),r=new MeshLine(new LineGeometry,n);return r.renderOrder=1,r}updateTextElementVisibility(t,e){this.textElements[t].visible=e}createTextElements(){for(let t=0;t<3;t++)this.textElements[t]=new MeasurementElement(this.api.camera,new three.Vector3,this._measurementElementOptions),this.api.htmlElementPositioner.addElement(this.textElements[t])}start(t){this.startIntersection=t,this.updateAppearance(),this.startHandlePosition.copy(t.point),this.endHandlePosition.copy(t.point),this.startSnapType=t.snapType}updateAppearance(){this.updateTextElementsColors()}updateTextElementsColors(){for(let t=0;t<3;t++){const e=this.getParallelGlobalAxis(this.axisLineDirections[t]);0===e?this.updateTextElementStyle(t,this.globalXStyle,"X: "):1===e?this.updateTextElementStyle(t,this.globalYStyle,"Y: "):2===e?this.updateTextElementStyle(t,this.globalZStyle,"Z: "):this.updateTextElementStyle(t,this.blackOnWhiteStyle)}}getParallelGlobalAxis(t){return Math.abs(t.x)>.999?0:Math.abs(t.y)>.999?1:Math.abs(t.z)>.999?2:-1}updateTextElementStyle(t,e,i){switch(Object.assign(this.textElements[t].style,e),t){case 0:this.textElements[0]._prefix=i||"x*: ";break;case 1:this.textElements[1]._prefix=i||"y*: ";break;case 2:this.textElements[2]._prefix=i||"z*: "}}updateAllMeasurementText(){this.updateMeasurementOptions();for(const t of this.textElements)t&&t.updateText(this._measurementElementOptions)}updateMeasurementOptions(){this._measurementElementOptions={lengthUnit:this.api.settingsDispatcher.settings.lengthUnit,customLengthFormatter:this.api.settingsDispatcher.settings.customLengthFormatter,decimals:this.api.settingsDispatcher.settings.decimals}}update(t){this.endIntersection=t,this.snapToLineOrPoint=!1,this._vertical&&(this.endIntersection.snapType=0,this.endIntersection.normal=Vector3Const.up);const e=t.snapType,i=t.point,n=t.normal,r=this.startIntersection.snapType,s=this.startIntersection.point,o=this.startIntersection.normal,a=this.startIntersection.snapLineStart?this.startIntersection.snapLineStart.clone().sub(this.startIntersection.snapLineEnd).normalize():o?o.clone():void 0,c=t.snapLineStart?t.snapLineStart.clone().sub(t.snapLineEnd).normalize():n?n.clone():void 0;2===r&&2===e?this.updateForTwoPoints(s,i):1===r&&2===e?this.updateForLineAndPoint(s,o,a,i):2===r&&1===e?this.updateForLineAndPoint(i,n,c,s):0===r&&0===e?this.updateForTwoFaces(o,s,n,i):0===r&&1===e?this.updateForFaceAndLine(o,s,i,n,c):1===r&&0===e?this.updateForFaceAndLine(n,i,s,o,a):1===r&&1===e?this.updateForTwoLines(s,o,a,i,n,c):0===r&&2===e?this.updateForFaceAndPoint(o,s,i):2===r&&0===e&&this.updateForFaceAndPoint(n,i,s),this.measurementPlane.setFromNormalAndCoplanarPoint(this.measurementNormal,i),this.measurementPlane.projectPoint(this.startHandlePosition,this.startPointEndPlaneProjectionPosition),this.endPlaneHorizontalLine.set(this.startPointEndPlaneProjectionPosition,this.startPointEndPlaneProjectionPosition.clone().add(this.planeHorizontalDirection)),this.snapToLineOrPoint?this.endPlaneIntersectionPoint.copy(i):this.endPlaneHorizontalLine.closestPointToPoint(i,!1,this.endPlaneIntersectionPoint),this.endHandlePosition.copy(i),this.startHandlePosition.distanceTo(this.endHandlePosition)<this.minimumLineLength&&(this.startPointEndPlaneProjectionPosition.copy(this.startHandlePosition),this.endPlaneIntersectionPoint.copy(this.startHandlePosition)),this.updateAppearance(),this.updatePositions()}calculatePlaneHorizontalDirection(){Math.abs(this.measurementNormal.z)<.999999?this.planeHorizontalDirection.crossVectors(Vector3Const.up,this.measurementNormal).normalize():(this.planeHorizontalDirection.copy(Vector3Const.forward),this.startIntersection.model&&this.planeHorizontalDirection.applyMatrix4(this.startIntersection.model.matrixWorld))}updateForTwoPoints(t,e){this.measurementNormal.copy(t).sub(e).normalize(),this.snapToLineOrPoint=!0}updateForLineAndPoint(t,e,i,n){if(this.areDirectionsParallel(i,t.clone().sub(n).normalize()))return this.measurementNormal.copy(i),void this.calculatePlaneHorizontalDirection();this.directionIndex%2==1?(this.startEdgeLine.set(t,t.clone().add(e)),this.measurementNormal.copy(e)):(this.startEdgeLine.set(t,t.clone().add(i)),this.startEdgeLine.closestPointToPoint(n,!1,this.startEdgePerpendicularPoint),this.measurementNormal.copy(n).sub(this.startEdgePerpendicularPoint).normalize()),this.calculatePlaneHorizontalDirection()}updateForTwoLines(t,e,i,n,r,s){const o=this.directionIndex%3;if(o>0){const t=1===o?r:e;this.measurementNormal.copy(t),this.calculatePlaneHorizontalDirection()}else this.areDirectionsParallel(i,s)?(this.endEdgeLine.set(n,n.clone().add(s)),this.endEdgeLine.closestPointToPoint(this.startHandlePosition,!1,this.endEdgePerpendicularPoint),this.measurementNormal.copy(this.endEdgePerpendicularPoint.clone().sub(t).normalize()),this.snapToLineOrPoint=!0):(this.measurementNormal.crossVectors(i,s).normalize(),this.calculatePlaneHorizontalDirection())}updateForFaceAndPoint(t,e,i){this.arePointOnTheSamePlane(t,e,i)?this.measurementNormal.copy(e).sub(i).normalize():this.measurementNormal.copy(t),this.snapToLineOrPoint=!0}updateForTwoFaces(t,e,i,n){this.areDirectionsParallel(t,i)?this.arePointOnTheSamePlane(t,e,n)?this.measurementNormal.copy(e).sub(n).normalize():this.measurementNormal.copy(t):this.measurementNormal.copy(e).sub(n).normalize(),this.snapToLineOrPoint=!0}arePointOnTheSamePlane(t,e,i){return Math.abs(this.measurementPlane.setFromNormalAndCoplanarPoint(t,e).distanceToPoint(i))<.001}areDirectionsParallel(t,e){return Math.abs(t.dot(e))>.999}updateForFaceAndLine(t,e,i,n,r){this.arePointOnTheSamePlane(t,e,i)?!n||this.areDirectionsParallel(n,t)?this.measurementNormal.crossVectors(r,t).normalize():this.measurementNormal.copy(n):this.areDirectionsOrthogonal(t,r)?this.measurementNormal.copy(t):this.measurementNormal.copy(e).sub(i).normalize(),this.planeHorizontalDirection.crossVectors(r,this.measurementNormal).normalize(),this.planeHorizontalDirection.equals(Vector3Const.zero)&&this.planeHorizontalDirection.copy(n)}areDirectionsOrthogonal(t,e){return Math.abs(t.dot(e))<.01}updatePositions(){this.updateAxisLinePositions(),this.clearMainLinePosition(this.axisIndex)}updateAxisLinePositions(){this.updateAxisLinePosition(0,this.startHandlePosition,this.startPointEndPlaneProjectionPosition),this.updateAxisLinePosition(1,this.startPointEndPlaneProjectionPosition,this.endPlaneIntersectionPoint),this.updateAxisLinePosition(2,this.endPlaneIntersectionPoint,this.endHandlePosition)}updateAxisLinePosition(t,e,i){this.updateLineCalculations(t,e,i);e.distanceTo(i)<this.minimumLineLength?(this.axisLines[t].parent&&this.removeFromMarkup(t),this.nonZeroLines[t]=!1,this.updateTextElementVisibility(t,!1)):(this.nonZeroLines[t]=!0,this.updateTextElementPosition(t,e,i),this.active?this.updateTextElementVisibility(t,!0):this.updateTextElementVisibility(t,!1),this.addToMarkup(t),this.axisLines[t].update([this.worldToLocal(e.clone()),this.worldToLocal(i.clone())]))}updateLineCalculations(t,e,i){this.axisLine3Lines[t].set(e,i),this.axisLine3Lines[t].delta(this.axisLineDirections[t]),this.axisLineDirections[t].normalize()}addToMarkup(t){this.add(this.axisLines[t])}removeFromMarkup(t){this.remove(this.axisLines[t])}updateTextElementPosition(t,e,i){this.textElements[t].update(e,i),this.labels[t]=this.textElements[t].text}clearMainLinePosition(t){this.removeFromMarkup(t),this._textElement&&this._textElement.update(this.axisLine3Lines[t].start,this.axisLine3Lines[t].end),this.updateTextElementVisibility(t,!1),this.api.renderingManager.redraw()}getMainLine(){return this.axisLine3Lines[this.axisIndex]}end(){this.updateAppearance(),this.updatePositions(),this.createPointMarkerGeometry(),this.updateMarkerPositions(),this.showMarkers=!0,this.addLocalMarkers()}createPointMarkerGeometry(){this.startHandlePositionMarker=createScreenStaticSizeMesh(this.startHandlePositionGeometry,this.startHandlePositionMarkerMaterial,this.api),this.endHandlePositionMarker=createScreenStaticSizeMesh(this.endHandlePositionGeometry,this.endHandlePositionMarkerMaterial,this.api)}updateMarkerPositions(){this.worldToLocal(this.startHandlePositionMarker.position.copy(this.startHandlePosition)),this.worldToLocal(this.endHandlePositionMarker.position.copy(this.endHandlePosition))}addLocalMarkers(){this.removeAllMarkers(),this.showMarkers&&(1===this.axisIndex?(this.nonZeroLines[2]&&this.add(this.startHandlePositionMarker),this.nonZeroLines[1]&&this.add(this.endHandlePositionMarker)):2===this.axisIndex?this.nonZeroLines[2]&&this.add(this.startHandlePositionMarker):0===this.axisIndex&&this.nonZeroLines[1]&&this.add(this.endHandlePositionMarker))}removeAllMarkers(){this.remove(this.startHandlePositionMarker),this.remove(this.endHandlePositionMarker)}updateStartHandle(t){this.startHandle=t}updateEndHandle(t){this.endHandle=t}dragStart(t){if(t.origin===this.startHandle&&!1===this.endsFlippedByDrag||t.origin===this.endHandle&&!0===this.endsFlippedByDrag){const t=this.startIntersection;this.startIntersection=this.endIntersection,this.endIntersection=t;const e=new three.Vector3;e.copy(this.startHandlePosition),this.startHandlePosition.copy(this.endHandlePosition),this.endHandlePosition.copy(e),this.endsFlippedByDrag=!this.endsFlippedByDrag}this.showMarkers=!1,this.removeAllMarkers(),this.api.renderingManager.redraw()}dragging(t){t&&t.intersection?this.update(t.intersection):this.update(this.endIntersection)}dragEnd(){this.updateMarkerPositions(),this.showMarkers=!0,this.addLocalMarkers()}onSelectionUpdate(){this.active=!0,this.updateAppearance(),this.updatePositions(),this.showMarkers=!0,this.updateMarkerVisibility()}updateMarkerVisibility(){this.removeAllMarkers(),!0===this.showMarkers&&this.addLocalMarkers()}onDeselectionUpdate(){this.active&&(this.active=!1,this.updateAppearance(),this.updatePositions(),this.showMarkers=!0,this.updateMarkerVisibility())}switchAxis(){this.nonZeroLines[(this.axisIndex+1)%3]?this.axisIndex=(this.axisIndex+1)%3:this.nonZeroLines[(this.axisIndex+2)%3]?this.axisIndex=(this.axisIndex+2)%3:this.nonZeroLines[(this.axisIndex+3)%3]&&(this.axisIndex=(this.axisIndex+3)%3),this.addAllLocalLines(),this.updatePositions()}switchDirection(){this.directionIndex++,this.update(this.endIntersection)}set vertical(t){this._vertical=t,this.update(this.endIntersection)}addAllLocalLines(){this.axisLines[0].parent&&this.removeFromMarkup(0);for(let t=1;t<3;t++)!this.axisLines[t].parent&&this.nonZeroLines[t]&&this.addToMarkup(t)}disposeTextElements(){for(let t=0;t<3;t++)this.api.htmlElementPositioner.removeElement(this.textElements[t])}}class Measurement extends LineMarkup{constructor(t,e,i,n){super(t,e,i,new three.SphereGeometry(.25)),this.chosenLineStyle={color:"#ffffff",backgroundColor:"#000000",border:"1px solid #000000",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.activeMainStyle={color:"#ffcc02",backgroundColor:"#363545",border:"1px solid #363545",top:"-4x",borderRadius:"2px",padding:"0px 2px",fontFamily:'"Open Sans", sans-serif',fontSize:".8rem",fontWeight:"600",boxShadow:"none"},this.startScreenPos=new three.Vector3,this.endScreenPos=new three.Vector3,this._update={startPoint:!1,endPoint:!1},this.adjustArrowScale=t=>{if(this.endArrowMarker.position.equals(Vector3Const.zero))return t;this.startArrowMarker.getWorldPosition(this.startScreenPos).project(this._api.camera),this.endArrowMarker.getWorldPosition(this.endScreenPos).project(this._api.camera),this.startScreenPos.z=this.endScreenPos.z=0;const e=this.startScreenPos.distanceTo(this.endScreenPos);return t*three.MathUtils.clamp(5*e,0,1)},this.getPlanePoint=(t,e)=>{const i=new three.Vector3;let n=new three.Ray(e,t.normal.clone().negate());return n.intersectPlane(t,i)||(n=new three.Ray(e,t.normal.clone()),n.intersectPlane(t,i)),i},this.getRayPoint=(t,e,i)=>{const n=new three.Vector3,r=new three.Ray(e);return r.lookAt(t),r.closestPointToPoint(i,n),n},this.getMeasurementWorldPositions=(t,e)=>({startPositionWorld:t.point,endPositionWorld:e.point}),this.onKey=t=>{this.selected&&("Tab"===t.code&&(t.preventDefault(),this.switchAxis()),"KeyD"===t.code&&(t.preventDefault(),this.switchDirection()))},this.markupSettings=n,this.arrowMaterial=new three.MeshBasicMaterial({depthTest:!1,depthWrite:!1,transparent:!1}),this.coloredMaterials.push(this.arrowMaterial),this.applyColor(e),this.createArrows(),this.createAxisLines(),this.measurementLines.setAxisLinesColor(this._api.settingsDispatcher.settings.color),this.updateAllMeasurementText(),this._api.settingsDispatcher.subscribe("lengthUnit",(()=>this.updateAllMeasurementText())),this._api.settingsDispatcher.subscribe("decimals",(()=>this.updateAllMeasurementText())),this._api.settingsDispatcher.subscribe("customLengthFormatter",(()=>this.updateAllMeasurementText())),this._api.settingsDispatcher.subscribe("color",(()=>{this.measurementLines.setAxisLinesColor(this._api.settingsDispatcher.settings.color)}))}getTextElement(){return this._textElement}getAxisLinesTextElements(){return this.measurementLines.textElements}createAxisLines(){this.updateMeasurementOptions(),this.measurementLines=new MeasurementLines(this._api,this.markupSettings,this._textElement,this._measurementElementOptions,this.startHandle,this.endHandle),this.add(this.measurementLines)}createArrows(){this.coloredMaterials.push(this.arrowMaterial);const t=createArrowGeometry(1.2);this.startArrowMarker=this.createArrow(t),this.endArrowMarker=this.createArrow(t),this.startArrowMarker.visible=!1,this.endArrowMarker.visible=!1}createArrow(t){const e=createScreenStaticSizeMesh(t,this.arrowMaterial,this._api,this.adjustArrowScale);return e.renderOrder=1,this.add(e),e}updateLine(t,e){this._line.update([t,e]),this.updateArrowMarkers(t,e)}updateArrowMarkers(t,e){this.startArrowMarker.position.copy(t),this.startArrowMarker.lookAt(this.localToWorld(e.clone())),this.endArrowMarker.position.copy(e),this.endArrowMarker.lookAt(this.localToWorld(t.clone())),this.startArrowMarker.visible=!0,this.endArrowMarker.visible=!0}activeCallback(){super.activeCallback(),this.selected?(Measurement.lastUsedMeasurement=this,this.measurementLines.onSelectionUpdate(),this.updateTextElementAppearance()):(this.measurementLines.onDeselectionUpdate(),this.updateTextElementAppearance()),this.onSelected()}set vertical(t){this.measurementLines.vertical=t,this.updateMeasurement(),this.moveMainLineAndText(),this.updateTextElementAppearance(),this._api.renderingManager.redraw()}get axisIndex(){return this.measurementLines.axisIndex}get directionIndex(){return this.measurementLines.directionIndex}switchAxis(){this.measurementLines.switchAxis(),this.moveMainLineAndText()}switchDirection(){this.measurementLines.switchDirection(),this.moveMainLineAndText()}getMainLine(){return this.measurementLines.getMainLine()}updateStartPoint(t){this.startHandle||(this.startHandle=createScreenStaticSizeMesh(this._startGeometry,this._handleMaterial,this._api),makeMovable(this._api,this.startHandle,this),this.add(this.startHandle),this.measurementLines.updateStartHandle(this.startHandle),this.startHandle.position.copy(this.worldToLocal(t.point.clone())),this.startArrowMarker.position.copy(this.worldToLocal(t.point.clone()))),this.startPick=t,this._update.startPoint=!0}updateEndPoint(t){this.endHandle||(this.endHandle=createScreenStaticSizeMesh(this._endGeometry,this._handleMaterial,this._api),makeMovable(this._api,this.endHandle,this),this.add(this.endHandle),this.measurementLines.updateEndHandle(this.endHandle)),this.endPick=t,this._update.endPoint=!0}updateMeasurementOptions(){this._measurementElementOptions={lengthUnit:this._api.settingsDispatcher.settings.lengthUnit,customLengthFormatter:this._api.settingsDispatcher.settings.customLengthFormatter,decimals:this._api.settingsDispatcher.settings.decimals}}updateMeasurementText({startPositionWorld:t,endPositionWorld:e}){this.updateMeasurementOptions(),this._textElement||(this._textElement=new MeasurementElement(this._api.camera,new three.Vector3,this._measurementElementOptions),this._api.htmlElementPositioner.addElement(this._textElement)),this._textElement.update(t,e)}updateAllMeasurementText(){this.updateMeasurementOptions(),this._textElement&&this._textElement.updateText(this._measurementElementOptions)}updatePositions({startPositionWorld:t,endPositionWorld:e}){let i=this.startHandle.position.clone(),n=this.endHandle.position.clone();return this.position.equals(new three.Vector3)&&(this.position.copy(t.clone()),this.updateMatrixWorld(!0)),this._update.startPoint&&(i=this.worldToLocal(t.clone()),this.startHandle.position.copy(i),this._update.startPoint=!1),this._update.endPoint&&(n=this.worldToLocal(e.clone()),this.endHandle.position.copy(n),this._update.endPoint=!1),{startPositionLocal:i,endPositionLocal:n}}updateMeasurement(){const t=this.getMeasurementWorldPositions(this.startPick,this.endPick),e=this.updatePositions(t);this.updateMeasurementText(t),this.updateLine(e.startPositionLocal,e.endPositionLocal),this.updateBoundingBox()}moveMainLineAndText(){const t=this.measurementLines.getMainLine();this._textElement.update(t.start,t.end);const e=this.worldToLocal(t.start.clone()),i=this.worldToLocal(t.end.clone());this.updateLine(e,i)}updateTextElementAppearance(){if(this._textElement)if(this.selected)Object.assign(this._textElement.style,this.activeMainStyle);else{const t=(new three.Color).copyGammaToLinear(this.color),e=.299*t.r+.587*t.g+.114*t.b;Object.assign(this.chosenLineStyle,{color:e<.5?"#ffffff":"#000000",backgroundColor:"#"+this.color.getHexString(),border:`1px solid #${this.color.getHexString()}`}),Object.assign(this._textElement.style,this.chosenLineStyle)}}dispose(){super.dispose(),this._textElement&&this._api.htmlElementPositioner.removeElement(this._textElement),this.measurementLines.disposeTextElements(),this.keySubscription&&this.keySubscription.unsubscribe()}getTargetPosition(t,e){switch(e.snapType){case 1:return this.getRayPoint(e.snapLineStart,e.snapLineEnd,t);case 0:return this.getPlanePoint((new three.Plane).setFromNormalAndCoplanarPoint(e.normal,e.point),t);case 2:return e.point.clone()}}start(t){Measurement.lastUsedMeasurement=this,this.updateStartPoint(t),this.startHandle.visible=!0,this.measurementLines.start(t),this._api.renderingManager.redraw()}update(t){this.startHandle.visible=!0,this.updateEndPoint(t),this.endHandle.visible=!1,this.updateMeasurement(),this.measurementLines.update(t),this.moveMainLineAndText(),this.updateTextElementAppearance(),this._api.renderingManager.redraw()}end(){this.measurementLines.end(),this.completeIfValidEndPick()}completeIfValidEndPick(){this.endPickObjectNotCreated()?this.cancel():(this.showHandles(this.selected),this.updateBoundingBox(),this.dispatchModifiedEvent())}endPickObjectNotCreated(){return void 0===this.endPick}dragStart(t){this._api.cursor&&(this._api.cursor.unsubscribe(),this._api.cursor.subscribe()),t.origin===this.startHandle?this.startHandle.visible=!1:this.endHandle.visible=!1,this.measurementLines.dragStart(t)}dragging(t){this.selected&&this._api.cursor.intersection&&(t.origin===this.startHandle?(this.updateStartPoint(this._api.cursor.intersection),this.updateEndPoint(this.endPick)):(this.updateEndPoint(this._api.cursor.intersection),this.updateStartPoint(this.startPick)),this.updateMeasurement(),this.measurementLines.dragging(t),this.moveMainLineAndText(),this._api.renderingManager.redraw())}dragEnd(t){this.updateBoundingBox(),t.origin===this.startHandle?this.startHandle.visible=!0:this.endHandle.visible=!0,this.measurementLines.dragEnd(),this._api.cursor.unsubscribe(),this.dispatchModifiedEvent()}select(){super.select(),this.keySubscription=this._api.inputHandler.keyDown$.subscribe(this.onKey)}deselect(){super.deselect(),this.keySubscription&&this.keySubscription.unsubscribe()}}class MeasurementTool extends TapMoveTapTool{constructor(t,e,i){super(MeasurementTool.Name,t,i),this.model=e,this.hideableMeasurementElements=[],this.unhideableMeasurementElement=[],this.api.eventDispatcher.subscribe("navigationend",(()=>this.hideOverlappingMeasurementElements())),merge(this.api.inputHandler.keyDown$,this.api.inputHandler.keyUp$).subscribe((t=>{this.object&&"Shift"===t.key&&(this.object.vertical="keydown"===t.type)}))}static get Name(){return"measurement"}_createMarkup(){const t=new Measurement(this.name,this.markupSettings.color,this.api,this.markupSettings);return t.onSelected=()=>this.hideOverlappingMeasurementElements(),this.model.add(t),t}add(t,e,i){const n=super.add(t,e,i);return this.api.htmlElementPositioner.update(),this.hideOverlappingMeasurementElements(),n}hideOverlappingMeasurementElements(){this.hideableMeasurementElements.length=0,this.unhideableMeasurementElement.length=0;for(const t of this.model.children)if("measurement"===t.name){const e=t,i=e.getTextElement();i.style.visibility="visible",e.selected||e===Measurement.lastUsedMeasurement?(this.unhideableMeasurementElement.push(i),this.unhideableMeasurementElement.push(...e.getAxisLinesTextElements())):this.hideableMeasurementElements.push(i)}for(const t of this.unhideableMeasurementElement)for(const e of this.hideableMeasurementElements){const i=t.getBoundingClientRect(),n=e.getBoundingClientRect();this.doBoundingRectsOverlap(i,n)&&(e.style.visibility="hidden")}for(let t=0;t<this.hideableMeasurementElements.length-1;t++)for(let e=t+1;e<this.hideableMeasurementElements.length;e++){const i=this.hideableMeasurementElements[t].getBoundingClientRect(),n=this.hideableMeasurementElements[e].getBoundingClientRect();this.doBoundingRectsOverlap(i,n)&&(this.hideableMeasurementElements[t].style.visibility="hidden",this.hideableMeasurementElements[e].style.visibility="hidden")}}doBoundingRectsOverlap(t,e){return!(t.right<e.left||e.right<t.left||t.bottom<e.top||e.bottom<t.top)}}class TextElement extends StickyElement{constructor(t,e,i,n=new three.Color("rgb(0,0,0)")){super(t.camera,e,(t=>{t.y=t.y-this.height})),this._api=t,this._text=i,this._textColor=n,this.selectText=()=>{if(this.contentEditable="true",void 0!==window.getSelection&&void 0!==document.createRange){var t=document.createRange();t.selectNodeContents(this);var e=window.getSelection();e.removeAllRanges(),e.addRange(t)}},this.onKeyPress=t=>{"Enter"===t.code&&(this.blur(),window.getSelection().removeAllRanges())},this.spellcheck=!1,this.contentEditable="true",this.style.margin="-1px -1px 0px 0px",this.style.padding="0px 3px 0px 3px",this.style.borderBottom="2px solid black",this.style.fontFamily='"Open Sans", sans-serif',this.style.textShadow="-1px 0 #ffffff,0 1px #ffffff,1px 0 #ffffff,0 -1px #ffffff",this.style.overflow="hidden",this.style.fontSize="1.5em",this.style.letterSpacing="1px",this.style.minHeight="33px",this.style.height="auto",this.innerText=""}static get is(){return"text-element"}set borderColor(t){this.style.borderColor=`#${t.getHexString()}`}set textColor(t){this._textColor=t,this.style.color=`#${this._textColor.getHexString()}`}get textColor(){return this._textColor}connectedCallback(){this.addEventListener("keypress",this.onKeyPress)}disconnectedCallback(){this.removeEventListener("keypress",this.onKeyPress)}updatePosition(t){super.updatePosition(t),this.hidden&&(this.style.display="none")}}eval("if (window.customElements && typeof TextElement !== 'undefined') window.customElements.define(TextElement.is, TextElement)");class TextMarkup extends LineMarkup{constructor(t,e,i,n){super(t,e,i),this.getTextCallback=n,this._offset=new three.Vector2,this.width=0,this.textMarkupKeyPress=t=>{"Escape"===t.code&&this.parent&&this.textElement.isContentEditable&&(this.dispose(),this.parent.remove(this))},this.onClick=()=>{if(!this.selected){const t=this._api.models.getIterable();for(const e of t)e.clearSelection&&e.clearSelection();this.select()}},this.onBlur=()=>{this.textElement.contentEditable="false",this.width=this.textElement.width},this.onHtmlDragStart=t=>{t.stopImmediatePropagation(),this.htmlElementIsDragging=!0,this._api.cursor.subscribe();const e=this.endHandle.getWorldPosition(new three.Vector3),i=worldToScreenPoint(e,this._api.camera,this._api.container.clientWidth,this._api.container.clientHeight);i&&this._offset.set(i.x-t.x,i.y-t.y)},this.onHtmlDrag=t=>{if(this.htmlElementIsDragging&&this.selected&&0!==t.x&&0!==t.y){const e=getRayIntersection(this._offset.x+t.x,this._offset.y+t.y,this._api.camera);e.point=rayToWorldPosition(e.caster.ray,this._api.camera,this.position),this.update(e)}},this.onHtmlDragEnd=()=>{this.htmlElementIsDragging&&(this.textElement.style.pointerEvents="all",this.htmlElementIsDragging=!1,this._api.cursor.unsubscribe(),this.dispatchModifiedEvent())},this.textElement=new TextElement(this._api,new three.Vector3),this.textElement.hidden=!0,this.textElement.addEventListener("blur",(()=>this.dispatchModifiedEvent())),this._api.htmlElementPositioner.addElement(this.textElement),this.textElement.addEventListener("click",this.onClick),this.textElement.addEventListener("blur",this.onBlur),this.textElement.addEventListener("mousedown",this.onHtmlDragStart),this.textElement.addEventListener("pointerdown",this.onHtmlDragStart),window.addEventListener("mousemove",this.onHtmlDrag),window.addEventListener("pointermove",this.onHtmlDrag),window.addEventListener("mouseup",this.onHtmlDragEnd),window.addEventListener("pointerup",this.onHtmlDragEnd),window.addEventListener("keydown",this.textMarkupKeyPress),this.textElement.addEventListener("dblclick",this.textElement.selectText);const r=this.textElement.updatePosition.bind(this.textElement);this.textElement.updatePosition=(()=>{const t=new three.Vector3,e=new three.Vector3,i=new three.Vector3;return n=>{if(r(n),this.startHandle&&this.endHandle){this.startHandle.getWorldPosition(e),this.endHandle.getWorldPosition(i);const r=worldToScreenPoint(i,this._api.camera,n.width,n.height);r&&(e.project(this._api.camera),i.project(this._api.camera),t.subVectors(e,i),this.textElement.adjustAlign=t.x>0&&r.x>this.width||t.x<0&&r.x+this.width>n.right?t=>{t.y=t.y-this.textElement.height,t.x=t.x-this.width}:t=>{t.y=t.y-this.textElement.height})}}})(),this.applyColor(e)}get text(){return this.textElement.innerHTML}set text(t){this.textElement.innerHTML=t}applyColor(t){super.applyColor(t),this.textElement&&(this.textElement.textColor=t,this.textElement.borderColor=t)}updateTextElement(){const t=this.position.clone().add(this.endHandle.position);this.textElement.position.copy(t)}update(t){super.update(t),this.textElement.hidden=!1,this.textElement.style.pointerEvents="none"}end(){super.end(),this.textElement.style.pointerEvents="all",this.updateTextElement(),this.textElement.selectText(),setTimeout((()=>this.textElement.focus()),100),this.getTextCallback?this.text=this.getTextCallback(this):this._api.renderingManager.isMobile()&&(this.text=window.prompt())}updateLine(t,e){super.updateLine(t,e),this.updateTextElement()}select(){super.select(),this.textElement.style.pointerEvents="all",this.textElement.borderColor=this.color}deselect(){super.deselect(),this.textElement.style.pointerEvents="none",this.textElement.borderColor=this.color}showHandles(t){this.startHandle.visible=t,this.endHandle.visible=!1}dispose(){super.dispose(),this._api.htmlElementPositioner.removeElement(this.textElement),this._api.renderingManager.redraw()}}class TextMarkupTool extends TapMoveTapOnPlaneTool{constructor(t,e,i){super(TextMarkupTool.Name,t,e,i)}static get Name(){return"textMarkup"}_createMarkup(){const t=new TextMarkup(this.name,this.markupSettings.color,this.api,this.getTextCallback);return this.model.add(t),t}add(t,e,i,n){const r=super.add(t,e,i);return r.text=n,r.textElement.hidden=!1,r.textElement.blur(),r}}class MarkupSettings{constructor(){this.color=new three.Color("#EC00B6")}}const version="DEV_BUILD";class WebglViewerPlugin{get version(){return version}}function Pass(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}var camera,geometry,FullScreenQuad;Object.assign(Pass.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),Pass.FullScreenQuad=(camera=new three_module_js.OrthographicCamera(-1,1,1,-1,0,1),geometry=new three_module_js.PlaneGeometry(2,2),FullScreenQuad=function(t){this._mesh=new three_module_js.Mesh(geometry,t)},Object.defineProperty(FullScreenQuad.prototype,"material",{get:function(){return this._mesh.material},set:function(t){this._mesh.material=t}}),Object.assign(FullScreenQuad.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,camera)}}),FullScreenQuad);var RenderPass=function(t,e,i,n,r){Pass.call(this),this.scene=t,this.camera=e,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new three_module_js.Color};RenderPass.prototype=Object.assign(Object.create(Pass.prototype),{constructor:RenderPass,render:function(t,e,i){var n,r,s=t.autoClear;t.autoClear=!1,void 0!==this.overrideMaterial&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(t.getClearColor(this._oldClearColor),n=t.getClearAlpha(),t.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:i),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor&&t.setClearColor(this._oldClearColor,n),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=r),t.autoClear=s}});class MarkupPlugin extends WebglViewerPlugin{constructor(t){super(),this.settings=t||new MarkupSettings}get name(){return"markup"}getMarkups(){return this._model.children}set api(t){this._api=t;const e=t.cursor;this._model=new MarkupModel,this._api.models.add(this._model,!1),this.renderPass=new RenderPass(new three.Scene,this._api.camera),this.renderPass.clear=!1,this._api.renderingManager.composer.addPassAfterSelection(this.renderPass),this.renderPass.scene.add(this._model),this._addTool(new LineMarkupTool(this._api,this._model,this.settings)),this._addTool(new ArrowMarkupTool(this._api,this._model,this.settings)),this._addTool(new CloudMarkupTool(this._api,this._model,this.settings)),this._addTool(new PointMarkupTool(this._api,this.settings,this._model,e)),this._addTool(new FreelineMarkupTool(this._api,this.settings,this._model)),this._addTool(new MeasurementTool(this._api,this._model,this.settings)),this._addTool(new TextMarkupTool(this._api,this._model,this.settings)),this.startKeyListener()}startKeyListener(){this._api.inputHandler.keyDown$.subscribe((t=>{"Delete"!==t.code&&"Backspace"!==t.code||this.removeSelected()}))}_addTool(t){this._api.toolManager.addTool(t),t.onFinished=()=>{t.enabled=!1,t.enabled=!0},t.onCanceled=()=>{this._api.toolManager.activateDefaultTool()}}removeById(t){(t instanceof Array?t:[t]).forEach((t=>{const e=this._model.children.find((e=>e.id===t));this.removeMarkup(e)})),this._api.renderingManager.redraw()}removeMarkup(t){t.dispose(),this._model.remove(t),this._api.selection.subtract(this._model.name,[t.id],this)}removeSelected(){for(const t of[...this._model.children]){const e=t;e.selected&&this.removeMarkup(e)}this._api.renderingManager.redraw()}clear(){for(const t of[...this._model.children])this.removeMarkup(t);this._api.renderingManager.redraw()}colorSelectedMarkups(t){if(this._api.selection.has(this.name))for(const e of this._api.selection.get(this.name))this._model.getObjectById(e).color=t}}exports.ArrowMarkup=ArrowMarkup,exports.ArrowMarkupTool=ArrowMarkupTool,exports.CloudMarkup=CloudMarkup,exports.CloudMarkupTool=CloudMarkupTool,exports.FreelineMarkup=FreelineMarkup,exports.FreelineMarkupTool=FreelineMarkupTool,exports.LineMarkup=LineMarkup,exports.LineMarkupTool=LineMarkupTool,exports.Markup=Markup,exports.MarkupModel=MarkupModel,exports.MarkupPlugin=MarkupPlugin,exports.MarkupSettings=MarkupSettings,exports.Measurement=Measurement,exports.MeasurementTool=MeasurementTool,exports.PointMarkup=PointMarkup,exports.PointMarkupTool=PointMarkupTool,exports.TextMarkup=TextMarkup,exports.TextMarkupTool=TextMarkupTool,Object.defineProperty(exports,"__esModule",{value:!0})}));
//# sourceMappingURL=index.js.map
