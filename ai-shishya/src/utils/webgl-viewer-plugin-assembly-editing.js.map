{"version":3,"file":"index.js","sources":["../../../webgl-viewer/src/Picker/Caster.ts","../../../webgl-viewer/src/Helpers/Utils.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../node_modules/rxjs/src/internal/config.ts","../../../../node_modules/rxjs/src/internal/Observer.ts","../../../../node_modules/rxjs/src/internal/util/isObject.ts","../../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../../../node_modules/rxjs/src/internal/Subscription.ts","../../../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../../../node_modules/rxjs/src/internal/Subscriber.ts","../../../../node_modules/rxjs/src/internal/util/pipe.ts","../../../../node_modules/rxjs/src/internal/Observable.ts","../../../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../../../node_modules/rxjs/src/internal/util/canReportError.ts","../../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../../../node_modules/rxjs/src/internal/SubjectSubscription.ts","../../../../node_modules/rxjs/src/internal/Subject.ts","../../../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../../../node_modules/rxjs/src/internal/Scheduler.ts","../../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../../../node_modules/rxjs/src/internal/observable/empty.ts","../../../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToArray.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","../../../../node_modules/rxjs/src/internal/observable/throwError.ts","../../../../node_modules/rxjs/src/internal/Notification.ts","../../../../node_modules/rxjs/src/internal/observable/of.ts","../../../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../../../../node_modules/rxjs/src/internal/operators/map.ts","../../../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToObservable.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToPromise.ts","../../../../node_modules/rxjs/src/internal/util/subscribeTo.ts","../../../../node_modules/rxjs/src/internal/util/subscribeToIterable.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduled.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","../../../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","../../../../node_modules/rxjs/src/internal/util/isIterable.ts","../../../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","../../../../node_modules/rxjs/src/internal/observable/from.ts","../../../../node_modules/rxjs/src/internal/innerSubscribe.ts","../../../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../../../node_modules/rxjs/src/internal/operators/filter.ts","../../../../node_modules/rxjs/src/internal/operators/delay.ts","../../../../node_modules/rxjs/src/internal/operators/take.ts","../../../../node_modules/rxjs/src/internal/operators/switchMap.ts","../../../../node_modules/rxjs/src/internal/operators/takeUntil.ts","../../../../node_modules/rxjs/src/internal/operators/tap.ts","../../../../node_modules/rxjs/src/internal/operators/throttle.ts","../../../../node_modules/rxjs/src/internal/operators/throttleTime.ts","../../../webgl-viewer/src/InputHandler.ts","../../../webgl-viewer/src/Picker/Picker.ts","../../../../node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","../../../../node_modules/three/examples/jsm/lines/LineGeometry.js","../../../../node_modules/three/examples/jsm/lines/LineMaterial.js","../../../../node_modules/three/examples/jsm/lines/LineSegments2.js","../../../../node_modules/three/examples/jsm/postprocessing/Pass.js","../../../webgl-viewer/src/CustomObjects/MeshLine.ts","../../../../node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../src/Tools/AssemblyEditingTool.ts","../../../webgl-viewer/src/Model.ts","../../src/SnapPoint.ts","../../src/AssemblyObject.ts","../../src/AssemblyEditingModel.ts","../../src/AssemblyEditingSettings.ts","../../../../node_modules/three/examples/jsm/controls/TransformControls.js","../../src/Tools/TransformTool.ts","../../src/Tools/EditSnapPointsTool.ts","../../src/Tools/CopySelectedTool.ts","../../../webgl-viewer/src/WebglViewerPlugin.ts","../../../webgl-viewer/src/Version.ts","../../src/AssemblyEditingPlugin.ts"],"sourcesContent":["import { Vector2, Raycaster, Frustum } from \"three\";\r\n\r\nexport class Caster extends Raycaster {\r\n    screenPosition: Vector2;\r\n    frustum: Frustum;\r\n    navigation: boolean;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { LengthUnit } from \"../common\";\r\nimport {\r\n    Box3,\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    Camera,\r\n    Geometry, Material,\r\n    Mesh,\r\n    Ray,\r\n    TypedArray,\r\n    Vector2,\r\n    Vector3\r\n} from \"three\";\r\nimport { IIntersection } from \"../Picker/IIntersection\";\r\nimport { Caster } from \"../Picker/Caster\";\r\nimport { CustomLengthFormatter } from \"../common\";\r\nimport { Api } from \"../Api\";\r\n\r\nexport function getBoxCorners(box: Box3): Vector3[] {\r\n    const min = box.min.x === Infinity ? new Vector3(-50, -50, -50) : box.min;\r\n    const max = box.max.x === -Infinity ? new Vector3(50, 50, 50) : box.max;\r\n    const corners: Vector3[] = [];\r\n\r\n    /*\r\n      5____4\r\n\t1/___0/|\r\n\t| 6__|_7\r\n\t2/___3/\r\n\t0: max.x, max.y, max.z\r\n\t1: min.x, max.y, max.z\r\n\t2: min.x, min.y, max.z\r\n\t3: max.x, min.y, max.z\r\n\t4: max.x, max.y, min.z\r\n\t5: min.x, max.y, min.z\r\n\t6: min.x, min.y, min.z\r\n\t7: max.x, min.y, min.z\r\n\t*/\r\n\r\n    corners.push(new Vector3(max.x, max.y, max.z));\r\n    corners.push(new Vector3(min.x, max.y, max.z));\r\n    corners.push(new Vector3(min.x, min.y, max.z));\r\n    corners.push(new Vector3(max.x, min.y, max.z));\r\n\r\n    corners.push(new Vector3(max.x, max.y, min.z));\r\n    corners.push(new Vector3(min.x, max.y, min.z));\r\n    corners.push(new Vector3(min.x, min.y, min.z));\r\n    corners.push(new Vector3(max.x, min.y, min.z));\r\n\r\n    return corners;\r\n}\r\n\r\nexport function DirectionToSpherical(direction: Vector3, up: Vector3): Vector2 {\r\n    let y: number;\r\n\r\n    if (Math.abs(direction.x) < 0.002 && Math.abs(direction.y) < 0.002) {\r\n        if (direction.z > 0) {\r\n            y = Math.PI + calculateSphericalYAngle(up);\r\n        } else {\r\n            y = calculateSphericalYAngle(up);\r\n        }\r\n    } else {\r\n        y = Math.atan2(direction.y, direction.x);\r\n    }\r\n\r\n    return new Vector2(Math.acos(direction.z), y);\r\n}\r\n\r\nexport function calculateSphericalYAngle(up: Vector3): number {\r\n    if (up.x === 0.0) {\r\n        if (up.y > 0) {\r\n            return Math.PI / 2;\r\n        } else {\r\n            return -Math.PI / 2;\r\n        }\r\n    } else if (up.y === 0) {\r\n        if (up.x > 0) {\r\n            return 0.0;\r\n        } else {\r\n            return Math.PI;\r\n        }\r\n    } else {\r\n        const angle = Math.atan2(Math.abs(up.y), Math.abs(up.x));\r\n\r\n        if (up.x < 0) {\r\n            if (up.y < 0) {\r\n                return angle + Math.PI;\r\n            } else {\r\n                return angle + Math.PI / 2;\r\n            }\r\n        } else {\r\n            if (up.y < 0) {\r\n                return angle + 1.5 * Math.PI;\r\n            } else {\r\n                return angle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function calculateUpVector(direction: Vector3, currentUp: Vector3, newUp: Vector3): Vector3 {\r\n    const sphericalDirection = DirectionToSpherical(direction, currentUp);\r\n    const sphericalUp = new Vector2(sphericalDirection.x - Math.PI / 2.0, sphericalDirection.y);\r\n    return SphericalToDirection(sphericalUp, newUp);\r\n}\r\n\r\nexport function SphericalToDirection(sphericalCoordinates: Vector2, vec: Vector3): Vector3 {\r\n    return vec.set(\r\n        Math.sin(sphericalCoordinates.x) * Math.cos(sphericalCoordinates.y),\r\n        Math.sin(sphericalCoordinates.x) * Math.sin(sphericalCoordinates.y),\r\n        Math.cos(sphericalCoordinates.x)\r\n    ).normalize();\r\n}\r\n\r\nexport function closestPointBetweenRays(line0: Ray, line1: Ray): Vector3 {\r\n    const originDiff = new Vector3().subVectors(line0.origin, line1.origin);\r\n    const a01 = -line0.direction.dot(line1.direction);\r\n\r\n    const b0 = originDiff.dot(line0.direction);\r\n    const c = originDiff.length();\r\n    const determinant = Math.abs(1.0 - a01 * a01);\r\n    let line0Parameter: number;\r\n\r\n    if (determinant >= 0) {\r\n        // lines are not parallel\r\n        const fB1 = -originDiff.dot(line1.direction);\r\n        const inverseDeterminant = 1.0 / determinant;\r\n        line0Parameter = (a01 * fB1 - b0) * inverseDeterminant;\r\n    } else {\r\n        // lines are parallel, select any closest pair of points\r\n        line0Parameter = -b0;\r\n    }\r\n\r\n    const ClosestPoint0 = new Vector3()\r\n        .copy(line0.origin)\r\n        .add(line0.direction.multiplyScalar(line0Parameter));\r\n    return ClosestPoint0;\r\n}\r\n\r\nexport function getTouchPoint(event: TouchEvent): { x: number; y: number } {\r\n    const point = { x: 0, y: 0 };\r\n    const touches = event.touches.length !== 0 ? event.touches : event.changedTouches;\r\n\r\n    switch (touches.length) {\r\n        case 1:\r\n            point.x = touches[0].clientX;\r\n            point.y = touches[0].clientY;\r\n            break;\r\n\r\n        case 2:\r\n            point.x = (touches[0].clientX + touches[1].clientX) / 2;\r\n            point.y = (touches[0].clientY + touches[1].clientY) / 2;\r\n            break;\r\n\r\n        case 3:\r\n            point.x = (touches[0].clientX + touches[2].clientX) / 2;\r\n            point.y = (touches[0].clientY + touches[2].clientY) / 2;\r\n            break;\r\n    }\r\n\r\n    return point;\r\n}\r\n\r\nexport function getRayIntersection(x: number, y: number, camera: Camera): IIntersection {\r\n    const vector = new Vector3();\r\n    const raycaster = new Caster();\r\n\r\n    vector.set((x / window.innerWidth) * 2 - 1, -(y / window.innerHeight) * 2 + 1, 0.5);\r\n\r\n    vector.unproject(camera);\r\n\r\n    const dir = vector.sub(camera.position).normalize();\r\n    raycaster.set(camera.position, dir);\r\n    return {\r\n        id: null,\r\n        object: null,\r\n        model: null,\r\n        caster: raycaster\r\n    };\r\n}\r\n\r\nexport function rayToWorldPosition(ray: Ray, camera: Camera, point: Vector3): Vector3 {\r\n    const dir = ray.direction;\r\n    const distance = camera.position.distanceTo(point);\r\n    return camera.position.clone().add(dir.multiplyScalar(distance));\r\n}\r\n\r\nexport function copyToVector3(from: Vector3, to: Vector3): Vector3 {\r\n    to.x = from.x; to.y = from.y; to.z = from.z;\r\n    return to;\r\n}\r\n\r\nexport const MILLIMETERS_IN_FOOT = 304.8;\r\nexport const MILLIMETERS_IN_INCH = 25.4;\r\n\r\nexport const lengthUnits: Record<\r\n    LengthUnit,\r\n    { inMillimeters: number; symbol: string }\r\n> = {\r\n    mm: { inMillimeters: 1, symbol: \"mm\" },\r\n    cm: { inMillimeters: 1e1, symbol: \"cm\" },\r\n    m: { inMillimeters: 1e3, symbol: \"m\" },\r\n    km: { inMillimeters: 1e6, symbol: \"km\" },\r\n    ft: { inMillimeters: MILLIMETERS_IN_FOOT, symbol: \"ft\" },\r\n    in: { inMillimeters: MILLIMETERS_IN_INCH, symbol: \"in\" },\r\n    yd: { inMillimeters: 914.4, symbol: \"yd\" },\r\n    mi: { inMillimeters: 1609344, symbol: \"mi\" },\r\n    custom: { inMillimeters: 1e3, symbol: \"m\" }\r\n};\r\n\r\nexport function formatLength(\r\n    millimeters: number,\r\n    unit: LengthUnit,\r\n    decimals: number = 2\r\n): string {\r\n    const value = lengthUnits[unit];\r\n    return `${roundToDecimals(millimeters / value.inMillimeters, decimals)} ${value.symbol}`;\r\n}\r\n\r\nfunction roundToDecimals(value: number, decimals: number): number {\r\n    const p = Math.pow(10, decimals);\r\n    return Math.round(value * p) / p;\r\n}\r\n\r\nexport const distanceFormatter = (lengthUnit: LengthUnit, decimals: number) => {\r\n    return (distance: number) => {\r\n        return formatLength(distance * 1000, lengthUnit, decimals);\r\n    };\r\n};\r\n\r\nexport const positionFormatter = (position: Vector3, lengthFormatter: CustomLengthFormatter) => {\r\n    return `X ${lengthFormatter(position.x)} | Y ${lengthFormatter(position.y)} | Z ${lengthFormatter(position.z)}`;\r\n};\r\n\r\nexport function createGeometryAttribute(geometry: BufferGeometry, attributeName: string, length: number, itemSize: number, arrayType: new (size: number) => TypedArray): BufferAttribute {\r\n    let array: TypedArray;\r\n    let attribute = attributeName === \"index\" ? geometry.getIndex() : geometry.getAttribute(attributeName) as BufferAttribute;\r\n\r\n    // minimize the number of array allocations, reallocate only if too small or 2x size\r\n    if (attribute && attribute.array.length >= length * itemSize && attribute.array.length < length * itemSize * 2) {\r\n        attribute.count = length;\r\n        attribute.updateRange.count = length * itemSize;\r\n        attribute.needsUpdate = true;\r\n    }\r\n    else {\r\n        array = new arrayType(length * itemSize);\r\n        attribute = new BufferAttribute(array, itemSize);\r\n        if (attributeName === \"index\") geometry.setIndex(attribute);\r\n        else geometry.setAttribute(attributeName, attribute);\r\n    }\r\n    return attribute;\r\n}\r\n\r\nexport interface ITrimBIMValidationInfo {\r\n    version?: string;\r\n    versionNumber?: number;\r\n}\r\n\r\nexport function getFileBuffer(file: File): Promise<ArrayBuffer> {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = event => {\r\n            const target = <any>event.target;\r\n            resolve(target.result);\r\n        };\r\n\r\n        reader.onerror = e => {\r\n            console.error(e);\r\n            return reject(e);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    });\r\n}\r\n\r\nexport async function toImage(blob: Blob): Promise<ImageBitmap | HTMLImageElement> {\r\n    if (typeof createImageBitmap === \"undefined\") {\r\n        return new Promise(async (resolve, reject) => {\r\n            const img = new Image();\r\n            img.src = URL.createObjectURL(blob);\r\n            img.onload = () => resolve(img);\r\n            img.onerror = () => reject(\"Image did not load\");\r\n        });\r\n    }\r\n\r\n    try {\r\n        // @ts-ignore\r\n        return await createImageBitmap(blob, { imageOrientation: \"flipY\" });\r\n    } catch (e) {\r\n        return await createImageBitmap(blob); // firefox does not support options argument\r\n    }\r\n}\r\n\r\nconst vec3 = new Vector3();\r\nexport function createScreenStaticSizeMesh(geometry: Geometry, material: Material, api: Api, adjustDistance?: (scale: number) => number): Mesh {\r\n    const marker = new Mesh(geometry, material as any);\r\n    marker.renderOrder = 1;\r\n\r\n    marker.onBeforeRender = () => {\r\n        let scale = api.camera.getProjectionCompensatingScale(marker.getWorldPosition(vec3).distanceTo(api.camera.position));\r\n        if (adjustDistance) scale = adjustDistance(scale);\r\n        marker.scale.set(scale, scale, scale);\r\n        marker.updateMatrixWorld(true);\r\n    };\r\n    return marker;\r\n}\r\n\r\nexport class Vector3Const {\r\n    static zero = Object.freeze(new Vector3(0, 0, 0));\r\n    static one = Object.freeze(new Vector3(1, 1, 1));\r\n    static up = Object.freeze(new Vector3(0, 0, 1));\r\n    static down = Object.freeze(new Vector3(0, 0, -1));\r\n    static forward = Object.freeze(new Vector3(0, 1, 0));\r\n    static back = Object.freeze(new Vector3(0, -1, 0));\r\n    static right = Object.freeze(new Vector3(1, 0, 0));\r\n    static left = Object.freeze(new Vector3(-1, 0, 0));\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = (iterable as any)[Symbol_iterator]();\n\n  do {\n    let item: IteratorResult<T>;\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result);\n  }\n\n  private _innerSub(ish: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift()!);\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * @deprecated renamed. Use {@link mergeMap}\n */\nexport const flatMap = mergeMap;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index = 0;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete(): void {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue: R): void {\n      this.destination.next!(innerValue);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private _throttled?: Subscription;\n  private _sendValue?: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue!);\n    }\n    this._hasValue = false;\n    this._sendValue = undefined;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> | null {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = undefined;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","import { getTouchPoint } from \"./Helpers/Utils\";\r\nimport { ConnectableObservable, fromEvent, merge, Observable } from \"rxjs\";\r\n\r\nimport {\r\n    buffer,\r\n    debounceTime,\r\n    delay,\r\n    filter,\r\n    map, mergeMap,\r\n    publish,\r\n    switchMap,\r\n    takeUntil,\r\n    tap,\r\n} from \"rxjs/operators\";\r\n\r\nimport { Picker } from \"./Picker/Picker\";\r\nimport { Vector3 } from \"three\";\r\nimport { IIntersection } from \"./Picker/IIntersection\";\r\nimport { MouseButton } from \"./common\";\r\nimport { Vector2 } from \"three\";\r\nimport { Model } from \"./Model\";\r\nimport {Cursor3D} from \"./Picker/Cursor3D\";\r\n\r\nexport interface Input {\r\n    x: number;\r\n    y: number;\r\n    originalEvent: ScrollEvent | MouseEvent | TouchEvent | UIEvent;\r\n    intersection?: IIntersection;\r\n}\r\n\r\nexport interface PointerInput extends Input {\r\n    mouseButton?: MouseButton;\r\n    anyMouseButtonDown?: boolean;\r\n    touchCount?: number;\r\n    isTouch: boolean;\r\n}\r\n\r\nexport interface ScrollEvent extends Input {\r\n    speed: number;\r\n}\r\n\r\n// Mac's Safari custom event https://developer.apple.com/documentation/webkitjs/gestureevent\r\ninterface GestureEvent extends UIEvent {\r\n    scale: number;\r\n    clientX: number;\r\n    clientY: number;\r\n}\r\n\r\nexport interface BehaviorOptions {\r\n    touchCount?: number;\r\n    button?: MouseButton;\r\n}\r\n\r\nexport class InputHandler {\r\n    private _cursor: string;\r\n\r\n    public pointerDown$: ConnectableObservable<PointerInput>;\r\n    private _pointerDownObserver: Observable<any>;\r\n\r\n    public pointerMove$: ConnectableObservable<PointerInput>;\r\n    private _moveObserver: ConnectableObservable<PointerInput>;\r\n\r\n    public pointerUp$: ConnectableObservable<PointerInput>;\r\n    private _pointerUpObserver: Observable<any>;\r\n\r\n    public wheel$: ConnectableObservable<ScrollEvent>;\r\n    public gesture$: ConnectableObservable<ScrollEvent>;\r\n    public zoom$: Observable<ScrollEvent>;\r\n    public contextMenu$: Observable<any>;\r\n\r\n    public keyDown$: ConnectableObservable<KeyboardEvent>;\r\n\r\n    public keyUp$: ConnectableObservable<KeyboardEvent>;\r\n\r\n    constructor(\r\n        public picker: Picker,\r\n        public container: HTMLElement,\r\n    ) {\r\n        const eventOptions = {\r\n            passive: false\r\n        };\r\n\r\n        let lastTouchTime: number;\r\n        const notDuplicate = (e: Event) => {\r\n            // OculusBrowser generates both mouse and touch events, filter duplicates\r\n            const now = performance.now();\r\n            if (typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent)\r\n                lastTouchTime = now;\r\n            if (typeof MouseEvent !== \"undefined\" && e instanceof MouseEvent)\r\n                return lastTouchTime === undefined || now - lastTouchTime > 1000;\r\n            return true;\r\n        };\r\n\r\n        this._pointerDownObserver = merge(\r\n            fromEvent(container, \"mousedown\", eventOptions),\r\n            fromEvent(container, \"touchstart\", eventOptions)\r\n        ).pipe(\r\n            filter(notDuplicate),\r\n            tap((e: Event) => {\r\n                if (e.cancelable)\r\n                    e.preventDefault();\r\n            }),\r\n            map((event: any) => this.convertEventToPointerInput(event))\r\n        );\r\n\r\n        this._moveObserver = merge(\r\n            fromEvent(window, \"mousemove\", eventOptions), // listen on window to allow drag mouse out of canvas\r\n            fromEvent(container, \"touchmove\", eventOptions)\r\n        ).pipe(\r\n            filter(notDuplicate),\r\n            map((event: any) => this.convertEventToPointerInput(event)),\r\n            publish()\r\n        ) as ConnectableObservable<PointerInput>;\r\n        this._moveObserver.connect();\r\n\r\n        this._pointerUpObserver = merge(\r\n            fromEvent(container, \"mouseup\", eventOptions),\r\n            fromEvent(container, \"touchend\", eventOptions)\r\n        ).pipe(\r\n            filter(notDuplicate),\r\n            map((event: any) => this.convertEventToPointerInput(event))\r\n        );\r\n\r\n        this.pointerDown$ = this._pointerDownObserver.pipe(\r\n            publish()\r\n        ) as ConnectableObservable<PointerInput>;\r\n        this.pointerDown$.connect();\r\n\r\n        this.pointerMove$ = this._moveObserver.pipe(publish()) as ConnectableObservable<PointerInput>;\r\n        this.pointerMove$.connect();\r\n\r\n        this.pointerUp$ = this._pointerUpObserver.pipe(\r\n            publish()\r\n        ) as ConnectableObservable<PointerInput>;\r\n        this.pointerUp$.connect();\r\n\r\n        this.wheel$ = fromEvent(container, \"wheel\", eventOptions).pipe(\r\n            map(e => this.fromWheelToScrollEvent(e as WheelEvent)),\r\n            publish()\r\n        ) as ConnectableObservable<ScrollEvent>;\r\n        this.wheel$.connect();\r\n\r\n        this.gesture$ = merge(\r\n            fromEvent(container, \"gesturestart\", eventOptions),\r\n            fromEvent(container, \"gesturechange\", eventOptions),\r\n            fromEvent(container, \"gestureend\", eventOptions)\r\n        ).pipe(\r\n            map(e => this.fromGestureToScrollEvent(e as GestureEvent)),\r\n            publish()\r\n        ) as ConnectableObservable<ScrollEvent>;\r\n        this.gesture$.connect();\r\n\r\n        // Use GestureEvent for macOS safari, ignore for iOS (TouchEvent will be used instead)\r\n        this.zoom$ = \"TouchEvent\" in window ? this.wheel$ : merge(this.wheel$, this.gesture$);\r\n\r\n        this.keyDown$ = fromEvent(document, \"keydown\", eventOptions).pipe(\r\n            filter(e => !(e as KeyboardEvent).repeat),\r\n            publish()\r\n        ) as ConnectableObservable<KeyboardEvent>;\r\n        this.keyDown$.connect();\r\n\r\n        this.keyUp$ = fromEvent(document, \"keyup\", eventOptions).pipe(\r\n            filter(e => !(e as KeyboardEvent).repeat),\r\n            publish()\r\n        ) as ConnectableObservable<KeyboardEvent>;\r\n        this.keyUp$.connect();\r\n\r\n        this.contextMenu$ = fromEvent(container, \"contextmenu\", eventOptions);\r\n        this.contextMenu$.subscribe(event => {\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    private clampScrollSpeed(speed: number): number {\r\n        // Windows mouse wheel gives discrete abs value 1 (very fast movements 2) - no values in between\r\n        // Windows track pad pinch gives same as mouse wheel\r\n        // Windows track pad scroll gives range 0.05 : 8 (but tends to be around 1)\r\n        // Mac mouse wheel gives range 0.04 : 7\r\n        // Mac track pad pinch gives range 0.01 : 1.1\r\n        // Mac track pad scroll gives 0.01 : 1.6\r\n\r\n        // Clamp abs value to normalize different devices mentioned above\r\n        speed = 0 === speed ? 0 : speed > 0 ? Math.max(speed, 0.3) : Math.min(speed, -0.3);\r\n        return Math.min(Math.max(speed, -2), 2);\r\n    }\r\n\r\n    private fromWheelToScrollEvent(event: WheelEvent): ScrollEvent {\r\n        event.preventDefault();\r\n\r\n        const speed = event.ctrlKey ? event.deltaY / 25 : // Trackpad pinch gesture (Chrome)\r\n            event.deltaMode === WheelEvent.DOM_DELTA_PIXEL ? event.deltaY / 100 :\r\n                event.deltaMode === WheelEvent.DOM_DELTA_LINE ? event.deltaY / 3 :\r\n                    event.deltaMode === WheelEvent.DOM_DELTA_PAGE ? event.deltaY * 80 : 0;\r\n\r\n        return {\r\n            speed: this.clampScrollSpeed(speed),\r\n            x: event.x,\r\n            y: event.y,\r\n            originalEvent: event\r\n        };\r\n    }\r\n\r\n    // Mac safari trackpad pinch gesture event\r\n    private fromGestureToScrollEvent(event: GestureEvent): ScrollEvent {\r\n        event.preventDefault();\r\n\r\n        // Mac safari trackpad pinch gives values 0.05 : 4\r\n        const speed = 1 - event.scale;\r\n        return {\r\n            speed: speed,\r\n            x: event.clientX,\r\n            y: event.clientY,\r\n            originalEvent: event\r\n        };\r\n    }\r\n\r\n    set cursor(cursor: string) {\r\n        this._cursor = this._cursor || \"default\";\r\n\r\n        if (cursor === \"\") {\r\n            this.container.classList.remove(this._cursor);\r\n            this.container.classList.add(\"default\");\r\n            this._cursor = \"default\";\r\n        } else if (cursor !== this._cursor) {\r\n            this.container.classList.remove(this._cursor);\r\n            this.container.classList.add(cursor);\r\n            this._cursor = cursor;\r\n        }\r\n    }\r\n\r\n    get cursor(): string {\r\n        this._cursor = this._cursor || \"default\";\r\n        return this._cursor;\r\n    }\r\n\r\n    static getInputDistanceVector(inputEvent: PointerInput, previousInputEvent: PointerInput): Vector3 {\r\n        if (inputEvent.isTouch && inputEvent.originalEvent instanceof TouchEvent &&\r\n            previousInputEvent.isTouch && previousInputEvent.originalEvent instanceof TouchEvent) {\r\n            return InputHandler.getTouchInputDistanceVector(\r\n                previousInputEvent.originalEvent.touches[0],\r\n                inputEvent.originalEvent.touches[0],\r\n                previousInputEvent.originalEvent.touches[1],\r\n                inputEvent.originalEvent.touches[1]\r\n            );\r\n        }\r\n        else {\r\n            return new Vector3(inputEvent.x - previousInputEvent.x, inputEvent.y - previousInputEvent.y);\r\n        }\r\n    }\r\n\r\n    private static getTouchInputDistanceVector(\r\n        oldFirstPoint: Touch,\r\n        newFirstPoint: Touch,\r\n        oldSecondPoint: Touch,\r\n        newSecondPoint: Touch\r\n    ): Vector3 {\r\n        let deltaX = newFirstPoint.clientX - oldFirstPoint.clientX;\r\n        let deltaY = newFirstPoint.clientY - oldFirstPoint.clientY;\r\n        let deltaZ = 0;\r\n\r\n        if (oldSecondPoint && newSecondPoint) {\r\n            deltaX = (deltaX + newSecondPoint.clientX - oldSecondPoint.clientX) / 2;\r\n            deltaY = (deltaY + newSecondPoint.clientY - oldSecondPoint.clientY) / 2;\r\n\r\n            const dx0 = (oldFirstPoint.clientX - oldSecondPoint.clientX);\r\n            const dy0 = (oldFirstPoint.clientY - oldSecondPoint.clientY);\r\n            const dx1 = (newFirstPoint.clientX - newSecondPoint.clientX);\r\n            const dy1 = (newFirstPoint.clientY - newSecondPoint.clientY);\r\n            const distance0 = Math.sqrt(dx0 * dx0 + dy0 * dy0);\r\n            const distance1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\r\n            deltaZ = distance1 - distance0;\r\n        }\r\n\r\n        return new Vector3(deltaX, deltaY, deltaZ);\r\n    }\r\n\r\n    private convertEventToPointerInput = (() => {\r\n        let previousEvent: TouchEvent | MouseEvent;\r\n\r\n        return (event: TouchEvent | MouseEvent): PointerInput => {\r\n            const inputEvent: PointerInput = {\r\n                x: 0,\r\n                y: 0,\r\n                originalEvent: event,\r\n                isTouch: typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent\r\n            };\r\n\r\n            if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\r\n                const point = getTouchPoint(event as TouchEvent);\r\n                inputEvent.x = point.x;\r\n                inputEvent.y = point.y;\r\n                inputEvent.touchCount = event.touches.length;\r\n            }\r\n            else if (typeof MouseEvent !== \"undefined\" && event instanceof MouseEvent) {\r\n                inputEvent.x = event.x;\r\n                inputEvent.y = event.y;\r\n                inputEvent.mouseButton = event.button;\r\n                inputEvent.anyMouseButtonDown = event.buttons !== 0;\r\n            }\r\n\r\n            previousEvent = event;\r\n\r\n            return inputEvent;\r\n        };\r\n    })();\r\n}\r\n\r\nexport const allowInput = (button: MouseButton, touchCount: number) => (e: PointerInput) =>\r\n    allowPointerInput(e, button, touchCount);\r\n\r\nexport function allowPointerInput(e: PointerInput, button: MouseButton, touchCount: number): boolean {\r\n    return (e.mouseButton === button && !e.isTouch) || (e.touchCount === touchCount && e.isTouch);\r\n}\r\n\r\nexport const controlsReleased = (inputs: InputHandler, button: MouseButton, touchCount: number) =>\r\n    merge(\r\n        inputs.pointerUp$.pipe(filter(e => e.mouseButton === button || (e.touchCount !== touchCount && e.isTouch))),\r\n        inputs.pointerMove$.pipe(filter(e => !e.isTouch && !e.anyMouseButtonDown || e.isTouch && e.touchCount !== touchCount))\r\n    );\r\n\r\nexport const doubleTapBehavior = (inputHandler: InputHandler, options: BehaviorOptions): Observable<PointerInput> => {\r\n    const taps = inputHandler.pointerDown$.pipe(\r\n        filter(allowInput(options.button, options.touchCount))\r\n    );\r\n\r\n    return taps.pipe(\r\n        buffer(taps.pipe(debounceTime(250))),\r\n        filter(events => events.length === 2),\r\n        map(events => events[0]),\r\n        filter(allowInput(options.button, options.touchCount))\r\n    );\r\n};\r\n\r\nexport const tapBehavior = (inputHandler: InputHandler, cursor: Cursor3D, options: BehaviorOptions): Observable<PointerInput> => {\r\n    const { button, touchCount } = options;\r\n    return inputHandler.pointerDown$.pipe(\r\n        filter(allowInput(button, touchCount)),\r\n        switchMap(down =>\r\n            inputHandler.pointerUp$.pipe(\r\n                filter(allowInput(button, 0)),\r\n                takeUntil(inputHandler.pointerMove$.pipe(delay(150))),\r\n                mergeMap(async e => {\r\n                    // recalculate for touch because was not calculated on mouse move\r\n                    if (e.isTouch) await cursor.calculateIntersection(down);\r\n                    e.intersection = cursor.intersection;\r\n                    return e;\r\n                }),\r\n                filter(hasIntersection),\r\n            )\r\n        )\r\n    );\r\n};\r\n\r\nexport const hasIntersection = (e: PointerInput) => !!(e && e.intersection);\r\n\r\nexport const addIntersection = (picker: Picker, models?: Model[]) => async (e: PointerInput): Promise<PointerInput> => {\r\n    e.intersection = await picker.pick(new Vector2(e.x, e.y), models);\r\n    return e;\r\n};\r\n\r\nexport const addIntersectionForNavigation = (picker: Picker) => async (e: PointerInput): Promise<PointerInput> => {\r\n    e.intersection = await picker.pickForNavigation(new Vector2(e.x, e.y));\r\n    return e;\r\n};\r\n","import { Box3, Camera, Frustum, Matrix4, Plane, Ray, Raycaster, Vector2, Vector3 } from \"three\";\r\nimport { IIntersection } from \"./IIntersection\";\r\nimport { Models } from \"../Models\";\r\nimport { Caster } from \"./Caster\";\r\nimport { ViewerCamera } from \"../Rendering/ViewerCamera\";\r\nimport { Settings } from \"../Settings\";\r\nimport { Model, PickableModel, SelectableModel, SnappedPickableModel } from \"../Model\";\r\nimport { PickComplexity, PickerCache } from \"./PickerCache\";\r\nimport { SnapType } from \"../common\";\r\n\r\nexport class Picker {\r\n    private _worldBoundingBox: Box3;\r\n    pickerBusy: boolean;\r\n    private cache = new PickerCache();\r\n\r\n    constructor(\r\n        private _camera: ViewerCamera,\r\n        private _models: Models,\r\n        private _container: HTMLElement,\r\n        private settings: Settings\r\n    ) {\r\n        _camera.subscribe(() => this.cache.clear());\r\n    }\r\n\r\n    public setWorldBoundingBox(box: Box3): void {\r\n        this._worldBoundingBox = box;\r\n    }\r\n\r\n    private createCaster(screenPosition: Vector2, snapDistance: number): Caster {\r\n        const caster = new Caster();\r\n        caster.screenPosition = screenPosition;\r\n        const p = screenPositionToRayTracePoint(caster.screenPosition, this._container);\r\n        caster.setFromCamera(p, this._camera);\r\n        caster.frustum = this.createFrustumFromScreenPoint(caster.screenPosition, snapDistance);\r\n        return caster;\r\n    }\r\n\r\n    private createFrustumFromScreenPoint(screenPoint: Vector2, snapDistance: number): Frustum {\r\n        return this.createFrustumFromScreenRect(screenPoint.clone().subScalar(snapDistance), screenPoint.clone().addScalar(snapDistance));\r\n    }\r\n\r\n    private createFrustumFromScreenRect = (() => {\r\n        const top = new Plane();\r\n        const right = new Plane();\r\n        const bottom = new Plane();\r\n        const left = new Plane();\r\n        const near = new Plane();\r\n        const far = new Plane();\r\n        const topLeft = new Vector3();\r\n        const topRight = new Vector3();\r\n        const bottomLeft = new Vector3();\r\n        const bottomRight = new Vector3();\r\n        const topLeftNear = new Vector3();\r\n        const bottomRightNear = new Vector3();\r\n        const topLeftPoint = new Vector2();\r\n        const bottomRightPoint = new Vector2();\r\n\r\n        return (screenPointTopLeft: Vector2, screenPointBottomRight: Vector2): Frustum => {\r\n            screenPositionToRayTracePoint(screenPointTopLeft, this._container, topLeftPoint);\r\n            screenPositionToRayTracePoint(screenPointBottomRight, this._container, bottomRightPoint);\r\n\r\n            const camera = this._camera;\r\n            topLeft.set(topLeftPoint.x, topLeftPoint.y, 1).unproject(camera);\r\n            topRight.set(bottomRightPoint.x, topLeftPoint.y, 1).unproject(camera);\r\n            bottomLeft.set(topLeftPoint.x, bottomRightPoint.y, 1).unproject(camera);\r\n            bottomRight.set(bottomRightPoint.x, bottomRightPoint.y, 1).unproject(camera);\r\n\r\n            topLeftNear.set(topLeftPoint.x, topLeftPoint.y, 0).unproject(camera);\r\n            bottomRightNear.set(bottomRightPoint.x, bottomRightPoint.y, 0).unproject(camera);\r\n\r\n            top.setFromCoplanarPoints(topLeftNear, topLeft, topRight);\r\n            right.setFromCoplanarPoints(bottomRightNear, topRight, bottomRight);\r\n            bottom.setFromCoplanarPoints(bottomRightNear, bottomRight, bottomLeft);\r\n            left.setFromCoplanarPoints(topLeftNear, bottomLeft, topLeft);\r\n\r\n            camera.getWorldDirection(near.normal);\r\n            near.constant = camera.position.length();\r\n            far.normal = near.normal;\r\n            far.constant = Infinity;\r\n\r\n            return new Frustum(top, bottom, left, right, near, far);\r\n        };\r\n    })();\r\n\r\n    async pickForNavigation(screenPosition: Vector2): Promise<IIntersection> {\r\n        return await this.cache.execCached(screenPosition, undefined, PickComplexity.NAVIGATION, async () => {\r\n            const caster = this.createCaster(screenPosition, 50);\r\n            caster.navigation = true;\r\n            return this.reduceIntersections(await this.pickAllModels(caster, undefined));\r\n        });\r\n    }\r\n\r\n    pick(screenPosition: Vector2, models: Model[]): Promise<IIntersection> {\r\n        return this.cache.execCached(screenPosition, models, PickComplexity.NORMAL, async () => {\r\n            const caster = this.createCaster(screenPosition, this.settings.snapDistance);\r\n            return this.reduceIntersections(await this.pickAllModels(caster, models));\r\n        });\r\n    }\r\n\r\n    async pickSnapped(screenPosition: Vector2, snapTypes: SnapType[]): Promise<IIntersection> {\r\n        const intersection = await this.cache.execCached(screenPosition, undefined, PickComplexity.SNAPPED, async () => {\r\n            const caster = this.createCaster(screenPosition, this.settings.snapDistance);\r\n            return this.reduceIntersections(await this.pickAllModelsSnapped(caster, snapTypes));\r\n        });\r\n        // Filter cached interesction with unwanted snap type\r\n        return (intersection && snapTypes.includes(intersection.snapType)) ? intersection : null;\r\n    }\r\n\r\n    public async getIntersectionFromScreenRect(screenPointTopLeft: Vector2, screenPointBottomRight: Vector2): Promise<IIntersection[]> {\r\n        const caster = new Caster();\r\n        delete caster.ray;\r\n        caster.frustum = this.createFrustumFromScreenRect(screenPointTopLeft, screenPointBottomRight);\r\n        const picks = [];\r\n        const models = this._models.getIterable();\r\n\r\n        for (const model of models) {\r\n            const m = model as Model & SelectableModel;\r\n            if (m.isSelectable) picks.push(m.pickFrustum(caster));\r\n        }\r\n\r\n        let intersections: (IIntersection)[] = await Promise.all(picks);\r\n        intersections = intersections.filter(item => !!item);\r\n\r\n        return intersections;\r\n    }\r\n\r\n    private async pickAllModels(caster: Caster, models: Model[]): Promise<IIntersection[]> {\r\n        const promises: Array<Promise<IIntersection>> = [];\r\n        for (const model of models ? models : this._models.getIterable()) {\r\n            const m = model as Model & PickableModel;\r\n            if (m.pick)\r\n                promises.push(m.pick(caster));\r\n        }\r\n        const intersections = await Promise.all(promises);\r\n        return intersections.filter(i => !!i);\r\n    }\r\n\r\n    private async pickAllModelsSnapped(caster: Caster, snapTypes: SnapType[]): Promise<IIntersection[]> {\r\n        if (this.pickerBusy) return;\r\n        this.pickerBusy = true;\r\n\r\n        const promises: Array<Promise<IIntersection[]>> = [];\r\n        for (const model of this._models.getIterable()) {\r\n            const m = model as Model & SnappedPickableModel;\r\n            if (m.pickSnapped)\r\n                promises.push(m.pickSnapped(caster, snapTypes));\r\n        }\r\n        const ins = await Promise.all(promises);\r\n\r\n        this.pickerBusy = false;\r\n        return ins.flat().filter(i => !!i);\r\n    }\r\n\r\n    private reduceIntersections(intersections: IIntersection[]): IIntersection {\r\n        return !intersections || intersections.length === 0 ? undefined : intersections.reduce((a, b) => {\r\n            // when comparing edges or points that are closer than all the faces, compare by distance to ray not distance to ray origin.\r\n            const deltaDistance = (a.distanceSqToRay && b.distanceSqToRay) ?\r\n                (Math.sqrt(a.distanceSqToRay) / a.distance) - (Math.sqrt(b.distanceSqToRay) / b.distance) :\r\n                a.distance - b.distance;\r\n            const deltaPriority = (a.pickPriority ? a.pickPriority : 0) - (b.pickPriority ? b.pickPriority : 0);\r\n            const deltaSnapType = (a.snapType ? a.snapType : 0) - (b.snapType ? b.snapType : 0);\r\n\r\n            return (deltaPriority === 0 ? (deltaSnapType === 0 ? deltaDistance : -deltaSnapType) : -deltaPriority) < 0 ? a : b;\r\n        });\r\n    }\r\n\r\n    public getNearestModel(): { box: Box3; distance: number } {\r\n        let nearest: Box3;\r\n        let shortest = Infinity;\r\n        let distance;\r\n        for (const box of this._models.boundingboxes) {\r\n            distance = box.distanceToPoint(this._camera.position);\r\n            if (shortest > distance) {\r\n                shortest = distance;\r\n                nearest = box;\r\n            }\r\n        }\r\n        return { box: nearest, distance: shortest };\r\n    }\r\n}\r\n\r\nconst rayCaster = new Raycaster();\r\nexport function screenPositionToRay(point: { x: number; y: number }, container: HTMLElement, camera: Camera, out: Ray = new Ray()): Ray {\r\n    rayCaster.setFromCamera(screenPositionToRayTracePoint(point, container), camera);\r\n    return out.copy(rayCaster.ray);\r\n}\r\n\r\nexport function screenPositionToRayTracePoint(point: { x: number; y: number }, container: HTMLElement, out: Vector2 = new Vector2()): Vector2 {\r\n    const dimensions = container.getBoundingClientRect();\r\n    out.x = ((point.x - dimensions.left) / container.clientWidth) * 2 - 1;\r\n    out.y = -((point.y - dimensions.top) / container.clientHeight) * 2 + 1;\r\n    return out;\r\n}\r\n\r\nexport const worldToScreenPoint = (() => {\r\n    const pos = new Vector3();\r\n    const cameraWorldPos = new Vector3();\r\n    const matrix4 = new Matrix4();\r\n\r\n    return (point: Vector3, camera: Camera, canvasWidth: number, canvasHeight: number) => {\r\n        pos.copy(point);\r\n        cameraWorldPos.copy(point);\r\n        matrix4.getInverse(camera.matrixWorld);\r\n\r\n        cameraWorldPos.applyMatrix4(matrix4);\r\n\r\n        if (cameraWorldPos.z > 0) {\r\n            return;\r\n        }\r\n\r\n        pos.project(camera);\r\n        pos.x = ((pos.x + 1) * canvasWidth) / 2;\r\n        pos.y = ((-pos.y + 1) * canvasHeight) / 2;\r\n        camera.getWorldPosition(cameraWorldPos);\r\n        pos.z = point.distanceTo(cameraWorldPos);\r\n\r\n        return pos;\r\n    };\r\n})();\r\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from \"../../../build/three.module.js\";\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.data.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from \"../../../build/three.module.js\";\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\n\nexport { LineMaterial };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tMesh.call( this );\n\n\tthis.type = 'LineSegments2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n","import {\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tMesh\n} from \"../../../build/three.module.js\";\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","import {\r\n    Vector3,\r\n    WebGLRenderer,\r\n    Intersection,\r\n    Matrix4,\r\n    Ray,\r\n    LineSegments,\r\n    Frustum,\r\n    Line3,\r\n    InterleavedBufferAttribute,\r\n    Box3,\r\n    InterleavedBuffer,\r\n} from \"three\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\r\nimport {Caster} from \"../Picker/Caster\";\r\nimport {LineSegments2} from \"three/examples/jsm/lines/LineSegments2\";\r\n\r\nexport class MeshLine extends LineSegments2 {\r\n    geometry: LineGeometry;\r\n    material: LineMaterial;\r\n\r\n    private _inverseMatrix = new Matrix4();\r\n    private _ray = new Ray();\r\n    private _frustum = new Frustum();\r\n    private _line3 = new Line3();\r\n    private _box = new Box3();\r\n    private vStart = new Vector3();\r\n    private vEnd = new Vector3();\r\n    private interPoint = new Vector3();\r\n\r\n    constructor(geometry: LineGeometry, material: LineMaterial) {\r\n        super(geometry, material);\r\n        this.material = material;\r\n        material.dashed ? material.defines.USE_DASH = \"\": delete material.defines.USE_DASH;\r\n        this.onBeforeRender = (renderer: WebGLRenderer) => renderer.getSize(material.resolution);\r\n    }\r\n\r\n    update(vectors: Vector3[] | Float32Array): void {\r\n        let positions: Float32Array;\r\n\r\n        if (vectors instanceof Float32Array) {\r\n            positions = vectors\r\n        }\r\n        else {\r\n            const positionsAttribute = this.geometry.attributes.instanceEnd as InterleavedBufferAttribute;\r\n            positions = positionsAttribute ? positionsAttribute.data.array as Float32Array : undefined;\r\n            if (!positions || positions.length !== vectors.length * 3)\r\n                positions = new Float32Array(vectors.length * 3);\r\n            for (let i = 0; i < vectors.length; i++) vectors[i].toArray(positions, i * 3);\r\n        }\r\n\r\n        const instanceStartAttr = this.geometry.getAttribute(\"instanceStart\");\r\n        if (instanceStartAttr && instanceStartAttr.array.length !== positions.length * 2 - 6) {\r\n            // TODO: LineGeometry does not support resizing, this is a hackaround. Avoid this if possible\r\n            this.geometry = new LineGeometry();\r\n        }\r\n        this.geometry.setPositions(positions);\r\n        if (this.material.dashed) this.computeLineDistances();\r\n    }\r\n\r\n    onUpload( callback: () => void ): void {\r\n        const startBuffer = (this.geometry.attributes.instanceStart as InterleavedBufferAttribute).data as any as InterleavedBuffer;\r\n        (startBuffer as any).onUploadCallback = callback;\r\n        const endBuffer = (this.geometry.attributes.instanceEnd as InterleavedBufferAttribute).data as any as InterleavedBuffer;\r\n        (endBuffer as any).onUploadCallback = callback;\r\n    }\r\n\r\n    raycast(caster: Caster, intersects: Intersection[]): void {\r\n        const geometry = this.geometry;\r\n        const matrixWorld = this.matrixWorld;\r\n\r\n        this._box.copy(geometry.boundingBox);\r\n        this._box.applyMatrix4(matrixWorld);\r\n\r\n        if (!caster.frustum.intersectsBox(this._box)) return;\r\n\r\n        this._inverseMatrix.getInverse(matrixWorld);\r\n        this._ray.copy(caster.ray).applyMatrix4(this._inverseMatrix);\r\n        this._frustum.copy(caster.frustum);\r\n        for (const plane of this._frustum.planes) plane.applyMatrix4(this._inverseMatrix);\r\n\r\n        const step = (this && this instanceof LineSegments) ? 2 : 1;\r\n\r\n        const positions = (geometry.attributes.instanceEnd as InterleavedBufferAttribute).data.array;\r\n\r\n        for (let i = 0, l = positions.length / 3 - 1; i < l; i += step) {\r\n            this.vStart.fromArray(positions, 3 * i);\r\n            this.vEnd.fromArray(positions, 3 * i + 3);\r\n\r\n            if (!this.intersectFrustum(this._frustum, this.vStart, this.vEnd, this.interPoint)) continue;\r\n\r\n            this.interPoint.applyMatrix4(this.matrixWorld);\r\n            const distance = caster.ray.origin.distanceTo(this.interPoint);\r\n            if (distance < caster.near || distance > caster.far) continue;\r\n\r\n            intersects.push({\r\n                distance: distance,\r\n                point: this.interPoint.clone(),\r\n                index: i,\r\n                object: this\r\n            });\r\n        }\r\n    }\r\n\r\n    private intersectFrustum(frustum: Frustum, lineStart: Vector3, lineEnd: Vector3, target: Vector3): boolean {\r\n        this._line3.set(lineStart, lineEnd)\r\n        for (let i = 0; i < 4; i++)\r\n            if (frustum.planes[i].intersectLine(this._line3, target) && frustum.containsPoint(target)) return true;\r\n    }\r\n}\r\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","import {MouseButton, Tool,} from \"@technology/webgl-viewer/dist/esnext/common\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {addIntersection, PointerInput} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\r\nimport {delay, map, mergeMap, switchMap, takeUntil, tap, throttleTime} from \"rxjs/operators\";\r\nimport {AssemblyEditingModel} from \"../AssemblyEditingModel\";\r\nimport {SnapPoint} from \"../SnapPoint\";\r\nimport {\r\n    Geometry,\r\n    Mesh,\r\n    MeshBasicMaterial,\r\n    Plane,\r\n    Scene,\r\n    SphereGeometry,\r\n    Vector2,\r\n    Vector3\r\n} from \"three\";\r\nimport {screenPositionToRayTracePoint} from \"@technology/webgl-viewer/dist/esnext/Picker/Picker\";\r\nimport {ViewerCamera} from \"@technology/webgl-viewer/dist/esnext/Rendering/ViewerCamera\";\r\nimport {Caster} from \"@technology/webgl-viewer/dist/esnext/Picker/Caster\";\r\nimport {AssemblyObject} from \"../AssemblyObject\";\r\nimport {SnapState} from \"../common\";\r\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/Utils\";\r\nimport {MeshLine} from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\r\nimport {LineMaterial} from \"three/examples/jsm/lines/LineMaterial\";\r\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\r\nimport {WebglViewer} from \"@technology/webgl-viewer\";\r\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\r\n\r\nexport class AssemblyEditingTool implements Tool {\r\n    public viewer: WebglViewer;\r\n    public mouseButton: MouseButton;\r\n    public touchCount: number;\r\n    public planeSnapStartMarkerPicked: boolean = false;\r\n\r\n    public copy: boolean = false;\r\n\r\n    private _moveSubscription: Subscription;\r\n    private _hoverSubscription: Subscription;\r\n    private _tapsSubscription: Subscription;\r\n    private _tapsObservable: Observable<PointerInput>;\r\n    private _moveObservable: Observable<PointerInput>;\r\n    private _hoverObservable: Observable<PointerInput>;\r\n    private _defaultSubscription: Subscription;\r\n    private _objectSelectedSubscription: Subscription;\r\n    private _objectMovingSubscription: Subscription;\r\n    private caster: Caster = new Caster();\r\n    private dragStart: Vector3 = new Vector3();\r\n    private dragEnd: Vector3 = new Vector3();\r\n    private assemblyObjectStartPosition: Vector3 = new Vector3();\r\n    private dragMovingScreenPosition: Vector2 = new Vector2();\r\n    private dragMoving: Vector3 = new Vector3();\r\n    private dragOffset: Vector3 = new Vector3();\r\n    private cameraDirection: Vector3 = new Vector3();\r\n    private dragPlane: Plane = new Plane();\r\n    private assemblyObject: AssemblyObject;\r\n    private planeSnapStartMarkerGeometry: Geometry = new SphereGeometry(0.5)\r\n    private planeSnapStartMarkerMaterial = new MeshBasicMaterial({color: 0x6666ff, depthTest: false, depthWrite: false, transparent: true });\r\n    private planeSnapStartMarker: Mesh;\r\n    private planeSnapMeshLine: MeshLine;\r\n    private planeSnapMeshLineStart: Vector3 = new Vector3();\r\n    private planeSnapMeshLineEnd: Vector3 = new Vector3();\r\n    private renderPass: RenderPass;\r\n    private startPosition: Vector3 = new Vector3();\r\n    private endPosition: Vector3 = new Vector3();\r\n    private startDirection: Vector3 = new Vector3();\r\n    private endDirection: Vector3 = new Vector3();\r\n    private pickingEnd: boolean = false;\r\n    private assemblyObjectToMove: AssemblyObject;\r\n\r\n    get name(): string {\r\n        return \"assemblyEditing\";\r\n    }\r\n\r\n    constructor(private _api: Api, private model: AssemblyEditingModel, private _camera: ViewerCamera) {\r\n        this.createPlaneSnapMarker();\r\n        this._camera = this._api.camera;\r\n        this.mouseButton = MouseButton.left;\r\n\r\n        this._tapsObservable = this._api.inputHandler.pointerDown$.pipe(\r\n            switchMap(down =>\r\n                this._api.inputHandler.pointerUp$.pipe(\r\n                    takeUntil(this._api.inputHandler.pointerMove$.pipe(delay(150))),\r\n                    map(() => down),\r\n                    mergeMap(addIntersection(this._api.inputHandler.picker)),\r\n                )\r\n            )\r\n        );\r\n\r\n        this._moveObservable = this._api.inputHandler.pointerMove$.pipe(\r\n            throttleTime(100),\r\n            mergeMap(addIntersection(this._api.inputHandler.picker)),\r\n            tap(e => this.onMove(e)),\r\n        )\r\n\r\n        this._hoverObservable = this._api.inputHandler.pointerMove$.pipe(\r\n            throttleTime(100),\r\n            tap(e => this.onHover(e)),\r\n        )\r\n\r\n        this.planeSnapMeshLine = new MeshLine(new LineGeometry(), new LineMaterial({linewidth: 3, color: 0x6666ff, opacity: 0.3, depthTest: false, depthWrite: false, transparent: true}));\r\n        this.createRenderPass();\r\n    }\r\n\r\n    private createRenderPass(): void {\r\n        this.renderPass = new RenderPass(new Scene(), this._api.camera);\r\n        this.renderPass.clear = false;\r\n        this._api.renderingManager.composer.addPassAfterAntialiasing(this.renderPass);\r\n    }\r\n\r\n    private createPlaneSnapMarker(): void {\r\n        this.planeSnapStartMarker = createScreenStaticSizeMesh(this.planeSnapStartMarkerGeometry, this.planeSnapStartMarkerMaterial as any, this._api);\r\n        this.planeSnapStartMarker.name = \"planeStartMarker\";\r\n        this.planeSnapStartMarker.renderOrder = 1;\r\n    }\r\n\r\n    private addPlaneSnapMarker(position: Vector3): void {\r\n        this.planeSnapStartMarker.position.copy(position);\r\n        this.model.add(this.planeSnapStartMarker);\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    private updatePlaneSnapMeshLine(position: Vector3): void {\r\n        this.planeSnapStartMarker.position.clone()\r\n        this.planeSnapMeshLineStart.copy(this.planeSnapStartMarker.position.clone());\r\n        this.planeSnapMeshLineEnd.copy(position);\r\n        this.planeSnapMeshLine.update([this.planeSnapMeshLineStart, this.planeSnapMeshLineEnd]);\r\n        this.planeSnapMeshLine.visible = true;\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    private removePlaneSnapMarker(): void {\r\n        this.model.remove(this.planeSnapStartMarker);\r\n        this.planeSnapMeshLine.visible = false;\r\n        if (this._hoverSubscription) this._hoverSubscription.unsubscribe();\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    private _onPickObjectTap(event: PointerInput): void {\r\n        const intersection = event.intersection;\r\n        if (!intersection || !intersection.object) {\r\n            this.removePlaneSnapMarker();\r\n            return;\r\n        }\r\n\r\n        if (!this.model.assetGUIDs.includes(intersection.object.name)) {\r\n            return;\r\n        }\r\n\r\n        const assemblyObjects = this.model.assemblyObjects;\r\n        for (const assemblyObject of assemblyObjects) {\r\n            if (assemblyObject.assetGUID === intersection.object.name)\r\n                this.assemblyObject = assemblyObject;\r\n        }\r\n\r\n        this.showSnaps(intersection.object.name);\r\n\r\n        this.objectSelectedState();\r\n    };\r\n\r\n    private async _onPickStartSnapTap(event: PointerInput): Promise<void> {\r\n        const intersection = event.intersection;\r\n        if (!intersection || !intersection.object) {\r\n            this.removePlaneSnapMarker();\r\n            this.defaultState();\r\n            return;\r\n        }\r\n\r\n        if (this.model.assetGUIDs.includes(intersection.object.name)) {\r\n            const previousAssemblyObjectAssetGUID = this.assemblyObject.assetGUID;\r\n            const assemblyObjects = this.model.assemblyObjects;\r\n            for (const assemblyObject of assemblyObjects) {\r\n                if (assemblyObject.assetGUID === intersection.object.name ) {\r\n                    this.assemblyObject = assemblyObject;\r\n                }\r\n            }\r\n\r\n            if (!this.pickingEnd) {\r\n                if (previousAssemblyObjectAssetGUID === this.assemblyObject.assetGUID) {\r\n                    this.startPosition.copy(intersection.point);\r\n                    this.startDirection.copy(intersection.normal).normalize();\r\n                    this.pickingEnd = true;\r\n                    if (this.copy) {\r\n                        const newAssemblyGUID = await  this.model.copyAssembly(this.viewer, this.assemblyObject.assetGUID);\r\n                        for (const assemblyObject of assemblyObjects) {\r\n                            if (assemblyObject.assetGUID === newAssemblyGUID) {\r\n                                this.assemblyObject = assemblyObject;\r\n                            }\r\n                        }\r\n                    }\r\n                    this.assemblyObjectToMove = this.assemblyObject;\r\n\r\n                    this.addPlaneSnapMarker(intersection.point);\r\n                    this._hoverSubscription = this._hoverObservable.subscribe();\r\n                }\r\n            } else {\r\n                this.removePlaneSnapMarker();\r\n                this._hoverSubscription.unsubscribe();\r\n                this.endPosition.copy(intersection.point);\r\n                this.endDirection.copy(intersection.normal).negate().normalize();\r\n                this.pickingEnd = false;\r\n\r\n                await this.assemblyObjectToMove.moveAndRotate(this.startPosition, this.endPosition, this.startDirection, this.endDirection);\r\n            }\r\n\r\n            this.showSnaps(intersection.object.name);\r\n\r\n            return;\r\n        }\r\n\r\n        if (intersection.object.parent.name === \"SnapPoint\") {\r\n            await console.log(\"2\");\r\n            this.pickingEnd = false;\r\n            this.removePlaneSnapMarker();\r\n\r\n            if (this.copy) {\r\n                const newAssemblyGUID = await  this.model.copyAssembly(this.viewer, this.assemblyObject.assetGUID);\r\n                for (const assemblyObject of this.model.assemblyObjects) {\r\n                    if (assemblyObject.assetGUID === newAssemblyGUID) {\r\n                        this.assemblyObject = assemblyObject;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const snapPoint = intersection.object.parent as SnapPoint;\r\n            if (snapPoint.snapState === SnapState.enabled) {\r\n                snapPoint.snapState = SnapState.active;\r\n                this.assemblyObjectStartPosition.copy(this.assemblyObject.position);\r\n                this._camera.getWorldDirection(this.cameraDirection);\r\n                snapPoint.getWorldPosition(this.dragStart);\r\n                this.dragOffset.copy(this.dragStart.clone().sub(this.assemblyObjectStartPosition));\r\n                this.dragMoving.copy(this.dragStart.clone());\r\n                this.dragPlane.setFromNormalAndCoplanarPoint(this.cameraDirection, this.dragStart);\r\n                this.objectMovingState();\r\n            }\r\n            return;\r\n        }\r\n        this.removePlaneSnapMarker();\r\n    };\r\n\r\n    private async _onPickEndSnapTap(event: PointerInput): Promise<void> {\r\n        this.deactivateSnapPoints();\r\n        const intersection = event.intersection;\r\n        if (!intersection || !intersection.object) {\r\n            await this.assemblyObject.updatePosition(this.assemblyObjectStartPosition);\r\n            this.objectSelectedState();\r\n            return;\r\n        }\r\n        if (this.model.assetGUIDs.includes(intersection.object.name)) {\r\n            await this.assemblyObject.updatePosition(this.assemblyObjectStartPosition);\r\n            this.objectSelectedState();\r\n            return;\r\n        }\r\n        if (intersection.object.parent.name === \"SnapPoint\") {\r\n            const snapPoint = intersection.object.parent as SnapPoint;\r\n            if (snapPoint.snapState !== SnapState.enabled) {\r\n                snapPoint.getWorldPosition(this.dragEnd);\r\n                await this.assemblyObject.updatePosition(this.dragEnd.clone().sub(this.dragOffset));\r\n                this.defaultState();\r\n            }\r\n            return;\r\n        }\r\n    };\r\n\r\n    private async onMove(event: PointerInput): Promise<void> {\r\n        this.updateFromPointerPosition(event);\r\n\r\n        if (event.intersection && event.intersection.object.parent.name === \"SnapPoint\") {\r\n            event.intersection.object.getWorldPosition(this.dragMoving);\r\n        }\r\n\r\n        await this.assemblyObject.updatePosition(this.dragMoving.clone().sub(this.dragOffset));\r\n\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    private onHover(event: PointerInput): void {\r\n        this.updateFromPointerPosition(event);\r\n        this.updatePlaneSnapMeshLine(this.dragMoving.clone())\r\n    }\r\n\r\n    private updateFromPointerPosition(event: PointerInput): void {\r\n        this.dragMovingScreenPosition.set(event.x, event.y);\r\n        this.caster.screenPosition = this.dragMovingScreenPosition;\r\n\r\n        const p = screenPositionToRayTracePoint(this.caster.screenPosition, this._api.container);\r\n        this.caster.setFromCamera(p, this._camera);\r\n\r\n        this.caster.ray.intersectPlane(this.dragPlane, this.dragMoving);\r\n    }\r\n\r\n    private showSnaps(trimbimId: string): void {\r\n        const assemblyObjects = this.model.assemblyObjects;\r\n        for (const assemblyObject of assemblyObjects) {\r\n            assemblyObject.showSnapPoints();\r\n            trimbimId === assemblyObject.assetGUID ? assemblyObject.enableSnapPoints() : assemblyObject.disableSnapPoints();\r\n        }\r\n    }\r\n\r\n    private hideSnaps(): void {\r\n        const assemblyObjects = this.model.assemblyObjects;\r\n        for (const assemblyObject of assemblyObjects) {\r\n            assemblyObject.disableSnapPoints();\r\n            assemblyObject.hideSnapPoints();\r\n        }\r\n    }\r\n\r\n    private deactivateSnapPoints(): void {\r\n        const assemblyObjects = this.model.assemblyObjects;\r\n        for (const assemblyObject of assemblyObjects) {\r\n            assemblyObject.disableSnapPoints();\r\n        }\r\n    }\r\n\r\n    get enabled(): boolean {\r\n        return !!this._tapsSubscription;\r\n    }\r\n\r\n    set enabled(enabled: boolean) {\r\n        this.unsubscribeAll();\r\n        if (this._tapsSubscription) this._tapsSubscription.unsubscribe();\r\n        if (!enabled) {\r\n            this.hideSnaps();\r\n            this.renderPass.scene.remove(this.planeSnapMeshLine);\r\n            return;\r\n        }\r\n        this._tapsSubscription = this._tapsObservable.subscribe();\r\n        this.defaultState();\r\n\r\n        this.planeSnapMeshLine.visible = false;\r\n        this.renderPass.scene.add(this.planeSnapMeshLine);\r\n    }\r\n\r\n    private defaultState(): void {\r\n        this.hideSnaps();\r\n        this.unsubscribeAll();\r\n        this._defaultSubscription = this._tapsObservable.subscribe(event => {\r\n            if (event.mouseButton === this.mouseButton || event.isTouch) this._onPickObjectTap(event);\r\n        });\r\n    }\r\n\r\n    private objectSelectedState(): void {\r\n        this.unsubscribeAll();\r\n        this._objectSelectedSubscription = this._tapsObservable.subscribe(event => {\r\n            if (event.mouseButton === this.mouseButton || event.isTouch) this._onPickStartSnapTap(event);\r\n        });\r\n    }\r\n\r\n    private objectMovingState(): void {\r\n        this.unsubscribeAll();\r\n        this._moveSubscription = this._moveObservable.subscribe();\r\n        this._objectMovingSubscription = this._tapsObservable.subscribe(event => {\r\n            if (event.mouseButton === this.mouseButton || event.isTouch) this._onPickEndSnapTap(event).then();\r\n        });\r\n    }\r\n\r\n    private unsubscribeAll(): void {\r\n        if (this._defaultSubscription) this._defaultSubscription.unsubscribe();\r\n        if (this._objectSelectedSubscription) this._objectSelectedSubscription.unsubscribe();\r\n        if (this._objectMovingSubscription) this._objectMovingSubscription.unsubscribe();\r\n        if (this._moveSubscription) this._moveSubscription.unsubscribe();\r\n    }\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport {Object3D, Box3, Mesh, Points, Matrix4, BufferGeometry, Line} from \"three\";\r\nimport { IIntersection } from \"./Picker/IIntersection\";\r\nimport { Caster } from \"./Picker/Caster\";\r\nimport { Vector3Const } from \"./Helpers/Utils\";\r\nimport { PointerInput } from \"./InputHandler\";\r\nimport {SnapType} from \"./common\";\r\n\r\nexport type GeometryObject3D = Mesh<BufferGeometry> | Points<BufferGeometry> | Line<BufferGeometry>;\r\n\r\nexport interface SelectableModel extends PickableModel {\r\n    readonly isSelectable: true;\r\n    pickFrustum(caster: Caster): Promise<IIntersection>;\r\n    setSelection(ids: number[]): void;\r\n    clearSelection(): void;\r\n}\r\n\r\nexport interface HoverableModel {\r\n    setHoveredFromEvent(event: PointerInput): void;\r\n}\r\n\r\nexport interface PickableModel {\r\n    pick(caster: Caster): Promise<IIntersection>;\r\n}\r\n\r\nexport interface SnappedPickableModel extends PickableModel {\r\n    pickSnapped(caster: Caster, snapTypes: SnapType[]): Promise<IIntersection[]>;\r\n}\r\n\r\nexport abstract class Model extends Object3D {\r\n    get modelId(): string {\r\n        return this.name;\r\n    }\r\n\r\n    protected boundingBox: BehaviorSubject<Box3>;\r\n\r\n    constructor(name: string) {\r\n        super();\r\n        super.name = name;\r\n        this.boundingBox = new BehaviorSubject(new Box3());\r\n        this.up.copy(Vector3Const.up);\r\n    }\r\n\r\n    getBoundingBox(ids?: number[]): Promise<Box3> {\r\n        return Promise.resolve(this.boundingBox.value);\r\n    }\r\n\r\n    subscribeToBoundingBox(callback: () => void): void {\r\n        this.boundingBox.subscribe(callback);\r\n    }\r\n\r\n    transform(matrix: Matrix4): void {\r\n        const newTransform = new Matrix4().fromArray(matrix.elements);\r\n        const oldTransform = this.matrixWorld.clone();\r\n        newTransform.decompose(this.position, this.quaternion, this.scale);\r\n\r\n        const bbTransform = newTransform.multiply(oldTransform.getInverse(oldTransform));\r\n        this.boundingBox.value.applyMatrix4(bbTransform);\r\n\r\n        this.updateMatrixWorld(true);\r\n        this.boundingBox.next(this.boundingBox.value);\r\n    }\r\n\r\n    isLoading(): boolean {\r\n        return false;\r\n    }\r\n\r\n    dispose(): void {};\r\n}\r\n","import {Geometry, Mesh, MeshBasicMaterial, Object3D, SphereGeometry, Vector3} from \"three\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {SnapState} from \"./common\";\r\nimport {createScreenStaticSizeMesh} from \"@technology/webgl-viewer/dist/esnext/Helpers/Utils\";\r\n\r\nexport class SnapPoint extends Object3D {\r\n    private snapPointGeometry: Geometry = new SphereGeometry(0.3)\r\n    private snapPointPickSphereGeometry: Geometry = new SphereGeometry(1)\r\n    private snapPointMaterial = new MeshBasicMaterial({color: 0xff6600, depthTest: false, depthWrite: false, transparent: true });\r\n    private snapPointPickSphereMaterial = new MeshBasicMaterial({color: 0xffffff, opacity: 0.0, depthTest: false, depthWrite: false, transparent: true });\r\n    private snapPoint: Mesh;\r\n    private snapPointPickSphere: Mesh;\r\n    public parentTrimbimId: string;\r\n    public snapState: SnapState;\r\n\r\n    constructor(private _api: Api, position: Vector3, parentTrimbimId: string) {\r\n        super();\r\n        this.name = \"SnapPoint\";\r\n        this.init(position, parentTrimbimId);\r\n    }\r\n\r\n    init(position: Vector3, parentTrimbimId: string): void {\r\n        this.parentTrimbimId = parentTrimbimId;\r\n        this.position.copy(position);\r\n        this.snapPoint = createScreenStaticSizeMesh(this.snapPointGeometry, this.snapPointMaterial as any, this._api);\r\n        this.snapPointPickSphere = createScreenStaticSizeMesh(this.snapPointPickSphereGeometry, this.snapPointPickSphereMaterial as any, this._api);\r\n        this.snapPoint.renderOrder = 1;\r\n        this.add(this.snapPoint);\r\n        this.add(this.snapPointPickSphere);\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    changeColour(): void {\r\n        if (this.snapState === SnapState.enabled)  {\r\n            this.snapPointMaterial.color.setHex( 0xff8800 );\r\n            this.snapPoint.renderOrder = 2;\r\n            this.snapPointMaterial.opacity = 1.0;\r\n        } else {\r\n            this.snapPointMaterial.color.setHex( 0xaaaaaa );\r\n            this.snapPointMaterial.opacity = 0.5;\r\n            this.snapPoint.renderOrder = 1;\r\n        }\r\n        this._api.renderingManager.redraw();\r\n    }\r\n}","import {Euler, Matrix4, Object3D, Quaternion, Vector3} from \"three\";\r\nimport {AssemblyObjectDefinition, SnapState} from \"./common\";\r\nimport {SnapPoint} from \"./SnapPoint\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {AssemblyEditingModel} from \"./AssemblyEditingModel\";\r\nimport {Model} from \"@technology/webgl-viewer/dist/esnext/Model\";\r\n\r\nexport class AssemblyObject extends Object3D {\r\n    public assetGUID: string;\r\n    public snapPoints: SnapPoint[] = [];\r\n    public assemblyObjectDefinition: AssemblyObjectDefinition;\r\n\r\n    private assemblyName: string;\r\n    private geometryModel: Model;\r\n    private assemblyObjectTransform: Matrix4 = new Matrix4();\r\n\r\n    constructor(private model: AssemblyEditingModel, private def: AssemblyObjectDefinition, private api: Api) {\r\n        super();\r\n        this.init();\r\n    }\r\n\r\n    async init(): Promise<void> {\r\n        this.assemblyObjectDefinition = this.def;\r\n        this.assetGUID = this.def.assetGUID;\r\n        this.assemblyName = this.def.assemblyName;\r\n\r\n        for (const model of this.api.models.getIterable()) {\r\n            if (model.name === this.assetGUID)\r\n                this.geometryModel = model;\r\n        }\r\n        this.createSnapPoints(this.def.snapPositions);\r\n        this.geometryModel.add(this);\r\n        this.assemblyObjectTransform.fromArray(this.def.transform);\r\n\r\n        this.model.add(this);\r\n\r\n        this.geometryModel.transform(this.assemblyObjectTransform);\r\n        this.applyMatrix4(this.geometryModel.matrixWorld); //TODO: is this necessary?\r\n    }\r\n\r\n    exportAssemblyDefinition(): AssemblyObjectDefinition {\r\n        this.assemblyObjectDefinition.transform = this.matrixWorld.elements;\r\n        this.assemblyObjectDefinition.snapPositions = this.snapPointsToSnapPositions(this.snapPoints);\r\n        return this.assemblyObjectDefinition;\r\n    }\r\n\r\n    private createSnapPoints(snapPositions: number[]):void {\r\n        for (let i = 0; i < snapPositions.length/3; ++i) {\r\n            const pos = new Vector3(snapPositions[3*i], snapPositions[3*i+1], snapPositions[3*i+2]);\r\n            this.createSnapPoint(pos);\r\n        }\r\n    }\r\n\r\n    private snapPointsToSnapPositions(snapPoints: SnapPoint[]): number[] {\r\n        const numbers = [];\r\n        for (const snapPoint of snapPoints) {\r\n            numbers.push(snapPoint.position.x);\r\n            numbers.push(snapPoint.position.y);\r\n            numbers.push(snapPoint.position.z);\r\n        }\r\n        return numbers;\r\n    }\r\n\r\n    updateTransform(transform: Matrix4): void {\r\n        this.geometryModel.transform(transform);\r\n        transform.decompose(this.position, this.quaternion, this.scale);\r\n    }\r\n\r\n    async updatePosition(position: Vector3): Promise<void> {\r\n        this.geometryModel.transform(this.geometryModel.matrixWorld.clone().setPosition(position));\r\n        this.position.copy(position);\r\n    }\r\n\r\n    async updateTrimbimPosition(position: Vector3, euler?: Euler): Promise<void> {\r\n        const transform = new Matrix4();\r\n        if (euler)\r\n            transform.makeRotationFromEuler(euler);\r\n\r\n        transform.setPosition(position);\r\n        this.geometryModel.transform(transform)\r\n    }\r\n\r\n    async moveAndRotate(startPosition: Vector3, endPosition: Vector3, startDirection: Vector3, endDirection: Vector3): Promise<void> {\r\n        const localOffset = new Vector3();\r\n        localOffset.copy(this.worldToLocal(startPosition.clone()));\r\n\r\n        this.position.copy(this.position.clone().add(endPosition.clone().sub(startPosition.clone())))\r\n\r\n        this.translateX(localOffset.x);\r\n        this.translateY(localOffset.y);\r\n        this.translateZ(localOffset.z);\r\n\r\n        const quaternion = this.rotationQuaternionFromVectors(startDirection.clone(), endDirection.clone());\r\n        this.applyQuaternion(quaternion);\r\n\r\n        this.translateX(-localOffset.x);\r\n        this.translateY(-localOffset.y);\r\n        this.translateZ(-localOffset.z);\r\n\r\n        await this.updateTrimbimPosition(this.position.clone(), this.rotation.clone());\r\n    }\r\n\r\n    private rotationQuaternionFromVectors(normal1: Vector3, normal2: Vector3): Quaternion {\r\n        const quaternion = new Quaternion();\r\n        quaternion.setFromUnitVectors( normal1, normal2 );\r\n        return quaternion;\r\n    }\r\n\r\n    private createSnapPoint(position: Vector3): void {\r\n        const snapPoint = new SnapPoint(this.api, position, this.assetGUID);\r\n        this.snapPoints.push(snapPoint);\r\n    }\r\n\r\n    public addSnapPoint(position: Vector3): void {\r\n        this.worldToLocal(position);\r\n        for (const snapPoint of this.snapPoints) {\r\n            if (this.pointsAreCoincident(snapPoint.position, position, 0.001)) {\r\n                return;\r\n            }\r\n        }\r\n        this.createSnapPoint(position);\r\n    }\r\n\r\n    deleteSnapPoint(id: number): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            if (snapPoint.id === id){\r\n                this.remove(snapPoint);\r\n                snapPoint.traverse((object: any) => {\r\n                    if (object.geometry)\r\n                        object.geometry.dispose();\r\n                    if (object.material)\r\n                        object.material.dispose();\r\n                });\r\n\r\n                const index = this.snapPoints.indexOf(snapPoint);\r\n                this.snapPoints.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private pointsAreCoincident(position1: Vector3, position2: Vector3, tolerance: number): boolean {\r\n        return Math.abs(position1.x - position2.x) < tolerance && Math.abs(position1.y - position2.y) < tolerance && Math.abs(position1.z - position2.z) < tolerance;\r\n    }\r\n\r\n    showSnapPoints(): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            this.add(snapPoint);\r\n        }\r\n        this.api.renderingManager.redraw();\r\n    }\r\n\r\n    hideSnapPoints(): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            this.remove(snapPoint);\r\n        }\r\n        this.api.renderingManager.redraw();\r\n    }\r\n\r\n    enableSnapPoints(): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            snapPoint.snapState = SnapState.enabled;\r\n            snapPoint.changeColour();\r\n        }\r\n        this.api.renderingManager.redraw();\r\n    }\r\n\r\n    disableSnapPoints(): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            snapPoint.snapState = SnapState.disabled;\r\n            snapPoint.changeColour();\r\n        }\r\n        this.api.renderingManager.redraw();\r\n    }\r\n\r\n    deactivateAllSnapPoints(): void {\r\n        for (const snapPoint of this.snapPoints) {\r\n            snapPoint.snapState = SnapState.disabled;\r\n        }\r\n        this.api.renderingManager.redraw();\r\n    }\r\n}","import {Model, SnappedPickableModel} from \"@technology/webgl-viewer/dist/esnext/Model\";\r\nimport {AssemblyObjectDefinition, SnapState} from \"./common\";\r\nimport {AssemblyObject} from \"./AssemblyObject\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {Caster} from \"@technology/webgl-viewer/dist/esnext/Picker/Caster\";\r\nimport {IIntersection} from \"@technology/webgl-viewer/dist/esnext/Picker/IIntersection\";\r\nimport {Intersection, Matrix4, Vector3} from \"three\";\r\nimport {SnapPoint} from \"./SnapPoint\";\r\nimport {LoadOptions, WebglViewer} from \"@technology/webgl-viewer\";\r\nimport {SnapType} from \"@technology/webgl-viewer/dist/esnext/common\";\r\n\r\nexport class AssemblyEditingModel extends Model implements SnappedPickableModel {\r\n    static get ModelId(): string { return \"assemblyEditing\" };\r\n    public assemblyObjects: AssemblyObject[] = [];\r\n    public activeAssemblyObject: string; // indicates which assemblyObject is selected for editing\r\n    public assetGUIDs: string[] = [];\r\n\r\n    private lastSavedJson: string;\r\n\r\n    constructor(private api: Api) {\r\n        super(AssemblyEditingModel.ModelId);\r\n    }\r\n\r\n    async loadAssemblyFromFile(viewer: WebglViewer, ref: string): Promise<void> {\r\n        const loadedAssembly = await fetch(ref).then(response =>\r\n            response.json()\r\n        );\r\n        await this.loadAssembly(viewer, loadedAssembly);\r\n    }\r\n\r\n    async loadAssembly(viewer: WebglViewer, def: AssemblyObjectDefinition): Promise<void> {\r\n        // TODO: Add a check if this asset and assembly already loaded\r\n\r\n        if (def.ref) {\r\n            const transform = new Matrix4();\r\n            transform.fromArray(def.transform);\r\n            await viewer.load(def.ref, { modelId: def.assetGUID, transform: transform});\r\n        }\r\n\r\n        const assemblyObject = new AssemblyObject(this, def, this.api);\r\n\r\n        this.add(assemblyObject);\r\n        this.assemblyObjects.push(assemblyObject);\r\n        this.assetGUIDs.push(def.assetGUID);\r\n    }\r\n\r\n    async importAsset(viewer: WebglViewer, def: AssemblyObjectDefinition): Promise<void> {\r\n        const d = new Date();\r\n        if (def.assetGUID.length < 1) def.assetGUID = d.getTime().toString(); // create a GUID from time stamp until better method available\r\n        if (def.assemblyName.length < 1) def.assemblyName = \"default\";\r\n        const fileInput = document.createElement(\"input\");\r\n        fileInput.type = \"file\";\r\n        fileInput.accept = \".trb\";\r\n        // fileInput.style = \"display:none\";\r\n        document.body.appendChild(fileInput);\r\n\r\n        const onChange = async () => {\r\n            fileInput.removeEventListener(\"change\", onChange);\r\n            document.body.removeChild(fileInput);\r\n\r\n            def.ref = fileInput.files[0];\r\n            def.transform = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n            def.snapPositions = [0, 0, 0]\r\n\r\n            const options = {\r\n                modelId: def.assetGUID\r\n            } as LoadOptions;\r\n\r\n            await viewer.load(fileInput.files[0], options);\r\n\r\n            const assemblyObject = new AssemblyObject(this, def, this.api);\r\n\r\n            this.add(assemblyObject);\r\n            this.assemblyObjects.push(assemblyObject);\r\n            this.assetGUIDs.push(def.assetGUID);\r\n        };\r\n        fileInput.addEventListener(\"change\", onChange);\r\n        fileInput.click();\r\n    }\r\n\r\n\r\n    exportAssets(assetGUIDs?: string[]): AssemblyObjectDefinition[] {\r\n        const definitions: AssemblyObjectDefinition[] = [];\r\n        for (const assemblyObject of this.assemblyObjects) {\r\n            if (!assetGUIDs || assetGUIDs.includes(assemblyObject.assetGUID))\r\n            {\r\n                definitions.push(assemblyObject.exportAssemblyDefinition());\r\n            }\r\n        }\r\n        return definitions;\r\n    }\r\n\r\n    async clearAssemblies(viewer: WebglViewer): Promise<void> {\r\n        const selection = this.api.selection;\r\n        const keys = selection.keys();\r\n\r\n        let models: string[] = [];\r\n        if (selection.size === 0) {\r\n            models = this.assetGUIDs.slice()\r\n        } else {\r\n            for (const entry of keys) {\r\n                if (typeof(entry) === \"string\" &&  this.assetGUIDs.includes(entry)) {\r\n                    models.push(entry);\r\n                    this.api.selection.subtract(entry, [0]);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const model of models) {\r\n            if (model === \"grid.trb\") {\r\n                continue;\r\n            }\r\n\r\n            await viewer.unload(model);\r\n            if (this.assetGUIDs.includes(model)) {\r\n                for (const assObj of this.assemblyObjects) {\r\n                    if (assObj.assetGUID === model) {\r\n                        this.remove(assObj);\r\n                        assObj.traverse((object: any) => {\r\n                            if (object.geometry)\r\n                                object.geometry.dispose();\r\n                            if (object.material)\r\n                                object.material.dispose();\r\n                        });\r\n                        this.assemblyObjects.splice(this.assemblyObjects.indexOf(assObj), 1);\r\n                        this.assetGUIDs.splice(this.assetGUIDs.indexOf(model), 1);\r\n                        this.activeAssemblyObject = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async copyAssembly(viewer: WebglViewer, assetGUID: string): Promise<string> {\r\n        for (const assObj of this.assemblyObjects) {\r\n            if (assObj.assetGUID === assetGUID) {\r\n                const ref = await assObj.exportAssemblyDefinition();\r\n                const d = new Date();\r\n                ref.assetGUID = d.getTime().toString();\r\n                await this.loadAssembly(viewer, ref);\r\n                return ref.assetGUID;\r\n            }\r\n        }\r\n    }\r\n\r\n    async copyAssemblies(viewer: WebglViewer, movement: Vector3): Promise<void> {\r\n        const selection = this.api.selection;\r\n        const keys = selection.keys();\r\n\r\n        let models: string[] = [];\r\n        if (selection.size === 0) {\r\n            return;\r\n        } else {\r\n            for (const entry of keys) {\r\n                if (typeof(entry) === \"string\" &&  this.assetGUIDs.includes(entry)) {\r\n                    models.push(entry);\r\n                }\r\n            }\r\n        }\r\n\r\n        const newModels: string[] = [];\r\n\r\n        for (const model of models) {\r\n            for (const assObj of this.assemblyObjects) {\r\n                if (assObj.assetGUID === model) {\r\n                    const ref = await assObj.exportAssemblyDefinition();\r\n                    const d = new Date();\r\n                    ref.assetGUID = d.getTime().toString();\r\n                    newModels.push(ref.assetGUID);\r\n                    await this.loadAssembly(viewer, ref);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const model of newModels) {\r\n            for (const assObj of this.assemblyObjects) {\r\n                if (assObj.assetGUID === model) {\r\n                    await assObj.updatePosition(assObj.position.clone().add(movement));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async moveAssemblies(movement: Vector3): Promise<void> {\r\n        const selection = this.api.selection;\r\n        const keys = selection.keys();\r\n\r\n        let models: string[] = [];\r\n        if (selection.size === 0) {\r\n            return;\r\n        } else {\r\n            for (const entry of keys) {\r\n                if (typeof(entry) === \"string\" &&  this.assetGUIDs.includes(entry)) {\r\n                    models.push(entry);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const model of models) {\r\n            for (const assObj of this.assemblyObjects) {\r\n                if (assObj.assetGUID === model) {\r\n                    await assObj.updatePosition(assObj.position.clone().add(movement));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // saveAssembly(): void {\r\n    //     for (let assemblyId of this.assembliesMap.keys()) {\r\n    //         const assembly = this.assembliesMap.get(assemblyId) as Assembly;\r\n    //         const nodes = assembly.nodes;\r\n    //         for (const node of nodes) {\r\n    //             for (const assObj of this.assemblyObjects) {\r\n    //                 if (assObj.trimbimId === node.asset) {\r\n    //                     (assObj.matrixWorld.toArray(node.transform));\r\n    //                     assembly.assets[node.asset].configuration.snapPositions = this.SnapPointsToSnapPositions(assObj.snapPoints);\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     this.lastSavedJson = JSON.stringify(this.assembliesMap.get(0));\r\n    // }\r\n\r\n\r\n    // async unloadAssemblyModel(viewer: WebglViewer, assemblyName: string): Promise<void> {\r\n    //     if (this.assembliesMap.size > 0) {\r\n    //         let assembly: Assembly;\r\n    //         for (let assemblyId of this.assembliesMap.keys()) {\r\n    //             if (this.assembliesMap.get(assemblyId).name === assemblyName) {\r\n    //                 assembly = this.assembliesMap.get(assemblyId);\r\n    //             }\r\n    //         }\r\n    //         const nodes = assembly.nodes;\r\n    //         for (const node of nodes) {\r\n    //             await viewer.unload(node.asset);\r\n    //             for (const assObj of this.assemblyObjects) {\r\n    //                 if (assObj.trimbimId === node.asset)\r\n    //                     this.remove(assObj);\r\n    //             }\r\n    //         }\r\n    //         this.assembliesMap.clear();\r\n    //     }\r\n    // }\r\n\r\n    // async loadLastSavedJson(viewer: WebglViewer): Promise<void> {\r\n    //     if (this.lastSavedJson) {\r\n    //         const assemblyBackFromJSON = JSON.parse(this.lastSavedJson);\r\n    //         await this.loadAssembly(viewer, assemblyBackFromJSON);\r\n    //     }\r\n    // }\r\n\r\n    async pick(caster: Caster): Promise<IIntersection> {\r\n        const intersection = this.intersectSnapPoints(caster);\r\n        return Promise.resolve(intersection);\r\n    }\r\n\r\n    async pickSnapped(caster: Caster, snapTypes: SnapType[]): Promise<IIntersection[]> {\r\n        const intersection = this.intersectSnapPoints(caster);\r\n        if (intersection && intersection.object && intersection.object.parent.name === \"SnapPoint\") {\r\n            intersection.snapType = SnapType.POINT;\r\n            const assemblyObject = intersection.object.parent.parent;\r\n            const position = new Vector3();\r\n            position.copy(intersection.object.parent.position);\r\n            assemblyObject.localToWorld(position);\r\n            intersection.point.copy(position);\r\n        }\r\n        return Promise.resolve([intersection]);\r\n    }\r\n\r\n    private intersectSnapPoints(caster: Caster): IIntersection & Intersection {\r\n        const intersections = caster.intersectObjects(this.children, true) as Array<IIntersection & Intersection>;\r\n        if (intersections.length === 0)\r\n            return;\r\n\r\n        const enabledSnaps = [];\r\n        const disabledSnaps = [];\r\n        for (const intersection of intersections) {\r\n            if (intersection.object.parent.name === \"SnapPoint\") {\r\n                const snapPoint = intersection.object.parent as SnapPoint;\r\n                if (snapPoint.snapState === SnapState.enabled)\r\n                    enabledSnaps.push(intersection);\r\n                if (snapPoint.snapState === SnapState.disabled)\r\n                    disabledSnaps.push(intersection);\r\n            }\r\n            if (intersection.object.name === \"planeStartMarker\") {\r\n                enabledSnaps.push(intersection);\r\n            }\r\n        }\r\n        enabledSnaps.push(...disabledSnaps);\r\n\r\n        if (enabledSnaps.length === 0)\r\n            return;\r\n        const intersection = enabledSnaps[0];\r\n        intersection.pickPriority = 1;\r\n\r\n        return intersection;\r\n    }\r\n\r\n    disableAllSnaps(): void {\r\n        for (const assemblyObject of this.assemblyObjects) {\r\n            assemblyObject.disableSnapPoints();\r\n        }\r\n    }\r\n\r\n   enableAllSnaps(): void {\r\n        for (const assemblyObject of this.assemblyObjects) {\r\n            assemblyObject.enableSnapPoints();\r\n        }\r\n    }\r\n\r\n    showAllSnaps(): void {\r\n        for (const assemblyObject of this.assemblyObjects) {\r\n            assemblyObject.showSnapPoints();\r\n        }\r\n    }\r\n\r\n    hideAllSnaps(): void {\r\n        for (const assemblyObject of this.assemblyObjects) {\r\n            assemblyObject.hideSnapPoints();\r\n        }\r\n    }\r\n}","import {BehaviorSubject} from \"rxjs\";\r\n\r\nexport class AssemblyEditingSettings {\r\n    _translationSnapSubject = new BehaviorSubject<number>(0);\r\n    _rotationSnapSubject = new BehaviorSubject<number>(0);\r\n\r\n    get translationSnap(): number {\r\n        return this._translationSnapSubject.value;\r\n    }\r\n\r\n    set translationSnap(value: number) {\r\n        this._translationSnapSubject.next(value);\r\n    }\r\n\r\n    get rotationSnap(): number {\r\n        return this._rotationSnapSubject.value;\r\n    }\r\n\r\n    set rotationSnap(value: number) {\r\n        this._rotationSnapSubject.next(value);\r\n    }\r\n}","/**\n * @author arodic / https://github.com/arodic\n */\n\nimport {\n\tBoxBufferGeometry,\n\tBufferGeometry,\n\tColor,\n\tCylinderBufferGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronBufferGeometry,\n\tPlaneBufferGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereBufferGeometry,\n\tTorusBufferGeometry,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar TransformControls = function ( camera, domElement ) {\n\n\tif ( domElement === undefined ) {\n\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tdomElement = document;\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.visible = false;\n\tthis.domElement = domElement;\n\n\tvar _gizmo = new TransformControlsGizmo();\n\tthis.add( _gizmo );\n\n\tvar _plane = new TransformControlsPlane();\n\tthis.add( _plane );\n\n\tvar scope = this;\n\n\t// Define properties with getters/setter\n\t// Setting the defined property will automatically trigger change event\n\t// Defined properties are passed down to gizmo and plane\n\n\tdefineProperty( \"camera\", camera );\n\tdefineProperty( \"object\", undefined );\n\tdefineProperty( \"enabled\", true );\n\tdefineProperty( \"axis\", null );\n\tdefineProperty( \"mode\", \"translate\" );\n\tdefineProperty( \"translationSnap\", null );\n\tdefineProperty( \"rotationSnap\", null );\n\tdefineProperty( \"scaleSnap\", null );\n\tdefineProperty( \"space\", \"world\" );\n\tdefineProperty( \"size\", 1 );\n\tdefineProperty( \"dragging\", false );\n\tdefineProperty( \"showX\", true );\n\tdefineProperty( \"showY\", true );\n\tdefineProperty( \"showZ\", true );\n\n\tvar changeEvent = { type: \"change\" };\n\tvar mouseDownEvent = { type: \"mouseDown\" };\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\n\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t// Reusable utility variables\n\n\tvar raycaster = new Raycaster();\n\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\n\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\n\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\t\treturn allIntersections[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar _tempVector = new Vector3();\n\tvar _tempVector2 = new Vector3();\n\tvar _tempQuaternion = new Quaternion();\n\tvar _unit = {\n\t\tX: new Vector3( 1, 0, 0 ),\n\t\tY: new Vector3( 0, 1, 0 ),\n\t\tZ: new Vector3( 0, 0, 1 )\n\t};\n\n\tvar pointStart = new Vector3();\n\tvar pointEnd = new Vector3();\n\tvar offset = new Vector3();\n\tvar rotationAxis = new Vector3();\n\tvar startNorm = new Vector3();\n\tvar endNorm = new Vector3();\n\tvar rotationAngle = 0;\n\n\tvar cameraPosition = new Vector3();\n\tvar cameraQuaternion = new Quaternion();\n\tvar cameraScale = new Vector3();\n\n\tvar parentPosition = new Vector3();\n\tvar parentQuaternion = new Quaternion();\n\tvar parentQuaternionInv = new Quaternion();\n\tvar parentScale = new Vector3();\n\n\tvar worldPositionStart = new Vector3();\n\tvar worldQuaternionStart = new Quaternion();\n\tvar worldScaleStart = new Vector3();\n\n\tvar worldPosition = new Vector3();\n\tvar worldQuaternion = new Quaternion();\n\tvar worldQuaternionInv = new Quaternion();\n\tvar worldScale = new Vector3();\n\n\tvar eye = new Vector3();\n\n\tvar positionStart = new Vector3();\n\tvar quaternionStart = new Quaternion();\n\tvar scaleStart = new Vector3();\n\n\t// TODO: remove properties unused in plane and gizmo\n\n\tdefineProperty( \"worldPosition\", worldPosition );\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\n\tdefineProperty( \"cameraPosition\", cameraPosition );\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\n\tdefineProperty( \"pointStart\", pointStart );\n\tdefineProperty( \"pointEnd\", pointEnd );\n\tdefineProperty( \"rotationAxis\", rotationAxis );\n\tdefineProperty( \"rotationAngle\", rotationAngle );\n\tdefineProperty( \"eye\", eye );\n\n\t{\n\n\t\tdomElement.addEventListener( \"mousedown\", onPointerDown, false );\n\t\tdomElement.addEventListener( \"touchstart\", onPointerDown, false );\n\t\tdomElement.addEventListener( \"mousemove\", onPointerHover, false );\n\t\tdomElement.addEventListener( \"touchmove\", onPointerHover, false );\n\t\tdomElement.addEventListener( \"touchmove\", onPointerMove, false );\n\t\tdocument.addEventListener( \"mouseup\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchend\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchcancel\", onPointerUp, false );\n\t\tdomElement.addEventListener( \"touchleave\", onPointerUp, false );\n\n\t}\n\n\tthis.dispose = function () {\n\n\t\tdomElement.removeEventListener( \"mousedown\", onPointerDown );\n\t\tdomElement.removeEventListener( \"touchstart\", onPointerDown );\n\t\tdomElement.removeEventListener( \"mousemove\", onPointerHover );\n\t\tdocument.removeEventListener( \"mousemove\", onPointerMove );\n\t\tdomElement.removeEventListener( \"touchmove\", onPointerHover );\n\t\tdomElement.removeEventListener( \"touchmove\", onPointerMove );\n\t\tdocument.removeEventListener( \"mouseup\", onPointerUp );\n\t\tdomElement.removeEventListener( \"touchend\", onPointerUp );\n\t\tdomElement.removeEventListener( \"touchcancel\", onPointerUp );\n\t\tdomElement.removeEventListener( \"touchleave\", onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t};\n\n\t// Set current object\n\tthis.attach = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t};\n\n\t// Detatch from object\n\tthis.detach = function () {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t};\n\n\t// Defined getter, setter and store for a property\n\tfunction defineProperty( propName, defaultValue ) {\n\n\t\tvar propValue = defaultValue;\n\n\t\tObject.defineProperty( scope, propName, {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\tpropValue = value;\n\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tscope[ propName ] = defaultValue;\n\t\t_plane[ propName ] = defaultValue;\n\t\t_gizmo[ propName ] = defaultValue;\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tthis.updateMatrixWorld = function () {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\n\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).inverse();\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).inverse();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\n\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n\tthis.pointerHover = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t};\n\n\tthis.pointerDown = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\tif ( ( pointer.button === 0 || pointer.button === undefined ) && this.axis !== null ) {\n\n\t\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tvar space = this.space;\n\n\t\t\t\tif ( this.mode === 'scale' ) {\n\n\t\t\t\t\tspace = 'local';\n\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\n\n\t\t\t\t\tspace = 'world';\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\n\n\t\t\t\t\tvar snap = this.rotationSnap;\n\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\n\n\t\t\t\t}\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tpositionStart.copy( this.object.position );\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\n\t\t\t\tscaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\n\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\tmouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseDownEvent );\n\n\t\t}\n\n\t};\n\n\tthis.pointerMove = function ( pointer ) {\n\n\t\tvar axis = this.axis;\n\t\tvar mode = this.mode;\n\t\tvar object = this.object;\n\t\tvar space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || ( pointer.button !== undefined && pointer.button !== 0 ) ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\n\n\t\t\t} else {\n\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( offset ).add( positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).inverse() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\n\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( pointStart );\n\t\t\t\t_tempVector2.copy( pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\trotationAxis.copy( eye );\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\n\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\n\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\tthis.rotationAngle = rotationAngle;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( changeEvent );\n\t\tthis.dispatchEvent( objectChangeEvent );\n\n\t};\n\n\tthis.pointerUp = function ( pointer ) {\n\n\t\tif ( pointer.button !== undefined && pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\tmouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\n\t\tif ( pointer.button === undefined ) this.axis = null;\n\n\t};\n\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\n\n\tfunction getPointer( event ) {\n\n\t\tif ( document.pointerLockElement ) {\n\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tvar rect = domElement.getBoundingClientRect();\n\n\t\t\treturn {\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// mouse / touch event handlers\n\n\tfunction onPointerHover( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.pointerHover( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tdocument.addEventListener( \"mousemove\", onPointerMove, false );\n\n\t\tscope.pointerHover( getPointer( event ) );\n\t\tscope.pointerDown( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.pointerMove( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tdocument.removeEventListener( \"mousemove\", onPointerMove, false );\n\n\t\tscope.pointerUp( getPointer( event ) );\n\n\t}\n\n\t// TODO: deprecate\n\n\tthis.getMode = function () {\n\n\t\treturn scope.mode;\n\n\t};\n\n\tthis.setMode = function ( mode ) {\n\n\t\tscope.mode = mode;\n\n\t};\n\n\tthis.setTranslationSnap = function ( translationSnap ) {\n\n\t\tscope.translationSnap = translationSnap;\n\n\t};\n\n\tthis.setRotationSnap = function ( rotationSnap ) {\n\n\t\tscope.rotationSnap = rotationSnap;\n\n\t};\n\n\tthis.setScaleSnap = function ( scaleSnap ) {\n\n\t\tscope.scaleSnap = scaleSnap;\n\n\t};\n\n\tthis.setSize = function ( size ) {\n\n\t\tscope.size = size;\n\n\t};\n\n\tthis.setSpace = function ( space ) {\n\n\t\tscope.space = space;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t};\n\n};\n\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControls,\n\n\tisTransformControls: true\n\n} );\n\n\nvar TransformControlsGizmo = function () {\n\n\t'use strict';\n\n\tObject3D.call( this );\n\n\tthis.type = 'TransformControlsGizmo';\n\n\t// shared materials\n\n\tvar gizmoMaterial = new MeshBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tside: DoubleSide,\n\t\tfog: false\n\t} );\n\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tlinewidth: 1,\n\t\tfog: false\n\t} );\n\n\t// Make unique material for each axis/color\n\n\tvar matInvisible = gizmoMaterial.clone();\n\tmatInvisible.opacity = 0.15;\n\n\tvar matHelper = gizmoMaterial.clone();\n\tmatHelper.opacity = 0.33;\n\n\tvar matRed = gizmoMaterial.clone();\n\tmatRed.color.set( 0xff0000 );\n\n\tvar matGreen = gizmoMaterial.clone();\n\tmatGreen.color.set( 0x00ff00 );\n\n\tvar matBlue = gizmoMaterial.clone();\n\tmatBlue.color.set( 0x0000ff );\n\n\tvar matWhiteTransparent = gizmoMaterial.clone();\n\tmatWhiteTransparent.opacity = 0.25;\n\n\tvar matYellowTransparent = matWhiteTransparent.clone();\n\tmatYellowTransparent.color.set( 0xffff00 );\n\n\tvar matCyanTransparent = matWhiteTransparent.clone();\n\tmatCyanTransparent.color.set( 0x00ffff );\n\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\n\tmatMagentaTransparent.color.set( 0xff00ff );\n\n\tvar matYellow = gizmoMaterial.clone();\n\tmatYellow.color.set( 0xffff00 );\n\n\tvar matLineRed = gizmoLineMaterial.clone();\n\tmatLineRed.color.set( 0xff0000 );\n\n\tvar matLineGreen = gizmoLineMaterial.clone();\n\tmatLineGreen.color.set( 0x00ff00 );\n\n\tvar matLineBlue = gizmoLineMaterial.clone();\n\tmatLineBlue.color.set( 0x0000ff );\n\n\tvar matLineCyan = gizmoLineMaterial.clone();\n\tmatLineCyan.color.set( 0x00ffff );\n\n\tvar matLineMagenta = gizmoLineMaterial.clone();\n\tmatLineMagenta.color.set( 0xff00ff );\n\n\tvar matLineYellow = gizmoLineMaterial.clone();\n\tmatLineYellow.color.set( 0xffff00 );\n\n\tvar matLineGray = gizmoLineMaterial.clone();\n\tmatLineGray.color.set( 0x787878 );\n\n\tvar matLineYellowTransparent = matLineYellow.clone();\n\tmatLineYellowTransparent.opacity = 0.25;\n\n\t// reusable geometry\n\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\n\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\n\n\tvar lineGeometry = new BufferGeometry( );\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\tvar CircleGeometry = function ( radius, arc ) {\n\n\t\tvar geometry = new BufferGeometry( );\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\n\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\tvar TranslateHelperGeometry = function () {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\tvar gizmoTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t]\n\t};\n\n\tvar pickerTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t]\n\t};\n\n\tvar helperTranslate = {\n\t\tSTART: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tEND: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tDELTA: [\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar gizmoRotate = {\n\t\tX: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t]\n\t};\n\n\tvar helperRotate = {\n\t\tAXIS: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar pickerRotate = {\n\t\tX: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\n\t\t]\n\t};\n\n\tvar gizmoScale = {\n\t\tX: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar pickerScale = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar helperScale = {\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\tvar setupGizmo = function ( gizmoMap ) {\n\n\t\tvar gizmo = new Object3D();\n\n\t\tfor ( var name in gizmoMap ) {\n\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\tobject.name = name;\n\t\t\t\tobject.tag = tag;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scale ) {\n\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t\tvar tempGeometry = object.geometry.clone();\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\tgizmo.add( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn gizmo;\n\n\t};\n\n\t// Reusable utility variables\n\n\tvar tempVector = new Vector3( 0, 0, 0 );\n\tvar tempEuler = new Euler();\n\tvar alignVector = new Vector3( 0, 1, 0 );\n\tvar zeroVector = new Vector3( 0, 0, 0 );\n\tvar lookAtMatrix = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempQuaternion2 = new Quaternion();\n\tvar identityQuaternion = new Quaternion();\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\t// Gizmo creation\n\n\tthis.gizmo = {};\n\tthis.picker = {};\n\tthis.helper = {};\n\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\n\n\t// Pickers should be hidden always\n\n\tthis.picker[ \"translate\" ].visible = false;\n\tthis.picker[ \"rotate\" ].visible = false;\n\tthis.picker[ \"scale\" ].visible = false;\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\n\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\n\n\n\t\tvar handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\n\n\t\t\tvar handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tvar factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().inverse() );\n\t\t\t\t\thandle.scale.copy( tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\n\n\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\n\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\ttempQuaternion2.copy( quaternion );\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).inverse() );\n\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\thandle.material.opacity *= 0.5;\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t} else if ( this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.material.opacity *= 0.25;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControlsGizmo,\n\n\tisTransformControlsGizmo: true\n\n} );\n\n\nvar TransformControlsPlane = function () {\n\n\t'use strict';\n\n\tMesh.call( this,\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1 } )\n\t);\n\n\tthis.type = 'TransformControlsPlane';\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\tvar tempVector = new Vector3();\n\tvar dirVector = new Vector3();\n\tvar alignVector = new Vector3();\n\tvar tempMatrix = new Matrix4();\n\tvar identityQuaternion = new Quaternion();\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\talignVector.copy( unitY );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\tdirVector.copy( unitZ );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\tdirVector.copy( unitX );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\talignVector.copy( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitY );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\tdirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: TransformControlsPlane,\n\n\tisTransformControlsPlane: true\n\n} );\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n","import {TransformControls} from \"three/examples/jsm/controls/TransformControls\";\r\nimport {Orbit} from \"@technology/webgl-viewer/dist/esnext/Tools/Orbit\";\r\nimport {MouseButton, Tool} from \"@technology/webgl-viewer/dist/esnext/common\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {AssemblyEditingModel} from \"../AssemblyEditingModel\";\r\nimport {AssemblyEditingSettings} from \"../AssemblyEditingSettings\";\r\nimport {delay, map, mergeMap, switchMap, takeUntil} from \"rxjs/operators\";\r\nimport {addIntersection, PointerInput} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\r\nimport {AssemblyObject} from \"../AssemblyObject\";\r\nimport {Observable, Subscription} from \"rxjs\";\r\n\r\nexport class TransformTool implements Tool {\r\n    private transformControls: TransformControls;\r\n    private assemblyObject: AssemblyObject;\r\n    private mouseButton: MouseButton;\r\n    private _tapsSubscription: Subscription;\r\n    private _tapsObservable: Observable<PointerInput>;\r\n\r\n    get name(): string {\r\n        return \"transform\";\r\n    }\r\n\r\n    constructor(private _api: Api, private model: AssemblyEditingModel, private settings: AssemblyEditingSettings) {\r\n        this.createTransformControls();\r\n\r\n        this.mouseButton = MouseButton.left;\r\n\r\n        this._tapsObservable = this._api.inputHandler.pointerDown$.pipe(\r\n            switchMap(down =>\r\n                this._api.inputHandler.pointerUp$.pipe(\r\n                    takeUntil(this._api.inputHandler.pointerMove$.pipe(delay(150))),\r\n                    map(() => down),\r\n                    mergeMap(addIntersection(this._api.inputHandler.picker)),\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    private createTransformControls(): void {\r\n        this.transformControls = new TransformControls(this._api.camera, this._api.renderingManager.renderer.domElement);\r\n        this.transformControls.addEventListener(\"change\", () => {\r\n            if (this.assemblyObject)\r\n                this.assemblyObject.updateTrimbimPosition(this.assemblyObject.position, this.assemblyObject.rotation).then();\r\n            this._api.renderingManager.redraw();\r\n        });\r\n        this.transformControls.addEventListener('dragging-changed', (event) => {\r\n            (this._api.toolManager.tools.orbit as Orbit).enabled = !event.value;\r\n        });\r\n    }\r\n\r\n    private _onPickObjectTap(event: PointerInput): void {\r\n        const intersection = event.intersection;\r\n        if (!intersection || !intersection.object) {\r\n            this.disableTransformControls();\r\n            return;\r\n        }\r\n\r\n        if (!this.model.assetGUIDs.includes(intersection.object.name)) {\r\n            return;\r\n        }\r\n\r\n        const assemblyObjects = this.model.assemblyObjects;\r\n        for (const assemblyObject of assemblyObjects) {\r\n            if (assemblyObject.assetGUID === intersection.object.name)\r\n                this.assemblyObject = assemblyObject;\r\n        }\r\n\r\n        this.enableTransformControls();\r\n    };\r\n\r\n    get enabled(): boolean {\r\n        return !!this._tapsSubscription;\r\n    }\r\n\r\n    set enabled(enabled: boolean) {\r\n        if (this._tapsSubscription) this._tapsSubscription.unsubscribe();\r\n        if (!enabled) {\r\n            this.disableTransformControls();\r\n            return;\r\n        }\r\n        this._tapsSubscription = this._tapsObservable.subscribe(event => {\r\n            if (event.mouseButton === this.mouseButton || event.isTouch) this._onPickObjectTap(event);\r\n        });\r\n    }\r\n\r\n    private enableTransformControls(): void {\r\n        this.transformControls.attach(this.assemblyObject);\r\n        if (!this.transformControls.parent) this._api.scene.add(this.transformControls);\r\n        this.setRotationSnap();\r\n    }\r\n\r\n    private disableTransformControls(): void {\r\n        this.assemblyObject = undefined;\r\n        this.transformControls.detach ();\r\n        if (this.transformControls.parent) this._api.scene.remove(this.transformControls);\r\n    }\r\n\r\n    setMove(): void {\r\n        if (this.transformControls)\r\n            this.transformControls.setMode(\"translate\");\r\n    }\r\n\r\n    setRotate(): void {\r\n        if (this.transformControls)\r\n            this.transformControls.setMode(\"rotate\");\r\n    }\r\n\r\n    setTranslationSnap(): void {\r\n        if (this.transformControls)\r\n            this.transformControls.setTranslationSnap(this.settings.translationSnap);\r\n    }\r\n\r\n    setRotationSnap(): void {\r\n        if (this.transformControls)\r\n            this.transformControls.setRotationSnap(this.settings.rotationSnap);\r\n    }\r\n}\r\n\r\n","import {MouseButton, SnapType, Tool} from \"@technology/webgl-viewer/dist/esnext/common\";\r\nimport {Cursor3D} from \"@technology/webgl-viewer/dist/esnext/Picker/Cursor3D\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {AssemblyEditingModel} from \"../AssemblyEditingModel\";\r\nimport {AssemblyObject} from \"../AssemblyObject\";\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {\r\n    addIntersection,\r\n    BehaviorOptions,\r\n    InputHandler,\r\n    PointerInput,\r\n    tapBehavior\r\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\r\nimport {delay, map, mergeMap, switchMap, takeUntil, tap} from \"rxjs/operators\";\r\n\r\nexport class EditSnapPointsTool implements Tool {\r\n    get name(): string {\r\n        return \"editSnapPoints\";\r\n    }\r\n\r\n    private cursor: Cursor3D;\r\n    private subscription: Subscription;\r\n    private observable: Observable<PointerInput>;\r\n    private deletingObservable: Observable<PointerInput>;\r\n    private options = {\r\n        button: MouseButton.left,\r\n        touchCount: 1\r\n    } as BehaviorOptions;\r\n\r\n    constructor(private _api: Api, protected inputs: InputHandler, private model: AssemblyEditingModel, cursor: Cursor3D) {\r\n        this.cursor = cursor;\r\n\r\n        this.observable = tapBehavior(this.inputs, cursor, this.options);\r\n        this.deletingObservable = this.inputs.pointerDown$.pipe(\r\n            switchMap(down =>\r\n                this.inputs.pointerUp$.pipe(\r\n                    takeUntil(this.inputs.pointerMove$.pipe(delay(150))),\r\n                    map(() => down),\r\n                    mergeMap(addIntersection(this.inputs.picker)),\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    private tap(event: PointerInput): void {\r\n        if (event.intersection && event.intersection.object) {\r\n            const assetGUID = event.intersection.object.name;\r\n            for (const assObj of this.model.assemblyObjects) {\r\n                if (assObj.assetGUID === assetGUID) {\r\n                    assObj.addSnapPoint(event.intersection.point);\r\n                    assObj.showSnapPoints();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteTap(event: PointerInput): void {\r\n        if (event.intersection && event.intersection.object && event.intersection.object.parent.name === \"SnapPoint\") {\r\n            const snapPoint = event.intersection.object.parent;\r\n            const assemblyObject = event.intersection.object.parent.parent as AssemblyObject;\r\n            assemblyObject.deleteSnapPoint(snapPoint.id);\r\n            this._api.renderingManager.redraw();\r\n        }\r\n    }\r\n\r\n    showSnapPoints(): void {\r\n        for (const assemblyObject of this.model.assemblyObjects) {\r\n            assemblyObject.showSnapPoints();\r\n        }\r\n    }\r\n\r\n    hideSnapPoints(): void {\r\n        for (const assemblyObject of this.model.assemblyObjects) {\r\n            assemblyObject.hideSnapPoints();\r\n        }\r\n    }\r\n\r\n    private unsubscribe(): void {\r\n        if(this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n        this.cursor.unsubscribe();\r\n        this.model.disableAllSnaps();\r\n        this.hideSnapPoints();\r\n    }\r\n\r\n    private subscribeDeleteMode(): void {\r\n        this.model.enableAllSnaps();\r\n        this.subscription = this.deletingObservable.pipe(\r\n            tap(e => this.deleteTap(e))\r\n        ).subscribe();\r\n        this.showSnapPoints();\r\n    }\r\n\r\n    private subscribeAddMode(): void {\r\n        this.subscription = this.observable.pipe(\r\n            tap(e => this.tap(e))\r\n        ).subscribe();\r\n        this.cursor.subscribe();\r\n        this.cursor.snapTypes = [SnapType.POINT, SnapType.LINE, SnapType.FACE];\r\n        this.showSnapPoints();\r\n    }\r\n\r\n    addMode(): void {\r\n        this.unsubscribe();\r\n        this.subscribeAddMode()\r\n    }\r\n\r\n    deleteMode(): void {\r\n        this.unsubscribe();\r\n        this.subscribeDeleteMode()\r\n    }\r\n\r\n    set enabled(enabled: boolean) {\r\n        this.unsubscribe()\r\n\r\n        if (!enabled) return;\r\n\r\n        this.subscribeAddMode();\r\n    }\r\n\r\n    get enabled(): boolean {\r\n        return ;\r\n    }\r\n}","import {MouseButton, SnapPick, SnapType, Tool} from \"@technology/webgl-viewer/dist/esnext/common\";\r\nimport {Cursor3D} from \"@technology/webgl-viewer/dist/esnext/Picker/Cursor3D\";\r\nimport {Api} from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport {AssemblyEditingModel} from \"../AssemblyEditingModel\";\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {\r\n    BehaviorOptions,\r\n    hasIntersection,\r\n    InputHandler,\r\n    tapBehavior\r\n} from \"@technology/webgl-viewer/dist/esnext/InputHandler\";\r\nimport {filter, switchMap, take, takeUntil, tap} from \"rxjs/operators\";\r\nimport {Scene, Vector3} from \"three\";\r\nimport {WebglViewer} from \"@technology/webgl-viewer\";\r\nimport {MeshLine} from \"@technology/webgl-viewer/dist/esnext/CustomObjects/MeshLine\";\r\nimport {LineMaterial} from \"three/examples/jsm/lines/LineMaterial\";\r\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\r\nimport {LineGeometry} from \"three/examples/jsm/lines/LineGeometry\";\r\n\r\nexport class CopySelectedTool implements Tool {\r\n    get name(): string {\r\n        return \"copySelected\";\r\n    }\r\n\r\n    public viewer: WebglViewer;\r\n    public mode: string = \"move\";\r\n\r\n    protected startPoint: Vector3 = new Vector3();\r\n    protected endPoint: Vector3 = new Vector3();\r\n    protected movement: Vector3 = new Vector3();\r\n\r\n    private cursor: Cursor3D;\r\n    private subscription: Subscription;\r\n    private observable: Observable<any>;\r\n    private renderPass: RenderPass;\r\n    private meshLine: MeshLine;\r\n\r\n    constructor(private _api: Api, protected inputs: InputHandler, private model: AssemblyEditingModel, cursor: Cursor3D) {\r\n        this.cursor = cursor;\r\n\r\n        this.meshLine = new MeshLine(new LineGeometry(), new LineMaterial({linewidth: 3, color: 0x6666ff, opacity: 0.3, depthTest: false, depthWrite: false, transparent: true}));\r\n\r\n        const options = {\r\n            button: MouseButton.left,\r\n            touchCount: 1\r\n        } as BehaviorOptions;\r\n        const tapObservable = tapBehavior(this._api.inputHandler, this._api.cursor, options);\r\n        this.observable = tapObservable.pipe(\r\n            take(1),\r\n            filter(() => !!this.cursor.intersection),\r\n            tap(() => this.onStart(this.cursor.intersection)),\r\n            switchMap((e) => {\r\n                if (e.isTouch) {\r\n                    return tapObservable.pipe(tap((e) => {\r\n                        this.onMove(e.intersection);\r\n                        this.onEnd();\r\n                    }));\r\n                }\r\n                else {\r\n                    return this._api.inputHandler.pointerMove$.pipe(\r\n                        tap(e => e.intersection = this.cursor.intersection),\r\n                        filter(hasIntersection),\r\n                        tap(e => this.onMove(e.intersection)),\r\n                        takeUntil(tapObservable.pipe(tap(() => this.onEnd())))\r\n                    )\r\n                }\r\n            })\r\n        )\r\n\r\n        this.createRenderPass();\r\n    }\r\n\r\n    private createRenderPass(): void {\r\n        this.renderPass = new RenderPass(new Scene(), this._api.camera);\r\n        this.renderPass.clear = false;\r\n        this._api.renderingManager.composer.addPassAfterAntialiasing(this.renderPass);\r\n    }\r\n\r\n    private onStart(intersection: SnapPick): void {\r\n        this.startPoint.copy(intersection.point);\r\n    }\r\n\r\n    private onMove(intersection: SnapPick): void {\r\n        this.endPoint.copy(intersection.point);\r\n        this.meshLine.update([this.startPoint, this.endPoint]);\r\n        this.meshLine.visible = true;\r\n        this._api.renderingManager.redraw();\r\n    }\r\n\r\n    private async onEnd(): Promise<void> {\r\n        this.movement.copy(this.endPoint.clone().sub(this.startPoint.clone()));\r\n        if (this.mode === \"copy\") {\r\n            await this.model.copyAssemblies(this.viewer, this.movement.clone());\r\n        } else {\r\n            await this.model.moveAssemblies(this.movement.clone());\r\n        }\r\n        this.meshLine.visible = false;\r\n        this.enabled = false;\r\n        this.onCanceled();\r\n    }\r\n\r\n    private onEnabled(): void {\r\n        const selection = this._api.selection;\r\n        const keys = selection.keys();\r\n        const selectedAssetGUIDs = [];\r\n        for (const key of keys) {\r\n            if (this.model.assetGUIDs.includes(key))\r\n                selectedAssetGUIDs.push(key);\r\n        }\r\n\r\n        for (const assObj of this.model.assemblyObjects) {\r\n            assObj.disableSnapPoints();\r\n            if (selectedAssetGUIDs.includes(assObj.assetGUID)) {\r\n                assObj.enableSnapPoints();\r\n            }\r\n            assObj.showSnapPoints();\r\n        }\r\n    }\r\n\r\n    set enabled(enabled: boolean) {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n            this.cursor.unsubscribe();\r\n            this.renderPass.scene.remove(this.meshLine);\r\n        }\r\n        if (!enabled) {\r\n            return;\r\n        }\r\n\r\n        this.subscription = this.observable.subscribe();\r\n        this.cursor.subscribe();\r\n        this.cursor.snapTypes = [SnapType.POINT];\r\n        this.onEnabled();\r\n        this.meshLine.visible = false;\r\n        this.renderPass.scene.add(this.meshLine);\r\n    }\r\n\r\n    get enabled(): boolean {\r\n        return !!this.subscription;\r\n    }\r\n\r\n    onCanceled = () => {\r\n        for (const model of this.model.assemblyObjects) {\r\n            model.hideSnapPoints();\r\n        }\r\n        this._api.toolManager.activateDefaultTool();\r\n    };\r\n}\r\n","import { Api } from \"./Api\";\r\nimport { version } from \"./Version\";\r\nimport {QualityPreset} from \"./common\";\r\n\r\nexport abstract class WebglViewerPlugin {\r\n    get version(): string {\r\n        return version;\r\n    }\r\n\r\n    abstract get name(): string;\r\n    abstract set api(api: Api);\r\n}\r\n\r\nexport interface QualityAwarePlugin {\r\n    activateQualityPreset(quality: QualityPreset): void;\r\n}\r\n","export const version = \"DEV_BUILD\";\r\n","import { WebglViewerPlugin } from \"@technology/webgl-viewer/dist/esnext/WebglViewerPlugin\";\r\nimport { Api } from \"@technology/webgl-viewer/dist/esnext/Api\";\r\nimport { AssemblyEditingTool } from \"./Tools/AssemblyEditingTool\";\r\nimport {AssemblyEditingModel} from \"./AssemblyEditingModel\";\r\nimport {ViewerCamera} from \"@technology/webgl-viewer/dist/esnext/Rendering/ViewerCamera\";\r\nimport {AssemblyEditingSettings} from \"./AssemblyEditingSettings\";\r\nimport {TransformTool} from \"./Tools/TransformTool\";\r\nimport {EditSnapPointsTool} from \"./Tools/EditSnapPointsTool\";\r\nimport {CopySelectedTool} from \"./Tools/CopySelectedTool\";\r\n\r\nexport class AssemblyEditingPlugin extends WebglViewerPlugin {\r\n    private _api: Api;\r\n    private _model: AssemblyEditingModel;\r\n    private _camera: ViewerCamera;\r\n    private _settings: AssemblyEditingSettings;\r\n\r\n    get name(): string {\r\n        return \"assemblyEditing\";\r\n    }\r\n\r\n    set api(api: Api) {\r\n        this._api = api;\r\n        this._settings = new AssemblyEditingSettings();\r\n        this._model = new AssemblyEditingModel(this._api);\r\n        this._api.models.add(this._model, true);\r\n        api.toolManager.addTool(new AssemblyEditingTool(api, this._model, this._camera));\r\n        api.toolManager.addTool(new TransformTool(api, this._model, this._settings));\r\n        api.toolManager.addTool(new EditSnapPointsTool(api, api.inputHandler, this._model, api.cursor));\r\n        api.toolManager.addTool(new CopySelectedTool(api, api.inputHandler, this._model, api.cursor));\r\n    }\r\n}\r\n"],"names":["Caster","Raycaster","[object Object]","super","vec3","Vector3","createScreenStaticSizeMesh","geometry","material","api","adjustDistance","marker","Mesh","renderOrder","onBeforeRender","scale","camera","getProjectionCompensatingScale","getWorldPosition","distanceTo","position","set","updateMatrixWorld","Vector3Const","Object","freeze","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","config","Promise","value","closed","next","x","UnsubscriptionErrorImpl","Error","errors","name","Subscription","unsubscribe","_ctorUnsubscribe","_parentOrParents","isFunction","isArray","index","sub","isObject","e","add","subscription","indexOf","subscriptions","subscriptionIndex","empty","rxSubscriber","Subscriber","_super","_this","destination","destinationOrNext","syncErrorThrowable","tslib_1.__extends","error","subscriber","isStopped","_next","_error","_complete","SafeSubscriber","context","observerOrNext","complete","_context","_parentSubscriber","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","syncErrorValue","wrappedComplete","parent","syncErrorThrown","hostReportError","fns","input","Observable","subscribe","lift","operator","observable","source","sink","nextOrObserver","_subscribe","_a","closed_1","canReportError","forEach","promiseCtor","reject","operations","length","toPromise","getPromiseCtor","ObjectUnsubscribedErrorImpl","message","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","len","i","hasError","thrownError","asObservable","AnonymousSubject","BehaviorSubject","AsyncAction","scheduler","work","delay","id","recycleAsyncId","clearInterval","_execute","errored","actions","SchedulerAction","now","schedule","AsyncScheduler","state","isScheduler","array","Notification","observe","args","ArgumentOutOfRangeErrorImpl","project","MapOperator","MapSubscriber","thisArg","count","result","Symbol","iterator","obj","err","iterable","item","isInteropObservable","Symbol_iterator","done","SimpleInnerSubscriber","SimpleOuterSubscriber","notifyError","notifyComplete","innerSubscriber","concurrent","Number","MergeMapSubscriber","innerSubscription","hasCompleted","buffer","FilterOperator","FilterSubscriber","DelayOperator","DelaySubscriber","queue","notification","DelayMessage","scheduleNotification","TakeOperator","total","TakeSubscriber","call","resultSelector","SwitchMapOperator","SwitchMapSubscriber","TakeUntilOperator","takeUntilSubscriber","notifierSubscription","seenValue","TakeUntilSubscriber","DoOperator","TapSubscriber","noop","_tapComplete","_tapError","_tapNext","defaultThrottleConfig","leading","_trailingValue","_hasTrailingValue","trailing","allowInput","button","touchCount","mouseButton","isTouch","allowPointerInput","tapBehavior","inputHandler","cursor","options","pointerDown$","pipe","filter","switchMap","down","pointerUp$","takeUntil","pointerMove$","mergeMap","async","calculateIntersection","intersection","hasIntersection","addIntersection","picker","models","pick","Vector2","y","pos","cameraWorldPos","matrix4","Matrix4","vector","box","LineSegmentsGeometry","InstancedBufferGeometry","type","setIndex","setAttribute","Float32BufferAttribute","assign","isLineSegmentsGeometry","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","data","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","lineSegments","Float32Array","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","setColors","colors","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegments","isGeometry","vertices","isBufferGeometry","Box3","setFromBufferAttribute","union","Sphere","center","getCenter","maxRadiusSq","il","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","console","toJSON","applyMatrix","warn","LineGeometry","isLineGeometry","points","fromLine","line","copy","linewidth","resolution","dashScale","dashSize","gapSize","opacity","uniforms","UniformsUtils","merge","UniformsLib","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","ShaderMaterial","clone","ShaderLib","clipping","dashed","defineProperties","color","enumerable","get","diffuse","setValues","isLineMaterial","FullScreenQuad","LineSegments2","random","isLineSegments2","computeLineDistances","lineDistances","j","l","instanceDistanceBuffer","raycast","Vector4","ssOrigin","ssOrigin3","mvMatrix","Line3","closestPoint","raycaster","intersects","ray","projectionMatrix","lineWidth","at","w","matrixWorldInverse","multiplyScalar","z","matrixWorld","multiplyMatrices","isBehindCameraNear","isPastCameraFar","param","closestPointToPointParameter","zPos","MathUtils","lerp","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","object","face","faceIndex","uv","uv2","MeshLine","Ray","Frustum","defines","USE_DASH","renderer","getSize","vectors","positions","positionsAttribute","toArray","instanceStartAttr","getAttribute","callback","onUploadCallback","caster","_box","frustum","intersectsBox","_inverseMatrix","getInverse","_ray","_frustum","plane","planes","step","LineSegments","vStart","fromArray","vEnd","intersectFrustum","interPoint","near","far","lineStart","lineEnd","target","_line3","intersectLine","containsPoint","Pass","enabled","needsSwap","clear","renderToScreen","setSize","render","OrthographicCamera","PlaneBufferGeometry","_mesh","defineProperty","dispose","RenderPass","scene","overrideMaterial","clearColor","clearAlpha","clearDepth","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","AssemblyEditingTool","_api","model","_camera","Plane","SphereGeometry","MeshBasicMaterial","depthTest","depthWrite","transparent","createPlaneSnapMarker","_tapsObservable","map","_moveObservable","throttleTime","tap","onMove","_hoverObservable","onHover","planeSnapMeshLine","createRenderPass","renderPass","Scene","renderingManager","composer","addPassAfterAntialiasing","planeSnapStartMarker","planeSnapStartMarkerGeometry","planeSnapStartMarkerMaterial","redraw","planeSnapMeshLineStart","planeSnapMeshLineEnd","update","visible","remove","_hoverSubscription","event","removePlaneSnapMarker","assetGUIDs","includes","assemblyObjects","assemblyObject","assetGUID","showSnaps","objectSelectedState","defaultState","previousAssemblyObjectAssetGUID","pickingEnd","endPosition","endDirection","normal","negate","normalize","assemblyObjectToMove","moveAndRotate","startPosition","startDirection","newAssemblyGUID","copyAssembly","viewer","addPlaneSnapMarker","log","snapPoint","snapState","assemblyObjectStartPosition","getWorldDirection","cameraDirection","dragStart","dragOffset","dragMoving","dragPlane","setFromNormalAndCoplanarPoint","objectMovingState","deactivateSnapPoints","updatePosition","dragEnd","updateFromPointerPosition","updatePlaneSnapMeshLine","dragMovingScreenPosition","screenPosition","container","out","dimensions","getBoundingClientRect","left","clientWidth","top","clientHeight","screenPositionToRayTracePoint","setFromCamera","intersectPlane","trimbimId","showSnapPoints","enableSnapPoints","disableSnapPoints","hideSnapPoints","_tapsSubscription","unsubscribeAll","hideSnaps","_defaultSubscription","_onPickObjectTap","_objectSelectedSubscription","_onPickStartSnapTap","_moveSubscription","_objectMovingSubscription","_onPickEndSnapTap","then","Model","Object3D","up","modelId","ids","resolve","newTransform","elements","oldTransform","decompose","quaternion","bbTransform","multiply","SnapPoint","parentTrimbimId","init","snapPointGeometry","snapPointMaterial","snapPointPickSphere","snapPointPickSphereGeometry","snapPointPickSphereMaterial","setHex","AssemblyObject","def","assemblyObjectDefinition","assemblyName","getIterable","geometryModel","createSnapPoints","snapPositions","assemblyObjectTransform","transform","snapPointsToSnapPositions","snapPoints","createSnapPoint","numbers","setPosition","euler","makeRotationFromEuler","localOffset","worldToLocal","translateX","translateY","translateZ","rotationQuaternionFromVectors","applyQuaternion","updateTrimbimPosition","rotation","normal1","normal2","Quaternion","setFromUnitVectors","pointsAreCoincident","traverse","splice","position1","position2","tolerance","abs","changeColour","AssemblyEditingModel","ModelId","ref","loadedAssembly","fetch","response","json","loadAssembly","load","Date","getTime","toString","fileInput","document","createElement","accept","body","appendChild","onChange","removeEventListener","removeChild","files","addEventListener","click","definitions","exportAssemblyDefinition","selection","keys","size","slice","entry","subtract","unload","assObj","activeAssemblyObject","movement","newModels","intersectSnapPoints","snapTypes","snapType","localToWorld","intersections","intersectObjects","children","enabledSnaps","disabledSnaps","pickPriority","AssemblyEditingSettings","translationSnap","_translationSnapSubject","rotationSnap","_rotationSnapSubject","TransformControls","domElement","_gizmo","TransformControlsGizmo","_plane","TransformControlsPlane","scope","changeEvent","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","intersectObjectWithRay","includeInvisible","allIntersections","intersectObject","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","dispatchEvent","getPointer","pointerLockElement","pointer","changedTouches","rect","clientX","width","clientY","height","onPointerHover","pointerHover","onPointerDown","onPointerMove","pointerDown","pointerMove","onPointerUp","pointerUp","child","attach","detach","axis","inverse","dragging","intersect","planeIntersect","space","snap","round","divide","search","setFromMatrixPosition","dot","scaleSnap","ROTATION_SPEED","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSpace","isTransformControls","gizmoMaterial","side","DoubleSide","gizmoLineMaterial","LineBasicMaterial","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","BoxBufferGeometry","lineGeometry","BufferGeometry","CircleGeometry","arc","cos","PI","sin","gizmoTranslate","Line","XYZ","OctahedronBufferGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","TranslateHelperGeometry","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","factor","handle","isOrthographicCamera","bottom","zoom","min","tan","fov","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","split","some","a","Color","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane","TransformTool","settings","createTransformControls","transformControls","toolManager","tools","orbit","disableTransformControls","enableTransformControls","EditSnapPointsTool","inputs","deletingObservable","addSnapPoint","deleteSnapPoint","disableAllSnaps","enableAllSnaps","deleteTap","subscribeAddMode","subscribeDeleteMode","CopySelectedTool","activateDefaultTool","meshLine","tapObservable","onStart","onEnd","startPoint","endPoint","copyAssemblies","moveAssemblies","onCanceled","selectedAssetGUIDs","key","onEnabled","version","_settings","_model","addTool"],"mappings":"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"}